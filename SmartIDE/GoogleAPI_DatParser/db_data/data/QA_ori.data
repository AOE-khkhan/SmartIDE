===ID===
584cbf663e2ca508e5f07165
===QUESTION===
What is a NullPointerException, and how do I fix it?
What are Null Pointer Exceptions ( java.lang.NullPointerException ) and what causes them? What methods/tools can be used to determine the cause so that you stop the exception from causing the program to terminate prematurely? 
===LINK===
http://stackoverflow.com/questions/218384/what-is-a-nullpointerexception-and-how-do-i-fix-it
===KEYWORDS===
lang program exception java fix 
===ANSWER===
1483
<html><body><p>When you declare a reference variable (i.e. an object) you are really creating a pointer to an object. Consider the following code where you declare a variable of primitive type int:</p><pre><code>int x;
x = 10;
</code></pre><p>In this example the variable x is an <code>int</code> and Java will initialize it to 0 for you. When you assign it to 10 in the second line your value 10 is written into the memory location pointed to by x.</p><p>But, when you try to declare a reference type something different happens. Take the following code:</p><pre><code>Integer num;
num = new Integer(10);
</code></pre><p>The first line declares a variable named <code>num</code>, but, it does not contain a primitive value. Instead it contains a pointer (because the type is <code>Integer</code> which is a reference type). Since you did not say as yet what to point to Java sets it to null, meaning "I am pointing at nothing".</p><p>In the second line, the <code>new</code> keyword is used to instantiate (or create) an object of type Integer and the pointer variable num is assigned this object. You can now reference the object using the dereferencing operator <code>.</code> (a dot).  </p><p>The <code>Exception</code> that you asked about occurs when you declare a variable but did not create an object. If you attempt to dereference <code>num</code> BEFORE creating the object you get a <code>NullPointerException</code>. In the most trivial cases the compiler will catch the problem and let you know that "num may not have been initialized" but sometime you write code that does not directly create the object.</p><p>For instance you may have a method as follows:</p><pre><code>public void doSomething(SomeObject obj){
   //do something to obj
}
</code></pre><p>in which case you are not creating the object <code>obj</code>, rather assuming that is was created before the <code>doSomething</code> method was called. Unfortunately it is possible to call the method like this:</p><pre><code>doSomething(null);
</code></pre><p>in which case <code>obj</code> is null. If the method is intended to do something to the passed-in object, it is appropriate to throw the <code>NullPointerException</code> because it's a user error and the user will need that information for debugging purposes.</p><p>Alternatively, there may be cases where the purpose of the method is not solely to operate on the passed in object, and therefore a null parameter may be acceptable. In this case, you would need to check for a null parameter and behave differently. You should also explain this in the documentation. For example, <code>doSomething</code> could be written as:</p><pre><code>/**@param obj An optional foo for ____. May be null, in which case 
*  the result will be ____. */
public void doSomething(SomeObject obj){
    if(obj != null){
       //do something
    } else {
       //do something else
    }
}
</code></pre><p>Finally, <a href="http://stackoverflow.com/q/3988788/2775450">How to pinpoint the exception location &amp; cause using Stack Trace</a></p></body></html>

===ID===
584cbf673e2ca508e5f07166
===QUESTION===
How do I compare strings in Java?
I've been using the  ==  operator in my program to compare all my strings so far.
However, I ran into a bug, changed one of them into  .equals()  instead, and it fixed the bug. Is  ==  bad? When should it and should it not be used? What's the difference? 
===LINK===
http://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java
===KEYWORDS===
compare difference java ran changed 
===ANSWER===
3732
<html><body><p><code>==</code> tests for reference equality (whether they are the same object).</p><p><code>.equals()</code> tests for value equality (whether they are logically "equal"). </p><p><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Objects.html#equals(java.lang.Object,%20java.lang.Object)" rel="nofollow noreferrer">Objects.equals()</a> checks for nulls before calling <code>.equals()</code> so you don't have to (available as of JDK7, also available in <a href="https://github.com/google/guava/wiki/CommonObjectUtilitiesExplained#equals" rel="nofollow noreferrer">Guava</a>).</p><p>Consequently, if you want to test whether two strings have the same value you will probably want to use <code>Objects.equals()</code>.</p><pre><code>// These two have the same value
new String("test").equals("test") // --&gt; true 

// ... but they are not the same object
new String("test") == "test" // --&gt; false 

// ... neither are these
new String("test") == new String("test") // --&gt; false 

// ... but these are because literals are interned by 
// the compiler and thus refer to the same object
"test" == "test" // --&gt; true 

// ... but you should really just call Objects.equals()
Objects.equals("test", new String("test")) // --&gt; true
Objects.equals(null, "test") // --&gt; false
</code></pre><p>You almost <strong>always</strong> want to use<code>Objects.equals()</code>. In the <strong>rare</strong> situation where you <strong>know</strong> you're dealing with <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#intern--" rel="nofollow noreferrer">interned</a> strings, you <em>can</em> use <code>==</code>.</p></body></html>

===ID===
584cbf683e2ca508e5f07167
===QUESTION===
Is Java “pass-by-reference” or “pass-by-value”?
I always thought Java was  pass-by-reference ; however I've seen a couple of blog posts (for example,  this blog ) that claim it's not. I don't think I understand the distinction they're making.  What is the explanation? 
===LINK===
http://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value
===KEYWORDS===
“pass claim don reference couple 
===ANSWER===
3184
<html><body><p>Java is always <strong>pass-by-value</strong>. Unfortunately, they decided to call pointers references, thus confusing newbies. Because those <em>references</em> are passed by value.</p><p>It goes like this:</p><pre><code>public static void main( String[] args ){
    Dog aDog = new Dog("Max");
    foo(aDog);

    if (aDog.getName().equals("Max")) { //true
        System.out.println( "Java passes by value." );

    } else if (aDog.getName().equals("Fifi")) {
        System.out.println( "Java passes by reference." );
    }
}

public static void foo(Dog d) {
    d.getName().equals("Max"); // true

    d = new Dog("Fifi");
    d.getName().equals("Fifi"); // true
}
</code></pre><p>In this <a href="http://ideone.com/oUEPbg" rel="nofollow noreferrer">example</a> <code>aDog.getName()</code> will still return <code>"Max"</code>. The value <code>aDog</code> within <code>main</code> is not overwritten in the function <code>foo</code> with the <code>Dog</code> <code>"Fifi"</code> as the object reference is passed by value. If it were passed by reference, then the <code>aDog.getName()</code> in <code>main</code> would return <code>"Fifi"</code> after the call to <code>foo</code>.</p><p>Likewise:</p><pre><code>Dog aDog = new Dog("Max");
foo(aDog);
aDog.getName().equals("Fifi"); // true
public void foo(Dog d) {
    d.getName().equals("Max"); // true
    d.setName("Fifi");
}
</code></pre><p>In the above example, <code>FiFi</code> is the dog's name after call to <code>foo(aDog)</code>. Any operations that <code>foo</code> performs on <code>d</code> are such that, for all practical purposes, they are performed on <code>aDog</code> itself (except <code>d=new Dog("Boxer")</code>).</p></body></html>

===ID===
584cbf683e2ca508e5f07168
===QUESTION===
The Use of Multiple JFrames: Good or Bad Practice? [closed]
I'm developing an application which displays images, and plays sounds from a database. I'm trying to decide, whether to use a separate  JFrame  to add images to the database from the GUI.  I'm just wondering whether it is good practice to use multiple  JFrame  windows? 
===LINK===
http://stackoverflow.com/questions/9554636/the-use-of-multiple-jframes-good-or-bad-practice
===KEYWORDS===
good decide database gui developing 
===ANSWER===
323
<html><body><p>I'm just wondering whether it is good practice to use multiple JFrames?</p><p>Bad (bad, bad) practice.  </p><p>There are any number of ways of displaying many elements in one GUI, e.g.:</p><p>But if those strategies do not work for a particular use-case, try the following.  Establish a single main <code>JFrame</code>, then have <a href="http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html" rel="nofollow noreferrer"><code>JDialog</code></a> or <a href="http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html#features" rel="nofollow noreferrer"><code>JOptionPane</code></a> instances appear for the rest of the free-floating elements, using the frame as the parent for the dialogs.</p><p>In this case where the multiple elements are images, it would be better to use either of the following instead:</p><p><img src="https://i.stack.imgur.com/q8hEl.jpg"/></p></body></html>

===ID===
584cbf693e2ca508e5f07169
===QUESTION===
How to avoid Java code in JSP files?
I'm new to Java EE and I know that something like the following three lines is an old school way of coding and in JSP version 2 there exists a method to avoid Java code in JSP files. Can someone please tell me the alternative JSP 2 lines, and what this technique is called? 
===LINK===
http://stackoverflow.com/questions/3177733/how-to-avoid-java-code-in-jsp-files
===KEYWORDS===
school exists lines technique coding 
===ANSWER===
1641
<html><body><p>The use of <em>scriptlets</em> (those <code>&lt;% %&gt;</code> things) in <a href="http://stackoverflow.com/tags/jsp/info">JSP</a> is indeed highly discouraged since the birth of <em>taglibs</em> (like <a href="http://stackoverflow.com/tags/jstl/info">JSTL</a>) and <a href="http://stackoverflow.com/tags/el/info">EL</a> (<a href="http://stackoverflow.com/tags/el/info">Expression Language</a>, those <code>${}</code> things) over a decade ago.</p><p>The major disadvantages of <em>scriptlets</em> are:</p><p><strike>Sun</strike> Oracle itself also recommends in the <a href="http://www.oracle.com/technetwork/articles/javase/code-convention-138726.html" rel="nofollow noreferrer">JSP coding conventions</a> to avoid use of <em>scriptlets</em> whenever the same functionality is possible by (tag) classes. Here are several cites of relevance:</p><p>From JSP 1.2 Specification, it is highly recommended that the JSP Standard Tag Library  (JSTL) be used in your web application to help <strong>reduce the need for JSP scriptlets</strong> in your pages. Pages that use JSTL are, in general, easier to read and maintain. </p><p>...</p><p>Where possible, <strong>avoid JSP scriptlets</strong> whenever tag libraries provide equivalent functionality. This makes pages easier to read and maintain, helps to separate business logic from presentation logic, and will make your pages easier to evolve into JSP 2.0-style pages (JSP 2.0 Specification supports but deemphasizes the use of scriptlets).</p><p>...</p><p>In the spirit of adopting the model-view-controller (MVC) design pattern to reduce coupling between the presentation tier from the business logic, <strong>JSP scriptlets should not be used</strong> for writing business logic. Rather, JSP scriptlets are used if necessary to transform data (also called "value objects") returned from processing the client's requests into a proper client-ready format. Even then, this would be better done with a front controller servlet or a custom tag.</p><p><strong>How to replace <em>scriptlets</em> entirely depends on the sole purpose of the code/logic. More than often this code is to be placed in a fullworthy Java class:</strong></p><p>If you want to invoke the <strong>same</strong> Java code on <em>every</em> request, less-or-more regardless of the requested page, e.g. checking if an user is logged in, then implement a <a href="http://stackoverflow.com/tags/servlet-filters/info">filter</a> and write code accordingly in <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/Filter.html#doFilter%28javax.servlet.ServletRequest,%20javax.servlet.ServletResponse,%20javax.servlet.FilterChain%29" rel="nofollow noreferrer"><code>doFilter()</code></a> method. E.g.:</p><pre class="lang-java prettyprint-override"><code>public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws ServletException, IOException {
    if (((HttpServletRequest) request).getSession().getAttribute("user") == null) {
        ((HttpServletResponse) response).sendRedirect("login"); // Not logged in, redirect to login page.
    } else {
        chain.doFilter(request, response); // Logged in, just continue request.
    }
}
</code></pre><p>When mapped on an appropriate <code>&lt;url-pattern&gt;</code> covering the JSP pages of interest, then you don't need to copypaste the same piece of code over all JSP pages.</p><p>If you want to invoke some Java code to <strong>preprocess</strong> a request, e.g. preloading some list from a database to display in some table, if necessary based on some query parameters, then implement a <a href="http://stackoverflow.com/tags/servlets/info">servlet</a> and write code accordingly in <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doGet%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29" rel="nofollow noreferrer"><code>doGet()</code></a> method. E.g.:</p><pre class="lang-java prettyprint-override"><code>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    try {
        List&lt;Product&gt; products = productService.list(); // Obtain all products.
        request.setAttribute("products", products); // Store products in request scope.
        request.getRequestDispatcher("/WEB-INF/products.jsp").forward(request, response); // Forward to JSP page to display them in a HTML table.
    } catch (SQLException e) {
        throw new ServletException("Retrieving products failed!", e);
    }
}
</code></pre><p>This way dealing with exceptions is easier. The DB is not accessed in the midst of JSP rendering, but far before the JSP is been displayed. You still have the possibility to change the response whenever the DB access throws an exception. In the above example, the default error 500 page will be displayed which you can anyway customize by an <code>&lt;error-page&gt;</code> in <code>web.xml</code>.</p><p>If you want to invoke some Java code to <strong>postprocess</strong> a request, e.g. processing a form submit, then implement a <a href="http://stackoverflow.com/tags/servlets/info">servlet</a> and write code accordingly in <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29" rel="nofollow noreferrer"><code>doPost()</code></a> method. E.g.:</p><pre class="lang-java prettyprint-override"><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String username = request.getParameter("username");
    String password = request.getParameter("password");
    User user = userService.find(username, password);

    if (user != null) {
        request.getSession().setAttribute("user", user); // Login user.
        response.sendRedirect("home"); // Redirect to home page.
    } else {
        request.setAttribute("message", "Unknown username/password. Please retry."); // Store error message in request scope.
        request.getRequestDispatcher("/WEB-INF/login.jsp").forward(request, response); // Forward to JSP page to redisplay login form with error.
    }
}
</code></pre><p>This way dealing with different result page destinations is easier: redisplaying the form with validation errors in case of an error (in this particular example you can redisplay it using <code>${message}</code> in <a href="http://stackoverflow.com/tags/el/info">EL</a>), or just taking to the desired target page in case of success.</p><p>If you want to invoke some Java code to <strong>control</strong> the execution plan and/or the destination of the request and the response, then implement a <a href="http://stackoverflow.com/tags/servlets/info">servlet</a> according the <a href="http://stackoverflow.com/questions/3541077/design-patterns-web-based-applications/3542297#3542297">MVC's Front Controller Pattern</a>. E.g.:</p><pre class="lang-java prettyprint-override"><code>protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    try {
        Action action = ActionFactory.getAction(request);
        String view = action.execute(request, response);

        if (view.equals(request.getPathInfo().substring(1)) {
            request.getRequestDispatcher("/WEB-INF/" + view + ".jsp").forward(request, response);
        } else {
            response.sendRedirect(view);
        }
    } catch (Exception e) {
        throw new ServletException("Executing action failed.", e);
    }
}
</code></pre><p>Or just adopt a MVC framework like <a href="http://stackoverflow.com/tags/jsf/info">JSF</a>, <a href="http://stackoverflow.com/tags/spring-mvc/info">Spring MVC</a>, <a href="http://stackoverflow.com/tags/wicket/info">Wicket</a>, etc so that you end up with just a JSP/Facelets page and a Javabean class without the need for a custom servlet.</p><p>If you want to invoke some Java code to <strong>control the flow</strong> inside a JSP page, then you need to grab an (existing) flow control taglib like <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/c/tld-summary.html" rel="nofollow noreferrer">JSTL core</a>. E.g. displaying <code>List&lt;Product&gt;</code> in a table:</p><pre class="lang-html prettyprint-override"><code>&lt;%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %&gt;
...
&lt;table&gt;
    &lt;c:forEach items="${products}" var="product"&gt;
        &lt;tr&gt;
            &lt;td&gt;${product.name}&lt;/td&gt;
            &lt;td&gt;${product.description}&lt;/td&gt;
            &lt;td&gt;${product.price}&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/c:forEach&gt;
&lt;/table&gt;
</code></pre><p>With XML-style tags which fits nicely among all that HTML, the code is better readable (and thus better maintainable) than a bunch of scriptlets with various opening and closing braces (<em>"Where the heck does this closing brace belong to?"</em>). An easy aid is to configure your web application to throw an exception whenever <em>scriptlets</em> are still been used by adding the following piece to <code>web.xml</code>:</p><pre class="lang-xml prettyprint-override"><code>&lt;jsp-config&gt;
    &lt;jsp-property-group&gt;
        &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;
        &lt;scripting-invalid&gt;true&lt;/scripting-invalid&gt;
    &lt;/jsp-property-group&gt;
&lt;/jsp-config&gt;
</code></pre><p>In <a href="http://stackoverflow.com/tags/facelets/info">Facelets</a>, the successor of JSP, which is part of the Java EE provided MVC framework <a href="http://stackoverflow.com/tags/jsf/info">JSF</a>, it is already <strong>not</strong> possible to use <em>scriptlets</em>. This way you're automatically forced to do things "the right way".</p><p>If you want to invoke some Java code to <strong>access and display</strong> "backend" data inside a JSP page, then you need to use EL (Expression Language), those <code>${}</code> things. E.g. redisplaying submitted input values:</p><pre class="lang-html prettyprint-override"><code>&lt;input type="text" name="foo" value="${param.foo}" /&gt;
</code></pre><p>The <code>${param.foo}</code> displays the outcome of <code>request.getParameter("foo")</code>.</p><p>If you want to invoke some <strong>utility</strong> Java code directly in the JSP page (typically <code>public static</code> methods), then you need to define them as EL functions. There's a standard <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/fn/tld-summary.html" rel="nofollow noreferrer">functions taglib</a> in JSTL, but <a href="http://docs.oracle.com/javaee/5/tutorial/doc/bnahq.html#bnaiq" rel="nofollow noreferrer">you can also easily create functions yourself</a>. Here's an example how JSTL <code>fn:escapeXml</code> is useful to prevent <a href="http://en.wikipedia.org/wiki/Cross-site_scripting" rel="nofollow noreferrer">XSS</a> <a href="http://ha.ckers.org/xss.html" rel="nofollow noreferrer">attacks</a>.</p><pre class="lang-html prettyprint-override"><code>&lt;%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %&gt;
...
&lt;input type="text" name="foo" value="${fn:escapeXml(param.foo)}" /&gt;
</code></pre><p>Note that the XSS sensitivity is in no way specifically related to Java/JSP/JSTL/EL/whatever, this problem needs to be taken into account in <strong>every</strong> webapplication you develop. The problem of <em>scriptlets</em> is that it provides no way of builtin preventions, at least not using the standard Java API. JSP's successor Facelets has already implicit HTML escaping, so you don't need to worry about XSS holes in Facelets.</p></body></html>

===ID===
584cbf6a3e2ca508e5f0716a
===QUESTION===
Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?
Several times I've been criticized for having suggested the use of the following methods: on  Swing  components. I don't see any alternative to their use when I want to define proportions between displayed components. I have been told this: With layouts the answer is always the same: use a suitable
  LayoutManager I have searched the web a little bit, but I haven't found any comprehensive analysis of the subject. So I have the following questions: I hope to have been clear. 
===LINK===
http://stackoverflow.com/questions/7229226/should-i-avoid-the-use-of-setpreferredmaximumminimumsize-methods-in-java-swi
===KEYWORDS===
set methods layouts minimum questions 
===ANSWER===
179
<html><body><p>Should I completely avoid the use of those methods?</p><p>Yes for application code.</p><p>The methods have been defined for a reason. So when should I use them? In which context? For what purposes?</p><p>I don't know, personally I think of it as an API design accident. Slightly forced by compound components having special ideas about child sizes. "Slightly", because they should have implemented their needs with a custom LayoutManager.</p><p>What exactly are the negative consequences of using those methods? (I can only think adding portability between systems with different screen resolution.)</p><p>Some (incomplete, and unfortunately the links are broken due to migration of SwingLabs to java.net) technical reasons are for instance mentioned in the <a href="http://web.archive.org/web/20110614145256/http://wiki.java.net/twiki/bin/view/Javadesktop/SwingLabsImperialRules?TWIKISID=e1a6667476691b56753dc9b0744828c6#Do_not_use_component_setXXSize">Rules (hehe)</a> or in the <a href="http://web.archive.org/web/20100207211337/http://www.jguru.com/faq/view.jsp?EID=237070">link</a> @bendicott found in his/her comment to <a href="http://stackoverflow.com/questions/7074514/images-in-jtable-cells-off-by-one-pixel">my answer</a>. Socially, posing tons of work onto your unfortunate fellow who has to maintain the code and has to track down a broken layout.</p><p>I don't think any LayoutManager can exactly satisfy all desired layout needs. Do I really need to implement a new LayoutManager for every little variation on my layout?</p><p>Yes, there are LayoutManagers powerful enough to satisfy a very good approximation to "all layout needs". The big three are JGoodies FormLayout, MigLayout, DesignGridLayout. So no, in practice, you rarely write LayoutManagers except for simple highly specialized environments.</p><p>If the answer to 4 is "yes", won't this lead to a proliferation of LayoutManager classes which will become difficult to maintain? </p><p>(The answer to 4 is "no".)</p><p>In a situation where I need to define proportions between children of a Component (for example, child 1 should use 10% of space, child 2 40%, child 3 50%), is it possible to achieve that without implementing a custom LayoutManager?</p><p>Any of the Big-Three can, can't even GridBag (never bothered to really master, too much trouble for too little power).</p></body></html>

===ID===
584cbf6a3e2ca508e5f0716b
===QUESTION===
How to add JTable in JPanel with null layout?
I want to add  JTable  into  JPanel  whose layout is  null .   JPanel  contains other components. I have to add  JTable  at proper position. 
===LINK===
http://stackoverflow.com/questions/5621338/how-to-add-jtable-in-jpanel-with-null-layout
===KEYWORDS===
jpanel null layout components 
===ANSWER===
139
<html><body><p>The Java Tutorial has comprehensive information on using layout managers. See the <a href="http://download.oracle.com/javase/tutorial/uiswing/layout/index.html" rel="nofollow noreferrer">Laying Out Components Within a Container</a> lesson for further details.</p><p>One aspect of layouts that is <em>not</em> covered well by the tutorial is that of nested layouts, putting one layout inside another to get complex effects.</p><p>The following code puts a variety of components into a frame to demonstrate how to use nested layouts.  All the layouts that are explicitly set are shown as a titled-border for the panel on which they are used.</p><p>Notable aspects of the code are:</p><p><img height="580" src="https://i.stack.imgur.com/RljPH.png" title="GUI screen shot with Nimbus PLAF" width="681"/></p><pre><code>import java.awt.*;
import java.awt.image.BufferedImage;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.border.TitledBorder;

/** A short example of a nested layout that can change PLAF at runtime.
The TitledBorder of each JPanel shows the layouts explicitly set.
@author Andrew Thompson
@version 2011-04-12 */
class NestedLayoutExample {

    public static void main(String[] args) {

        Runnable r = new Runnable() {

            public void run() {
                final JFrame frame = new JFrame("Nested Layout Example");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                final JPanel gui = new JPanel(new BorderLayout(5,5));
                gui.setBorder( new TitledBorder("BorderLayout(5,5)") );

                //JToolBar tb = new JToolBar();
                JPanel plafComponents = new JPanel(
                    new FlowLayout(FlowLayout.RIGHT, 3,3));
                plafComponents.setBorder(
                    new TitledBorder("FlowLayout(FlowLayout.RIGHT, 3,3)") );

                final UIManager.LookAndFeelInfo[] plafInfos =
                    UIManager.getInstalledLookAndFeels();
                String[] plafNames = new String[plafInfos.length];
                for (int ii=0; ii&lt;plafInfos.length; ii++) {
                    plafNames[ii] = plafInfos[ii].getName();
                }
                final JComboBox plafChooser = new JComboBox(plafNames);
                plafComponents.add(plafChooser);

                final JCheckBox pack = new JCheckBox("Pack on PLAF change", true);
                plafComponents.add(pack);

                plafChooser.addActionListener( new ActionListener(){
                    public void actionPerformed(ActionEvent ae) {
                        int index = plafChooser.getSelectedIndex();
                        try {
                            UIManager.setLookAndFeel(
                                plafInfos[index].getClassName() );
                            SwingUtilities.updateComponentTreeUI(frame);
                            if (pack.isSelected()) {
                                frame.pack();
                                frame.setMinimumSize(frame.getSize());
                            }
                        } catch(Exception e) {
                            e.printStackTrace();
                        }
                    }
                } );

                gui.add(plafComponents, BorderLayout.NORTH);

                JPanel dynamicLabels = new JPanel(new BorderLayout(4,4));
                dynamicLabels.setBorder(
                    new TitledBorder("BorderLayout(4,4)") );
                gui.add(dynamicLabels, BorderLayout.WEST);

                final JPanel labels = new JPanel(new GridLayout(0,2,3,3));
                labels.setBorder(
                    new TitledBorder("GridLayout(0,2,3,3)") );

                JButton addNew = new JButton("Add Another Label");
                dynamicLabels.add( addNew, BorderLayout.NORTH );
                addNew.addActionListener( new ActionListener(){

                    private int labelCount = 0;

                    public void actionPerformed(ActionEvent ae) {
                        labels.add( new JLabel("Label " + ++labelCount) );
                        frame.validate();
                    }
                } );

                dynamicLabels.add( new JScrollPane(labels), BorderLayout.CENTER );

                String[] header = {"Name", "Value"};
                String[] a = new String[0];
                String[] names = System.getProperties().
                    stringPropertyNames().toArray(a);
                String[][] data = new String[names.length][2];
                for (int ii=0; ii&lt;names.length; ii++) {
                    data[ii][0] = names[ii];
                    data[ii][1] = System.getProperty(names[ii]);
                }
                DefaultTableModel model = new DefaultTableModel(data, header);
                JTable table = new JTable(model);
                try {
                    // 1.6+
                    table.setAutoCreateRowSorter(true);
                } catch(Exception continuewithNoSort) {
                }
                JScrollPane tableScroll = new JScrollPane(table);
                Dimension tablePreferred = tableScroll.getPreferredSize();
                tableScroll.setPreferredSize(
                    new Dimension(tablePreferred.width, tablePreferred.height/3) );

                JPanel imagePanel = new JPanel(new GridBagLayout());
                imagePanel.setBorder(
                    new TitledBorder("GridBagLayout()") );

                BufferedImage bi = new BufferedImage(
                    200,200,BufferedImage.TYPE_INT_ARGB);
                Graphics2D g = bi.createGraphics();
                GradientPaint gp = new GradientPaint(
                    20f,20f,Color.red, 180f,180f,Color.yellow);
                g.setPaint(gp);
                g.fillRect(0,0,200,200);
                ImageIcon ii = new ImageIcon(bi);
                JLabel imageLabel = new JLabel(ii);
                imagePanel.add( imageLabel, null );

                JSplitPane splitPane = new JSplitPane(
                    JSplitPane.VERTICAL_SPLIT,
                    tableScroll,
                    new JScrollPane(imagePanel));
                gui.add( splitPane, BorderLayout.CENTER );

                frame.setContentPane(gui);

                frame.pack();

                frame.setLocationRelativeTo(null);
                try {
                    // 1.6+
                    frame.setLocationByPlatform(true);
                    frame.setMinimumSize(frame.getSize());
                } catch(Throwable ignoreAndContinue) {
                }

                frame.setVisible(true);
            }
        };
        SwingUtilities.invokeLater(r);
    }
}
</code></pre><p><img height="580" src="https://i.stack.imgur.com/fHnCI.png" title="GUI screen shot with Windows PLAF" width="681"/></p><p><img height="580" src="https://i.stack.imgur.com/Jaqap.png" title="GUI screen shot with Aqua PLAF" width="681"/></p><p><img height="580" src="https://i.stack.imgur.com/521zz.png" title="GUI screen shot with GTK+ PLAF" width="681"/></p></body></html>

===ID===
584cbf6b3e2ca508e5f0716c
===QUESTION===
Scanner is skipping nextLine() after using next(), nextInt() or other nextFoo() methods
I am using  Scanner  methods  nextInt()  and  nextLine()  for reading input. Basically, it looks like this: The problem is that after entering the numerical value, the first  input.nextLine()  is skipped and the second  input.nextLine()  is executed, so that my output looks like this: I tested my application and it looks like the problem lies in using  input.nextInt() . If I delete it, then both  string1 = input.nextLine()  and  string2 = input.nextLine()  are executed as I want them to be. 
===LINK===
http://stackoverflow.com/questions/13102045/scanner-is-skipping-nextline-after-using-next-nextint-or-other-nextfoo
===KEYWORDS===
nextline skipped scanner nextfoo application 
===ANSWER===
288
<html><body><p>Thats because the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextInt%28%29"><code>Scanner#nextInt</code></a> method does not consume the <em>last newline</em> character of your input, and thus that <em>newline</em> is consumed in the next call to <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextLine%28%29"><code>Scanner#nextLine</code></a></p><p><strong>Workaround:</strong></p><p>Either fire a blank <code>Scanner#nextLine</code> call after <code>Scanner#nextInt</code> to consume rest of that line including <em>newline</em> </p><pre><code>int option = input.nextInt();
input.nextLine();  // Consume newline left-over
String str1 = input.nextLine();
</code></pre><p>Or, it would be even better, if you read the input through <code>Scanner#nextLine</code> and convert your input to integer using <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)"><code>Integer#parseInt(String)</code></a> method.</p><pre><code>int option = 0;
try {
    option = Integer.parseInt(input.nextLine());
} catch (NumberFormatException e) {
    e.printStackTrace();
}
String str1 = input.nextLine();
</code></pre><p>You will encounter the similar behaviour when you use <code>Scanner#nextLine</code> after <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#next%28%29"><code>Scanner#next()</code></a> or any <code>Scanner#nextFoo</code> method (except <code>nextLine</code> itself).</p></body></html>

===ID===
584cbf6b3e2ca508e5f0716d
===QUESTION===
Unfortunately MyApp has stopped. How can I solve this?
I am developing an application, and everytime I run it, I get the message: Unfortunately, MyApp has stopped. What can I do to solve this? About this question - obviously inspired by  What is a stack trace, and how can I use it to debug my application errors? , there are lots of questions stating that their application has crashed, without any further detail. This question aims to instruct novice Android programmers on how to try and fix their problems themselves, or ask the right questions. 
===LINK===
http://stackoverflow.com/questions/23353173/unfortunately-myapp-has-stopped-how-can-i-solve-this
===KEYWORDS===
run questions everytime lots problems 
===ANSWER===
349
<html><body><p><em>This answer describes the process of retrieving the stack trace. Already have the stack trace? Read up on stack traces in "<a href="http://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors">What is a stack trace, and how can I use it to debug my application errors?</a>"</em></p><p>Your application quit because an uncaught <code>RuntimeException</code> was thrown.<br>
The most common of these is the <code>NullPointerException</code>.</br></p><p>Every time an Android application crashes (or any Java application for that matter), a <code>Stack trace</code> is written to the console (in this case, logcat). This stack trace contains vital information for solving your problem.</p><p><img alt="Finding the stack trace in Android Studio" src="https://i.stack.imgur.com/ZL3Y8.png"/></p><p>In the bottom bar of the window, click on the <code>Android</code> button. Alternatively, you can press <kbd>alt</kbd>+<kbd>6</kbd>. Make sure your emulator or device is selected in the <code>Devices</code> panel. Next, try to find the stack trace, which is shown in red. There may be a lot of stuff logged into logcat, so you may need to scroll a bit. An easy way to find the stack trace is to clear the logcat (using the recycle bin on the right), and let the app crash again.</p><p><img alt="Finding the stack trace in Eclipse" src="https://i.stack.imgur.com/6qdhO.png"/></p><p>In the top right corner, click the <code>DDMS</code> button. If it is not there, you might need to add it first using the <code>Open Perspective</code> button to the left of the <code>Java</code> button. You will find the logcat pane at the bottom. First, make sure your device is selected in the topleft <code>devices</code> panel. Next, try to find the stack trace, which is shown in red. Again, there may be a lot of stuff logged into logcat, so you may need to scroll a bit. An easy way to find the stack trace here is to clear the logcat (using the <code>clear log</code> button on the top right), and let the app crash again. You should also click on the package name of your app, if it is not already selected. This will filter out only the log message made by your app.</p><p>Yay! You're halfway to solving your problem.<br>
You only need to find out what exactly made your application crash, by analyzing the stack trace.</br></p><p>Read up on stack traces in "<a href="http://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors">What is a stack trace, and how can I use it to debug my application errors?</a>"</p><p>If you've found your <code>Exception</code> and the line where it occurred, and still cannot figure out how to fix it, don't hesitate to ask a question on StackOverflow.  </p><p>Try to be as concise as possible: post the stack trace, and the <em>relevant</em> code (e.g. a few lines up to the line which threw the <code>Exception</code>).</p></body></html>

===ID===
584cbf6c3e2ca508e5f0716e
===QUESTION===
What causes a java.lang.ArrayIndexOutOfBoundsException and how do I prevent it?
What does  ArrayIndexOutOfBoundsException  mean and how do I get rid of it?  Here is a code sample that triggers the exception: 
===LINK===
http://stackoverflow.com/questions/5554734/what-causes-a-java-lang-arrayindexoutofboundsexception-and-how-do-i-prevent-it
===KEYWORDS===
arrayindexoutofboundsexception lang exception java triggers 
===ANSWER===
119
<html><body><p>Your first port of call should be the <a href="http://download.oracle.com/javase/6/docs/api/java/lang/ArrayIndexOutOfBoundsException.html">documentation</a> which explains it reasonably clearly:</p><p>Thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.</p><p>So for example:</p><pre><code>int[] array = new int[5];
int boom = array[10]; // Throws the exception
</code></pre><p>As for how to avoid it... um, don't do that. Be careful with your array indexes.</p><p>One problem people sometimes run into is thinking that arrays are 1-indexed, e.g.</p><pre><code>int[] array = new int[5];
// ... populate the array here ...
for (int index = 1; index &lt;= array.length; index++)
{
    System.out.println(array[index]);
}
</code></pre><p>That will miss out the first element (index 0) and throw an exception when index is 5. The valid indexes here are 0-4 inclusive. The correct, idiomatic <code>for</code> statement here would be:</p><pre><code>for (int index = 0; index &lt; array.length; index++)
</code></pre><p>(That's assuming you <em>need</em> the index, of course. If you can use the enhanced for loop instead, do so.)</p></body></html>

===ID===
584cbf6c3e2ca508e5f0716f
===QUESTION===
Providing white space in a Swing GUI
A GUI with no white space appears 'crowded'.  How can I provide white space without resorting to explicitly setting the position or size of components? 
===LINK===
http://stackoverflow.com/questions/17874717/providing-white-space-in-a-swing-gui
===KEYWORDS===
crowded gui resorting components position 
===ANSWER===
65
<html><body><p>Using various <code>LayoutManagers</code> one can provide spacing between various components. </p><p><strong>Getter and setter methods</strong></p><p>For Horizontal Spacing <strong>:</strong> <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/BorderLayout.html#getHgap%28%29" rel="nofollow noreferrer">BorderLayout.getHgap()</a> and <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/BorderLayout.html#setHgap%28int%29" rel="nofollow noreferrer">BorderLayout.setHgap(int hgap)</a></p><p>For Vertical Spacing <strong>:</strong> <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/BorderLayout.html#getVgap%28%29" rel="nofollow noreferrer">BorderLayout.getVgap()</a> and <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/BorderLayout.html#setVgap%28int%29" rel="nofollow noreferrer">BorderLayout.setVgap()</a></p><p><strong>Getter and setter methods</strong></p><p>For Horizontal Spacing <strong>:</strong> <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/FlowLayout.html#getHgap%28%29" rel="nofollow noreferrer">FlowLayout.getHgap()</a> and <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/FlowLayout.html#setHgap%28int%29" rel="nofollow noreferrer">FlowLayout.setHgap(int hgap)</a></p><p>For Vertical Spacing <strong>:</strong> <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/FlowLayout.html#getVgap()" rel="nofollow noreferrer">FlowLayout.getVgap()</a> and <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/FlowLayout.html#setVgap(int)" rel="nofollow noreferrer">FlowLayout.setVgap()</a></p><p><strong>Getter and setter methods</strong></p><p>For Horizontal Spacing <strong>:</strong> <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridLayout.html#getHgap()" rel="nofollow noreferrer">GridLayout.getHgap()</a> and <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridLayout.html#setHgap(int)" rel="nofollow noreferrer">GridLayout.setHgap(int hgap)</a></p><p>For Vertical Spacing <strong>:</strong> <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridLayout.html#getVgap()" rel="nofollow noreferrer">GridLayout.getVgap()</a> and <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridLayout.html#setVgap(int)" rel="nofollow noreferrer">GridLayout.setVgap()</a></p><p><a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridBagConstraints.html#insets" rel="nofollow noreferrer">GridBagConstraints.insets</a></p><p><a href="http://docs.oracle.com/javase/7/docs/api/java/awt/GridLayout.html#getVgap()" rel="nofollow noreferrer">CardLayout(int hGap, int vGap)</a></p><pre><code>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class LayoutExample {

    private final int hGap = 5;
    private final int vGap = 5;

    private String[] borderConstraints = {
        BorderLayout.PAGE_START,
        BorderLayout.LINE_START,
        BorderLayout.CENTER,
        BorderLayout.LINE_END,
        BorderLayout.PAGE_END
    };

    private JButton[] buttons;

    private GridBagConstraints gbc;

    private JPanel borderPanel;
    private JPanel flowPanel;
    private JPanel gridPanel;
    private JPanel gridBagPanel;
    private JPanel cardPanel;

    public LayoutExample() {
        buttons = new JButton[16];
        gbc = new GridBagConstraints();
        gbc.anchor = GridBagConstraints.FIRST_LINE_START;   
        gbc.insets = new Insets(hGap, vGap, hGap, vGap);        
    }

    private void displayGUI() {
        JFrame frame = new JFrame("Layout Example");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel contentPane = new JPanel(
                        new GridLayout(0, 1, hGap, vGap));
        contentPane.setBorder(
            BorderFactory.createEmptyBorder(hGap, vGap, hGap, vGap));
        borderPanel = new JPanel(new BorderLayout(hGap, vGap));
        borderPanel.setBorder(
            BorderFactory.createTitledBorder("BorderLayout"));
        borderPanel.setOpaque(true);
        borderPanel.setBackground(Color.WHITE);
        for (int i = 0; i &lt; 5; i++) {
            buttons[i] = new JButton(borderConstraints[i]);
            borderPanel.add(buttons[i], borderConstraints[i]);
        }
        contentPane.add(borderPanel);

        flowPanel = new JPanel(new FlowLayout(
                    FlowLayout.CENTER, hGap, vGap));
        flowPanel.setBorder(
            BorderFactory.createTitledBorder("FlowLayout"));
        flowPanel.setOpaque(true);
        flowPanel.setBackground(Color.WHITE);
        for (int i = 5; i &lt; 8; i++) {
            buttons[i] = new JButton(Integer.toString(i));
            flowPanel.add(buttons[i]);
        }
        contentPane.add(flowPanel);

        gridPanel = new JPanel(new GridLayout(2, 2, hGap, vGap));
        gridPanel.setBorder(
            BorderFactory.createTitledBorder("GridLayout"));
        gridPanel.setOpaque(true);
        gridPanel.setBackground(Color.WHITE);
        for (int i = 8; i &lt; 12; i++) {
            buttons[i] = new JButton(Integer.toString(i));
            gridPanel.add(buttons[i]);
        }
        contentPane.add(gridPanel);

        gridBagPanel = new JPanel(new GridBagLayout());
        gridBagPanel.setBorder(
            BorderFactory.createTitledBorder("GridBagLayout"));
        gridBagPanel.setOpaque(true);
        gridBagPanel.setBackground(Color.WHITE);
        buttons[12] = new JButton(Integer.toString(12));
        addComp(gridBagPanel, buttons[12], 0, 0, 1, 1
                            , GridBagConstraints.BOTH, 0.33, 0.5);
        buttons[13] = new JButton(Integer.toString(13));
        addComp(gridBagPanel, buttons[13], 1, 0, 1, 1
                            , GridBagConstraints.BOTH, 0.33, 0.5);
        buttons[14] = new JButton(Integer.toString(14));
        addComp(gridBagPanel, buttons[14], 0, 1, 2, 1
                            , GridBagConstraints.BOTH, 0.66, 0.5);
        buttons[15] = new JButton(Integer.toString(15));
        addComp(gridBagPanel, buttons[15], 2, 0, 1, 2
                            , GridBagConstraints.BOTH, 0.33, 1.0);
        contentPane.add(gridBagPanel);

        cardPanel = new JPanel(new CardLayout(hGap, vGap));
        cardPanel.setBorder(
            BorderFactory.createTitledBorder("CardLayout"));
        cardPanel.setOpaque(true);
        cardPanel.setBackground(Color.WHITE);
        cardPanel.add(getPanel(Color.BLUE));
        cardPanel.add(getPanel(Color.GREEN));
        contentPane.add(cardPanel);

        frame.setContentPane(contentPane);
        frame.pack();
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }

    private JPanel getPanel(Color bColor) {
        JPanel panel = new JPanel(new FlowLayout(
                    FlowLayout.CENTER, hGap, vGap));
        panel.setOpaque(true);
        panel.setBackground(bColor.darker().darker());
        JButton swapperButton = new JButton("Next");
        swapperButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                CardLayout cardLayout = (CardLayout) cardPanel.getLayout();
                cardLayout.next(cardPanel);
            }
        });

        panel.add(swapperButton);

        return panel;
    }

    private void addComp(JPanel panel, JComponent comp
                                , int x, int y, int gWidth
                                    , int gHeight, int fill
                                        , double weightx, double weighty) {
        gbc.gridx = x;
        gbc.gridy = y;
        gbc.gridwidth = gWidth;
        gbc.gridheight = gHeight;
        gbc.fill = fill;
        gbc.weightx = weightx;
        gbc.weighty = weighty;      

        panel.add(comp, gbc);
    }

    public static void main(String[] args) {
        Runnable runnable = new Runnable(){
            @Override
            public void run() {
                new LayoutExample().displayGUI();
            }
        };
        EventQueue.invokeLater(runnable);
    }
}
</code></pre><p><img alt="LAYOUTIMAGE" src="https://i.stack.imgur.com/9mKG9.png"/></p></body></html>

===ID===
584cbf6d3e2ca508e5f07170
===QUESTION===
How do I write a correct micro-benchmark in Java?
How do you write (and run) a correct micro-benchmark in Java? I'm looking here for code samples and comments illustrating various things to think about. Example: Should the benchmark measure time/iteration or iterations/time, and why? Related:  Is stopwatch benchmarking acceptable? 
===LINK===
http://stackoverflow.com/questions/504103/how-do-i-write-a-correct-micro-benchmark-in-java
===KEYWORDS===
run things benchmark related write 
===ANSWER===
482
<html><body><p>Tips about writing micro benchmarks <a href="https://wiki.openjdk.java.net/display/HotSpot/Main" rel="nofollow noreferrer">from the creators of Java HotSpot</a>:</p><p><strong>Rule 0:</strong> Read a reputable paper on JVMs and micro-benchmarking. A good one is <a href="http://www.ibm.com/developerworks/java/library/j-jtp02225" rel="nofollow noreferrer">Brian Goetz, 2005</a>. Do not expect too much from micro-benchmarks; they measure only a limited range of JVM performance characteristics.</p><p><strong>Rule 1:</strong> Always include a warmup phase which runs your test kernel all the way through, enough to trigger all initializations and compilations before timing phase(s). (Fewer iterations is OK on the warmup phase. The rule of thumb is several tens of thousands of inner loop iterations.)</p><p><strong>Rule 2:</strong> Always run with <code>-XX:+PrintCompilation</code>, <code>-verbose:gc</code>, etc., so you can verify that the compiler and other parts of the JVM are not doing unexpected work during your timing phase.</p><p><strong>Rule 2.1:</strong> Print messages at the beginning and end of timing and warmup phases, so you can verify that there is no output from Rule 2 during the timing phase.</p><p><strong>Rule 3:</strong> Be aware of the difference between -client and -server, and OSR and regular compilations. The <code>-XX:+PrintCompilation</code> flag reports OSR compilations with an at-sign to denote the non-initial entry point, for example: <code>Trouble$1::run @ 2 (41 bytes)</code>. Prefer server to client, and regular to OSR, if you are after best performance.</p><p><strong>Rule 4:</strong> Be aware of initialization effects. Do not print for the first time during your timing phase, since printing loads and initializes classes. Do not load new classes outside of the warmup phase (or final reporting phase), unless you are testing class loading specifically (and in that case load only the test classes). Rule 2 is your first line of defense against such effects.</p><p><strong>Rule 5:</strong> Be aware of deoptimization and recompilation effects. Do not take any code path for the first time in the timing phase, because the compiler may junk and recompile the code, based on an earlier optimistic assumption that the path was not going to be used at all. Rule 2 is your first line of defense against such effects.</p><p><strong>Rule 6:</strong> Use appropriate tools to read the compiler's mind, and expect to be surprised by the code it produces. Inspect the code yourself before forming theories about what makes something faster or slower.</p><p><strong>Rule 7:</strong> Reduce noise in your measurements. Run your benchmark on a quiet machine, and run it several times, discarding outliers. Use <code>-Xbatch</code> to serialize the compiler with the application, and consider setting <code>-XX:CICompilerCount=1</code> to prevent the compiler from running in parallel with itself.</p><p><strong>Rule 8:</strong> Use a library for your benchmark as it is probably more efficient and was already debugged for this sole purpose. Such as <a href="http://openjdk.java.net/projects/code-tools/jmh/" rel="nofollow noreferrer">JMH</a>, <a href="https://code.google.com/p/caliper/" rel="nofollow noreferrer">Caliper</a> or <a href="http://cseweb.ucsd.edu/users/wgg/JavaProf/javaprof.html" rel="nofollow noreferrer">Bill and Paul's Excellent UCSD Benchmarks for Java</a>.  </p></body></html>

===ID===
584cbf6d3e2ca508e5f07171
===QUESTION===
How to upload files to server using JSP/Servlet?
How can I upload files to server using JSP/Servlet? I tried this: However, I only get the file name, not the file content. When I add   enctype="multipart/form-data"  to the  <form> , then  request.getParameter()  returns  null .  During research I stumbled upon  Apache Common FileUpload . I tried this: Unfortunately, the servlet threw an exception without a clear message and cause. Here is the stacktrace: 
===LINK===
http://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet
===KEYWORDS===
stacktrace stumbled jsp/servlet multipart/form <form> 
===ANSWER===
854
<html><body><p>To browse and select a file for upload you need a HTML <code>&lt;input type="file"&gt;</code> field in the form. As stated in the <a href="http://www.w3.org/TR/html4/interact/forms.html" rel="nofollow noreferrer">HTML specification</a> you have to use the <code>POST</code> method and the <code>enctype</code> attribute of the form has to be set to <code>"multipart/form-data"</code>.</p><pre class="lang-html prettyprint-override"><code>&lt;form action="upload" method="post" enctype="multipart/form-data"&gt;
    &lt;input type="text" name="description" /&gt;
    &lt;input type="file" name="file" /&gt;
    &lt;input type="submit" /&gt;
&lt;/form&gt;
</code></pre><p>After submitting such a form, the binary multipart form data is available in the request body in <a href="http://stackoverflow.com/questions/13372775/servlet-handling-file-upload-why-bigger-than-the-original/13399437#13399437">a different format</a> than when the <code>enctype</code> isn't set.</p><p>Before Servlet 3.0, the Servlet API didn't natively support <code>multipart/form-data</code>. It supports only the default form enctype of <code>application/x-www-form-urlencoded</code>. The <code>request.getParameter()</code> and consorts would all return <code>null</code> when using multipart form data. This is where the well known <a href="http://commons.apache.org/fileupload" rel="nofollow noreferrer">Apache Commons FileUpload</a> came into the picture.</p><p>You can in theory parse the request body yourself based on <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/ServletRequest.html#getInputStream%28%29" rel="nofollow noreferrer"><code>ServletRequest#getInputStream()</code></a>. However, this is a precise and tedious work which requires precise knowledge of <a href="http://www.faqs.org/rfcs/rfc2388.html" rel="nofollow noreferrer">RFC2388</a>. You shouldn't try to do this on your own or copypaste some homegrown library-less code found elsewhere on the Internet. Many online sources have failed hard in this, such as roseindia.net. See also <a href="http://stackoverflow.com/questions/5038798/uploading-of-pdf-file">uploading of pdf file</a>. You should rather use a real library which is used (and implicitly tested!) by millions of users for years. Such a library has proven its robustness.</p><p>If you're using at least Servlet 3.0 (Tomcat 7, JBoss AS 6, GlassFish 3, etc), then you can just use standard API provided <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getParts()" rel="nofollow noreferrer"><code>HttpServletRequest#getPart()</code></a> to collect the individual multipart form data items (most Servlet 3.0 implementations actually use Apache Commons FileUpload under the covers for this!). Also, normal form fields are available by <code>getParameter()</code> the usual way.</p><p>First annotate your servlet with <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/MultipartConfig.html" rel="nofollow noreferrer"><code>@MultipartConfig</code></a> in order to let it recognize and support <code>multipart/form-data</code> requests and thus get <code>getPart()</code> to work:</p><pre><code>@WebServlet("/upload")
@MultipartConfig
public class UploadServlet extends HttpServlet {
    // ...
}
</code></pre><p>Then, implement its <code>doPost()</code> as follows:</p><pre class="lang-java prettyprint-override"><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String description = request.getParameter("description"); // Retrieves &lt;input type="text" name="description"&gt;
    Part filePart = request.getPart("file"); // Retrieves &lt;input type="file" name="file"&gt;
    String fileName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString(); // MSIE fix.
    InputStream fileContent = filePart.getInputStream();
    // ... (do your job here)
}
</code></pre><p>Note the <code>Path#getFileName()</code>. This is a MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</p><p>In case you have a <code>&lt;input type="file" name="file" multiple="true" /&gt;</code> for multi-file upload, collect them as below (unfortunately there is no such method as <code>request.getParts("file")</code>):</p><pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    // ...
    List&lt;Part&gt; fileParts = request.getParts().stream().filter(part -&gt; "file".equals(part.getName())).collect(Collectors.toList()); // Retrieves &lt;input type="file" name="file" multiple="true"&gt;

    for (Part filePart : fileParts) {
        String fileName = Paths.get(filePart.getSubmittedFileName()).getFileName().toString(); // MSIE fix.
        InputStream fileContent = filePart.getInputStream();
        // ... (do your job here)
    }
}
</code></pre><p>Note that <a href="https://docs.oracle.com/javaee/7/api/javax/servlet/http/Part.html#getSubmittedFileName()" rel="nofollow noreferrer"><code>Part#getSubmittedFileName()</code></a> was introduced in Servlet 3.1 (Tomcat 8, WildFly 8, GlassFish 4, etc). If you're not on Servlet 3.1 yet, then you need an additional utility method to obtain the submitted file name.</p><pre><code>private static String getSubmittedFileName(Part part) {
    for (String cd : part.getHeader("content-disposition").split(";")) {
        if (cd.trim().startsWith("filename")) {
            String fileName = cd.substring(cd.indexOf('=') + 1).trim().replace("\"", "");
            return fileName.substring(fileName.lastIndexOf('/') + 1).substring(fileName.lastIndexOf('\\') + 1); // MSIE fix.
        }
    }
    return null;
}
</code></pre><pre><code>String fileName = getSubmittedFileName(filePart);
</code></pre><p>Note the MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</p><p>If you're not on Servlet 3.0 yet (isn't it about time to upgrade?), the common practice is to make use of <a href="http://commons.apache.org/fileupload" rel="nofollow noreferrer">Apache Commons FileUpload</a> to parse the multpart form data requests. It has an excellent <a href="http://commons.apache.org/fileupload/using.html" rel="nofollow noreferrer">User Guide</a> and <a href="http://commons.apache.org/fileupload/faq.html" rel="nofollow noreferrer">FAQ</a> (carefully go through both). There's also the O'Reilly ("<a href="http://www.servlets.com/cos/" rel="nofollow noreferrer">cos</a>") <code>MultipartRequest</code>, but it has some (minor) bugs and isn't actively maintained anymore for years. I wouldn't recommend using it. Apache Commons FileUpload is still actively maintained and currently very mature.</p><p>In order to use Apache Commons FileUpload, you need to have at least the following files in your webapp's <code>/WEB-INF/lib</code>: </p><p>Your initial attempt failed most likely because you forgot the commons IO. </p><p>Here's a kickoff example how the <code>doPost()</code> of your <code>UploadServlet</code> may look like when using Apache Commons FileUpload:</p><pre class="lang-java prettyprint-override"><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    try {
        List&lt;FileItem&gt; items = new ServletFileUpload(new DiskFileItemFactory()).parseRequest(request);
        for (FileItem item : items) {
            if (item.isFormField()) {
                // Process regular form field (input type="text|radio|checkbox|etc", select, etc).
                String fieldName = item.getFieldName();
                String fieldValue = item.getString();
                // ... (do your job here)
            } else {
                // Process form file field (input type="file").
                String fieldName = item.getFieldName();
                String fileName = FilenameUtils.getName(item.getName());
                InputStream fileContent = item.getInputStream();
                // ... (do your job here)
            }
        }
    } catch (FileUploadException e) {
        throw new ServletException("Cannot parse multipart request.", e);
    }

    // ...
}
</code></pre><p>It's very important that you don't call <code>getParameter()</code>, <code>getParameterMap()</code>, <code>getParameterValues()</code>, <code>getInputStream()</code>, <code>getReader()</code>, etc on the same request beforehand. Otherwise the servlet container will read and parse the request body and thus Apache Commons FileUpload will get an empty request body. See also a.o. <a href="http://stackoverflow.com/questions/13881272/servletfileuploadparserequestrequest-returns-an-empty-list">ServletFileUpload#parseRequest(request) returns an empty list</a>.</p><p>Note the <code>FilenameUtils#getName()</code>. This is a MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</p><p>Alternatively you can also wrap this all in a <code>Filter</code> which parses it all automagically and put the stuff back in the parametermap of the request so that you can continue using <code>request.getParameter()</code> the usual way and retrieve the uploaded file by <code>request.getAttribute()</code>. <a href="http://balusc.blogspot.com/2007/11/multipartfilter.html" rel="nofollow noreferrer">You can find an example in this blog article</a>.</p><p>Note that Glassfish versions older than 3.1.2 had <a href="http://java.net/jira/browse/GLASSFISH-16740" rel="nofollow noreferrer">a bug</a> wherein the <code>getParameter()</code> still returns <code>null</code>. If you are targeting such a container and can't upgrade it, then you need to extract the value from <code>getPart()</code> with help of this utility method:</p><pre><code>private static String getValue(Part part) throws IOException {
    BufferedReader reader = new BufferedReader(new InputStreamReader(part.getInputStream(), "UTF-8"));
    StringBuilder value = new StringBuilder();
    char[] buffer = new char[1024];
    for (int length = 0; (length = reader.read(buffer)) &gt; 0;) {
        value.append(buffer, 0, length);
    }
    return value.toString();
}
</code></pre><pre><code>String description = getValue(request.getPart("description")); // Retrieves &lt;input type="text" name="description"&gt;
</code></pre><p>Head to the following answers for detail on properly saving the obtained <code>InputStream</code> (the <code>fileContent</code> variable as shown in the above code snippets) to disk or database:</p><p>Head to the following answers for detail on properly serving the saved file from disk or database back to the client:</p><p>Head to the following answers how to upload using Ajax (and jQuery). Do note that the servlet code to collect the form data does not need to be changed for this! Only the way how you respond may be changed, but this is rather trivial (i.e. instead of forwarding to JSP, just print some JSON or XML or even plain text depending on whatever the script responsible for the Ajax call is expecting).</p><p>Hope this all helps :)</p></body></html>

===ID===
584cbf6e3e2ca508e5f07172
===QUESTION===
What is a raw type and why shouldn't we use it?

===LINK===
http://stackoverflow.com/questions/2770321/what-is-a-raw-type-and-why-shouldnt-we-use-it
===KEYWORDS===
shouldn 
===ANSWER===
468
<html><body><p>The Java Language Specification defines a <em>raw type</em> as follows:</p><p>A raw type is defined to be one of:</p><p>The reference type that is formed by taking the name of a generic type declaration without an accompanying type argument list.</p><p>An array type whose element type is a raw type.</p><p>A non-<code>static</code> member type of a raw type <code>R</code> that is not inherited from a superclass or superinterface of <code>R</code>.</p><p>Here's an example to illustrate:</p><pre><code>public class MyType&lt;E&gt; {
    class Inner { }
    static class Nested { }

    public static void main(String[] args) {
        MyType mt;          // warning: MyType is a raw type
        MyType.Inner inn;   // warning: MyType.Inner is a raw type

        MyType.Nested nest; // no warning: not parameterized type
        MyType&lt;Object&gt; mt1; // no warning: type parameter given
        MyType&lt;?&gt; mt2;      // no warning: type parameter given (wildcard OK!)
    }
}
</code></pre><p>Here, <code>MyType&lt;E&gt;</code> is a <em>parameterized type</em> (<a href="https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.5" rel="nofollow noreferrer">JLS 4.5</a>). It is common to colloquially refer to this type as simply <code>MyType</code> for short, but technically the name is <code>MyType&lt;E&gt;</code>.</p><p><code>mt</code> has a raw type (and generates a compilation warning) by the first bullet point in the above definition; <code>inn</code> also has a raw type by the second bullet point.</p><p><code>MyType.Nested</code> is not a parameterized type, even though it's a member type of a parameterized type <code>MyType&lt;E&gt;</code>, because it's <code>static</code>.</p><p><code>mt1</code>, and <code>mt2</code> are both declared with actual type parameters, so they're not raw types.</p><p>Essentially, raw types behaves just like they were before generics were introduced. That is, the following is entirely legal at compile-time.</p><pre><code>List names = new ArrayList(); // warning: raw type!
names.add("John");
names.add("Mary");
names.add(Boolean.FALSE); // not a compilation error!
</code></pre><p>The above code runs just fine, but suppose you also have the following:</p><pre><code>for (Object o : names) {
    String name = (String) o;
    System.out.println(name);
} // throws ClassCastException!
  //    java.lang.Boolean cannot be cast to java.lang.String
</code></pre><p>Now we run into trouble at run-time, because <code>names</code> contains something that isn't an <code>instanceof String</code>.</p><p>Presumably, if you want <code>names</code> to contain only <code>String</code>, you <em>could</em> perhaps still use a raw type and <em>manually check every</em> <code>add</code> yourself, and then <em>manually cast</em> to <code>String</code> every item from <code>names</code>. <strong>Even better</strong>, though is NOT to use a raw type and <em>let the compiler do all the work for you</em>, harnessing the power of Java generics.</p><pre><code>List&lt;String&gt; names = new ArrayList&lt;String&gt;();
names.add("John");
names.add("Mary");
names.add(Boolean.FALSE); // compilation error!
</code></pre><p>Of course, if you <em>DO</em> want <code>names</code> to allow a <code>Boolean</code>, then you can declare it as <code>List&lt;Object&gt; names</code>, and the above code would compile.</p><p>The following is a quote from <em>Effective Java 2nd Edition, Item 23: Don't use raw types in new code</em>:</p><p>Just what is the difference between the raw type <code>List</code> and the parameterized type <code>List&lt;Object&gt;</code>? Loosely speaking, the former has opted out generic type checking, while the latter explicitly told the compiler that it is capable of holding objects of any type. While you can pass a <code>List&lt;String&gt;</code> to a parameter of type <code>List</code>, you can't pass it to a parameter of type <code>List&lt;Object&gt;</code>. There are subtyping rules for generics, and <code>List&lt;String&gt;</code> is a subtype of the raw type <code>List</code>, but not of the parameterized type <code>List&lt;Object&gt;</code>. As a consequence, <strong>you lose type safety if you use raw type like <code>List</code>, but not if you use a parameterized type like <code>List&lt;Object&gt;</code></strong>.</p><p>To illustrate the point, consider the following method which takes a <code>List&lt;Object&gt;</code> and appends a <code>new Object()</code>.</p><pre><code>void appendNewObject(List&lt;Object&gt; list) {
   list.add(new Object());
}
</code></pre><p>Generics in Java are invariant. A <code>List&lt;String&gt;</code> is not a <code>List&lt;Object&gt;</code>, so the following would generate a compiler warning:</p><pre><code>List&lt;String&gt; names = new ArrayList&lt;String&gt;();
appendNewObject(names); // compilation error!
</code></pre><p>If you had declared <code>appendNewObject</code> to take a raw type <code>List</code> as parameter, then this would compile, and you'd therefore lose the type safety that you get from generics.</p><p><code>List&lt;Object&gt;</code>, <code>List&lt;String&gt;</code>, etc are all <code>List&lt;?&gt;</code>, so it may be tempting to just say that they're just <code>List</code> instead. However, there is a major difference: since a <code>List&lt;E&gt;</code> defines only <code>add(E)</code>, you can't add just any arbitrary object to a <code>List&lt;?&gt;</code>. On the other hand, since the raw type <code>List</code> does not have type safety, you can <code>add</code> just about anything to a <code>List</code>.</p><p>Consider the following variation of the previous snippet:</p><pre><code>static void appendNewObject(List&lt;?&gt; list) {
    list.add(new Object()); // compilation error!
}
//...

List&lt;String&gt; names = new ArrayList&lt;String&gt;();
appendNewObject(names); // this part is fine!
</code></pre><p>The compiler did a wonderful job of protecting you from potentially violating the type invariance of the <code>List&lt;?&gt;</code>! If you had declared the parameter as the raw type <code>List list</code>, then the code would compile, and you'd violate the type invariant of <code>List&lt;String&gt; names</code>.</p><p>Back to JLS 4.8:</p><p>It is possible to use as a type <strong>the erasure</strong> of a parameterized type or the erasure of an array type whose element type is a parameterized type. <strong>Such a type is called a <em>raw type</em>.</strong></p><p><em>[...]</em></p><p>The superclasses (respectively, superinterfaces) of a raw type are the erasures of the superclasses (superinterfaces) of any of the parameterizations of the generic type.</p><p>The type of a constructor, instance method, or non-<code>static</code> field of a raw type <code>C</code> that is not inherited from its superclasses or superinterfaces is the raw type that corresponds to the erasure of its type in the generic declaration corresponding to <code>C</code>.</p><p>In simpler terms, when a raw type is used, the constructors, instance methods and non-<code>static</code> fields are <em>also erased</em>.</p><p>Take the following example:</p><pre><code>class MyType&lt;E&gt; {
    List&lt;String&gt; getNames() {
        return Arrays.asList("John", "Mary");
    }

    public static void main(String[] args) {
        MyType rawType = new MyType();
        // unchecked warning!
        // required: List&lt;String&gt; found: List
        List&lt;String&gt; names = rawType.getNames();
        // compilation error!
        // incompatible types: Object cannot be converted to String
        for (String str : rawType.getNames())
            System.out.print(str);
    }
}
</code></pre><p>When we use the raw <code>MyType</code>, <code>getNames</code> becomes erased as well, so that it returns a raw <code>List</code>!</p><p><a href="https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.6" rel="nofollow noreferrer">JLS 4.6</a> continues to explain the following:</p><p><strong>Type erasure also maps the signature of a constructor or method to a signature that has no parameterized types or type variables.</strong> The erasure of a constructor or method signature <code>s</code> is a signature consisting of the same name as <code>s</code> and the erasures of all the formal parameter types given in <code>s</code>.</p><p><strong>The return type of a method and the type parameters of a generic method or constructor also undergo erasure if the method or constructor's signature is erased.</strong></p><p>The erasure of the signature of a generic method has no type parameters.</p><p>Here's another quote from JLS 4.8:</p><p>The use of raw types is allowed only as a concession to compatibility of legacy code. <em>The use of raw types in code written after the introduction of genericity into the Java programming language is strongly discouraged. It is possible that future versions of the Java programming language will disallow the use of raw types.</em></p><p><em>Effective Java 2nd Edition</em> also has this to add:</p><p>Given that you shouldn't use raw types, why did the language designers allow them? To provide compatibility.</p><p>The Java platform was about to enter its second decade when generics were introduced, and there was an enormous amount of Java code in existence that did not use generics. It was deemed critical that all this code remains legal and interoperable with new code that does use generics. It had to be legal to pass instances of parameterized types to methods that were designed for use with ordinary types, and vice versa. This requirement, known as <em>migration compatibility</em>, drove the decision to support raw types.</p><p>In summary, raw types should NEVER be used in new code. <strong>You should always use parameterized types</strong>.</p><p>Unfortunately, because Java generics are non-reified, there are two exceptions where raw types must be used in new code:</p></body></html>

===ID===
584cbf6e3e2ca508e5f07173
===QUESTION===
What issues should be considered when overriding equals and hashCode in Java?
What issues / pitfalls must be considered when overriding  equals  and  hashCode ? 
===LINK===
http://stackoverflow.com/questions/27581/what-issues-should-be-considered-when-overriding-equals-and-hashcode-in-java
===KEYWORDS===
considered java issues hashcode 
===ANSWER===
1218
<html><body><p><code>equals()</code> (<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)" rel="nofollow noreferrer">javadoc</a>) must define an equivalence relation (it must be <em>reflexive</em>, <em>symmetric</em>, and <em>transitive</em>). In addition, it must be <em>consistent</em> (if the objects are not modified, then it must keep returning the same value). Furthermore, <code>o.equals(null)</code> must always return false.</p><p><code>hashCode()</code> (<a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode()" rel="nofollow noreferrer">javadoc</a>) must also be <em>consistent</em> (if the object is not modified in terms of <code>equals()</code>, it must keep returning the same value).</p><p>The <strong>relation</strong> between the two methods is:</p><p><em>Whenever <code>a.equals(b)</code>, then <code>a.hashCode()</code> must be same as <code>b.hashCode()</code>.</em></p><p>If you override one, then you should override the other.</p><p>Use the same set of fields that you use to compute <code>equals()</code> to compute <code>hashCode()</code>.</p><p>Use the excellent helper classes <a href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/EqualsBuilder.html" rel="nofollow noreferrer">EqualsBuilder</a> and <a href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/HashCodeBuilder.html" rel="nofollow noreferrer">HashCodeBuilder</a> from the <a href="http://commons.apache.org/lang/" rel="nofollow noreferrer">Apache Commons Lang</a> library. An example:</p><pre><code>public class Person {
    private String name;
    private int age;
    // ...

    @Override
    public int hashCode() {
        return new HashCodeBuilder(17, 31). // two randomly chosen prime numbers
            // if deriving: appendSuper(super.hashCode()).
            append(name).
            append(age).
            toHashCode();
    }

    @Override
    public boolean equals(Object obj) {
       if (!(obj instanceof Person))
            return false;
        if (obj == this)
            return true;

        Person rhs = (Person) obj;
        return new EqualsBuilder().
            // if deriving: appendSuper(super.equals(obj)).
            append(name, rhs.name).
            append(age, rhs.age).
            isEquals();
    }
}
</code></pre><p>When using a hash-based <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/Collection.html" rel="nofollow noreferrer">Collection</a> or <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/Map.html" rel="nofollow noreferrer">Map</a> such as <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashSet.html" rel="nofollow noreferrer">HashSet</a>, <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/LinkedHashSet.html" rel="nofollow noreferrer">LinkedHashSet</a>, <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html" rel="nofollow noreferrer">HashMap</a>, <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/Hashtable.html" rel="nofollow noreferrer">Hashtable</a>, or <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/util/WeakHashMap.html" rel="nofollow noreferrer">WeakHashMap</a>, make sure that the hashCode() of the key objects that you put into the collection never changes while the object is in the collection. The bulletproof way to ensure this is to make your keys immutable, <a href="http://www.javapractices.com/topic/TopicAction.do?Id=29" rel="nofollow noreferrer">which has also other benefits</a>.</p></body></html>

===ID===
584cbf6f3e2ca508e5f07174
===QUESTION===
How to parse JSON in Java
I have the following JSON text that I need to parse to get  pageName ,  pagePic ,  post_id , etc. What is the required code? 
===LINK===
http://stackoverflow.com/questions/2591098/how-to-parse-json-in-java
===KEYWORDS===
parse pagename pagepic java post_id 
===ANSWER===
373
<html><body><p>The <a href="https://github.com/stleary/JSON-java">org.json</a> library is easy to use. Example code below:</p><pre><code>import org.json.*;


JSONObject obj = new JSONObject(" .... ");
String pageName = obj.getJSONObject("pageInfo").getString("pageName");

JSONArray arr = obj.getJSONArray("posts");
for (int i = 0; i &lt; arr.length(); i++)
{
    String post_id = arr.getJSONObject(i).getString("post_id");
    ......
}
</code></pre><p>You may find extra examples from: <a href="http://theoryapp.com/parse-json-in-java/">Parse JSON in Java</a></p><p>Downloadable jar:  <a href="http://mvnrepository.com/artifact/org.json/json">http://mvnrepository.com/artifact/org.json/json</a></p></body></html>

===ID===
584cbf6f3e2ca508e5f07175
===QUESTION===
Using java.net.URLConnection to fire and handle HTTP requests
Use of  java.net.URLConnection  is asked about pretty often here, and the  Oracle tutorial  is  too  concise about it.  That tutorial basically only shows how to fire a GET request and read the response. It doesn't explain anywhere how to use it to among others perform a POST request, set request headers, read response headers, deal with cookies, submit a HTML form, upload a file, etc.  So, how can I use  java.net.URLConnection  to fire and handle "advanced" HTTP requests? 
===LINK===
http://stackoverflow.com/questions/2793150/using-java-net-urlconnection-to-fire-and-handle-http-requests
===KEYWORDS===
urlconnection perform java file deal 
===ANSWER===
2211
<html><body><p><sup><em>First a disclaimer beforehand: the posted code snippets are all basic examples. You'll need to handle trivial <code>IOException</code>s and <code>RuntimeException</code>s like <code>NullPointerException</code>, <code>ArrayIndexOutOfBoundsException</code> and consorts yourself.</em></sup></p><p>We first need to know at least the URL and the charset. The parameters are optional and depend on the functional requirements.</p><pre><code>String url = "http://example.com";
String charset = "UTF-8";  // Or in Java 7 and later, use the constant: java.nio.charset.StandardCharsets.UTF_8.name()
String param1 = "value1";
String param2 = "value2";
// ...

String query = String.format("param1=%s&amp;param2=%s", 
     URLEncoder.encode(param1, charset), 
     URLEncoder.encode(param2, charset));
</code></pre><p>The query parameters must be in <code>name=value</code> format and be concatenated by <code>&amp;</code>. You would normally also <a href="http://en.wikipedia.org/wiki/Percent-encoding" rel="nofollow noreferrer">URL-encode</a> the query parameters with the specified charset using <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html#encode-java.lang.String-java.lang.String-" rel="nofollow noreferrer"><code>URLEncoder#encode()</code></a>.</p><p><sup>The <code>String#format()</code> is just for convenience. I prefer it when I would need the String concatenation operator <code>+</code> more than twice.</sup></p><p>It's a trivial task. It's the default request method.</p><pre><code>URLConnection connection = new URL(url + "?" + query).openConnection();
connection.setRequestProperty("Accept-Charset", charset);
InputStream response = connection.getInputStream();
// ...
</code></pre><p>Any query string should be concatenated to the URL using <code>?</code>. The <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.2" rel="nofollow noreferrer"><code>Accept-Charset</code></a> header may hint the server what encoding the parameters are in. If you don't send any query string, then you can leave the <code>Accept-Charset</code> header away. If you don't need to set any headers, then you can even use the <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URL.html#openStream%28%29" rel="nofollow noreferrer"><code>URL#openStream()</code></a> shortcut method.</p><pre><code>InputStream response = new URL(url).openStream();
// ...
</code></pre><p>Either way, if the other side is a <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html" rel="nofollow noreferrer"><code>HttpServlet</code></a>, then its <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doGet%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29" rel="nofollow noreferrer"><code>doGet()</code></a> method will be called and the parameters will be available by <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html#getParameter%28java.lang.String%29" rel="nofollow noreferrer"><code>HttpServletRequest#getParameter()</code></a>.</p><p>For testing purposes, you can print the response body to stdout as below:</p><pre><code>try (Scanner scanner = new Scanner(response)) {
    String responseBody = scanner.useDelimiter("\\A").next();
    System.out.println(responseBody);
}
</code></pre><p>Setting the <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#setDoOutput%28boolean%29" rel="nofollow noreferrer"><code>URLConnection#setDoOutput()</code></a> to <code>true</code> implicitly sets the request method to POST. The standard HTTP POST as web forms do is of type <code>application/x-www-form-urlencoded</code> wherein the query string is written to the request body.</p><pre><code>URLConnection connection = new URL(url).openConnection();
connection.setDoOutput(true); // Triggers POST.
connection.setRequestProperty("Accept-Charset", charset);
connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded;charset=" + charset);

try (OutputStream output = connection.getOutputStream()) {
    output.write(query.getBytes(charset));
}

InputStream response = connection.getInputStream();
// ...
</code></pre><p>Note: whenever you'd like to submit a HTML form programmatically, don't forget to take the <code>name=value</code> pairs of any <code>&lt;input type="hidden"&gt;</code> elements into the query string and of course also the <code>name=value</code> pair of the <code>&lt;input type="submit"&gt;</code> element which you'd like to "press" programmatically (because that's usually been used in the server side to distinguish if a button was pressed and if so, which one).</p><p>You can also cast the obtained <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html" rel="nofollow noreferrer"><code>URLConnection</code></a> to <a href="http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html" rel="nofollow noreferrer"><code>HttpURLConnection</code></a> and use its <a href="http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html#setRequestMethod%28java.lang.String%29" rel="nofollow noreferrer"><code>HttpURLConnection#setRequestMethod()</code></a> instead. But if you're trying to use the connection for output you still need to set <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#setDoOutput%28boolean%29" rel="nofollow noreferrer"><code>URLConnection#setDoOutput()</code></a> to <code>true</code>.</p><pre><code>HttpURLConnection httpConnection = (HttpURLConnection) new URL(url).openConnection();
httpConnection.setRequestMethod("POST");
// ...
</code></pre><p>Either way, if the other side is a <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html" rel="nofollow noreferrer"><code>HttpServlet</code></a>, then its <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29" rel="nofollow noreferrer"><code>doPost()</code></a> method will be called and the parameters will be available by <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html#getParameter%28java.lang.String%29" rel="nofollow noreferrer"><code>HttpServletRequest#getParameter()</code></a>.</p><p>You can fire the HTTP request explicitly with <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#connect%28%29" rel="nofollow noreferrer"><code>URLConnection#connect()</code></a>, but the request will automatically be fired on demand when you want to get any information about the HTTP response, such as the response body using <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#getInputStream%28%29" rel="nofollow noreferrer"><code>URLConnection#getInputStream()</code></a> and so on. The above examples does exactly that, so the <code>connect()</code> call is in fact superfluous.</p><p><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" rel="nofollow noreferrer">HTTP response status</a>:</p><p>You need a <a href="http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html" rel="nofollow noreferrer"><code>HttpURLConnection</code></a> here. Cast it first if necessary.</p><pre><code>int status = httpConnection.getResponseCode();
</code></pre><p><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html" rel="nofollow noreferrer">HTTP response headers</a>:</p><pre><code>for (Entry&lt;String, List&lt;String&gt;&gt; header : connection.getHeaderFields().entrySet()) {
    System.out.println(header.getKey() + "=" + header.getValue());
}
</code></pre><p><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17" rel="nofollow noreferrer">HTTP response encoding</a>:</p><p>When the <code>Content-Type</code> contains a <code>charset</code> parameter, then the response body is likely text based and we'd like to process the response body with the server-side specified character encoding then.</p><pre><code>String contentType = connection.getHeaderField("Content-Type");
String charset = null;

for (String param : contentType.replace(" ", "").split(";")) {
    if (param.startsWith("charset=")) {
        charset = param.split("=", 2)[1];
        break;
    }
}

if (charset != null) {
    try (BufferedReader reader = new BufferedReader(new InputStreamReader(response, charset))) {
        for (String line; (line = reader.readLine()) != null;) {
            // ... System.out.println(line) ?
        }
    }
} else {
    // It's likely binary content, use InputStream/OutputStream.
}
</code></pre><p>The server side session is usually backed by a cookie. Some web forms require that you're logged in and/or are tracked by a session. You can use the <a href="http://docs.oracle.com/javase/8/docs/api/java/net/CookieHandler.html" rel="nofollow noreferrer"><code>CookieHandler</code></a> API to maintain cookies. You need to prepare a <a href="http://docs.oracle.com/javase/8/docs/api/java/net/CookieManager.html" rel="nofollow noreferrer"><code>CookieManager</code></a> with a <a href="http://docs.oracle.com/javase/8/docs/api/java/net/CookiePolicy.html" rel="nofollow noreferrer"><code>CookiePolicy</code></a> of <a href="http://docs.oracle.com/javase/8/docs/api/java/net/CookiePolicy.html#ACCEPT_ALL" rel="nofollow noreferrer"><code>ACCEPT_ALL</code></a> before sending all HTTP requests.</p><pre><code>// First set the default cookie manager.
CookieHandler.setDefault(new CookieManager(null, CookiePolicy.ACCEPT_ALL));

// All the following subsequent URLConnections will use the same cookie manager.
URLConnection connection = new URL(url).openConnection();
// ...

connection = new URL(url).openConnection();
// ...

connection = new URL(url).openConnection();
// ...
</code></pre><p>Note that this is known to not always work properly in all circumstances. If it fails for you, then best is to manually gather and set the cookie headers. You basically need to grab all <code>Set-Cookie</code> headers from the response of the login or the first <code>GET</code> request and then pass this through the subsequent requests.</p><pre><code>// Gather all cookies on the first request.
URLConnection connection = new URL(url).openConnection();
List&lt;String&gt; cookies = connection.getHeaderFields().get("Set-Cookie");
// ...

// Then use the same cookies on all subsequent requests.
connection = new URL(url).openConnection();
for (String cookie : cookies) {
    connection.addRequestProperty("Cookie", cookie.split(";", 2)[0]);
}
// ...
</code></pre><p>The <code>split(";", 2)[0]</code> is there to get rid of cookie attributes which are irrelevant for the server side like <code>expires</code>, <code>path</code>, etc. Alternatively, you could also use <code>cookie.substring(0, cookie.indexOf(';'))</code> instead of <code>split()</code>.</p><p>The <a href="http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html" rel="nofollow noreferrer"><code>HttpURLConnection</code></a> will by default buffer the <em>entire</em> request body before actually sending it, regardless of whether you've set a fixed content length yourself using <code>connection.setRequestProperty("Content-Length", contentLength);</code>. This may cause <code>OutOfMemoryException</code>s whenever you concurrently send large POST requests (e.g. uploading files). To avoid this, you would like to set the <a href="http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html#setFixedLengthStreamingMode%28int%29" rel="nofollow noreferrer"><code>HttpURLConnection#setFixedLengthStreamingMode()</code></a>.</p><pre><code>httpConnection.setFixedLengthStreamingMode(contentLength);
</code></pre><p>But if the content length is really not known beforehand, then you can make use of chunked streaming mode by setting the <a href="http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html#setChunkedStreamingMode%28int%29" rel="nofollow noreferrer"><code>HttpURLConnection#setChunkedStreamingMode()</code></a> accordingly. This will set the HTTP <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.41" rel="nofollow noreferrer"><code>Transfer-Encoding</code></a> header to <code>chunked</code> which will force the request body being sent in chunks. The below example will send the body in chunks of 1KB.</p><pre><code>httpConnection.setChunkedStreamingMode(1024);
</code></pre><p>It can happen that a request returns an unexpected response, while it works fine with a real web browser. The server side is probably blocking requests based on the <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.43" rel="nofollow noreferrer"><code>User-Agent</code></a> request header. The <code>URLConnection</code> will by default set it to <code>Java/1.6.0_19</code> where the last part is obviously the JRE version. You can override this as follows:</p><pre><code>connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36"); // Do as if you're using Chrome 41 on Windows 7.
</code></pre><p>Use the User-Agent string from a <a href="http://www.useragentstring.com/pages/useragentstring.php" rel="nofollow noreferrer">recent browser</a>.</p><p>If the HTTP response code is <code>4nn</code> (Client Error) or <code>5nn</code> (Server Error), then you may want to read the <code>HttpURLConnection#getErrorStream()</code> to see if the server has sent any useful error information.</p><pre><code>InputStream error = ((HttpURLConnection) connection).getErrorStream();
</code></pre><p>If the HTTP response code is -1, then something went wrong with connection and response handling. The <code>HttpURLConnection</code> implementation is in older JREs somewhat buggy with keeping connections alive. You may want to turn it off by setting the <code>http.keepAlive</code> system property to <code>false</code>. You can do this programmatically in the beginning of your application by:</p><pre><code>System.setProperty("http.keepAlive", "false");
</code></pre><p>You'd normally use <a href="http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2" rel="nofollow noreferrer"><code>multipart/form-data</code></a> encoding for mixed POST content (binary and character data). The encoding is in more detail described in <a href="http://www.faqs.org/rfcs/rfc2388.html" rel="nofollow noreferrer">RFC2388</a>.</p><pre><code>String param = "value";
File textFile = new File("/path/to/file.txt");
File binaryFile = new File("/path/to/file.bin");
String boundary = Long.toHexString(System.currentTimeMillis()); // Just generate some unique random value.
String CRLF = "\r\n"; // Line separator required by multipart/form-data.
URLConnection connection = new URL(url).openConnection();
connection.setDoOutput(true);
connection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);

try (
    OutputStream output = connection.getOutputStream();
    PrintWriter writer = new PrintWriter(new OutputStreamWriter(output, charset), true);
) {
    // Send normal param.
    writer.append("--" + boundary).append(CRLF);
    writer.append("Content-Disposition: form-data; name=\"param\"").append(CRLF);
    writer.append("Content-Type: text/plain; charset=" + charset).append(CRLF);
    writer.append(CRLF).append(param).append(CRLF).flush();

    // Send text file.
    writer.append("--" + boundary).append(CRLF);
    writer.append("Content-Disposition: form-data; name=\"textFile\"; filename=\"" + textFile.getName() + "\"").append(CRLF);
    writer.append("Content-Type: text/plain; charset=" + charset).append(CRLF); // Text file itself must be saved in this charset!
    writer.append(CRLF).flush();
    Files.copy(textFile.toPath(), output);
    output.flush(); // Important before continuing with writer!
    writer.append(CRLF).flush(); // CRLF is important! It indicates end of boundary.

    // Send binary file.
    writer.append("--" + boundary).append(CRLF);
    writer.append("Content-Disposition: form-data; name=\"binaryFile\"; filename=\"" + binaryFile.getName() + "\"").append(CRLF);
    writer.append("Content-Type: " + URLConnection.guessContentTypeFromName(binaryFile.getName())).append(CRLF);
    writer.append("Content-Transfer-Encoding: binary").append(CRLF);
    writer.append(CRLF).flush();
    Files.copy(binaryFile.toPath(), output);
    output.flush(); // Important before continuing with writer!
    writer.append(CRLF).flush(); // CRLF is important! It indicates end of boundary.

    // End of multipart/form-data.
    writer.append("--" + boundary + "--").append(CRLF).flush();
}
</code></pre><p>If the other side is a <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html" rel="nofollow noreferrer"><code>HttpServlet</code></a>, then its <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29" rel="nofollow noreferrer"><code>doPost()</code></a> method will be called and the parts will be available by <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getPart%28java.lang.String%29" rel="nofollow noreferrer"><code>HttpServletRequest#getPart()</code></a> (note, thus <strong>not</strong> <code>getParameter()</code> and so on!). The <code>getPart()</code> method is however relatively new, it's introduced in Servlet 3.0 (Glassfish 3, Tomcat 7, etc). Prior to Servlet 3.0, your best choice is using <a href="http://commons.apache.org/fileupload" rel="nofollow noreferrer">Apache Commons FileUpload</a> to parse a <code>multipart/form-data</code> request. Also see <a href="http://stackoverflow.com/questions/2422468/upload-big-file-to-servlet/2424824#2424824">this answer</a> for examples of both the FileUpload and the Servelt 3.0 approaches.</p><p>Sometimes you need to connect a HTTPS URL, perhaps because you're writing a web scraper. In that case, you may likely face a <code>javax.net.ssl.SSLException: Not trusted server certificate</code> on some HTTPS sites who doesn't keep their SSL certificates up to date, or a <code>java.security.cert.CertificateException: No subject alternative DNS name matching [hostname] found</code> or <code>javax.net.ssl.SSLProtocolException: handshake alert: unrecognized_name</code> on some misconfigured HTTPS sites.</p><p>The following one-time-run <code>static</code> initializer in your web scraper class should make <code>HttpsURLConnection</code> more lenient as to those HTTPS sites and thus not throw those exceptions anymore.</p><pre><code>static {
    TrustManager[] trustAllCertificates = new TrustManager[] {
        new X509TrustManager() {
            @Override
            public X509Certificate[] getAcceptedIssuers() {
                return null; // Not relevant.
            }
            @Override
            public void checkClientTrusted(X509Certificate[] certs, String authType) {
                // Do nothing. Just allow them all.
            }
            @Override
            public void checkServerTrusted(X509Certificate[] certs, String authType) {
                // Do nothing. Just allow them all.
            }
        }
    };

    HostnameVerifier trustAllHostnames = new HostnameVerifier() {
        @Override
        public boolean verify(String hostname, SSLSession session) {
            return true; // Just allow them all.
        }
    };

    try {
        System.setProperty("jsse.enableSNIExtension", "false");
        SSLContext sc = SSLContext.getInstance("SSL");
        sc.init(null, trustAllCertificates, new SecureRandom());
        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
        HttpsURLConnection.setDefaultHostnameVerifier(trustAllHostnames);
    }
    catch (GeneralSecurityException e) {
        throw new ExceptionInInitializerError(e);
    }
}
</code></pre><p>The <a href="http://hc.apache.org/httpcomponents-client-ga/" rel="nofollow noreferrer">Apache HttpComponents HttpClient</a> is <em>much</em> more convenient in this all :)</p><p>If all you want is parsing and extracting data from HTML, then better use a HTML parser like <a href="http://jsoup.org" rel="nofollow noreferrer">Jsoup</a></p></body></html>

===ID===
584cbf703e2ca508e5f07176
===QUESTION===
What's the simplest way to print a Java array?
In Java, arrays don't override  toString() , so if you try to print one directly, you get weird output including the memory location: But usually we'd actually want something more like  [1, 2, 3, 4, 5] . What's the simplest way of doing that? Here are some example inputs and outputs: 
===LINK===
http://stackoverflow.com/questions/409784/whats-the-simplest-way-to-print-a-java-array
===KEYWORDS===
inputs java outputs directly simplest 
===ANSWER===
1397
<html><body><p>Since Java 5 you can use <code>Arrays.toString(arr)</code> or <code>Arrays.deepToString(arr)</code> for arrays within arrays. Note that the <code>Object[]</code> version calls <code>.toString()</code> on each object in the array. The output is even decorated in the exact way you're asking.</p><p>Examples:</p><pre><code>String[] array = new String[] {"John", "Mary", "Bob"};
System.out.println(Arrays.toString(array));
</code></pre><p>Output:</p><pre class="lang-none prettyprint-override"><code>[John, Mary, Bob]
</code></pre><pre><code>String[][] deepArray = new String[][] {{"John", "Mary"}, {"Alice", "Bob"}};
System.out.println(Arrays.toString(deepArray));
//output: [[Ljava.lang.String;@106d69c, [Ljava.lang.String;@52e922]
System.out.println(Arrays.deepToString(deepArray));
</code></pre><p>Output:</p><pre class="lang-none prettyprint-override"><code>[[John, Mary], [Alice, Bob]]
</code></pre><pre><code>double[] doubleArray = { 7.0, 9.0, 5.0, 1.0, 3.0 };
System.out.println(Arrays.toString(doubleArray));
</code></pre><p>Output:</p><pre class="lang-none prettyprint-override"><code>[7.0, 9.0, 5.0, 1.0, 3.0 ]
</code></pre><pre><code>int[] intArray = { 7, 9, 5, 1, 3 };
System.out.println(Arrays.toString(intArray));
</code></pre><p>Output:</p><pre class="lang-none prettyprint-override"><code>[7, 9, 5, 1, 3 ]
</code></pre></body></html>

===ID===
584cbf713e2ca508e5f07177
===QUESTION===
Generating random integers in a specific range
I am trying to generate a random  int value with Java, but in a specific range.  For example: My range is  5 - 10 , meaning that  5  is the smallest possible value and  10  is the biggest. Any other number in between these numbers is possible to be a value, too.  In Java, there is a method  random()  in the  Math  class, which returns a  double  value between  0.0  and  1.0 . In the class  Random  there is the method  nextInt(int n) , which returns a random  int  value in the range of  0  (inclusive) and  n  (exclusive). I couldn't find a method, which returns a random integer value between two numbers. I have tried the following things, but I still have problems:
(minimum and maximum are the smallest and biggest numbers). Solution 1: Problem: randomNum  can be bigger than  maximum . Solution 2: Problem: randomNum  can be smaller than  minimum . How do I solve these problems? I have tried also browsing through the archive and found: But I couldn't solve the problem. 
===LINK===
http://stackoverflow.com/questions/363681/generating-random-integers-in-a-specific-range
===KEYWORDS===
exclusive smaller inclusive int number 
===ANSWER===
2304
<html><body><p>In <strong>Java 1.7 or later</strong>, use the following <a href="http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadLocalRandom.html#nextInt-int-int-" rel="nofollow noreferrer">method</a>:</p><pre><code>import java.util.concurrent.ThreadLocalRandom;

// nextInt is normally exclusive of the top value,
// so add 1 to make it inclusive
ThreadLocalRandom.current().nextInt(min, max + 1);
</code></pre><p><strong>Before Java 1.7</strong>, the standard way to do this is as follows:</p><pre><code>import java.util.Random;

/**
 * Returns a pseudo-random number between min and max, inclusive.
 * The difference between min and max can be at most
 * &lt;code&gt;Integer.MAX_VALUE - 1&lt;/code&gt;.
 *
 * @param min Minimum value
 * @param max Maximum value.  Must be greater than min.
 * @return Integer between min and max, inclusive.
 * @see java.util.Random#nextInt(int)
 */
public static int randInt(int min, int max) {

    // NOTE: This will (intentionally) not run as written so that folks
    // copy-pasting have to think about how to initialize their
    // Random instance.  Initialization of the Random instance is outside
    // the main scope of the question, but some decent options are to have
    // a field that is initialized once and then re-used as needed or to
    // use ThreadLocalRandom (if using at least Java 1.7).
    Random rand;

    // nextInt is normally exclusive of the top value,
    // so add 1 to make it inclusive
    int randomNum = rand.nextInt((max - min) + 1) + min;

    return randomNum;
}
</code></pre><p>See <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Random.html#nextInt-int-" rel="nofollow noreferrer">the relevant JavaDoc</a>.  In practice, the <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Random.html" rel="nofollow noreferrer">java.util.Random</a> class is often preferable to <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#random--" rel="nofollow noreferrer">java.lang.Math.random()</a>.</p><p>In particular, there is no need to reinvent the random integer generation wheel when there is a straightforward API within the standard library to accomplish the task.</p></body></html>

===ID===
584cbf723e2ca508e5f07178
===QUESTION===
Is List<Dog> a subclass of List<Animal>? Why aren't Java's generics implicitly polymorphic?
I'm a bit confused about how Java generics handle inheritance / polymorphism. Assume the following hierarchy - Animal  (Parent) Dog  -  Cat  (Children) So suppose I have a method  doSomething(List<Animal> animals) . By all the rules of inheritance and polymorphism, I would assume that a  List<Dog>   is  a  List<Animal>  and a  List<Cat>   is  a  List<Animal>  - and so either one could be passed to this method. Not so. If I want to achieve this behavior, I have to explicitly tell the method to accept a list of any subset of Animal by saying  doSomething(List<? extends Animal> animals) .  I understand that this is Java's behavior. My question is  why ? Why is polymorphism generally implicit, but when it comes to generics it must be specified? 
===LINK===
http://stackoverflow.com/questions/2745265/is-listdog-a-subclass-of-listanimal-why-arent-javas-generics-implicitly-p
===KEYWORDS===
list<dog> list<animal> list<cat> list< list 
===ANSWER===
546
<html><body><p>No, a <code>List&lt;Dog&gt;</code> is <em>not</em> a <code>List&lt;Animal&gt;</code>. Consider what you can do with a <code>List&lt;Animal&gt;</code> - you can add <em>any</em> animal to it... including a cat. Now, can you logically add a cat to a litter of puppies? Absolutely not.</p><pre><code>// Illegal code - because otherwise life would be Bad
List&lt;Dog&gt; dogs = new ArrayList&lt;Dog&gt;(); // ArrayList implements List
List&lt;Animal&gt; animals = dogs; // Awooga awooga
animals.add(new Cat());
Dog dog = dogs.get(0); // This should be safe, right?
</code></pre><p>Suddenly you have a <em>very</em> confused cat.</p><p>Now, you <em>can't</em> add a <code>Cat</code> to a <code>List&lt;? extends Animal&gt;</code> because you don't know it's a <code>List&lt;Cat&gt;</code>. You can retrieve a value and know that it will be an <code>Animal</code>, but you can't add arbitrary animals. The reverse is true for <code>List&lt;? super Animal&gt;</code> - in that case you can add an <code>Animal</code> to it safely, but you don't know anything about what might be retrieved from it, because it could be a <code>List&lt;Object&gt;</code>.</p></body></html>

===ID===
584cbf723e2ca508e5f07179
===QUESTION===
What is a stack trace, and how can I use it to debug my application errors?
Sometimes when I run my application it gives me an error that looks like: People have referred to this as a "stack trace".  What is a stack trace?  What can it tell me about the error that's happening in my program? About this question - quite often I see a question come through where a novice programmer is "getting an error", and they simply paste their stack trace and some random block of code without understanding what the stack trace is or how they can use it. This question is intended as a reference for novice programmers who might need help understanding the value of a stack trace. 
===LINK===
http://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors
===KEYWORDS===
code run happening reference people 
===ANSWER===
331
<html><body><p>In simple terms, a <strong>stack trace</strong> is a list of the method calls that the application was in the middle of when an Exception was thrown.</p><p><strong>Simple Example</strong></p><p>With the example given in the question, we can determine exactly where the exception was thrown in the application. Let's have a look at the stack trace:</p><pre><code>Exception in thread "main" java.lang.NullPointerException
        at com.example.myproject.Book.getTitle(Book.java:16)
        at com.example.myproject.Author.getBookTitles(Author.java:25)
        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)
</code></pre><p>This is a very simple stack trace. If we start at the beginning of the list of "at ...", we can tell where our error happened. What we're looking for is the <strong>topmost</strong> method call that is part of our application. In this case, it's:</p><pre><code>at com.example.myproject.Book.getTitle(Book.java:16)
</code></pre><p>To debug this, we can open up <code>Book.java</code> and look at line <code>16</code>, which is:</p><pre><code>15   public String getTitle() {
16      System.out.println(title.toString());
17      return title;
18   }
</code></pre><p>This would indicate that something (probably <code>title</code>) is <code>null</code> in the above code.</p><p><strong>Example with a chain of exceptions</strong></p><p>Sometimes applications will catch an Exception and re-throw it as the cause of another Exception.  This typically looks like:</p><pre><code>34   public void getBookIds(int id) {
35      try {
36         book.getId(id);    // this method it throws a NullPointerException on line 22
37      } catch (NullPointerException e) {
38         throw new IllegalStateException("A book has a null property", e)
39      }
40   }
</code></pre><p>This might give you a stack trace that looks like:</p><pre><code>Exception in thread "main" java.lang.IllegalStateException: A book has a null property
        at com.example.myproject.Author.getBookIds(Author.java:38)
        at com.example.myproject.Bootstrap.main(Bootstrap.java:14)
Caused by: java.lang.NullPointerException
        at com.example.myproject.Book.getId(Book.java:22)
        at com.example.myproject.Author.getBookIds(Author.java:36)
        ... 1 more
</code></pre><p>What's different about this one is the "Caused by". Sometimes exceptions will have multiple "Caused by" sections. For these, you typically want to find the "root cause", which will be one of the lowest "Caused by" sections in the stack trace. In our case, it's:</p><pre><code>Caused by: java.lang.NullPointerException &lt;-- root cause
        at com.example.myproject.Book.getId(Book.java:22) &lt;-- important line
</code></pre><p>Again, with this exception we'd want to look at line <code>22</code> of <code>Book.java</code> to see what might cause the <code>NullPointerException</code> here.</p><p><strong>More daunting example with library code</strong></p><p>Usually stack traces are much more complex than the two examples above. Here's an example (it's a long one, but demonstrates several levels of chained exceptions):</p><pre><code>javax.servlet.ServletException: Something bad happened
    at com.example.myproject.OpenSessionInViewFilter.doFilter(OpenSessionInViewFilter.java:60)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.example.myproject.ExceptionHandlerFilter.doFilter(ExceptionHandlerFilter.java:28)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at com.example.myproject.OutputBufferFilter.doFilter(OutputBufferFilter.java:33)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157)
    at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388)
    at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
    at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)
    at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)
    at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:418)
    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
    at org.mortbay.jetty.Server.handle(Server.java:326)
    at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)
    at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943)
    at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)
    at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)
    at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)
    at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)
    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)
Caused by: com.example.myproject.MyProjectServletException
    at com.example.myproject.MyServlet.doPost(MyServlet.java:169)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
    at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)
    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)
    at com.example.myproject.OpenSessionInViewFilter.doFilter(OpenSessionInViewFilter.java:30)
    ... 27 more
Caused by: org.hibernate.exception.ConstraintViolationException: could not insert: [com.example.myproject.MyEntity]
    at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:96)
    at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
    at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:64)
    at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2329)
    at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2822)
    at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:71)
    at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:268)
    at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:321)
    at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:204)
    at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130)
    at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:210)
    at org.hibernate.event.def.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:56)
    at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:195)
    at org.hibernate.event.def.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:50)
    at org.hibernate.event.def.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:93)
    at org.hibernate.impl.SessionImpl.fireSave(SessionImpl.java:705)
    at org.hibernate.impl.SessionImpl.save(SessionImpl.java:693)
    at org.hibernate.impl.SessionImpl.save(SessionImpl.java:689)
    at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper.invoke(ThreadLocalSessionContext.java:344)
    at $Proxy19.save(Unknown Source)
    at com.example.myproject.MyEntityService.save(MyEntityService.java:59) &lt;-- relevant call (see notes below)
    at com.example.myproject.MyServlet.doPost(MyServlet.java:164)
    ... 32 more
Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]
    at org.hsqldb.jdbc.Util.throwError(Unknown Source)
    at org.hsqldb.jdbc.jdbcPreparedStatement.executeUpdate(Unknown Source)
    at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)
    at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:57)
    ... 54 more
</code></pre><p>In this example, there's a lot more. What we're mostly concerned about is looking for methods that are from <em>our code</em>, which would be anything in the <code>com.example.myproject</code> package. From the second example (above), we'd first want to look down for the root cause, which is:</p><pre><code>Caused by: java.sql.SQLException
</code></pre><p>However, all the method calls under that are library code. So we'll move up to the "Caused by" above it, and look for the first method call originating from our code, which is:</p><pre><code>at com.example.myproject.MyEntityService.save(MyEntityService.java:59)
</code></pre><p>Like in previous examples, we should look at <code>MyEntityService.java</code> on line <code>59</code>, because that's where this error originated (this one's a bit obvious what went wrong, since the SQLException states the error, but the debugging procedure is what we're after).</p></body></html>

===ID===
584cbf723e2ca508e5f0717a
===QUESTION===
How to use Servlets and Ajax?
I'm very new to web apps and Servlets and I have the following question: Whenever I print something inside the servlet and call it by the webbrowser, it returns a new page containing that text. Is there a way to print the text in the current page using Ajax? 
===LINK===
http://stackoverflow.com/questions/4112686/how-to-use-servlets-and-ajax
===KEYWORDS===
text servlets question ajax page 
===ANSWER===
392
<html><body><p>Indeed, the keyword is "ajax": <em>Asynchronous JavaScript and XML</em>. However, last years it's more than often <em>Asynchronous JavaScript and JSON</em>. Basically, you let JS execute an asynchronous HTTP request and update the HTML DOM tree based on the response data.</p><p>Since it's pretty a <a href="https://developer.mozilla.org/en-US/docs/AJAX/Getting_Started">tedious</a> work to make it to work across all browsers (especially Internet Explorer versus others), there are plenty of JavaScript libraries out which simplifies this in single functions and covers as many as possible browser-specific bugs/quirks under the hoods, such as <a href="http://jquery.com">jQuery</a>, <a href="http://www.prototypejs.org/">Prototype</a>, <a href="http://mootools.net/">Mootools</a>. Since jQuery is most popular these days, I'll use it in the below examples.</p><p>Create a <code>/some.jsp</code> like below (note: the code doesn't expect the JSP file being placed in a subfolder, if you do so, alter servlet URL accordingly):</p><pre class="lang-html prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
    &lt;head&gt;
        &lt;title&gt;SO question 4112686&lt;/title&gt;
        &lt;script src="http://code.jquery.com/jquery-latest.min.js"&gt;&lt;/script&gt;
        &lt;script&gt;
            $(document).on("click", "#somebutton", function() { // When HTML DOM "click" event is invoked on element with ID "somebutton", execute the following function...
                $.get("someservlet", function(responseText) {   // Execute Ajax GET request on URL of "someservlet" and execute the following function with Ajax response text...
                    $("#somediv").text(responseText);           // Locate HTML DOM element with ID "somediv" and set its text content with the response text.
                });
            });
        &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;button id="somebutton"&gt;press here&lt;/button&gt;
        &lt;div id="somediv"&gt;&lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>Create a servlet with a <code>doGet()</code> method which look like this:</p><pre class="lang-java prettyprint-override"><code>@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String text = "some text";

    response.setContentType("text/plain");  // Set content type of the response so that jQuery knows what it can expect.
    response.setCharacterEncoding("UTF-8"); // You want world domination, huh?
    response.getWriter().write(text);       // Write response body.
}
</code></pre><p>Map this servlet on an URL pattern of <code>/someservlet</code> or <code>/someservlet/*</code> as below (obviously, the URL pattern is free to your choice, but you'd need to alter the <code>someservlet</code> URL in JS code examples over all place accordingly):</p><pre class="lang-java prettyprint-override"><code>@WebServlet("/someservlet/*")
public class SomeServlet extends HttpServlet {
    // ...
}
</code></pre><p>Or, when you're not on a Servlet 3.0 compatible container yet (Tomcat 7, Glassfish 3, JBoss AS 6, etc or newer), then map it in <code>web.xml</code> the old fashioned way (see also <a href="http://stackoverflow.com/tags/servlets/info">our Servlets wiki page</a>):</p><pre class="lang-xml prettyprint-override"><code>&lt;servlet&gt;
    &lt;servlet-name&gt;someservlet&lt;/servlet-name&gt;
    &lt;servlet-class&gt;com.example.SomeServlet&lt;/servlet-class&gt;
&lt;/servlet&gt;
&lt;servlet-mapping&gt;
    &lt;servlet-name&gt;someservlet&lt;/servlet-name&gt;
    &lt;url-pattern&gt;/someservlet/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</code></pre><p>Now open the <a href="http://localhost:8080/context/test.jsp">http://localhost:8080/context/test.jsp</a> in the browser and press the button. You'll see that the content of the div get updated with the servlet response.</p><p>With <a href="http://www.hunlock.com/blogs/Mastering_JSON_%28_JavaScript_Object_Notation_%29">JSON</a> instead of plaintext as response format you can even get some steps further. It allows for more dynamics. First, you'd like to have a tool to convert between Java objects and JSON strings. There are plenty of them as well (see the bottom of <a href="http://json.org/">this page</a> for an overview). My personal favourite is <a href="http://code.google.com/p/google-gson/">Google Gson</a>. Download and put its JAR file in <code>/WEB-INF/lib</code> folder of your webapplication. </p><p>Here's an example which displays <code>List&lt;String&gt;</code> as <code>&lt;ul&gt;&lt;li&gt;</code>. The servlet:</p><pre class="lang-java prettyprint-override"><code>@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    List&lt;String&gt; list = new ArrayList&lt;&gt;();
    list.add("item1");
    list.add("item2");
    list.add("item3");
    String json = new Gson().toJson(list);

    response.setContentType("application/json");
    response.setCharacterEncoding("UTF-8");
    response.getWriter().write(json);
}
</code></pre><p>The JS code:</p><pre class="lang-js prettyprint-override"><code>$(document).on("click", "#somebutton", function() {  // When HTML DOM "click" event is invoked on element with ID "somebutton", execute the following function...
    $.get("someservlet", function(responseJson) {    // Execute Ajax GET request on URL of "someservlet" and execute the following function with Ajax response JSON...
        var $ul = $("&lt;ul&gt;").appendTo($("#somediv")); // Create HTML &lt;ul&gt; element and append it to HTML DOM element with ID "somediv".
        $.each(responseJson, function(index, item) { // Iterate over the JSON array.
            $("&lt;li&gt;").text(item).appendTo($ul);      // Create HTML &lt;li&gt; element, set its text content with currently iterated item and append it to the &lt;ul&gt;.
        });
    });
});
</code></pre><p>Do note that jQuery automatically parses the response as JSON and gives you directly a JSON object (<code>responseJson</code>) as function argument when you set the response content type to <code>application/json</code>. If you forget to set it or rely on a default of <code>text/plain</code> or <code>text/html</code>, then the <code>responseJson</code> argument wouldn't give you a JSON object, but a plain vanilla string and you'd need to manually fiddle around with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"><code>JSON.parse()</code></a> afterwards, which is thus totally unnecessary if you set the content type right in first place.</p><p>Here's another example which displays <code>Map&lt;String, String&gt;</code> as <code>&lt;option&gt;</code>:</p><pre class="lang-java prettyprint-override"><code>@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    Map&lt;String, String&gt; options = new LinkedHashMap&lt;&gt;();
    options.put("value1", "label1");
    options.put("value2", "label2");
    options.put("value3", "label3");
    String json = new Gson().toJson(options);

    response.setContentType("application/json");
    response.setCharacterEncoding("UTF-8");
    response.getWriter().write(json);
}
</code></pre><p>And the JSP:</p><pre class="lang-js prettyprint-override"><code>$(document).on("click", "#somebutton", function() {               // When HTML DOM "click" event is invoked on element with ID "somebutton", execute the following function...
    $.get("someservlet", function(responseJson) {                 // Execute Ajax GET request on URL of "someservlet" and execute the following function with Ajax response JSON...
        var $select = $("#someselect");                           // Locate HTML DOM element with ID "someselect".
        $select.find("option").remove();                          // Find all child elements with tag name "option" and remove them (just to prevent duplicate options when button is pressed again).
        $.each(responseJson, function(key, value) {               // Iterate over the JSON object.
            $("&lt;option&gt;").val(key).text(value).appendTo($select); // Create HTML &lt;option&gt; element, set its value with currently iterated key and its text content with currently iterated item and finally append it to the &lt;select&gt;.
        });
    });
});
</code></pre><p>with </p><pre class="lang-html prettyprint-override"><code>&lt;select id="someselect"&gt;&lt;/select&gt;
</code></pre><p>Here's an example which displays <code>List&lt;Product&gt;</code> in a <code>&lt;table&gt;</code> where the <code>Product</code> class has the properties <code>Long id</code>, <code>String name</code> and <code>BigDecimal price</code>. The servlet:</p><pre class="lang-java prettyprint-override"><code>@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    List&lt;Product&gt; products = someProductService.list();
    String json = new Gson().toJson(products);

    response.setContentType("application/json");
    response.setCharacterEncoding("UTF-8");
    response.getWriter().write(json);
}
</code></pre><p>The JS code:</p><pre class="lang-js prettyprint-override"><code>$(document).on("click", "#somebutton", function() {        // When HTML DOM "click" event is invoked on element with ID "somebutton", execute the following function...
    $.get("someservlet", function(responseJson) {          // Execute Ajax GET request on URL of "someservlet" and execute the following function with Ajax response JSON...
        var $table = $("&lt;table&gt;").appendTo($("#somediv")); // Create HTML &lt;table&gt; element and append it to HTML DOM element with ID "somediv".
        $.each(responseJson, function(index, product) {    // Iterate over the JSON array.
            $("&lt;tr&gt;").appendTo($table)                     // Create HTML &lt;tr&gt; element, set its text content with currently iterated item and append it to the &lt;table&gt;.
                .append($("&lt;td&gt;").text(product.id))        // Create HTML &lt;td&gt; element, set its text content with id of currently iterated product and append it to the &lt;tr&gt;.
                .append($("&lt;td&gt;").text(product.name))      // Create HTML &lt;td&gt; element, set its text content with name of currently iterated product and append it to the &lt;tr&gt;.
                .append($("&lt;td&gt;").text(product.price));    // Create HTML &lt;td&gt; element, set its text content with price of currently iterated product and append it to the &lt;tr&gt;.
        });
    });
});
</code></pre><p>Here's an example which does effectively the same as previous example, but then with XML instead of JSON. When using JSP as XML output generator you'll see that it's less tedious to code the table and all. JSTL is this way much more helpful as you can actually use it to iterate over the results and perform server side data formatting. The servlet:</p><pre class="lang-java prettyprint-override"><code>@Override
protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    List&lt;Product&gt; products = someProductService.list();

    request.setAttribute("products", products);
    request.getRequestDispatcher("/WEB-INF/xml/products.jsp").forward(request, response);
}
</code></pre><p>The JSP code (note: if you put the <code>&lt;table&gt;</code> in a <code>&lt;jsp:include&gt;</code>, it may be reusable elsewhere in a non-ajax response):</p><pre class="lang-xml prettyprint-override"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;%@page contentType="application/xml" pageEncoding="UTF-8"%&gt;
&lt;%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt;
&lt;%@taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %&gt;
&lt;data&gt;
    &lt;table&gt;
        &lt;c:forEach items="${products}" var="product"&gt;
            &lt;tr&gt;
                &lt;td&gt;${product.id}&lt;/td&gt;
                &lt;td&gt;&lt;c:out value="${product.name}" /&gt;&lt;/td&gt;
                &lt;td&gt;&lt;fmt:formatNumber value="${product.price}" type="currency" currencyCode="USD" /&gt;&lt;/td&gt;
            &lt;/tr&gt;
        &lt;/c:forEach&gt;
    &lt;/table&gt;
&lt;/data&gt;
</code></pre><p>The JS code:</p><pre class="lang-js prettyprint-override"><code>$(document).on("click", "#somebutton", function() {             // When HTML DOM "click" event is invoked on element with ID "somebutton", execute the following function...
    $.get("someservlet", function(responseXml) {                // Execute Ajax GET request on URL of "someservlet" and execute the following function with Ajax response XML...
        $("#somediv").html($(responseXml).find("data").html()); // Parse XML, find &lt;data&gt; element and append its HTML to HTML DOM element with ID "somediv".
    });
});
</code></pre><p>You can use jQuery <a href="https://api.jquery.com/serialize/"><code>$.serialize()</code></a> to easily ajaxify existing POST forms without fiddling around with collecting and passing the individual form input parameters. Assuming an existing form which works perfectly fine without JavaScript/jQuery (and thus degrades gracefully when enduser has JavaScript disabled):</p><pre class="lang-html prettyprint-override"><code>&lt;form id="someform" action="someservlet" method="post"&gt;
    &lt;input type="text" name="foo" /&gt;
    &lt;input type="text" name="bar" /&gt;
    &lt;input type="text" name="baz" /&gt;
    &lt;input type="submit" name="submit" value="Submit" /&gt;
&lt;/form&gt;
</code></pre><p>You can progressively enhance it with ajax as below:</p><pre class="lang-js prettyprint-override"><code>$(document).on("submit", "#someform", function(event) {
    var $form = $(this);

    $.post($form.attr("action"), $form.serialize(), function(response) {
        // ...
    });

    event.preventDefault(); // Important! Prevents submitting the form.
});
</code></pre><p>You can in the servlet distinguish between normal requests and ajax requests as below:</p><pre class="lang-java prettyprint-override"><code>@Override
protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String foo = request.getParameter("foo");
    String bar = request.getParameter("bar");
    String baz = request.getParameter("baz");

    boolean ajax = "XMLHttpRequest".equals(request.getHeader("X-Requested-With"));

    // ...

    if (ajax) {
        // Handle ajax (JSON or XML) response.
    } else {
        // Handle regular (JSP) response.
    }
}
</code></pre><p>The <a href="http://malsup.com/jquery/form/">jQuery Form plugin</a> does less or more the same as above jQuery example, but it has additional transparent support for <code>multipart/form-data</code> forms as required by file uploads.</p><p>If you don't have a form at all, but just wanted to interact with the servlet "in the background" whereby you'd like to POST some data, then you can use jQuery <a href="http://api.jquery.com/jquery.param/"><code>$.param()</code></a> to easily convert a JSON object to an URL-encoded query string.</p><pre class="lang-js prettyprint-override"><code>var params = {
    foo: "fooValue",
    bar: "barValue",
    baz: "bazValue"
};

$.post("someservlet", $.param(params), function(response) {
    // ...
});
</code></pre><p>The same <code>doPost()</code> method as shown here above can be reused. Do note that above syntax also works with <code>$.get()</code> in jQuery and <code>doGet()</code> in servlet.</p><p>If you however intend to send the JSON object as a whole instead of as individual request parameters for some reason, then you'd need to serialize it to a string using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"><code>JSON.stringify()</code></a> (not part of jQuery) and instruct jQuery to set request content type to <code>application/json</code> instead of (default) <code>application/x-www-form-urlencoded</code>. This can't be done via <code>$.post()</code> convenience function, but needs to be done via <code>$.ajax()</code> as below.</p><pre class="lang-js prettyprint-override"><code>var data = {
    foo: "fooValue",
    bar: "barValue",
    baz: "bazValue"
};

$.ajax({
    type: "POST",
    url: "someservlet",
    contentType: "application/json", // NOT dataType!
    data: JSON.stringify(data),
    success: function(response) {
        // ...
    }
});
</code></pre><p>Do note that a lot of starters mix <code>contentType</code> with <code>dataType</code>. The <code>contentType</code> represents the type of the <strong>request</strong> body. The <code>dataType</code> represents the (expected) type of the <strong>response</strong> body, which is usually unnecessary as jQuery already autodetects it based on response's <code>Content-Type</code> header.</p><p>Then, in order to process the JSON object in the servlet which isn't being sent as individual request parameters but as a JSON string the above way, you only need to fully parse the request body using a JSON tool instead of using <code>getParameter()</code> the usual way. Gson also supports this.</p><pre class="lang-java prettyprint-override"><code>JsonObject data = new Gson().fromJson(request.getReader(), JsonObject.class);
String foo = data.get("foo").getAsString();
String bar = data.get("bar").getAsString();
String baz = data.get("baz").getAsString();
// ...
</code></pre><p>Do note that this all is more clumsy than just using <code>$.param()</code>. Normally, you want to use <code>JSON.stringify()</code> only if the target service is e.g. a JAX-RS (RESTful) service which is only capable of consuming JSON strings and not regular request parameters.</p><p>Important to realize and understand is that any <code>sendRedirect()</code> and <code>forward()</code> call by the servlet on an ajax request would only forward or redirect <em>the ajax request itself</em> and not the main document/window where the ajax request originated. JavaScript/jQuery would in such case only retrieve the redirected/forwarded response as <code>responseText</code> variable in the callback function. If it represents a whole HTML page and not an ajax-specific XML or JSON response, then all you could do is to replace the current document with it.</p><pre><code>document.open();
document.write(responseText);
document.close();
</code></pre><p>Note that this doesn't change the URL as enduser sees in browser's address bar. So there are issues with bookmarkability. Therefore, it's much better to just return an "instruction" to redirect to JavaScript/jQuery instead of the whole redirected page itself. E.g. by returning a boolean, or an URL.</p><pre><code>String redirectURL = "http://example.com";

Map&lt;String, String&gt; data = new HashMap&lt;&gt;();
data.put("redirect", redirectURL);
String json = new Gson().toJson(data);

response.setContentType("application/json");
response.setCharacterEncoding("UTF-8");
response.getWriter().write(json);
</code></pre><p></p><pre><code>function(responseJson) {
    if (responseJson.redirect) {
        window.location = responseJson.redirect;
        return;
    }

    // ...
}
</code></pre></body></html>

===ID===
584cbf733e2ca508e5f0717b
===QUESTION===
Java GUI listeners without AWT
I am a starting Java developer, learning just from internet tutorials. I am learning full screen GUI applications. I was told yesterday that I shouldn't use AWT in my programs, because it is outdated. I already know about light and heavyweight components, the main problem is the mouse and keyboard listeners. 
Why is AWT outdated?
How to make a program without AWT (adding listeners to JComponents etc) (what kind of Swing things can replace the AWT)? 
===LINK===
http://stackoverflow.com/questions/6255106/java-gui-listeners-without-awt
===KEYWORDS===
kind programs light make awt 
===ANSWER===
34
<html><body><p>You're mis-interpreting the information given to you. You should avoid using Swing components with AWT <strong>components</strong>. It's OK to use Swing with the AWT listener structure, layout managers, etc. and in fact it's impossible not to.</p></body></html>

===ID===
584cbf743e2ca508e5f0717c
===QUESTION===
How to fix java.lang.UnsupportedClassVersionError: Unsupported major.minor version
I am trying to use  Notepad++  as my all-in-one tool edit, run, compile, etc. I have  JRE  installed, and I have setup my path variable to the .../bin directory. When I run my "Hello world" in Notepad++, I get this message: I think the problem here is about versions; some version of Java may be old or too new. 
===LINK===
http://stackoverflow.com/questions/10382929/how-to-fix-java-lang-unsupportedclassversionerror-unsupported-major-minor-versi
===KEYWORDS===
lang java run versions setup 
===ANSWER===
1471
<html><body><p>The version number shown describes the version of the JRE the class file is compatible with.</p><p>The reported major numbers are:</p><pre class="lang-none prettyprint-override"><code>Java SE 9 = 53,
Java SE 8 = 52,
Java SE 7 = 51,
Java SE 6.0 = 50,
Java SE 5.0 = 49,
JDK 1.4 = 48,
JDK 1.3 = 47,
JDK 1.2 = 46,
JDK 1.1 = 45
</code></pre><p>(Source: <a href="https://en.wikipedia.org/wiki/Java_class_file#General_layout">Wikipedia</a>)</p><p>To fix the actual problem you should try to either run the Java code with a newer version of Java JRE or specify the target parameter to the Java compiler to instruct the compiler to create code compatible with earlier Java versions. </p><p>For example, in order to generate class files compatible with Java 1.4, use the following command line:</p><pre class="lang-none prettyprint-override"><code>javac -target 1.4 HelloWorld.java
</code></pre><p>With newer versions of the Java compiler you are likely to get a warning about the bootstrap class path not being set. More information about this error is available in blog post <em><a href="https://blogs.oracle.com/darcy/entry/bootclasspath_older_source">New javac warning for setting an older source without bootclasspath</a></em>.</p></body></html>

===ID===
584cbf743e2ca508e5f0717d
===QUESTION===
How do servlets work? Instantiation, sessions, shared variables and multithreading
Suppose, I have a webserver which holds numerous servlets. For information passing among those servlets I am setting session and instance variables. Now, if 2 or more users send request to this server then what happens to the session variables? Will they all be common for all the users or they will be different for each user. If they are different, then how was the server able to differentiate between different users? One more similar question, if there are  n  users accessing a particular servlet, then this servlet gets instantiated only the first time the first user accessed it or does it get instantiated for all the users separately? In other words, what happens to the instance variables? 
===LINK===
http://stackoverflow.com/questions/3106452/how-do-servlets-work-instantiation-sessions-shared-variables-and-multithreadi
===KEYWORDS===
instantiation users sessions instantiated servlets 
===ANSWER===
1319
<html><body><p>When the servletcontainer (like <a href="http://tomcat.apache.org" rel="nofollow noreferrer">Apache Tomcat</a>) starts up, it will deploy and load all webapplications. When a webapplication get loaded, the servletcontainer will create the <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html" rel="nofollow noreferrer"><code>ServletContext</code></a> once and keep in server's memory. The webapp's <code>web.xml</code> will be parsed and every <code>&lt;servlet&gt;</code>, <code>&lt;filter&gt;</code> and <code>&lt;listener&gt;</code> found in <code>web.xml</code>, or annotated with respectively <code>@WebServlet</code>, <code>@WebFilter</code> and <code>@WebListener</code>, will be created once and kept in server's memory as well. For all filters, the <code>init()</code> method will also be invoked immediately. When the servletcontainer shuts down, it will unload all webapplications, invoke the <code>destroy()</code> of all initialized servlets and filters, and finally the <code>ServletContext</code> and all <code>Servlet</code>, <code>Filter</code> and <code>Listener</code> instances will be trashed.</p><p>When the <code>Servlet</code> in question has a <code>&lt;servlet&gt;&lt;load-on-startup&gt;</code> or <code>@WebServlet(loadOnStartup)</code> value greater than <code>0</code>, then its <code>init()</code> method will also immediately be invoked during startup. Those servlets are initialized in the same order as "load-on-startup" value represents, or if they are the same, then the order in the <code>web.xml</code> or <code>@WebServlet</code> classloading. Or, if the "load-on-startup" value is absent, then the <code>init()</code> method will only be invoked on very first HTTP request hitting the servlet in question. </p><p>The servletcontainer is attached to a webserver which listens on HTTP requests on a certain port number, which is usually 8080 in development and 80 in production. When a client (user with a webbrowser) sends a HTTP request, the servletcontainer will create new <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html" rel="nofollow noreferrer"><code>HttpServletRequest</code></a> and <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletResponse.html" rel="nofollow noreferrer"><code>HttpServletResponse</code></a> objects and pass it through the methods of the already-created <code>Filter</code> and <code>Servlet</code> instances whose <code>url-pattern</code> matches the request URL, all in the same thread. </p><p>In case of <a href="http://stackoverflow.com/tags/servlet-filters/info">filters</a>, the <code>doFilter()</code> method will be invoked. When its code calls <code>chain.doFilter(request, response)</code>, then the request and response will continue to the next filter, or if there is none, hit the servlet. In case of <a href="http://stackoverflow.com/tags/servlets/info">servlets</a>, the <code>service()</code> method will be invoked, which by default determines based on <code>request.getMethod()</code> which one of the <code>doXxx()</code> methods to invoke. If such method is absent on the actual servlet, then it will return HTTP 405 error. </p><p>The request object provides access to all information of the HTTP request, such as the request headers and the request body. The response object provides facility to control and send the HTTP response the way you want, such as setting headers and the body (usually with HTML content from a JSP file). When the HTTP response is committed and finished, then both the request and response objects will be trashed (actually, most containers will cleanup the state and recycle the instance for reuse).</p><p>When a client visits the webapp for the first time and/or the <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html" rel="nofollow noreferrer"><code>HttpSession</code></a> is to be obtained for the first time by <code>request.getSession()</code>, then the servletcontainer will create a new <code>HttpSession</code> object, generate a long and unique ID (which you can get by <code>session.getId()</code>), and store it in server's memory. The servletcontainer will also set a <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/Cookie.html" rel="nofollow noreferrer"><code>Cookie</code></a> in the <code>Set-Cookie</code> header of the HTTP response with <code>JSESSIONID</code> as cookie name and the unique session ID as cookie value. </p><p>As per the <a href="http://www.faqs.org/rfcs/rfc2965.html" rel="nofollow noreferrer">HTTP cookie specification</a> (a contract a decent webbrowser and webserver has to adhere), the client (the webbrowser) is required to send this cookie back in the subsequent requests in the <code>Cookie</code> header as long as the cookie is valid (i.e. is not expired and has the right domain and path). Using browser builtin HTTP traffic monitor you can check them (press F12 in Chrome / Firefox23+ / IE9+ and check <em>Net/Network</em> tab). The servletcontainer will determine the <code>Cookie</code> header of every incoming HTTP request for the presence of the cookie with the name <code>JSESSIONID</code> and use its value (the session ID) to get the associated <code>HttpSession</code> from server's memory.</p><p>The <code>HttpSession</code> lives until it has not been used for more than the <code>&lt;session-timeout&gt;</code> time, a setting you can specify in <code>web.xml</code>, which defaults to 30 minutes. So when the client doesn't visit the webapp anymore for over 30 minutes, then the servletcontainer will trash the session. Every subsequent request, even though with the cookie specified, will not have access to the same session anymore. The servletcontainer will create a new one. </p><p>On the other hand, the session cookie on the client side has a default lifetime which is as long as the browser instance is running. So when the client closes the browser instance (all tabs/windows), then the session will be trashed at the client side. In a new browser instance the cookie associated with the session won't be sent anymore. A new <code>request.getSession()</code> would return a brand new <code>HttpSession</code> and set a cookie with a brand new session ID.</p><p>That said, your major concern is possibly <em>threadsafety</em>. You should now have learnt that Servlets and filters are shared among all requests. That's the nice thing of Java, it's multithreaded and different threads (read: HTTP requests) can make use of the same instance. It would otherwise have been too expensive to recreate, <code>init()</code> and <code>destroy()</code> it on every single request.</p><p>But you should also realize that you should <strong>never</strong> assign any request or session scoped data as an <em>instance</em> variable of a servlet or filter. It will be shared among all other requests in other sessions. That's <em>threadunsafe</em>! The below example illustrates that:</p><pre><code>public class ExampleServlet extends HttpServlet {

    private Object thisIsNOTThreadSafe;

    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        Object thisIsThreadSafe;

        thisIsNOTThreadSafe = request.getParameter("foo"); // BAD!! Shared among all requests!
        thisIsThreadSafe = request.getParameter("foo"); // OK, this is thread safe.
    } 
}
</code></pre></body></html>

===ID===
584cbf753e2ca508e5f0717e
===QUESTION===
Java String.equals versus == [duplicate]
This question already has an answer here: This code separates a string into tokens and stores them in an array of strings, and then compares a variable with the first home ... why isn't it working? 
===LINK===
http://stackoverflow.com/questions/767372/java-string-equals-versus
===KEYWORDS===
stores string working question tokens 
===ANSWER===
416
<html><body><p>Use the <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#equals-java.lang.Object-" rel="nofollow noreferrer"><code>string.equals(Object other)</code></a> function to compare strings, not the <code>==</code> operator.</p><p>The function checks the actual contents of the string, the <code>==</code> operator checks whether the references to the objects are equal.  Note that string constants are usually "interned" such that two constants with the same value can actually be compared with <code>==</code>, but it's better not to rely on that.</p><pre><code>if (usuario.equals(datos[0])) {
    ...
}
</code></pre><p>NB: the compare is done on 'usuario' because that's guaranteed non-null in your code, although you should still check that you've actually got some tokens in the <code>datos</code> array otherwise you'll get an array-out-of-bounds exception.</p></body></html>

===ID===
584cbf753e2ca508e5f0717f
===QUESTION===
Why is it faster to process a sorted array than an unsorted array?
Here is a piece of C++ code that seems very peculiar. For some strange reason, sorting the data miraculously makes the code almost six times faster. Initially, I thought this might be just a language or compiler anomaly. So I tried it in Java. With a somewhat similar but less extreme result. My first thought was that sorting brings the data into the cache, but then I thought how silly that is because the array was just generated. 
===LINK===
http://stackoverflow.com/questions/11227809/why-is-it-faster-to-process-a-sorted-array-than-an-unsorted-array
===KEYWORDS===
sorting java faster language initially 
===ANSWER===
22374
<html><body><p><strong>You are a victim of <a href="//en.wikipedia.org/wiki/Branch_predictor" rel="nofollow noreferrer">branch prediction</a> fail.</strong></p><p>Consider a railroad junction:</p><p><a href="//commons.wikimedia.org/wiki/File:Entroncamento_do_Transpraia.JPG" rel="nofollow noreferrer"><img alt="" src="//i.stack.imgur.com/muxnt.jpg"/></a>
<sub><a href="//commons.wikimedia.org/wiki/File:Entroncamento_do_Transpraia.JPG" rel="nofollow noreferrer">Image</a> by Mecanismo, via Wikimedia Commons. Used under the <a href="//creativecommons.org/licenses/by-sa/3.0/deed.en" rel="nofollow noreferrer">CC-By-SA 3.0</a> license.</sub></p><p>Now for the sake of argument, suppose this is back in the 1800s - before long distance or radio communication.</p><p>You are the operator of a junction and you hear a train coming. You have no idea which way it is supposed to go. You stop the train to ask the driver which direction they want. And then you set the switch appropriately.</p><p><em>Trains are heavy and have a lot of inertia. So they take forever to start up and slow down.</em></p><p>Is there a better way? You guess which direction the train will go!</p><p><strong>If you guess right every time</strong>, the train will never have to stop.<br>
<strong>If you guess wrong too often</strong>, the train will spend a lot of time stopping, backing up, and restarting.</br></p><p><strong>Consider an if-statement:</strong> At the processor level, it is a branch instruction:</p><p><img alt="enter image description here" src="//i.stack.imgur.com/pyfwC.png"/></p><p>You are a processor and you see a branch. You have no idea which way it will go. What do you do? You halt execution and wait until the previous instructions are complete. Then you continue down the correct path.</p><p><em>Modern processors are complicated and have long pipelines. So they take forever to "warm up" and "slow down".</em></p><p>Is there a better way? You guess which direction the branch will go!</p><p><strong>If you guess right every time</strong>, the execution will never have to stop.<br>
<strong>If you guess wrong too often</strong>, you spend a lot of time stalling, rolling back, and restarting.</br></p><p>This is branch prediction. I admit it's not the best analogy since the train could just signal the direction with a flag. But in computers, the processor doesn't know which direction a branch will go until the last moment.</p><p>So how would you strategically guess to minimize the number of times that the train must back up and go down the other path? You look at the past history! If the train goes left 99% of the time, then you guess left. If it alternates, then you alternate your guesses. If it goes one way every 3 times, you guess the same...</p><p><strong><em>In other words, you try to identify a pattern and follow it.</em></strong> This is more or less how branch predictors work.</p><p>Most applications have well-behaved branches. So modern branch predictors will typically achieve &gt;90% hit rates. But when faced with unpredictable branches with no recognizable patterns, branch predictors are virtually useless.</p><p>Further reading: <a href="//en.wikipedia.org/wiki/Branch_predictor" rel="nofollow noreferrer">"Branch predictor" article on Wikipedia</a>.</p><pre><code>if (data[c] &gt;= 128)
    sum += data[c];
</code></pre><p>Notice that the data is evenly distributed between 0 and 255. 
When the data is sorted, roughly the first half of the iterations will not enter the if-statement. After that, they will all enter the if-statement.</p><p>This is very friendly to the branch predictor since the branch consecutively goes the same direction many times.
Even a simple saturating counter will correctly predict the branch except for the few iterations after it switches direction.</p><p><strong>Quick visualization:</strong></p><pre><code>T = branch taken
N = branch not taken

data[] = 0, 1, 2, 3, 4, ... 126, 127, 128, 129, 130, ... 250, 251, 252, ...
branch = N  N  N  N  N  ...   N    N    T    T    T  ...   T    T    T  ...

       = NNNNNNNNNNNN ... NNNNNNNTTTTTTTTT ... TTTTTTTTTT  (easy to predict)
</code></pre><p>However, when the data is completely random, the branch predictor is rendered useless because it can't predict random data.
Thus there will probably be around 50% misprediction. (no better than random guessing)</p><pre><code>data[] = 226, 185, 125, 158, 198, 144, 217, 79, 202, 118,  14, 150, 177, 182, 133, ...
branch =   T,   T,   N,   T,   T,   T,   T,  N,   T,   N,   N,   T,   T,   T,   N  ...

       = TTNTTTTNTNNTTTN ...   (completely random - hard to predict)
</code></pre><p><strong>So what can be done?</strong></p><p>If the compiler isn't able to optimize the branch into a conditional move, you can try some hacks if you are willing to sacrifice readability for performance.</p><p>Replace:</p><pre><code>if (data[c] &gt;= 128)
    sum += data[c];
</code></pre><p>with:</p><pre><code>int t = (data[c] - 128) &gt;&gt; 31;
sum += ~t &amp; data[c];
</code></pre><p>This eliminates the branch and replaces it with some bitwise operations.</p><p><sub>(Note that this hack is not strictly equivalent to the original if-statement. But in this case, it's valid for all the input values of <code>data[]</code>.)</sub></p><p><strong>Benchmarks: Core i7 920 @ 3.5 GHz</strong></p><p>C++ - Visual Studio 2010 - x64 Release</p><pre><code>//  Branch - Random
seconds = 11.777

//  Branch - Sorted
seconds = 2.352

//  Branchless - Random
seconds = 2.564

//  Branchless - Sorted
seconds = 2.587
</code></pre><p>Java - Netbeans 7.1.1 JDK 7 - x64</p><pre><code>//  Branch - Random
seconds = 10.93293813

//  Branch - Sorted
seconds = 5.643797077

//  Branchless - Random
seconds = 3.113581453

//  Branchless - Sorted
seconds = 3.186068823
</code></pre><p>Observations:</p><p>A general rule of thumb is to avoid data-dependent branching in critical loops. (such as in this example)</p><p><strong>Update :</strong></p><p>GCC 4.6.1 with <code>-O3</code> or <code>-ftree-vectorize</code> on x64 is able to generate a conditional move. So there is no difference between the sorted and unsorted data - both are fast.</p><p>VC++ 2010 is unable to generate conditional moves for this branch even under <code>/Ox</code>.</p><p>Intel Compiler 11 does something miraculous. It <a href="//en.wikipedia.org/wiki/Loop_interchange" rel="nofollow noreferrer">interchanges the two loops</a>, thereby hoisting the unpredictable branch to the outer loop. So not only is it immune the mispredictions, it is also twice as fast as whatever VC++ and GCC can generate! In other words, ICC took advantage of the test-loop to defeat the benchmark...</p><p>If you give the Intel Compiler the branchless code, it just out-right vectorizes it... and is just as fast as with the branch (with the loop interchange).</p><p>This goes to show that even mature modern compilers can vary wildly in their ability to optimize code...</p></body></html>

===ID===
584cbf763e2ca508e5f07180
===QUESTION===
Why use getters and setters?
What's the advantage of using getters and setters - that only get and set - instead of simply using public fields for those variables? If getters and setters are ever doing more than just the simple get/set, I can figure this one out very quickly, but I'm not 100% clear on how: is any worse than: Whereas the former takes a lot less boilerplate code. 
 Compiling the list up here at the top of what seemed winners to me, from the viewpoint of a Java web dev: 
===LINK===
http://stackoverflow.com/questions/1568091/why-use-getters-and-setters
===KEYWORDS===
takes set figure advantage simple 
===ANSWER===
550
<html><body><p><strong>There are actually <em>many good reasons</em> to consider using accessors</strong> rather than directly exposing fields of a class - beyond just the argument of encapsulation and making future changes easier. </p><p><em>Here are the some of the reasons I am aware of:</em></p></body></html>

===ID===
584cbf773e2ca508e5f07181
===QUESTION===
Java string to date conversion
Can somebody recommend the best way to convert a string in the format 'January 2, 2010' to a date in java?  Ultimately, I want to break out the month, the day, and the year as integers so that I can use: to convert the date into time. 
===LINK===
http://stackoverflow.com/questions/4216745/java-string-to-date-conversion
===KEYWORDS===
integers convert java string format 
===ANSWER===
1078
<html><body><p>Don't do it, that's the hard way.  Moreover, those setter methods of <code>java.util.Date</code> are deprecated since Java 1.1 (1997). <a href="http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html">Simply format date using <code>SimpleDateFormat</code> using a format pattern matching the input string</a>.</p><p>In your specific case of "January 2, 2010" as input string, "January" is the full text month, so use <code>MMMM</code> pattern for it, "2" is the short day-of-month, so use <code>d</code> pattern for it, "2010" is the 4-digit year, so use <code>yyyy</code> pattern for it.</p><pre><code>String string = "January 2, 2010";
DateFormat format = new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH);
Date date = format.parse(string);
System.out.println(date); // Sat Jan 02 00:00:00 GMT 2010
</code></pre><p>Note the importance of explicit <code>Locale</code> argument. If you omit it, then it will use the <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#getDefault--">default locale</a> which is not necessarily English as used in the month name of the input string. If the locale doesn't match with the input string, then you would confusingly get a <code>java.text.ParseException</code> even though when the format pattern seems valid.</p><p>Here's an extract of relevance from <a href="http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html">the javadoc</a>, listing all available format patterns:</p><pre class="lang-none prettyprint-override"><code>Letter  Date or Time Component  Presentation        Examples
------  ----------------------  ------------------  -------------------------------------
G       Era designator          Text                AD
y       Year                    Year                1996; 96
Y       Week year               Year                2009; 09
M/L     Month in year           Month               July; Jul; 07
w       Week in year            Number              27
W       Week in month           Number              2
D       Day in year             Number              189
d       Day in month            Number              10
F       Day of week in month    Number              2
E       Day in week             Text                Tuesday; Tue
u       Day number of week      Number              1
a       Am/pm marker            Text                PM
H       Hour in day (0-23)      Number              0
k       Hour in day (1-24)      Number              24
K       Hour in am/pm (0-11)    Number              0
h       Hour in am/pm (1-12)    Number              12
m       Minute in hour          Number              30
s       Second in minute        Number              55
S       Millisecond             Number              978
z       Time zone               General time zone   Pacific Standard Time; PST; GMT-08:00
Z       Time zone               RFC 822 time zone   -0800
X       Time zone               ISO 8601 time zone  -08; -0800; -08:00
</code></pre><p>Note that the patterns are case sensitive and that text based patterns of 4 characters or more represents the full form, otherwise a short or abbreviated form is used if available. So e.g. <code>MMMMM</code> or more is unnecessary.</p><p>Here are some examples of valid <code>SimpleDateFormat</code> patterns to parse a given string to date:</p><pre class="lang-none prettyprint-override"><code>Input string                            Pattern
------------------------------------    ----------------------------
2001.07.04 AD at 12:08:56 PDT           yyyy.MM.dd G 'at' HH:mm:ss z
Wed, Jul 4, '01                         EEE, MMM d, ''yy
12:08 PM                                h:mm a
12 o'clock PM, Pacific Daylight Time    hh 'o''clock' a, zzzz
0:08 PM, PDT                            K:mm a, z
02001.July.04 AD 12:08 PM               yyyyy.MMMM.dd GGG hh:mm aaa
Wed, 4 Jul 2001 12:08:56 -0700          EEE, d MMM yyyy HH:mm:ss Z
010704120856-0700                       yyMMddHHmmssZ
2001-07-04T12:08:56.235-0700            yyyy-MM-dd'T'HH:mm:ss.SSSZ
2001-07-04T12:08:56.235-07:00           yyyy-MM-dd'T'HH:mm:ss.SSSXXX
2001-W27-3                              YYYY-'W'ww-u
</code></pre><p>Important note is that <code>SimpleDateFormat</code> is <strong>not</strong> thread safe. In other words, you should never declare and assign it as a static or instance variable and then reuse from different methods/threads. You should always create it brand new within the method local scope.</p><p>If you happen to be on Java 8 already, then use <a href="https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html"><code>DateTimeFormatter</code></a> (also here, click the link to see all predefined formatters and available format patterns; <a href="https://docs.oracle.com/javase/tutorial/datetime/iso/format.html">the tutorial is available here</a>). This new API is inspired by <a href="http://www.joda.org/joda-time/">JodaTime</a>.</p><pre><code>String string = "January 2, 2010";
DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MMMM d, yyyy", Locale.ENGLISH);
LocalDate date = LocalDate.parse(string, formatter);
System.out.println(date); // 2010-01-02
</code></pre><p>Note: if your format pattern happens to contain the time part as well, then use <a href="https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-"><code>LocalDateTime#parse(text, formatter)</code></a> instead of <a href="https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-"><code>LocalDate#parse(text, formatter)</code></a>. And, if your format pattern happens to contain the time zone as well, then use <a href="https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-"><code>ZonedDateTime#parse(text, formatter)</code></a> instead.</p><p>Here's an extract of relevance from <a href="https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html">the javadoc</a>, listing all available format patterns:</p><pre class="lang-none prettyprint-override"><code>Symbol  Meaning                     Presentation  Examples
------  --------------------------  ------------  ----------------------------------------------
G       era                         text          AD; Anno Domini; A
u       year                        year          2004; 04
y       year-of-era                 year          2004; 04
D       day-of-year                 number        189
M/L     month-of-year               number/text   7; 07; Jul; July; J
d       day-of-month                number        10

Q/q     quarter-of-year             number/text   3; 03; Q3; 3rd quarter
Y       week-based-year             year          1996; 96
w       week-of-week-based-year     number        27
W       week-of-month               number        4
E       day-of-week                 text          Tue; Tuesday; T
e/c     localized day-of-week       number/text   2; 02; Tue; Tuesday; T
F       week-of-month               number        3

a       am-pm-of-day                text          PM
h       clock-hour-of-am-pm (1-12)  number        12
K       hour-of-am-pm (0-11)        number        0
k       clock-hour-of-am-pm (1-24)  number        0

H       hour-of-day (0-23)          number        0
m       minute-of-hour              number        30
s       second-of-minute            number        55
S       fraction-of-second          fraction      978
A       milli-of-day                number        1234
n       nano-of-second              number        987654321
N       nano-of-day                 number        1234000000

V       time-zone ID                zone-id       America/Los_Angeles; Z; -08:30
z       time-zone name              zone-name     Pacific Standard Time; PST
O       localized zone-offset       offset-O      GMT+8; GMT+08:00; UTC-08:00;
X       zone-offset 'Z' for zero    offset-X      Z; -08; -0830; -08:30; -083015; -08:30:15;
x       zone-offset                 offset-x      +0000; -08; -0830; -08:30; -083015; -08:30:15;
Z       zone-offset                 offset-Z      +0000; -0800; -08:00;
</code></pre><p>Do note that it has several <a href="https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#predefined">predefined formatters</a> for the more popular patterns. So instead of e.g. <code>DateTimeFormatter.ofPattern("EEE, d MMM yyyy HH:mm:ss Z", Locale.ENGLISH);</code>, you could use <code>DateTimeFormatter.RFC_1123_DATE_TIME</code>. This is possible because they are, on the contrary to <code>SimpleDateFormat</code>, thread safe. You could thus also define your own, if necessary.</p><p>For particular input string format, you don't need to use an explicit <code>DateTimeFormatter</code>: a standard <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> date, like 2016-09-26T17:44:57Z,  can be parsed directly with <a href="https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-"><code>LocalDateTime#parse(text)</code></a> as it already uses the <a href="https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE_TIME"><code>ISO_LOCAL_DATE_TIME</code></a> formatter. Similarly, <a href="https://docs.oracle.com/javase/8/docs/api/java/time/LocalDate.html#parse-java.lang.CharSequence-"><code>LocalDate#parse(text)</code></a> parses a ISO date without the time component (see <a href="https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE"><code>ISO_LOCAL_DATE</code></a>), and <a href="https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-"><code>ZonedDateTime#parse(text)</code></a> parses an ISO date with an offset and time zone added (see <a href="https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html#ISO_ZONED_DATE_TIME"><code>ISO_ZONED_DATE_TIME</code></a>).</p></body></html>

===ID===
584cbf773e2ca508e5f07182
===QUESTION===
Why is my Spring @Autowired field null?
Note: This is intended to be a canonical answer for a common problem. I have a Spring  @Service  class ( MileageFeeCalculator ) that has an  @Autowired  field ( rateService ), but the field is  null  when I try to use it. The logs show that both the  MileageFeeCalculator  bean and the  MileageRateService  bean are being created, but I get a  NullPointerException  whenever I try to call the  mileageCharge  method on my service bean. Why isn't Spring autowiring the field? Controller class: Service class: Service bean that should be autowired in  MileageFeeCalculator  but it isn't: When I try to  GET /mileage/3 , I get this exception: 
===LINK===
http://stackoverflow.com/questions/19896870/why-is-my-spring-autowired-field-null
===KEYWORDS===
exception intended created mileagefeecalculator autowired 
===ANSWER===
321
<html><body><p>The field annotated <code>@Autowired</code> is <code>null</code> because Spring doesn't know about the copy of <code>MileageFeeCalculator</code> that you created with <code>new</code> and didn't know to autowire it.</p><p><a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/beans.html">The Spring Inversion of Control (IoC) container</a> has three main logical components: a registry (called the <code>ApplicationContext</code>) of components (beans) that are available to be used by the application, a configurer system that injects objects' dependencies into them by matching up the dependencies with beans in the context, and a dependency solver that can look at a configuration of many different beans and determine how to instantiate and configure them in the necessary order.</p><p>The IoC container isn't magic, and it has no way of knowing about Java objects unless you somehow inform it of them. When you call <code>new</code>, the JVM instantiates a copy of the new object and hands it straight to you--it never goes through the configuration process. There are three ways that you can get your beans configured.</p><p>I have posted all of this code, using Spring Boot to launch, at <a href="https://github.com/chrylis/spring_autowired_npe_example">this GitHub project</a>; you can look at a full running project for each approach to see everything you need to make it work. <strong>Tag with the <code>NullPointerException</code>: <a href="https://github.com/chrylis/spring_autowired_npe_example/tree/nonworking"><code>nonworking</code></a></strong></p><p>The most preferable option is to let Spring autowire all of your beans; this requires the least amount of code and is the most maintainable. To make the autowiring work like you wanted, also autowire the <code>MileageFeeCalculator</code> like this:</p><pre><code>@Controller
public class MileageFeeController {

    @Autowired
    private MileageFeeCalculator calc;

    @RequestMapping("/mileage/{miles}")
    @ResponseBody
    public float mileageFee(@PathVariable int miles) {
        return calc.mileageCharge(miles);
    }
}
</code></pre><p>If you need to create a new instance of your service object for different requests, you can still use injection by using <a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/beans.html#beans-factory-scopes">the Spring bean scopes</a>.</p><p><strong>Tag that works by injecting the <code>@MileageFeeCalculator</code> service object: <a href="https://github.com/chrylis/spring_autowired_npe_example/tree/working-inject-bean"><code>working-inject-bean</code></a></strong></p><p>If you really need objects created with <code>new</code> to be autowired, you can <a href="http://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html#aop-atconfigurable">use the Spring <code>@Configurable</code> annotation along with AspectJ compile-time weaving</a> to inject your objects. This approach inserts code into your object's constructor that alerts Spring that it's being created so that Spring can configure the new instance. This requires a bit of configuration in your build (such as compiling with <code>ajc</code>) and turning on Spring's runtime configuration handlers (<code>@EnableSpringConfigured</code> with the JavaConfig syntax). This approach is used by the Roo Active Record system to allow <code>new</code> instances of your entities to get the necessary persistence information injected.</p><pre><code>@Service
@Configurable
public class MileageFeeCalculator {

    @Autowired
    private MileageRateService rateService;

    public float mileageCharge(final int miles) {
        return (miles * rateService.ratePerMile());
    }
}
</code></pre><p><strong>Tag that works by using <code>@Configurable</code> on the service object: <a href="https://github.com/chrylis/spring_autowired_npe_example/tree/working-configurable"><code>working-configurable</code></a></strong></p><p>This approach is suitable only for interfacing with legacy code in special situations. It is nearly always preferable to create a singleton adapter class that Spring can autowire and the legacy code can call, but it is possible to directly ask the Spring application context for a bean.</p><p>To do this, you need a class to which Spring can give a reference to the <code>ApplicationContext</code> object:</p><pre><code>@Component
public class ApplicationContextHolder implements ApplicationContextAware {
    private static ApplicationContext context;

    @Override
    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        context = applicationContext;   
    }

    public static ApplicationContext getContext() {
        return context;
    }
}
</code></pre><p>Then your legacy code can call <code>getContext()</code> and retrieve the beans it needs:</p><pre><code>@Controller
public class MileageFeeController {    
    @RequestMapping("/mileage/{miles}")
    @ResponseBody
    public float mileageFee(@PathVariable int miles) {
        MileageFeeCalculator calc = ApplicationContextHolder.getContext().getBean(MileageFeeCalculator.class);
        return calc.mileageCharge(miles);
    }
}
</code></pre><p><strong>Tag that works by manually looking up the service object in the Spring context: <a href="https://github.com/chrylis/spring_autowired_npe_example/tree/working-manual-lookup"><code>working-manual-lookup</code></a></strong></p></body></html>

===ID===
584cbf783e2ca508e5f07183
===QUESTION===
What does a “Cannot find symbol” compilation error mean?
Please explain the following about the "Cannot find symbol" error: This question is designed to be a comprehensive question about "cannot find symbol" compilation errors in Java. 
===LINK===
http://stackoverflow.com/questions/25706216/what-does-a-cannot-find-symbol-compilation-error-mean
===KEYWORDS===
java explain question designed error 
===ANSWER===
153
<html><body><p>Firstly, it is a <em>compilation error</em><sup>1</sup>.  It means that <em>either</em> there is a problem in your Java source code, <em>or</em> there is a problem in the way that you are compiling it.</p><p>Your Java source code consists of the following things:</p><p>A "Cannot find symbol" error is about the identifiers.  When your code is compiled, the compiler needs to work out what each and every identifier in your code means.  </p><p>A "Cannot find symbol" error means that the compiler cannot do this.  Your code appears to be referring to something that the compiler doesn't understand.</p><p>As a first order, there is only one cause.  The compiler looked in all of the places where the identifier <em>should</em> be defined, and it couldn't find the definition.  This could be caused by a number of things.  The common ones are as follows:</p><p>For identifiers that should be class names:</p><p>Perhaps you forgot a <code>new</code> as in:</p><pre><code>String s = String();  // should be 'new String()'
</code></pre><p>The problem is often a combination of the above.  For example, maybe you "star" imported <code>java.io.*</code> and then tried to use the <code>Files</code> class ... which is in <code>java.nio</code> not <code>java.io</code>.  Or maybe you meant to write <code>File</code> ... which <em>is</em> a class in <code>java.io</code>.</p><p>Here is an example of how incorrect variable scoping can lead to a "Cannot find symbol" error:</p><pre><code>for (int i = 0; i &lt; strings.size(); i++) {
    if (strings.get(i).equalsIgnoreCase("fnoord")) {
        break;
    }
}
if (i &lt; strings.size()) {
    ...
}
</code></pre><p>This will give a "Cannot find symbol" error for <code>i</code> in the <code>if</code> statement.  Though we previously declared <code>i</code>, that declaration is only <em>in scope</em> for the <code>for</code> statement and its body.  The reference to <code>i</code> in the <code>if</code> statement <em>cannot see</em> that declaration of <code>i</code>.  It is <em>out of scope</em>.</p><p>(An appropriate correction here might be to move the <code>if</code> statement inside the loop, or to declare <code>i</code> before the start of the loop.)</p><p>There is another reason why the compiler might not find a symbol if you are compiling from the command line.  You might simply have forgotten to compile or recompile some other class.  For example, if you have classes <code>Foo</code> and <code>Bar</code> where <code>Foo</code> uses <code>Bar</code>.  If you have never compiled <code>Bar</code> and you run <code>javac Foo.java</code>, you are liable to find that the compiler can't find the symbol <code>Bar</code>.  The simple answer is to <code>Foo</code> and <code>Bar</code> together; e.g. <code>javac Foo.java Bar.java</code> or <code>javac *.java</code>.  Or better still use a Java build tool; e.g. Ant, Maven, Gradle and so on.</p><p>There are some other more obscure causes too ... which I will deal with below.</p><p>Generally speaking, you start out by figuring out what <em>caused</em> the problem.  Then you <em>think</em> about what your code is supposed to be saying.  Then finally you work out what correction you need to make to your source code to do what you want.</p><p>Note that not every "correction" is correct. Consider this:</p><pre><code>for (int i = 1; i &lt; 10; i++) {
    for (j = 1; j &lt; 10; j++) {
        ...
    }
}
</code></pre><p>Suppose that the compiler says "Cannot find symbol" for <code>j</code>.  There are many ways I could "fix" that:</p><p>The point is that you <em>need</em> to understand what your code is trying to do in order to find the right fix.</p><p>Here are a couple of cases where the "Cannot find symbol" is seemingly inexplicable ... until you look closer.</p><p><strong>You are looking at the wrong source code</strong>:  It often happens that a new Java programmers don't understand how the Java tool chain works, or haven't implemented a repeatable "build process"; e.g. using an IDE, Ant, Maven, Gradle and so on.  In such a situation, the programmer can end up chasing his tail looking for an illusory error that is <em>actually</em> caused by not recompiling the code properly, and the like ...</p><p><strong>IDE issues</strong>: People have reported cases where their IDE gets confused and the compiler in the IDE cannot find a class that exists ... or the reverse situation.  </p><p>This can happen if the IDE's caches get out of sync with the file system.  There are IDE specific ways to fix that.</p><p>This could be an IDE bug.  For instance @Joel Costigliola describes a scenario where Eclipse does not handle a Maven "test" tree correctly; see <a href="http://stackoverflow.com/a/37207223/139985">http://stackoverflow.com/a/37207223/139985</a>.</p><p><strong>Redefining system classes</strong>: I've seen cases where the compiler complains that <code>substring</code> is an unknown symbol in something like the following</p><pre><code>String s = ...
String s1 = s.substring(1);
</code></pre><p>It turned out that the programmer had created their own version of <code>String</code> and that his version of the class didn't define a <code>substring</code> methods.</p><p>Lesson: Don't define your own classes with the same names as common library classes!</p><p><strong>Homoglyphs:</strong>  If you use UTF-8 encoding for your source files, it is possible to have identifiers that <em>look</em> the same, but are in fact different because they contain homoglyphs.   See <a href="http://en.wikipedia.org/wiki/Homoglyph">this page</a> for more information.  </p><p>You can avoid this by restricting yourself to ASCII or Latin-1 as the source file encoding, and using Java <code>\uxxxx</code> escapes for other characters.</p><p><sup>1 - If, perchance, you <em>do</em> see this in a runtime exception or error message, then either you have configured your IDE to run code with compilation errors, or your application is generating and compiling code .. at runtime.</sup></p></body></html>

===ID===
584cbf783e2ca508e5f07184
===QUESTION===
How do I print my Java object without getting “SomeType@2f92e0f4”?
I have a class defined as follows: I tried to print an instance of my class: but I got the following output:  com.foo.Person@2f92e0f4 .  A similar thing happened when I tried to print an array of  Person  objects: I got the output:  [Lcom.foo.Person;@28a418fc What does this output mean? How do I change this output so it contains the name of my person? And how do I print collections of my objects? Note : this is intended as a canonical Q&A about this subject. 
===LINK===
http://stackoverflow.com/questions/29140402/how-do-i-print-my-java-object-without-getting-sometype2f92e0f4
===KEYWORDS===
“sometype@2f92e0f4” person@2f92e0f4 person intended lcom 
===ANSWER===
198
<html><body><p>All Java objects have a <code>toString()</code> method, which is invoked when you try and print the object. </p><pre><code>System.out.println(myObject);  // invokes myObject.toString()
</code></pre><p>This method is defined in the <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html"><code>Object</code></a> class (the superclass of all Java objects). The <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#toString--"><code>Object.toString()</code></a> method returns a fairly ugly looking string, composed of the name of the class, an <code>@</code> symbol and the <a href="http://stackoverflow.com/questions/3563847/what-is-the-use-of-hashcode-in-java">hashcode</a> of the object in hexadecimal. The code for this looks like:</p><pre><code>// Code of Object.toString()
public String toString() {
    return getClass().getName() + "@" + Integer.toHexString(hashCode());
}
</code></pre><p>A result such as <code>com.foo.MyType@2f92e0f4</code> can therefore be explained as:</p><p>The name of array classes look a little different, which is explained well in the Javadocs for <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Class.html#getName--"><code>Class.getName()</code></a>. For instance, <code>[Ljava.lang.String</code> means:</p><p>To print something different when you call <code>System.out.println(myObject)</code>, you must <a href="https://docs.oracle.com/javase/tutorial/java/IandI/override.html">override</a> the <code>toString()</code> method in your own class. Here's a simple example:</p><pre><code>public class Person {

  private String name;

  // constructors and other methods omitted

  @Override
  public String toString() {
    return name;
  }
}
</code></pre><p>Now if we print a <code>Person</code>, we see their name rather than <code>com.foo.Person@12345678</code>.</p><p>Bear in mind that <code>toString()</code> is just <em>one</em> way for an object to be converted to a string. Typically this output should fully describe your object in a clear and concise manner. A better <code>toString()</code> for our <code>Person</code> class might be:</p><pre><code>@Override
public String toString() {
  return getClass().getSimpleName() + "[name=" + name + "]";
}
</code></pre><p>Which would print, e.g., <code>Person[name=Henry]</code>. That's a really useful piece of data for debugging/testing.</p><p>If you want to focus on just one aspect of your object or include a lot of jazzy formatting, you might be better to define a separate method instead, e.g. <code>String toElegantReport() {...}</code>.</p><p>Many <a href="http://en.wikipedia.org/wiki/Integrated_development_environment">IDEs</a> offer support for auto-generating a <code>toString()</code> method, based on the fields in the class. See docs for <a href="http://help.eclipse.org/luna/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-dialog-tostring.htm">Eclipse</a> and <a href="https://plugins.jetbrains.com/plugin/182?pr=idea">IntelliJ</a>, for example. </p><p>Several popular Java libraries offer this feature as well. Some examples include:</p><p><a href="http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/builder/ToStringBuilder.html"><code>ToStringBuilder</code></a> from <a href="http://commons.apache.org/proper/commons-lang/">Apache Commons Lang</a></p><p><a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/MoreObjects.html#toStringHelper(java.lang.Object)"><code>MoreObjects.ToStringHelper</code></a> from <a href="https://github.com/google/guava">Google Guava</a></p><p><a href="http://projectlombok.org/features/ToString.html"><code>@ToString</code></a> annotation from <a href="http://projectlombok.org/">Project Lombok</a></p><p>So you've created a nice <code>toString()</code> for your class. What happens if that class is placed into an array or a collection?</p><p>If you have an array of objects, you can call <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#toString-java.lang.Object:A-"><code>Arrays.toString()</code></a> to produce a simple representation of the contents of the array. For instance, consider this array of <code>Person</code> objects:</p><pre><code>Person[] people = { new Person("Fred"), new Person("Mike") };
System.out.println(Arrays.toString(people));

// Prints: [Fred, Mike]
</code></pre><p>Note:  this is a call to a <em>static</em> method called <code>toString()</code> in the Arrays class, which is different to what we've been discussing above.</p><p>If you have a <strong>multi-dimensional array</strong>, you can use <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#deepToString-java.lang.Object:A-"><code>Arrays.deepToString()</code></a> to achieve the same sort of output.</p><p>Most collections will produce a pretty output based on calling <code>.toString()</code> on every element.</p><pre><code>List&lt;Person&gt; people = new ArrayList&lt;&gt;();
people.add(new Person("Alice"));
people.add(new Person("Bob"));    
System.out.println(people);

// Prints [Alice, Bob]
</code></pre><p>So you just need to ensure your list elements define a nice <code>toString()</code> as discussed above.</p></body></html>

===ID===
584cbf793e2ca508e5f07185
===QUESTION===
Sending Email in Android using JavaMail API without using the default/built-in app
I am trying to create a mail sending application in Android.  If I use:  This will launch the built-in Android application; I'm trying to send the mail on button click directly  without  using this application. 
===LINK===
http://stackoverflow.com/questions/2020088/sending-email-in-android-using-javamail-api-without-using-the-default-built-in-a
===KEYWORDS===
built launch create default/built send 
===ANSWER===
621
<html><body><p>Send e-mail in Android using the JavaMail API using Gmail authentication</p><p><strong>Steps to create a sample Project:</strong></p><p>MailSenderActivity.java</p><pre><code>YOUR PACKAGE;

import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

public class MailSenderActivity extends Activity {

    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        final Button send = (Button) this.findViewById(R.id.send);
        send.setOnClickListener(new View.OnClickListener() {

            public void onClick(View v) {
                // TODO Auto-generated method stub

                try {   
                    GMailSender sender = new GMailSender("username@gmail.com", "password");
                    sender.sendMail("This is Subject",   
                            "This is Body",   
                            "user@gmail.com",   
                            "user@yahoo.com");   
                } catch (Exception e) {   
                    Log.e("SendMail", e.getMessage(), e);   
                } 

            }
        });

    }
}
</code></pre><p>GMailSender.java</p><pre><code>YOUR PACKAGE;

import javax.activation.DataHandler;   
import javax.activation.DataSource;   
import javax.mail.Message;   
import javax.mail.PasswordAuthentication;   
import javax.mail.Session;   
import javax.mail.Transport;   
import javax.mail.internet.InternetAddress;   
import javax.mail.internet.MimeMessage;   
import java.io.ByteArrayInputStream;   
import java.io.IOException;   
import java.io.InputStream;   
import java.io.OutputStream;   
import java.security.Security;   
import java.util.Properties;   

public class GMailSender extends javax.mail.Authenticator {   
    private String mailhost = "smtp.gmail.com";   
    private String user;   
    private String password;   
    private Session session;   

    static {   
        Security.addProvider(new com.provider.JSSEProvider());   
    }  

    public GMailSender(String user, String password) {   
        this.user = user;   
        this.password = password;   

        Properties props = new Properties();   
        props.setProperty("mail.transport.protocol", "smtp");   
        props.setProperty("mail.host", mailhost);   
        props.put("mail.smtp.auth", "true");   
        props.put("mail.smtp.port", "465");   
        props.put("mail.smtp.socketFactory.port", "465");   
        props.put("mail.smtp.socketFactory.class",   
                "javax.net.ssl.SSLSocketFactory");   
        props.put("mail.smtp.socketFactory.fallback", "false");   
        props.setProperty("mail.smtp.quitwait", "false");   

        session = Session.getDefaultInstance(props, this);   
    }   

    protected PasswordAuthentication getPasswordAuthentication() {   
        return new PasswordAuthentication(user, password);   
    }   

    public synchronized void sendMail(String subject, String body, String sender, String recipients) throws Exception {   
        try{
        MimeMessage message = new MimeMessage(session);   
        DataHandler handler = new DataHandler(new ByteArrayDataSource(body.getBytes(), "text/plain"));   
        message.setSender(new InternetAddress(sender));   
        message.setSubject(subject);   
        message.setDataHandler(handler);   
        if (recipients.indexOf(',') &gt; 0)   
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(recipients));   
        else  
            message.setRecipient(Message.RecipientType.TO, new InternetAddress(recipients));   
        Transport.send(message);   
        }catch(Exception e){

        }
    }   

    public class ByteArrayDataSource implements DataSource {   
        private byte[] data;   
        private String type;   

        public ByteArrayDataSource(byte[] data, String type) {   
            super();   
            this.data = data;   
            this.type = type;   
        }   

        public ByteArrayDataSource(byte[] data) {   
            super();   
            this.data = data;   
        }   

        public void setType(String type) {   
            this.type = type;   
        }   

        public String getContentType() {   
            if (type == null)   
                return "application/octet-stream";   
            else  
                return type;   
        }   

        public InputStream getInputStream() throws IOException {   
            return new ByteArrayInputStream(data);   
        }   

        public String getName() {   
            return "ByteArrayDataSource";   
        }   

        public OutputStream getOutputStream() throws IOException {   
            throw new IOException("Not Supported");   
        }   
    }   
}  
</code></pre><p>JSSE Provider </p><p>JSSEProvider.java</p><pre><code>/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * @author Alexander Y. Kleymenov
 * @version $Revision$
 */


import java.security.AccessController;
import java.security.Provider;

public final class JSSEProvider extends Provider {

    public JSSEProvider() {
        super("HarmonyJSSE", 1.0, "Harmony JSSE Provider");
        AccessController.doPrivileged(new java.security.PrivilegedAction&lt;Void&gt;() {
            public Void run() {
                put("SSLContext.TLS",
                        "org.apache.harmony.xnet.provider.jsse.SSLContextImpl");
                put("Alg.Alias.SSLContext.TLSv1", "TLS");
                put("KeyManagerFactory.X509",
                        "org.apache.harmony.xnet.provider.jsse.KeyManagerFactoryImpl");
                put("TrustManagerFactory.X509",
                        "org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl");
                return null;
            }
        });
    }
}
</code></pre><p>ADD 3 jars found in the following link to your Android Project </p><p><a href="http://stackoverflow.com/a/6859020/28557">Click here - How to add External Jars</a></p><p>And Don't forget to add this line in your manifest:</p><pre><code>&lt;uses-permission android:name="android.permission.INTERNET" /&gt;
</code></pre><p>Run the project and check your recipient mail account for the mail.
Cheers!!</p><p>Hope this helps</p><p>P.S. And don't forget that you cannot do network operation from any Activity in android.
Hence it is recommended to use <code>AsyncTask</code> or <code>IntentService</code> to avoid network on main thread exception.</p><p>Jar files : <a href="https://code.google.com/p/javamail-android/" rel="nofollow noreferrer">https://code.google.com/p/javamail-android/</a></p></body></html>

===ID===
584cbf793e2ca508e5f07186
===QUESTION===
How to round a number to n decimal places in Java
What I'd like is a method to convert a double to a string which rounds using the half-up method. I.e. if the decimal to be rounded is a 5, it always rounds up the previous number. This is the standard method of rounding most people expect in most situations. I also would like only significant digits to be displayed. That is there should not be any trailing zeroes. I know one method of doing this is to use the String.format method: returns: which is great, however it always displays numbers with 5 decimal places even if they are not significant:  returns: Another method is to use the DecimalFormatter: returns: However as you can see this uses half-even rounding. That is it will round down if the previous digit is even. What I'd like is this: What is the best way to achieve this in Java? 
===LINK===
http://stackoverflow.com/questions/153724/how-to-round-a-number-to-n-decimal-places-in-java
===KEYWORDS===
convert rounded string java rounding 
===ANSWER===
363
<html><body><p>Use <a href="http://docs.oracle.com/javase/8/docs/api/java/text/DecimalFormat.html#setRoundingMode(java.math.RoundingMode)" rel="nofollow noreferrer"><code>setRoundingMode</code></a>, set the <a href="http://docs.oracle.com/javase/8/docs/api/java/math/RoundingMode.html" rel="nofollow noreferrer"><code>RoundingMode</code></a> explicitly to handle your issue with the half-even round, then use the format pattern for your required output.</p><p>Example:</p><pre><code>DecimalFormat df = new DecimalFormat("#.####");
df.setRoundingMode(RoundingMode.CEILING);
for (Number n : Arrays.asList(12, 123.12345, 0.23, 0.1, 2341234.212431324)) {
    Double d = n.doubleValue();
    System.out.println(df.format(d));
}
</code></pre><p>gives the output:</p><pre><code>12
123.1235
0.23
0.1
2341234.2125
</code></pre></body></html>

===ID===
584cbf7a3e2ca508e5f07187
===QUESTION===
How to split a string in Java
I have a string,  "004-034556" , that I want to split into two strings: That means the first string will contain the characters before  '-' , and the second string will contain the characters after  '-' . I also want to check if the string has  '-'  in it. If not, I will throw an exception. How can I do this? 
===LINK===
http://stackoverflow.com/questions/3481828/how-to-split-a-string-in-java
===KEYWORDS===
throw java string means exception 
===ANSWER===
1531
<html><body><p>Just use the appropriate method: <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#split-java.lang.String-" rel="nofollow noreferrer"><code>String#split()</code></a>.</p><pre><code>String string = "004-034556";
String[] parts = string.split("-");
String part1 = parts[0]; // 004
String part2 = parts[1]; // 034556
</code></pre><p>Note that this takes a <a href="http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#sum" rel="nofollow noreferrer">regular expression</a>, so remember to escape <a href="http://www.regular-expressions.info/characters.html" rel="nofollow noreferrer">special characters</a> if necessary.</p><p><a href="http://www.regular-expressions.info/characters.html" rel="nofollow noreferrer">there</a> are 12 characters with special meanings: the backslash <code>\</code>, the caret <code>^</code>, the dollar sign <code>$</code>, the period or dot <code>.</code>, the vertical bar or pipe symbol <code>|</code>, the question mark <code>?</code>, the asterisk or star <code>*</code>, the plus sign <code>+</code>, the opening parenthesis <code>(</code>, the closing parenthesis <code>)</code>, and the opening square bracket <code>[</code>, the opening curly brace <code>{</code>, These special characters are often called "metacharacters".</p><p>So, if you want to split on e.g. period/dot <code>.</code> which means "<a href="http://www.regular-expressions.info/dot.html" rel="nofollow noreferrer">any character</a>" in regex, use either <a href="http://www.regular-expressions.info/characters.html" rel="nofollow noreferrer">backslash <code>\</code></a> to escape the individual special character like so <code>split("\\.")</code>, or use <a href="http://www.regular-expressions.info/charclass.html" rel="nofollow noreferrer">character class <code>[]</code></a> to represent literal character(s) like so <code>split("[.]")</code>, or use <a href="http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#quote-java.lang.String-" rel="nofollow noreferrer"><code>Pattern#quote()</code></a> to escape the entire string like so <code>split(Pattern.quote("."))</code>.</p><pre><code>String[] parts = string.split(Pattern.quote(".")); // Split on period.
</code></pre><p>To test beforehand if the string contains certain character(s), just use <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#contains-java.lang.CharSequence-" rel="nofollow noreferrer"><code>String#contains()</code></a>.</p><pre><code>if (string.contains("-")) {
    // Split it.
} else {
    throw new IllegalArgumentException("String " + string + " does not contain -");
}
</code></pre><p>No, this does not take a regular expression. For that, use <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#matches-java.lang.String-" rel="nofollow noreferrer"><code>String#matches()</code></a> instead.</p><p>If you'd like to retain the split character in the resulting parts, then make use of <a href="http://www.regular-expressions.info/lookaround.html" rel="nofollow noreferrer">positive lookaround</a>. In case you want to have the split character to end up in left hand side, use positive lookbehind by prefixing <code>?&lt;=</code> group on the pattern.</p><pre><code>String string = "004-034556";
String[] parts = string.split("(?&lt;=-)");
String part1 = parts[0]; // 004-
String part2 = parts[1]; // 034556
</code></pre><p>In case you want to have the split character to end up in right hand side, use positive lookahead by prefixing <code>?=</code> group on the pattern.</p><pre><code>String string = "004-034556";
String[] parts = string.split("(?=-)");
String part1 = parts[0]; // 004
String part2 = parts[1]; // -034556
</code></pre><p>If you'd like to limit the number of resulting parts, then you can supply the desired number as 2nd argument of <code>split()</code> method. </p><pre><code>String string = "004-034556-42";
String[] parts = string.split("-", 2);
String part1 = parts[0]; // 004
String part2 = parts[1]; // 034556-42
</code></pre></body></html>

===ID===
584cbf7b3e2ca508e5f07188
===QUESTION===
Sort a Map<Key, Value> by values (Java)
I am relatively new to Java, and often find that I need to sort a  Map<Key, Value>  on the values. Since the values are not unique, I find myself converting the  keySet  into an  array , and sorting that array through  array sort  with a  custom comparator  that sorts on the value associated with the key. Is there an easier way? 
===LINK===
http://stackoverflow.com/questions/109383/sort-a-mapkey-value-by-values-java
===KEYWORDS===
map<key key sort sorting java 
===ANSWER===
519
<html><body><p>Here's a generic-friendly version you're free to use:</p><pre><code>import java.util.*;

public class MapUtil
{
    public static &lt;K, V extends Comparable&lt;? super V&gt;&gt; Map&lt;K, V&gt; 
        sortByValue( Map&lt;K, V&gt; map )
    {
        List&lt;Map.Entry&lt;K, V&gt;&gt; list =
            new LinkedList&lt;Map.Entry&lt;K, V&gt;&gt;( map.entrySet() );
        Collections.sort( list, new Comparator&lt;Map.Entry&lt;K, V&gt;&gt;()
        {
            public int compare( Map.Entry&lt;K, V&gt; o1, Map.Entry&lt;K, V&gt; o2 )
            {
                return (o1.getValue()).compareTo( o2.getValue() );
            }
        } );

        Map&lt;K, V&gt; result = new LinkedHashMap&lt;K, V&gt;();
        for (Map.Entry&lt;K, V&gt; entry : list)
        {
            result.put( entry.getKey(), entry.getValue() );
        }
        return result;
    }
}
</code></pre><p>And an associated JUnit4 test so you don't have to take my word for it:</p><pre><code>import java.util.*;
import org.junit.*;

public class MapUtilTest
{
    @Test
    public void testSortByValue()
    {
        Random random = new Random(System.currentTimeMillis());
        Map&lt;String, Integer&gt; testMap = new HashMap&lt;String, Integer&gt;(1000);
        for(int i = 0 ; i &lt; 1000 ; ++i) {
            testMap.put( "SomeString" + random.nextInt(), random.nextInt());
        }

        testMap = MapUtil.sortByValue( testMap );
        Assert.assertEquals( 1000, testMap.size() );

        Integer previous = null;
        for(Map.Entry&lt;String, Integer&gt; entry : testMap.entrySet()) {
            Assert.assertNotNull( entry.getValue() );
            if (previous != null) {
                Assert.assertTrue( entry.getValue() &gt;= previous );
            }
            previous = entry.getValue();
        }
    }

}
</code></pre><p>Java 7 Version</p><pre><code>public static &lt;K, V extends Comparable&lt;? super V&gt;&gt; Map&lt;K, V&gt; 
    sortByValue( Map&lt;K, V&gt; map )
{
    List&lt;Map.Entry&lt;K, V&gt;&gt; list =
        new LinkedList&lt;&gt;( map.entrySet() );
    Collections.sort( list, new Comparator&lt;Map.Entry&lt;K, V&gt;&gt;()
    {
        @Override
        public int compare( Map.Entry&lt;K, V&gt; o1, Map.Entry&lt;K, V&gt; o2 )
        {
            return ( o1.getValue() ).compareTo( o2.getValue() );
        }
    } );

    Map&lt;K, V&gt; result = new LinkedHashMap&lt;&gt;();
    for (Map.Entry&lt;K, V&gt; entry : list)
    {
        result.put( entry.getKey(), entry.getValue() );
    }
    return result;
}
</code></pre><p>Java 8 Version. This will sort according to the value in ascending order; for descending order, it is just possible to uncomment the call to <code>Collections.reverseOrder()</code>.</p><pre><code>public static &lt;K, V extends Comparable&lt;? super V&gt;&gt; Map&lt;K, V&gt; sortByValue(Map&lt;K, V&gt; map) {
    return map.entrySet()
              .stream()
              .sorted(Map.Entry.comparingByValue(/*Collections.reverseOrder()*/))
              .collect(Collectors.toMap(
                Map.Entry::getKey, 
                Map.Entry::getValue, 
                (e1, e2) -&gt; e1, 
                LinkedHashMap::new
              ));
}
</code></pre></body></html>

===ID===
584cbf7b3e2ca508e5f07189
===QUESTION===
How to avoid java.lang.ArrayIndexOutOfBoundsException? [duplicate]
This question already has an answer here: If your question is  I am getting a  java.lang.ArrayIndexOutOfBoundsException  in my code and I do not understand why it is happening. What does it mean and how can I avoid it? This is meant to be the most comprehensive  Canonical  collection of information on this
   java.lang.ArrayIndexOutOfBoundsException  topic as well as the  java.lang.IndexOutOfBoundsException . There are many questions like this and all of them have either vague no code answers, or mostly they are extremely specific and localized to the question at hand and do not address the root cause which is exactly the same in all cases. If you see one that falls under this general case, rather than answer it with more duplicate specialized content, mark it as a duplicate of this one. 
===LINK===
http://stackoverflow.com/questions/32568261/how-to-avoid-java-lang-arrayindexoutofboundsexception
===KEYWORDS===
meant code questions localized information 
===ANSWER===
2
<html><body><p>The <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/ArrayIndexOutOfBoundsException.html" rel="nofollow">JavaDoc</a> curtly states:</p><p>Thrown to indicate that an array has been accessed with an illegal
  index. The index is either negative or greater than or equal to the
  size of the array.</p><p>This exception means that you have tried to access an index in an
  array or array backed list and that index does not exist.</p><p>Java uses <code>0</code> based indexes. That means all indexes start with <code>0</code> as
  the index of the first element if it contains any elements.</p><p>The <code>IndexOutOfBoundsException</code> message is very explicit, it usually takes the form of:</p><p><code>java.lang.IndexOutOfBoundsException: Index: 1, Size: 1</code></p><p>Where <code>Index</code> is the index that you requested that does not exist and <code>Size</code> is the length of the structure you were indexing into.</p><p>As you can see a <code>Size: 1</code> means the only valid index is <code>0</code> and you were asking for what was at index <code>1</code>.</p><p>For example if you have an raw <code>Array</code> of objects or primitive types
  the valid indexes are <code>0</code> to <code>.length - 1</code>, in the following example the valid indexes would be <code>0,1,2,3,</code>.</p><pre><code>final String days[] { "Sunday", "Monday", "Tuesday" }
System.out.println(days.length); // 3
System.out.println(days[0]); // Sunday
System.out.println(days[1]); // Monday
System.out.println(days[2]); // Tuesday
System.out.println(days[3]); // java.lang.ArrayIndexOutOfBoundsException
</code></pre><p>This also applies to <code>ArrayList</code> as well as any other <code>Collection</code> classes that may be backed by an <code>Array</code> and allow direct access to the the index.</p><p>This uses <a href="https://code.google.com/p/guava-libraries/" rel="nofollow">Guava</a> to convert the raw primitive <code>int[]</code> array to an
  <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableList.html" rel="nofollow"><code>ImmutableList&lt;Integer&gt;</code></a>. Then it uses the <code>Iterables</code> class to safely
  get the value at a particular index and provides a default value when
  that index does not exist. Here I chose <code>-1</code> to indicate an invalid
  index value.</p><pre><code>final List&lt;Integer&gt; toTen = ImmutableList.copyOf(Ints.asList(ints));
System.out.println(Iterables.get(toTen, 0, -1));
System.out.println(Iterables.get(toTen, 100, -1));
</code></pre><p>If you can't use <code>Guava</code> for some reason it is easy to roll your own function to do this same thing.</p><pre><code>private static &lt;T&gt; T get(@Nonnull final Iterable&lt;T&gt; iterable, final int index, @Nonnull final T missing)
{
    if (index &lt; 0) { return missing; }
    if (iterable instanceof List) 
    {
        final List&lt;T&gt; l = List.class.cast(iterable);
        return l.size() &lt;= index ? l.get(index) : missing;
    }
    else
    {
        final Iterator&lt;T&gt; iterator = iterable.iterator();
        for (int i = 0; iterator.hasNext(); i++)
        {
            final T o = iterator.next();
            if (i == index) { return o; }
        }
        return missing;
    }
}
</code></pre><p>Here is the idiomatic ways to iterate over a raw <code>Array</code> if you need
  to know the index and the value:</p><p>This is susceptible to <em>one off errors</em> which are the primary causes
  of an <code>java.lang.ArrayIndexOutOfBoundsException</code>:</p><pre><code>final int ints[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
for (int i = 0; i &lt; ints.length; i++)
{
    System.out.format("index %d = %d", i, ints[i]);  
}
</code></pre><p>Here is the idiomatic way to iterate over a raw <code>Array</code> with the
  <em>enhanced for loop</em> if you do not need to know the actual index:</p><pre><code>for (final int i : ints)
{
    System.out.format("%d", i);
    System.out.println();
}
</code></pre><p>Here is the safe way to iterate over a raw <code>Array</code> with the <em>enhanced
  for loop</em> and track the current index and avoids the possibility of
  encountering an <code>java.lang.ArrayIndexOutOfBoundsException</code>.</p><p>This uses Guava to easily convert the <code>int[]</code> to something <code>Iterable</code>
  every project should include it.</p><pre><code>final Iterator&lt;Integer&gt; it = Ints.asList(ints).iterator();
for (int i = 0; it.hasNext(); i++)
{
    System.out.format("index %d = %d", i, it.next());
}
</code></pre><p>If you can not use Guava or your <code>int[]</code> is huge you can roll your own <code>ImmutableIntArrayIterator</code> as such:</p><pre><code>public class ImmutableIntArrayIterator implements Iterator&lt;Integer&gt;
{
    private final int[] ba;
    private int currentIndex;

    public ImmutableIntArrayIterator(@Nonnull final int[] ba)
    {
        this.ba = ba;
        if (this.ba.length &gt; 0) { this.currentIndex = 0; }
        else { currentIndex = -1; }
    }

    @Override
    public boolean hasNext() { return this.currentIndex &gt;= 0 &amp;&amp; this.currentIndex + 1 &lt; this.ba.length; }

    @Override
    public Integer next()
    {
        this.currentIndex++;
        return this.ba[this.currentIndex];
    }

    @Override
    public void remove() { throw new UnsupportedOperationException(); }
}
</code></pre><p>And use the same code as you would with Guava.</p><p>If you absolutely <strong>must have the ordinal</strong> of the item the following is the safest way to do it.</p><pre><code>// assume los is a list of Strings
final Iterator&lt;String&gt; it = los.iterator();
for (int i = 0; it.hasNext(); i++)
{
    System.out.format("index %d = %s", i, it.next());
}
</code></pre><p>This technique works for all <code>Iterables</code>, it is not an <code>index</code> perse but it does give you the current position in the iteration even for things that do not have a native <code>index</code>. </p><p>The best way is to always use <a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableList.html" rel="nofollow">ImmutableLists</a>/<a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableSet.html" rel="nofollow">Set</a>/<a href="http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/ImmutableMap.html" rel="nofollow">Maps</a> from Guava as
  well:</p><pre><code>final List&lt;Integer&gt; ili = ImmutableList.copyOf(Ints.asList(ints));
final Iterator&lt;Integer&gt; iit = ili.iterator();
for (int i = 0; iit.hasNext(); i++)
{
    System.out.format("index %d = %d", i, iit.next());
}
</code></pre></body></html>

===ID===
584cbf7c3e2ca508e5f0718a
===QUESTION===
In Java, difference between default, public, protected, and private
In Java, are there clear rules on when to use each of access modifiers, namely the default (package private),  public ,  protected  and  private , while making  class  and  interface  and dealing with inheritance? 
===LINK===
http://stackoverflow.com/questions/215497/in-java-difference-between-default-public-protected-and-private
===KEYWORDS===
java inheritance default dealing private 
===ANSWER===
3387
<html><body><p><a href="http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html" rel="nofollow noreferrer">The official tutorial</a> may be of some use to you.</p><pre>
            | Class | Package | Subclass | Subclass | World
            |       |         |(same pkg)|(diff pkg)| 
————————————+———————+—————————+——————————+——————————+————————
public      |   +   |    +    |    +     |     +    |   +     
————————————+———————+—————————+——————————+——————————+————————
protected   |   +   |    +    |    +     |     +    |   o     
————————————+———————+—————————+——————————+——————————+————————
no modifier |   +   |    +    |    +     |     o    |   o
————————————+———————+—————————+——————————+——————————+————————
private     |   +   |    o    |    o     |     o    |   o

+ : accessible
o : not accessible
</pre></body></html>

===ID===
584cbf7c3e2ca508e5f0718b
===QUESTION===
GUI not working after rewriting to MVC
I'm practicing MVC style programming. I have a Mastermind game in a single file, working fine (maybe apart of the fact that "Check" button is invisible at start). http://paste.pocoo.org/show/226726/ But when I've rewritten it to model, view, controller files - and when I click on empty Pin (that should be updated, and repainted with new color) - noting happens. Can anybody see any problems here ? I've tried placing repaint() in different places, but it simply does not work at all :/ Main :   Model :   View:   Controller: 
===LINK===
http://stackoverflow.com/questions/3066590/gui-not-working-after-rewriting-to-mvc
===KEYWORDS===
color simply mvc click working 
===ANSWER===
132
<html><body><p>As you've discovered, the <a href="http://en.wikipedia.org/wiki/Model-view-controller" rel="nofollow noreferrer">Model–View–Controller</a> pattern is no panacea, but it offers some advantages. Rooted in <a href="http://en.wikipedia.org/wiki/Model-view-controller" rel="nofollow noreferrer">MVC</a>, the Swing separable model architecture is discussed in <a href="http://www.oracle.com/technetwork/java/architecture-142923.html" rel="nofollow noreferrer"><em>A Swing Architecture Overview</em></a>. Based on <a href="http://stackoverflow.com/questions/2687871">this outline</a>, the following example shows an <a href="http://en.wikipedia.org/wiki/Model-view-controller" rel="nofollow noreferrer">MVC</a> implementation of a much simpler game that illustrates similar principles. Note that the <code>Model</code> manages a single <code>Piece</code>, chosen at random. In response to a user's selection, the <code>View</code> invokes the <code>check()</code> method, while listening for a response from the <code>Model</code> via <code>update()</code>. The <code>View</code> then updates itself using information obtained from the <code>Model</code>. Similarly, the <code>Controller</code> may <code>reset()</code> the <code>Model</code>. In particular, there is no drawing in the <code>Model</code> and no game logic in the <code>View</code>. This somewhat more complex <a href="http://robotchase.sourceforge.net/" rel="nofollow noreferrer">game</a> was designed to illustrate the same concepts.</p><p>Addendum: I've modified the original example to show how <a href="http://en.wikipedia.org/wiki/Model-view-controller" rel="nofollow noreferrer">MVC</a> allows one to enhance the <code>View</code> without changing the nature of the <code>Model</code>.</p><p>Addendum: As @akf observes, <a href="http://en.wikipedia.org/wiki/Model-view-controller" rel="nofollow noreferrer">MVC</a> hinges on the <a href="http://en.wikipedia.org/wiki/Observer_pattern" rel="nofollow noreferrer">observer pattern</a>. Your <code>Model</code> needs a way to notify the <code>View</code> of changes. Several approaches are widely used:</p><p>In the example below, <code>Model</code> extends <a href="http://java.sun.com/javase/6/docs/api/java/util/Observable.html" rel="nofollow noreferrer"><code>Observable</code></a> for simplicity.</p><p>A more common approach uses an <a href="http://java.sun.com/javase/6/docs/api/javax/swing/event/EventListenerList.html" rel="nofollow noreferrer"><code>EventListenerList</code></a>, as shown in the <a href="http://docs.oracle.com/javase/tutorial/uiswing/components/panel.html" rel="nofollow noreferrer"><code>Converter</code></a> application and suggested by the large number of <a href="http://java.sun.com/javase/6/docs/api/java/util/EventListener.html" rel="nofollow noreferrer"><code>EventListener</code></a> subinterfaces and implementing classes.</p><p>A third option is to use a <a href="http://docs.oracle.com/javase/7/docs/api/java/beans/PropertyChangeListener.html" rel="nofollow noreferrer"><code>PropertyChangeListener</code></a>, as shown <a href="http://stackoverflow.com/a/10523401/230513">here</a> and <a href="http://stackoverflow.com/questions/5533581">here</a>.</p><p>Addendum: Some common questions about Swing controllers are addressed <a href="http://stackoverflow.com/a/25556585/230513">here</a> and <a href="http://stackoverflow.com/a/23416515/230513">here</a>.</p><p><img alt="screen capture" src="https://i.stack.imgur.com/uaeEq.png"/></p><pre><code>import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Observer;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * @see http://stackoverflow.com/q/3066590/230513
 * 15-Mar-2011 r8 http://stackoverflow.com/questions/5274962
 * 26-Mar-2013 r17 per comment
 */
public class MVCGame implements Runnable {

    public static void main(String[] args) {
        EventQueue.invokeLater(new MVCGame());
    }

    @Override
    public void run() {
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(new MainPanel());
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }
}

class MainPanel extends JPanel {

    public MainPanel() {
        super(new BorderLayout());
        Model model = new Model();
        View view = new View(model);
        Control control = new Control(model, view);
        JLabel label = new JLabel("Guess what color!", JLabel.CENTER);
        this.add(label, BorderLayout.NORTH);
        this.add(view, BorderLayout.CENTER);
        this.add(control, BorderLayout.SOUTH);
    }
}

/**
 * Control panel
 */
class Control extends JPanel {

    private Model model;
    private View view;
    private JButton reset = new JButton("Reset");

    public Control(Model model, View view) {
        this.model = model;
        this.view = view;
        this.add(reset);
        reset.addActionListener(new ButtonHandler());
    }

    private class ButtonHandler implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            String cmd = e.getActionCommand();
            if ("Reset".equals(cmd)) {
                model.reset();
            }
        }
    }
}

/**
 * View
 */
class View extends JPanel {

    private static final String s = "Click a button.";
    private Model model;
    private ColorIcon icon = new ColorIcon(80, Color.gray);
    private JLabel label = new JLabel(s, icon, JLabel.CENTER);

    public View(Model model) {
        super(new BorderLayout());
        this.model = model;
        label.setVerticalTextPosition(JLabel.BOTTOM);
        label.setHorizontalTextPosition(JLabel.CENTER);
        this.add(label, BorderLayout.CENTER);
        this.add(genButtonPanel(), BorderLayout.SOUTH);
        model.addObserver(new ModelObserver());
    }

    private JPanel genButtonPanel() {
        JPanel panel = new JPanel();
        for (Piece p : Piece.values()) {
            PieceButton pb = new PieceButton(p);
            pb.addActionListener(new ButtonHandler());
            panel.add(pb);
        }
        return panel;
    }

    private class ModelObserver implements Observer {

        @Override
        public void update(Observable o, Object arg) {
            if (arg == null) {
                label.setText(s);
                icon.color = Color.gray;
            } else {
                if ((Boolean) arg) {
                    label.setText("Win!");
                } else {
                    label.setText("Keep trying.");
                }
            }
        }
    }

    private class ButtonHandler implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            PieceButton pb = (PieceButton) e.getSource();
            icon.color = pb.piece.color;
            label.repaint();
            model.check(pb.piece);
        }
    }

    private static class PieceButton extends JButton {

        Piece piece;

        public PieceButton(Piece piece) {
            this.piece = piece;
            this.setIcon(new ColorIcon(16, piece.color));
        }
    }

    private static class ColorIcon implements Icon {

        private int size;
        private Color color;

        public ColorIcon(int size, Color color) {
            this.size = size;
            this.color = color;
        }

        @Override
        public void paintIcon(Component c, Graphics g, int x, int y) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(
                RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
            g2d.setColor(color);
            g2d.fillOval(x, y, size, size);
        }

        @Override
        public int getIconWidth() {
            return size;
        }

        @Override
        public int getIconHeight() {
            return size;
        }
    }
}

/**
 * Model
 */
class Model extends Observable {

    private static final Random rnd = new Random();
    private static final Piece[] pieces = Piece.values();
    private Piece hidden = init();

    private Piece init() {
        return pieces[rnd.nextInt(pieces.length)];
    }

    public void reset() {
        hidden = init();
        setChanged();
        notifyObservers();
    }

    public void check(Piece guess) {
        setChanged();
        notifyObservers(guess.equals(hidden));
    }
}

enum Piece {

    Red(Color.red), Green(Color.green), Blue(Color.blue);
    public Color color;

    private Piece(Color color) {
        this.color = color;
    }
}
</code></pre></body></html>

===ID===
584cbf7d3e2ca508e5f0718c
===QUESTION===
How can I create an executable JAR with dependencies using Maven?
I want to package my project in a single executable JAR for distribution. How can I make Maven package all dependency JARs into my JAR? 
===LINK===
http://stackoverflow.com/questions/574594/how-can-i-create-an-executable-jar-with-dependencies-using-maven
===KEYWORDS===
maven package create jar project 
===ANSWER===
1372
<html><body><pre class="lang-xml prettyprint-override"><code>&lt;build&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;
      &lt;configuration&gt;
        &lt;archive&gt;
          &lt;manifest&gt;
            &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;
          &lt;/manifest&gt;
        &lt;/archive&gt;
        &lt;descriptorRefs&gt;
          &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;
        &lt;/descriptorRefs&gt;
      &lt;/configuration&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</code></pre><p>and you run it with</p><pre class="lang-xml prettyprint-override"><code>mvn clean compile assembly:single
</code></pre><p><em>Compile goal should be added before assembly:single or otherwise the code on your own project is not included.</em></p><p>See more details in comments.</p><p>Commonly this goal is tied to a build phase to execute automatically. This ensures the JAR is built when executing <code>mvn install</code> or performing a deployment/release.</p><pre class="lang-xml prettyprint-override"><code>&lt;plugin&gt;
  &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;
  &lt;configuration&gt;
    &lt;archive&gt;
      &lt;manifest&gt;
        &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;
      &lt;/manifest&gt;
    &lt;/archive&gt;
    &lt;descriptorRefs&gt;
      &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;
    &lt;/descriptorRefs&gt;
  &lt;/configuration&gt;
  &lt;executions&gt;
    &lt;execution&gt;
      &lt;id&gt;make-assembly&lt;/id&gt; &lt;!-- this is used for inheritance merges --&gt;
      &lt;phase&gt;package&lt;/phase&gt; &lt;!-- bind to the packaging phase --&gt;
      &lt;goals&gt;
        &lt;goal&gt;single&lt;/goal&gt;
      &lt;/goals&gt;
    &lt;/execution&gt;
  &lt;/executions&gt;
&lt;/plugin&gt;
</code></pre></body></html>

===ID===
584cbf7d3e2ca508e5f0718d
===QUESTION===
What is PECS (Producer Extends Consumer Super)?
I came across PECS (short for  Producer  extends  and Consumer  super ) while reading up on generics.  Can someone explain to me how to use PECS to resolve confusion between  extends  and  super ? 
===LINK===
http://stackoverflow.com/questions/2723397/what-is-pecs-producer-extends-consumer-super
===KEYWORDS===
pecs explain short extends generics 
===ANSWER===
467
<html><body><p><strong>tl;dr:</strong> "PECS" is from the collection's point of view. If you are <em>only</em> pulling items from a generic collection, it is a producer and you should use <code>extends</code>; if you are <em>only</em> stuffing items in, it is a consumer and you should use <code>super</code>. If you do both with the same collection, you shouldn't use either <code>extends</code> or <code>super</code>.</p><p>Suppose you have a method that takes as its parameter a collection of things, but you want it to be more flexible than just accepting a <code>Collection&lt;Thing&gt;</code>.</p><p><strong>Case 1: You want to go through the collection and do things with each item.</strong><br>
Then the list is a <strong>producer</strong>, so you should use a <code>Collection&lt;? extends Thing&gt;</code>.</br></p><p>The reasoning is that a <code>Collection&lt;? extends Thing&gt;</code> could hold any subtype of <code>Thing</code>, and thus each element will behave as a <code>Thing</code> when you perform your operation. (You actually cannot add anything to a <code>Collection&lt;? extends Thing&gt;</code>, because you cannot know at runtime which <em>specific</em> subtype of <code>Thing</code> the collection holds.)</p><p><strong>Case 2: You want to add things to the collection.</strong><br>
Then the list is a <strong>consumer</strong>, so you should use a <code>Collection&lt;? super Thing&gt;</code>.</br></p><p>The reasoning here is that unlike <code>Collection&lt;? extends Thing&gt;</code>, <code>Collection&lt;? super Thing&gt;</code> can always hold a <code>Thing</code> no matter what the actual parameterized type is. Here you don't care what is already in the list as long as it will allow a <code>Thing</code> to be added; this is what <code>? super Thing</code> guarantees.</p></body></html>

===ID===
584cbf7e3e2ca508e5f0718e
===QUESTION===
How to create a generic array in Java?
Due to the implementation of Java generics, you can't have code like this:  How can I implement this while maintaining type safety? I saw a solution on the Java forums that goes like this: But I really don't get what's going on. Can anyone help? 
===LINK===
http://stackoverflow.com/questions/529085/how-to-create-a-generic-array-in-java
===KEYWORDS===
code don implementation create due 
===ANSWER===
427
<html><body><p>I have to ask a question in return: is your <code>GenSet</code> "checked" or "unchecked"?
What does that mean?</p><p><strong>Checked</strong>: <em>strong typing</em>. <code>GenSet</code> knows explicitly what type of objects it contains (i.e. its constructor was explicitly called with a <code>Class&lt;E&gt;</code> argument, and methods will throw an exception when they are passed arguments that are not of type <code>E</code>. See <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#checkedCollection%28java.util.Collection,%20java.lang.Class%29" rel="nofollow noreferrer"><code>Collections.checkedCollection</code></a>.</p><p>-&gt; in that case, you should write:</p><pre><code>public class GenSet&lt;E&gt; {

    private E[] a;

    public GenSet(Class&lt;E&gt; c, int s) {
        // Use Array native method to create array
        // of a type only known at run time
        @SuppressWarnings("unchecked")
        final E[] a = (E[]) Array.newInstance(c, s);
        this.a = a;
    }

    E get(int i) {
        return a[i];
    }
}
</code></pre><p><strong>Unchecked</strong>: <em>weak typing</em>. No type checking is actually done on any of the objects passed as argument.</p><p>-&gt; in that case, you should write</p><pre><code>public class GenSet&lt;E&gt; {

    private Object[] a;

    public GenSet(int s) {
        a = new Object[s];
    }

    E get(int i) {
        @SuppressWarnings("unchecked")
        final E e = (E) a[i];
        return e;
    }
}
</code></pre><p>Note that the component type of the array should be the <a href="http://docs.oracle.com/javase/tutorial/java/generics/erasure.html" rel="nofollow noreferrer"><em>erasure</em></a> of the type parameter:</p><pre><code>public class GenSet&lt;E extends Foo&gt; { // E has an upper bound of Foo

    private Foo[] a; // E erases to Foo, so use Foo[]

    public GenSet(int s) {
        a = new Foo[s];
    }

    ...
}
</code></pre><p>All of this results from a known, and deliberate, weakness of generics in Java: it was implemented using erasure, so "generic" classes don't know what type argument they were created with at run time, and therefore can not provide type-safety unless some explicit mechanism (type-checking) is implemented.</p></body></html>

===ID===
584cbf7e3e2ca508e5f0718f
===QUESTION===
Iterating through a Collection, avoiding ConcurrentModificationException when removing in loop
We all know you can't do this: ConcurrentModificationException  etc... this apparently works sometimes, but not always. Here's some specific code: This, of course, results in: ... even though multiple threads aren't doing it... Anyway. What's the best solution to this problem? How can I remove an item from the collection in a loop without throwing this exception? I'm also using an arbitrary  Collection  here, not necessarily an  ArrayList , so you can't rely on  get . 
===LINK===
http://stackoverflow.com/questions/223918/iterating-through-a-collection-avoiding-concurrentmodificationexception-when-re
===KEYWORDS===
exception necessarily iterating throwing concurrentmodificationexception 
===ANSWER===
1152
<html><body><p><code>Iterator.remove()</code> is safe, you can use it like this:</p><pre><code>List&lt;String&gt; list = new ArrayList&lt;&gt;();

// This is a clever way to create the iterator and call iterator.hasNext() like
// you would do in a while-loop. It would be the same as doing:
//     Iterator&lt;String&gt; iterator = list.iterator();
//     while (iterator.hasNext()) {
for (Iterator&lt;String&gt; iterator = list.iterator(); iterator.hasNext();) {
    String string = iterator.next();
    if (string.isEmpty()) {
        // Remove the current element from the iterator and the list.
        iterator.remove();
    }
}
</code></pre><p>Note that <code>Iterator.remove</code> is the only safe way to modify a collection during iteration; the behavior is unspecified if the underlying collection is modified in any other way while the iteration is in progress.</p><p>Source:</p><p><a href="http://docs.oracle.com/javase/tutorial/collections/interfaces/collection.html" rel="nofollow noreferrer">http://docs.oracle.com/javase/tutorial/collections/interfaces/collection.html</a></p><p>And similarly, if you have a <code>ListIterator</code> and want to <em>add</em> items, you can use <a href="http://docs.oracle.com/javase/8/docs/api/java/util/ListIterator.html#add-E-" rel="nofollow noreferrer"><code>ListIterator#add</code></a>, for the same reason you can use <code>Iterator#remove</code> — it's designed to allow it.</p></body></html>

===ID===
584cbf7f3e2ca508e5f07190
===QUESTION===
Example images for code and mark-up Q&As [closed]
When preparing an  MCVE / SSCCE  that involves images, it is useful to have direct access to images.   The types of images that would cover most questions are - small images in multiple colors or shapes, animated GIFs with/without transparency, JPEGs that are 'pairs' of pictures & can be used in image transitions, tile sets, sprite sheets.. Are there any small (under 30KB), on-site, license & royalty free images we can hot-link to for these types of examples? 
===LINK===
http://stackoverflow.com/questions/19209650/example-images-for-code-and-mark-up-qas
===KEYWORDS===
pairs code transparency jpegs 30kb 
===ANSWER===
43
<html><body><p>Here are some example images for common use, mostly from existing answers on SO.  </p><p><strong>Simple Geometric shapes</strong> generated using Java as originally seen in <a href="http://stackoverflow.com/a/16052085/418556">this answer</a>.  It includes a Java based interface that defines the URLs and makes them easy to access.</p><p><strong>Details:</strong> 32x32 pixel PNG (4 colors x 5 shapes) with partial transparency (along the edges).</p><p><strong>Categories:</strong> <a class="post-tag" href="/questions/tagged/png" rel="tag" title="show questions tagged 'png'">png</a> <a class="post-tag" href="/questions/tagged/icons" rel="tag" title="show questions tagged 'icons'">icons</a></p><p><img src="https://i.stack.imgur.com/gJmeJ.png">
<img src="https://i.stack.imgur.com/L5DGx.png">
<img src="https://i.stack.imgur.com/in9g1.png">
<img src="https://i.stack.imgur.com/IucNt.png">
<img src="https://i.stack.imgur.com/yoKxT.png">  
  <img src="https://i.stack.imgur.com/T5uTa.png">
<img src="https://i.stack.imgur.com/gYxHm.png">
<img src="https://i.stack.imgur.com/1lgtq.png">
<img src="https://i.stack.imgur.com/yBOv3.png">
<img src="https://i.stack.imgur.com/zJ8am.png"><br>
<img src="https://i.stack.imgur.com/IHARa.png">
<img src="https://i.stack.imgur.com/8BGfi.png">
<img src="https://i.stack.imgur.com/6ZXhi.png">
<img src="https://i.stack.imgur.com/Lqkl0.png">
<img src="https://i.stack.imgur.com/c67nr.png">  
  <img src="https://i.stack.imgur.com/wCF8S.png">
<img src="https://i.stack.imgur.com/5v2TX.png">
<img src="https://i.stack.imgur.com/F0JHK.png">
<img src="https://i.stack.imgur.com/4EVv1.png">
<img src="https://i.stack.imgur.com/xj49g.png"><br/></img></img></img></img></img></img></img></img></img></img></br></img></img></img></img></img></img></img></img></img></img></p><p><strong>Chess Pieces</strong> as originally seen on <a href="http://stackoverflow.com/a/18686753/418556">this answer</a> that includes 2 other sprite sets (same image in different colors).</p><p><strong>Details:</strong> 384x128 px (each sprite 64x64 px) PNG with partial transparency.</p><p><strong>Categories:</strong> <a class="post-tag" href="/questions/tagged/png" rel="tag" title="show questions tagged 'png'">png</a> <a class="post-tag" href="/questions/tagged/sprite-sheet" rel="tag" title="show questions tagged 'sprite-sheet'">sprite-sheet</a> <a class="post-tag" href="/questions/tagged/icons" rel="tag" title="show questions tagged 'icons'">icons</a></p><p><img src="https://i.stack.imgur.com/memI0.png"/></p><p>GIF is the only image format that supports animation.  Here are a few examples.</p><p><strong>Categories:</strong> <a class="post-tag" href="/questions/tagged/gif" rel="tag" title="show questions tagged 'gif'">gif</a> <a class="post-tag" href="/questions/tagged/animated-gif" rel="tag" title="show questions tagged 'animated-gif'">animated-gif</a> </p><p><strong>Animated dashed border</strong> as seen in <a href="http://stackoverflow.com/a/9772978/418556">this answer</a>.</p><p><strong>Details:</strong> 100x30 px with filled BG (no transparency)</p><p><img src="https://i.stack.imgur.com/DnzXV.gif"/></p><p><strong>Zooming stars</strong> as seen in <a href="http://stackoverflow.com/a/10836833/418556">this answer</a>, originally developed as a 'screen-shot' of a screensaver.</p><p><strong>Details:</strong> 160x120 px with filled BG (no transparency)</p><p><img src="https://i.stack.imgur.com/iQFxo.gif"/></p><p><strong>Animated Water</strong> as seen in <a href="http://stackoverflow.com/a/17894012/418556">this answer</a> to <a href="http://stackoverflow.com/q/17893429/418556">Animating Tiles In My Game</a>.</p><p><strong>Details:</strong> 60x60 px with filled BG (no transparency)</p><p><img src="https://i.stack.imgur.com/HXCUV.gif"/></p><p><strong>Orbital animation,</strong> originally developed for <a href="http://1point1c.org/" rel="nofollow noreferrer">1.1C</a>.  The orbits of the 'inner' planets (from Mercury to Jupiter, with an extra orbit shown in the thick of the asteroid belt).  Better on a dark BG.</p><p><strong>Details:</strong> 450x450 &amp; 150x150 px animated GIFs with transparency.  </p><p><img src="https://i.stack.imgur.com/OtTIY.gif"><img src="https://i.stack.imgur.com/z9rv7.gif"/></img></p><p><strong>Sunrise &amp; moonset</strong> over the CBD of Sydney, Australia<br><strong>Sunset &amp; Venus over a telescope</strong> on Mt Stromlo, near Canberra, Australia.</br></p><p><strong>Categories:</strong> <a class="post-tag" href="/questions/tagged/jpeg" rel="tag" title="show questions tagged 'jpeg'">jpeg</a> <a class="post-tag" href="/questions/tagged/slideshow" rel="tag" title="show questions tagged 'slideshow'">slideshow</a> + Image Transitions</p><p><strong>Details:</strong> 480x320 px JPEGs x 4.  (Displayed here at 1/2 size.) </p><p><img height="160" src="https://i.stack.imgur.com/XZ4V5.jpg" width="240"><img height="160" src="https://i.stack.imgur.com/7bI1Y.jpg" width="240"><br>
<img height="160" src="https://i.stack.imgur.com/OVOg3.jpg" width="240"><img height="160" src="https://i.stack.imgur.com/lxthA.jpg" width="240"/></img></br></img></img></p><p>This <strong>Mercator map of Earth</strong> can be tiled left/right.  Originally seen on <a href="http://stackoverflow.com/a/18825844/418556">this answer</a>.  The answer also includes a second version of the image that shows a semi-transparent line for the equator (which is not in the center, but significantly below it).</p><p><strong>Details:</strong> 640x316 px (add 44 px at bottom to center equator) PNG with transparent BG.  </p><p><strong>Categories:</strong> <a class="post-tag" href="/questions/tagged/png" rel="tag" title="show questions tagged 'png'">png</a> <a class="post-tag" href="/questions/tagged/tile" rel="tag" title="show questions tagged 'tile'">tile</a> <a class="post-tag" href="/questions/tagged/animation" rel="tag" title="show questions tagged 'animation'">animation</a> (scrolling)</p><p><img src="https://i.stack.imgur.com/P59NF.png"/></p><p>For getting the URLs of the images, you might 'context click' on the image as seen in the browser and either: </p><p>Alternately:</p></body></html>

===ID===
584cbf7f3e2ca508e5f07191
===QUESTION===
What is an efficient way to implement a singleton pattern in Java?
What is an efficient way to implement a singleton pattern in Java? 
===LINK===
http://stackoverflow.com/questions/70689/what-is-an-efficient-way-to-implement-a-singleton-pattern-in-java
===KEYWORDS===
efficient implement java 
===ANSWER===
613
<html><body><p>Use an enum:</p><pre><code>public enum Foo {
    INSTANCE;
}
</code></pre><p>Joshua Bloch explained this approach in his <a href="http://sites.google.com/site/io/effective-java-reloaded" rel="nofollow noreferrer">Effective Java Reloaded</a> talk at Google I/O 2008: <a href="http://www.youtube.com/watch?v=pi_I7oD_uGI#t=28m50s" rel="nofollow noreferrer">link to video</a>. Also see slides 30-32 of his presentation (<a href="https://14b1424d-a-62cb3a1a-s-sites.googlegroups.com/site/io/effective-java-reloaded/effective_java_reloaded.pdf?attachauth=ANoY7crKCOet2NEUGW7RV1XfM-Jn4z8YJhs0qJM11OhLRnFW_JbExkJtvJ3UJvTE40dhAciyWcRIeGJ-n3FLGnMOapHShHINh8IY05YViOJoZWzaohMtM-s4HCi5kjREagi8awWtcYD0_6G7GhKr2BndToeqLk5sBhZcQfcYIyAE5A4lGNosDCjODcBAkJn8EuO6572t2wU1LMSEUgjvqcf4I-Fp6VDhDvih_XUEmL9nuVJQynd2DRpxyuNH1SpJspEIdbLw-WWZ&amp;attredirects=0" rel="nofollow noreferrer">effective_java_reloaded.pdf</a>):</p><pre><code>public enum Elvis {
    INSTANCE;
    private final String[] favoriteSongs =
        { "Hound Dog", "Heartbreak Hotel" };
    public void printFavorites() {
        System.out.println(Arrays.toString(favoriteSongs));
    }
}
</code></pre><p><strong>Edit:</strong> An <a href="http://www.ddj.com/java/208403883?pgno=3" rel="nofollow noreferrer">online portion of "Effective Java"</a> says: </p><p>"This approach is functionally equivalent to the public field approach, except that it is more concise, provides the serialization machinery for free, and provides an ironclad guarantee against multiple instantiation, even in the face of sophisticated serialization or reflection attacks. While this approach has yet to be widely adopted, <strong>a single-element enum type is the best way to implement a singleton</strong>."</p></body></html>

===ID===
584cbf803e2ca508e5f07192
===QUESTION===
Scanner is skipping nextLine() after using next(), nextInt() or other nextFoo() methods
I am using  Scanner  methods  nextInt()  and  nextLine()  for reading input. Basically, it looks like this: The problem is that after entering the numerical value, the first  input.nextLine()  is skipped and the second  input.nextLine()  is executed, so that my output looks like this: I tested my application and it looks like the problem lies in using  input.nextInt() . If I delete it, then both  string1 = input.nextLine()  and  string2 = input.nextLine()  are executed as I want them to be. 
===LINK===
http://stackoverflow.com/questions/7056749/scanner-issue-when-using-nextline-after-nextxxx
===KEYWORDS===
nextline skipped scanner nextfoo application 
===ANSWER===
288
<html><body><p>Thats because the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextInt%28%29"><code>Scanner#nextInt</code></a> method does not consume the <em>last newline</em> character of your input, and thus that <em>newline</em> is consumed in the next call to <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextLine%28%29"><code>Scanner#nextLine</code></a></p><p><strong>Workaround:</strong></p><p>Either fire a blank <code>Scanner#nextLine</code> call after <code>Scanner#nextInt</code> to consume rest of that line including <em>newline</em> </p><pre><code>int option = input.nextInt();
input.nextLine();  // Consume newline left-over
String str1 = input.nextLine();
</code></pre><p>Or, it would be even better, if you read the input through <code>Scanner#nextLine</code> and convert your input to integer using <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#parseInt(java.lang.String)"><code>Integer#parseInt(String)</code></a> method.</p><pre><code>int option = 0;
try {
    option = Integer.parseInt(input.nextLine());
} catch (NumberFormatException e) {
    e.printStackTrace();
}
String str1 = input.nextLine();
</code></pre><p>You will encounter the similar behaviour when you use <code>Scanner#nextLine</code> after <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#next%28%29"><code>Scanner#next()</code></a> or any <code>Scanner#nextFoo</code> method (except <code>nextLine</code> itself).</p></body></html>

===ID===
584cbf803e2ca508e5f07193
===QUESTION===
Non-static variable cannot be referenced from a static context
I was taught poorly at first, and so I still don't understand everything about  static . My error is with every single variable that I declare and then try to use later inside my methods, I get the "non-static variable cannot ..." error. I can simply put all the rough coding of my methods inside my cases, and it works, but then I cannot use recursion. What I really need is someone to help on the syntax and point me on the right direction of how to have my methods recognize my variables at the top, like  compareCount , etc.: 
===LINK===
http://stackoverflow.com/questions/2559527/non-static-variable-cannot-be-referenced-from-a-static-context
===KEYWORDS===
variables direction referenced don methods 
===ANSWER===
130
<html><body><p>You must understand the difference between a class and an instance of that class. If you see a car on the street, you know immediately that it's a car even if you can't see which model or type. This is because you compare what you see with the <em>class</em> "car". The class contains which is similar to all cars. Think of it as a template or an idea.</p><p>At the same time, the car you see is an instance of the class "car" since it has all the properties which you expect: There is someone driving it, it has an engine, wheels.</p><p>So the class says "all cars have a color" and the instance says "this specific car is red".</p><p>In the OO world, you define the class and inside the class, you define a field of type <code>Color</code>. When the class is instantiated (when you create a specific instance), memory is reserved for the color and you can give this specific instance a color. Since these attributes are specific, they are non-static.</p><p>Static fields and methods are shared with all instances. They are for values which are specific to the class and not a specific instance. For methods, this usually are global helper methods (like <code>Integer.parseInt()</code>). For fields, it's usually constants (like car types, i.e. something where you have a limited set which doesn't change often).</p><p>To solve your problem, you need to instantiate an instance (create an object) of your class so the runtime can reserve memory for the instance (otherwise, different instances would overwrite each other which you don't want).</p><p>In your case, try this code as a starting block:</p><pre><code>public static void main (String[] args)
{
    try
    {
        MyProgram7 obj = new MyProgram7 ();
        obj.run (args);
    }
    catch (Exception e)
    {
        e.printStackTrace ();
    }
}

// instance variables here

public void run (String[] args) throws Exception
{
    // put your code here
}
</code></pre><p>The new <code>main()</code> method creates an instance of the class it contains (sounds strange but since <code>main()</code> is created with the class instead of with the instance, it can do this) and then calls an instance method (<code>run()</code>).</p></body></html>

===ID===
584cbf813e2ca508e5f07194
===QUESTION===
Is there a unique Android device ID?
Do Android devices have a unique ID, and if so, what is a simple way to access it using Java? 
===LINK===
http://stackoverflow.com/questions/2785485/is-there-a-unique-android-device-id
===KEYWORDS===
simple access java 
===ANSWER===
1177
<html><body><p><a href="http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID" rel="nofollow noreferrer"><code>Settings.Secure#ANDROID_ID</code></a> returns the Android ID as an <em>unique</em> 64-bit hex string.</p><pre><code>import android.provider.Settings.Secure;

private String android_id = Secure.getString(getContext().getContentResolver(),
                                                        Secure.ANDROID_ID); 
</code></pre><p>When reviewing this as a possible solution, please consider <a href="http://stackoverflow.com/a/2853253/166712">Joe's answer</a> below instead as an alternative.</p></body></html>

===ID===
584cbf823e2ca508e5f07195
===QUESTION===
Evaluating a math expression given in string form
I'm trying to write a Java routine to evaluate simple math expressions from  String  values like: I want to avoid a lot of if-then-else statements.
How can I do this? 
===LINK===
http://stackoverflow.com/questions/3422673/evaluating-a-math-expression-given-in-string-form
===KEYWORDS===
write avoid statements evaluating lot 
===ANSWER===
258
<html><body><p>With JDK1.6, you can use the built-in Javascript engine.</p><pre><code>import javax.script.ScriptEngineManager;
import javax.script.ScriptEngine;

public class Test {
  public static void main(String[] args) throws Exception{
    ScriptEngineManager mgr = new ScriptEngineManager();
    ScriptEngine engine = mgr.getEngineByName("JavaScript");
    String foo = "40+2";
    System.out.println(engine.eval(foo));
    } 
}
</code></pre></body></html>

===ID===
584cbf823e2ca508e5f07196
===QUESTION===
Why am I getting a NoClassDefFoundError in Java?
I am getting a  NoClassDefFoundError  when I run my Java application.  What is typically the cause of this? 
===LINK===
http://stackoverflow.com/questions/34413/why-am-i-getting-a-noclassdeffounderror-in-java
===KEYWORDS===
typically noclassdeffounderror run java 
===ANSWER===
130
<html><body><p>This is caused when there is a class file that your code depends on and it is present at compile time but not found at runtime. Look for differences in your build time and runtime  classpaths. </p></body></html>

===ID===
584cbf833e2ca508e5f07197
===QUESTION===
Sort ArrayList of custom Objects by property
I read about sorting ArrayLists using a Comparator but in all of the examples people used  compareTo  which according to some research is a method for Strings. I wanted to sort an ArrayList of custom objects by one of their properties: a Date object
( getStartDay() ). Normally I compare them by  item1.getStartDate().before(item2.getStartDate())  so I was wondering whether I could write something like: 
===LINK===
http://stackoverflow.com/questions/2784514/sort-arraylist-of-custom-objects-by-property
===KEYWORDS===
sort write properties item2 comparator 
===ANSWER===
949
<html><body><p>Since <a href="//docs.oracle.com/javase/8/docs/api/java/util/Date.html" rel="nofollow noreferrer"><code>Date</code></a> implements <a href="//docs.oracle.com/javase/8/docs/api/java/lang/Comparable.html" rel="nofollow noreferrer"><code>Comparable</code></a>, it has a <code>compareTo</code> method just like <code>String</code> does.</p><p>So your custom <a href="//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html" rel="nofollow noreferrer"><code>Comparator</code></a> could look like this:</p><pre><code>public class CustomComparator implements Comparator&lt;MyObject&gt; {
    @Override
    public int compare(MyObject o1, MyObject o2) {
        return o1.getStartDate().compareTo(o2.getStartDate());
    }
}
</code></pre><p>The <code>compare()</code> method must return an <code>int</code>, so you couldn't directly return a <code>boolean</code> like you were planning to anyway.</p><p>Your sorting code would be just about like you wrote:</p><pre><code>Collections.sort(Database.arrayList, new CustomComparator());
</code></pre><p>A slightly shorter way to write all this, if you don't need to reuse your comparator, is to write it as an inline anonymous class:</p><pre><code>Collections.sort(Database.arrayList, new Comparator&lt;MyObject&gt;() {
    @Override
    public int compare(MyObject o1, MyObject o2) {
        return o1.getStartDate().compareTo(o2.getStartDate());
    }
});
</code></pre><p>You can now write the last example in a shorter form by using a <a href="//docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html" rel="nofollow noreferrer">lambda expression</a> for the <code>Comparator</code>:</p><pre><code>Collections.sort(Database.arrayList, 
                        (o1, o2) -&gt; o1.getStartDate().compareTo(o2.getStartDate()));
</code></pre><p>And <code>List</code> has a <a href="//docs.oracle.com/javase/8/docs/api/java/util/List.html#sort-java.util.Comparator-" rel="nofollow noreferrer"><code>sort(Comparator)</code></a> method, so you can shorten this even further:</p><pre><code>Database.arrayList.sort((o1, o2) -&gt; o1.getStartDate().compareTo(o2.getStartDate()));
</code></pre><p>This is such a common idiom that there's <a href="//docs.oracle.com/javase/8/docs/api/java/util/Comparator.html#comparing-java.util.function.Function-" rel="nofollow noreferrer">a built-in method</a> to generate a <code>Comparator</code> for a class with a <code>Comparable</code> key:</p><pre><code>Database.arrayList.sort(Comparator.comparing(MyObject::getStartDate));
</code></pre><p>All of these are equivalent forms.</p></body></html>

===ID===
584cbf833e2ca508e5f07198
===QUESTION===
Why not use Double or Float to represent currency?
I've always been told  never  to represent money with  double  or  float  types, and this time I pose the question to you: why?  I'm sure there is a very good reason, I simply do not know what it is. 
===LINK===
http://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency
===KEYWORDS===
float double pose question simply 
===ANSWER===
536
<html><body><p>Because floats and doubles cannot accurately represent the base 10 multiples we use for money. This issue isn't just for Java, it's for any programming language that uses native floating-point types, as it stems from how computers handle floating-point numbers by default.</p><p>This is how an <a href="http://en.wikipedia.org/wiki/IEEE_floating_point" rel="nofollow noreferrer">IEEE-754</a> floating-point number works: it dedicates a bit for the sign, a few bits to store an exponent for the base, and the rest for a multiple of that elevated base. This leads to numbers like 10.25 being represented in a form similar to 1025 * 10<sup>-2</sup>; except that instead of the base being 10, for <code>float</code>s and <code>double</code>s, it's two, so that would be 164 * 2<sup>-4</sup>. (That's still not exactly how they are represented in hardware, but this is simple enough and the math holds the same way.)</p><p>Even in base 10, this notation cannot accurately represent most simple fractions. For instance, with most calculators, 1/3 results in a repeating 0.333333333333, with as many 3's as the digital display allows, because you just can't write 1/3 in decimal notation. However, for the purpose of money (at least for countries whose money value is within an order of magnitude of the US dollar), in most scenarios all you need is to be able to store multiples of 10<sup>-2</sup>, so we don't really care if 1/3 doesn't have an exact representation as an integer times a power of 10, and even the cheapest calculators handle cents just fine.</p><p>The problem with floats and doubles is that the <em>vast majority</em> of money-like numbers don't have an exact representation as a integer times a power of two. In fact, the only fractions of a hundred between 0/100 and 100/100 (which are significant when dealing with money because they're integer cents) that can be represented exactly as an IEEE-754 binary floating-point number are 0, 0.25, 0.5, 0.75 and 1. All the others are off by a small amount.</p><p>Representing money as a <code>double</code> or <code>float</code> will probably look good at first as the software rounds off the tiny errors, but as you perform more additions, subtractions, multiplications and divisions on inexact numbers, you'll lose more and more precision as the errors add up. This makes floats and doubles inadequate for dealing with money, where perfect accuracy for multiples of base 10 powers is required.</p><p>A solution that works in just about any language is to use integers instead, and count cents. For instance, 1025 would be $10.25. Several languages also have built-in types to deal with money. Among others, Java  has the <a href="http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html" rel="nofollow noreferrer"><code>BigDecimal</code></a> class, and C# has the <a href="http://msdn.microsoft.com/en-us/library/364x0z75.aspx" rel="nofollow noreferrer"><code>decimal</code></a> type.</p></body></html>

===ID===
584cbf843e2ca508e5f07199
===QUESTION===
Download a file with Android, and showing the progress in a ProgressDialog
I am trying to write a simple application that gets updated. For this I need a simple function that can download a file and  show the current progress  in a  ProgressDialog . I know how to do the  ProgressDialog , but I'm not sure how to display the current progress and how to download the file in the first place. 
===LINK===
http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog
===KEYWORDS===
updated show showing write place 
===ANSWER===
1480
<html><body><p>There are many ways to download files. Following I will post most common ways; it is up to you to decide which method is better for your app.</p><p>This method will allow you to execute some background processes and update the UI at the same time (in this case, we'll update a progress bar).</p><p>This is an example code:</p><pre><code>// declare the dialog as a member field of your activity
ProgressDialog mProgressDialog;

// instantiate it within the onCreate method
mProgressDialog = new ProgressDialog(YourActivity.this);
mProgressDialog.setMessage("A message");
mProgressDialog.setIndeterminate(true);
mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
mProgressDialog.setCancelable(true);

// execute this when the downloader must be fired
final DownloadTask downloadTask = new DownloadTask(YourActivity.this);
downloadTask.execute("the url to the file you want to download");

mProgressDialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
    @Override
    public void onCancel(DialogInterface dialog) {
        downloadTask.cancel(true);
    }
});
</code></pre><p>The <code>AsyncTask</code> will look like this:</p><pre><code>// usually, subclasses of AsyncTask are declared inside the activity class.
// that way, you can easily modify the UI thread from here
private class DownloadTask extends AsyncTask&lt;String, Integer, String&gt; {

    private Context context;
    private PowerManager.WakeLock mWakeLock;

    public DownloadTask(Context context) {
        this.context = context;
    }

    @Override
    protected String doInBackground(String... sUrl) {
        InputStream input = null;
        OutputStream output = null;
        HttpURLConnection connection = null;
        try {
            URL url = new URL(sUrl[0]);
            connection = (HttpURLConnection) url.openConnection();
            connection.connect();

            // expect HTTP 200 OK, so we don't mistakenly save error report
            // instead of the file
            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {
                return "Server returned HTTP " + connection.getResponseCode()
                        + " " + connection.getResponseMessage();
            }

            // this will be useful to display download percentage
            // might be -1: server did not report the length
            int fileLength = connection.getContentLength();

            // download the file
            input = connection.getInputStream();
            output = new FileOutputStream("/sdcard/file_name.extension");

            byte data[] = new byte[4096];
            long total = 0;
            int count;
            while ((count = input.read(data)) != -1) {
                // allow canceling with back button
                if (isCancelled()) {
                    input.close();
                    return null;
                }
                total += count;
                // publishing the progress....
                if (fileLength &gt; 0) // only if total length is known
                    publishProgress((int) (total * 100 / fileLength));
                output.write(data, 0, count);
            }
        } catch (Exception e) {
            return e.toString();
        } finally {
            try {
                if (output != null)
                    output.close();
                if (input != null)
                    input.close();
            } catch (IOException ignored) {
            }

            if (connection != null)
                connection.disconnect();
        }
        return null;
    }
</code></pre><p>The method above (<code>doInBackground</code>) runs always on a background thread. You shouldn't do any UI tasks there. On the other hand, the <code>onProgressUpdate</code> and <code>onPreExecute</code> run on the UI thread, so there you can change the progress bar:</p><pre><code>    @Override
    protected void onPreExecute() {
        super.onPreExecute();
        // take CPU lock to prevent CPU from going off if the user 
        // presses the power button during download
        PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
        mWakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,
             getClass().getName());
        mWakeLock.acquire();
        mProgressDialog.show();
    }

    @Override
    protected void onProgressUpdate(Integer... progress) {
        super.onProgressUpdate(progress);
        // if we get here, length is known, now set indeterminate to false
        mProgressDialog.setIndeterminate(false);
        mProgressDialog.setMax(100);
        mProgressDialog.setProgress(progress[0]);
    }

    @Override
    protected void onPostExecute(String result) {
        mWakeLock.release();
        mProgressDialog.dismiss();
        if (result != null)
            Toast.makeText(context,"Download error: "+result, Toast.LENGTH_LONG).show();
        else
            Toast.makeText(context,"File downloaded", Toast.LENGTH_SHORT).show();
    }
</code></pre><p>For this to run, you need the WAKE_LOCK permission.</p><pre><code>&lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;
</code></pre><p>The big question here is: <em>how do I update my activity from a service?</em>. In the next example we are going to use two classes you may not be aware of: <code>ResultReceiver</code> and <code>IntentService</code>. <code>ResultReceiver</code> is the one that will allow us to update our thread from a service; <code>IntentService</code> is a subclass of <code>Service</code> which spawns a thread to do background work from there (you should know that a <code>Service</code> runs actually in the same thread of your app; when you extends <code>Service</code>, you must manually spawn new threads to run CPU blocking operations).</p><p>Download service can look like this:</p><pre><code>public class DownloadService extends IntentService {
    public static final int UPDATE_PROGRESS = 8344;
    public DownloadService() {
        super("DownloadService");
    }
    @Override
    protected void onHandleIntent(Intent intent) {
        String urlToDownload = intent.getStringExtra("url");
        ResultReceiver receiver = (ResultReceiver) intent.getParcelableExtra("receiver");
        try {
            URL url = new URL(urlToDownload);
            URLConnection connection = url.openConnection();
            connection.connect();
            // this will be useful so that you can show a typical 0-100% progress bar
            int fileLength = connection.getContentLength();

            // download the file
            InputStream input = new BufferedInputStream(connection.getInputStream());
            OutputStream output = new FileOutputStream("/sdcard/BarcodeScanner-debug.apk");

            byte data[] = new byte[1024];
            long total = 0;
            int count;
            while ((count = input.read(data)) != -1) {
                total += count;
                // publishing the progress....
                Bundle resultData = new Bundle();
                resultData.putInt("progress" ,(int) (total * 100 / fileLength));
                receiver.send(UPDATE_PROGRESS, resultData);
                output.write(data, 0, count);
            }

            output.flush();
            output.close();
            input.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        Bundle resultData = new Bundle();
        resultData.putInt("progress" ,100);
        receiver.send(UPDATE_PROGRESS, resultData);
    }
}
</code></pre><p>Add the service to your manifest:</p><pre><code>&lt;service android:name=".DownloadService"/&gt;
</code></pre><p>And the activity will look like this:</p><pre><code>// initialize the progress dialog like in the first example

// this is how you fire the downloader
mProgressDialog.show();
Intent intent = new Intent(this, DownloadService.class);
intent.putExtra("url", "url of the file to download");
intent.putExtra("receiver", new DownloadReceiver(new Handler()));
startService(intent);
</code></pre><p>Here is were <code>ResultReceiver</code> comes to play:</p><pre><code>private class DownloadReceiver extends ResultReceiver{
    public DownloadReceiver(Handler handler) {
        super(handler);
    }

    @Override
    protected void onReceiveResult(int resultCode, Bundle resultData) {
        super.onReceiveResult(resultCode, resultData);
        if (resultCode == DownloadService.UPDATE_PROGRESS) {
            int progress = resultData.getInt("progress");
            mProgressDialog.setProgress(progress);
            if (progress == 100) {
                mProgressDialog.dismiss();
            }
        }
    }
}
</code></pre><p><a href="http://github.com/casidiablo/groundy" rel="nofollow noreferrer"><strong>Groundy</strong></a> is a library that basically helps you run pieces of code in a background service, and it is based on the <code>ResultReceiver</code> concept shown above. This library is <strong>deprecated</strong> at the moment. This is how the <strong>whole</strong> code would look like:</p><p>The activity where you are showing the dialog...</p><pre><code>public class MainActivity extends Activity {

    private ProgressDialog mProgressDialog;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        findViewById(R.id.btn_download).setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
                String url = ((EditText) findViewById(R.id.edit_url)).getText().toString().trim();
                Bundle extras = new Bundler().add(DownloadTask.PARAM_URL, url).build();
                Groundy.create(DownloadExample.this, DownloadTask.class)
                        .receiver(mReceiver)
                        .params(extras)
                        .queue();

                mProgressDialog = new ProgressDialog(MainActivity.this);
                mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
                mProgressDialog.setCancelable(false);
                mProgressDialog.show();
            }
        });
    }

    private ResultReceiver mReceiver = new ResultReceiver(new Handler()) {
        @Override
        protected void onReceiveResult(int resultCode, Bundle resultData) {
            super.onReceiveResult(resultCode, resultData);
            switch (resultCode) {
                case Groundy.STATUS_PROGRESS:
                    mProgressDialog.setProgress(resultData.getInt(Groundy.KEY_PROGRESS));
                    break;
                case Groundy.STATUS_FINISHED:
                    Toast.makeText(DownloadExample.this, R.string.file_downloaded, Toast.LENGTH_LONG);
                    mProgressDialog.dismiss();
                    break;
                case Groundy.STATUS_ERROR:
                    Toast.makeText(DownloadExample.this, resultData.getString(Groundy.KEY_ERROR), Toast.LENGTH_LONG).show();
                    mProgressDialog.dismiss();
                    break;
            }
        }
    };
}
</code></pre><p>A <code>GroundyTask</code> implementation used by <strong>Groundy</strong> to download the file and show the progress:</p><pre><code>public class DownloadTask extends GroundyTask {    
    public static final String PARAM_URL = "com.groundy.sample.param.url";

    @Override
    protected boolean doInBackground() {
        try {
            String url = getParameters().getString(PARAM_URL);
            File dest = new File(getContext().getFilesDir(), new File(url).getName());
            DownloadUtils.downloadFile(getContext(), url, dest, DownloadUtils.getDownloadListenerForTask(this));
            return true;
        } catch (Exception pokemon) {
            return false;
        }
    }
}
</code></pre><p>And just add this to the manifest:</p><pre><code>&lt;service android:name="com.codeslap.groundy.GroundyService"/&gt;
</code></pre><p>It couldn't be easier I think. Just grab the latest jar <a href="https://github.com/casidiablo/groundy/downloads" rel="nofollow noreferrer">from Github</a> and you are ready to go. Keep in mind that <strong>Groundy</strong>'s main purpose is to make calls to external REST apis in a background service and post results to the UI with easily. If you are doing something like that in your app, it could be really useful.</p><p>GingerBread brought a new feature, <code>DownloadManager</code>, which allows you to download files easily and delegate the hard work of handling threads, streams, etc. to the system.</p><p>First, let's see a utility method:</p><pre><code>/**
 * @param context used to check the device version and DownloadManager information
 * @return true if the download manager is available
 */
public static boolean isDownloadManagerAvailable(Context context) {

    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.GINGERBREAD) {
        return true;
    }
    return false;
}
</code></pre><p>Method's name explains it all. Once you are sure <code>DownloadManager</code> is available, you can do something like this:</p><pre><code>String url = "url you want to download";
DownloadManager.Request request = new DownloadManager.Request(Uri.parse(url));
request.setDescription("Some descrition");
request.setTitle("Some title");
// in order for this if to run, you must use the android 3.2 to compile your app
if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {
    request.allowScanningByMediaScanner();
    request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);
}
request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, "name-of-the-file.ext");

// get download service and enqueue file
DownloadManager manager = (DownloadManager) getSystemService(Context.DOWNLOAD_SERVICE);
manager.enqueue(request);
</code></pre><p>Download progress will be showing in the notification bar.</p><p>First and second methods are just the tip of the iceberg. There are lots of things you have to keep in mind if you want your app to be robust. Here is a brief list:</p><p>Unless you need detailed control of the download process, then consider using <code>DownloadManager</code> (3) because it already handles most of the items listed above.</p><p>But also consider that your needs may change. For example, <code>DownloadManager</code> <a href="http://stackoverflow.com/questions/35191718">does no response caching</a>. It will blindly download the same big file multiple times. There's no easy way to fix it after the fact. Where if you start with a basic <code>HttpURLConnection</code> (1, 2), then all you need is to add an <code>HttpResponseCache</code>. So the initial effort of learning the basic, standard tools can be a good investment.</p></body></html>

===ID===
584cbf843e2ca508e5f0719a
===QUESTION===
NullPointerException accessing views in onCreate()
This is a canonical question for a problem frequently posted on StackOverflow. I'm following a tutorial. I've created a new activity using a wizard. I get  NullPointerException  when attempting to call a method on  View s obtained with  findViewById()  in my activity  onCreate() . Activity  onCreate() : Layout XML ( fragment_main.xml ): 
===LINK===
http://stackoverflow.com/questions/23653778/nullpointerexception-accessing-views-in-oncreate
===KEYWORDS===
obtained xml findviewbyid attempting wizard 
===ANSWER===
55
<html><body><p>The tutorial is probably outdated, attempting to create an activity-based UI instead of the fragment-based UI preferred by wizard-generated code.</p><p>The view is in the fragment layout (<code>fragment_main.xml</code>)  and not in the activity layout (<code>activity_main.xml</code>). <code>onCreate()</code> is too early in the lifecycle to find it in the activity view hierarchy, and a <code>null</code> is returned. Invoking a method on <code>null</code> causes the NPE.</p><p>The preferred solution is to move the code to the fragment <code>onCreateView()</code>, calling <code>findViewById()</code> on the inflated fragment layout <code>rootView</code>:</p><pre><code>@Override
public View onCreateView(LayoutInflater inflater, ViewGroup container,
    Bundle savedInstanceState) {
  View rootView = inflater.inflate(R.layout.fragment_main, container,
      false);

  View something = rootView.findViewById(R.id.something); // not activity findViewById()
  something.setOnClickListener(new View.OnClickListener() { ... });

  return rootView;
}
</code></pre><p>As a side note, the fragment layout will eventually be a part of the activity view hierarchy and discoverable with activity <code>findViewById()</code> but only after the fragment transaction has been run. Pending fragment transactions get executed in <code>super.onStart()</code> after <code>onCreate()</code>.</p></body></html>

===ID===
584cbf853e2ca508e5f0719b
===QUESTION===
Calling awt Frame methods from subclass
This question is about Frames, Java and  Processing . This questions sounds pretty convoluted but its really not. I'll try keep this to a simple minimum. I'm creating a small ball in a maze game to get my head around physics and rendering. It's been a good experience so far but I've hit a bit of a brick wall. 
The general layout I decided on was to contain PApplets within a AWT Frame and have the Frame close. The reason for this is because I was told that you should only have on instance of a Papplet at a time.  PApplet  is the  Applet  class in  Processing , a rendering library.  I have 3 classes here including the main the exampleFrame class the main What needs to happen when mousePressed == ebtn is all the stuff in the Frame will be removed and a Highscores Screen will be loaded. highscores is almost the same as menu. There is no need to post code as there is enough here. The second class is the one which acts as a frame and holds the PApplet Bottom line, has anyone have any idea how to call the Frame methods from the PApplet or another way to remove all PApplets contents and load another PApplet in? 
===LINK===
http://stackoverflow.com/questions/5665156/calling-awt-frame-methods-from-subclass
===KEYWORDS===
load papplet frame idea rendering 
===ANSWER===
7
<html><body><p>In order to answer <strong>How to call the Frame methods from the PApplet?</strong>, I have modified your code snippet to bare minimum. In this modified version when the user click mouse button a <code>System.out</code> is fired.</p><p>Now there are two ways in which you can access your <code>Frame</code> object. But before that let me state these two points:</p><p><strong>Like this:</strong></p><pre><code>javax.swing.JPanel
    javax.swing.JLayeredPane
        javax.swing.JRootPane
            test.ExampleFrame
</code></pre><p><strong>&gt;&gt;Code</strong></p><p>** Checkout the comments in the code**</p><p><strong>Modified ExampleFrame.java</strong></p><pre><code>import java.awt.BorderLayout;    
import javax.swing.JFrame;    
import processing.core.PApplet;

public class ExampleFrame extends JFrame
{
    private static final long serialVersionUID = 4792534036194728580L;
    PApplet app;

    public ExampleFrame(PApplet emApp)
    {
        super("Ball Maze Game");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLocation(200, 200);

        app = emApp;
        setSize(615,438);
        setVisible(true);

        setLayout(new BorderLayout());

        add(app, BorderLayout.CENTER);

        // Setting my frame object
        app.frame = this;       
        app.init();
    }

    // Sample Method
    public void sampleMethod(String msg)
    {
        System.out.println("I think '"+ msg +"' called me !!");
    }
}
</code></pre><p><strong>Modified Menu.java</strong></p><pre><code>import java.awt.Container;

import processing.core.PApplet;
import processing.core.PImage;

public class Menu extends PApplet
{
    private static final long serialVersionUID = -6557167654705489372L;

    PImage background;
    static String tab = "";

    //simple constructor
    public Menu()
    {

    }

    public void setup()
    {
        size(600, 400);
        smooth();

        background = loadImage("C:/temp/background.jpg");
    }

    public void draw()
    {
        image(background, 0, 0);
    }

    public void mousePressed()
    {
        Container p = getParent();
        tab = "";

        // FIRST WAY OF ACCESSING PARENT FRAME
        while(p != null)
        {
            //printParentTree(p);
            if(p instanceof ExampleFrame)
            {
                ExampleFrame myframe = (ExampleFrame)p;
                myframe.sampleMethod("First Way");
                break;
            }
            p = p.getParent();
        }

        // SECOND WAY OF ACCESSING PARENT FRAME     
        if(frame != null &amp;&amp; (frame instanceof ExampleFrame))
        {
            ExampleFrame myframe = (ExampleFrame)p;
            myframe.sampleMethod("Second Way");
        }
    }

    void printParentTree(Container p) 
    {
        System.out.println(tab+p.getClass().getName());
        tab +='\t';
    }
}
</code></pre><p>Checkout the <code>public void mousePressed()</code> method.</p><p>For completeness, I am also including Main.java.</p><pre><code>public class Main {
    public static void main(String[] args){
        new ExampleFrame(new Menu());
    }
}
</code></pre><p>Now to answer <strong>Remove all PApplets contents and load another PApplet in</strong></p><p>Well I have not tested it. But you can add a <code>JPanel</code> to your <code>JApplet</code> and do all your drawing on that i.e creating child controls etc. When feel like redrawing then call <code>JPanel.removeAll()</code>. Which as per javadoc: </p><p>Removes all the components from this
  container. This method also notifies
  the layout manager to remove the
  components from this container's
  layout via the removeLayoutComponent
  method.</p><p>After this call <code>repaint</code> on the <code>JPanel</code>. Try it out, it might work :).</p></body></html>

===ID===
584cbf853e2ca508e5f0719c
===QUESTION===
Connect Java to a MySQL database
How do you connect to a MySQL database in Java? 
===LINK===
http://stackoverflow.com/questions/2839321/connect-java-to-a-mysql-database
===KEYWORDS===
java connect 
===ANSWER===
114
<html><body><p><code>DriverManager</code> is a fairly old way of doing things. The better way is to get a <code>DataSource</code>, either by looking one up that your app server container already configured for you:</p><pre><code>Context context = new InitialContext();
DataSource dataSource = (DataSource) context.lookup("java:comp/env/jdbc/myDB");
</code></pre><p>or instantiating and configuring one from your database driver directly:</p><pre><code>MysqlDataSource dataSource = new MysqlDataSource();
dataSource.setUser("scott");
dataSource.setPassword("tiger");
dataSource.setServerName("myDBHost.example.org");
</code></pre><p>and then obtain connections from it, same as above:</p><pre><code>Connection conn = dataSource.getConnection();
Statement stmt = conn.createStatement();
ResultSet rs = stmt.executeQuery("SELECT ID FROM USERS");
...
rs.close();
stmt.close();
conn.close();
</code></pre></body></html>

===ID===
584cbf863e2ca508e5f0719d
===QUESTION===
How do I import the javax.servlet API in my Eclipse project?
I want to develop with Servlets in Eclipse, but it says that the package  javax.servlet  cannot be resolved. How can I add  javax.servlet  package to my Eclipse project? 
===LINK===
http://stackoverflow.com/questions/4076601/how-do-i-import-the-javax-servlet-api-in-my-eclipse-project
===KEYWORDS===
resolved develop servlets eclipse import 
===ANSWER===
322
<html><body><p>Ensure that you're using at least <a href="http://www.eclipse.org/downloads/" rel="nofollow noreferrer">Eclipse IDE for <strong>Java EE</strong> developers</a> (with the <strong>EE</strong>). It contains development tools to create dynamic web projects and easily integrate servletcontainers (those tools are part of Web Tools Platform, WTP). In case you already had Eclipse IDE for Java (without EE), and manually installed some EE related plugins, then chances are that it wasn't done properly. You'd best trash it and grab the real Eclipse IDE for Java EE one.</p><p>You also need to ensure that you already have a servletcontainer installed on your machine which implements at least the same Servlet API version as the servletcontainer in the production environment, for example <a href="http://tomcat.apache.org" rel="nofollow noreferrer">Apache Tomcat</a>, <a href="http://glassfish.java.net" rel="nofollow noreferrer">Oracle GlassFish</a>, <a href="http://www.jboss.org/jbossas" rel="nofollow noreferrer">JBoss AS</a>/<a href="http://www.wildfly.org/" rel="nofollow noreferrer">WildFly</a>, etc. Usually, just downloading the ZIP file and extracting it is sufficient. In case of Tomcat, do <em>not</em> download the EXE format, that's only for Windows based production environments. See also a.o. <a href="http://stackoverflow.com/questions/5064733">Several ports (8005, 8080, 8009) required by Tomcat Server at localhost are already in use</a>.</p><p>A servletcontainer is a concrete implementation of the Servlet API. Note that the <a href="http://www.oracle.com/technetwork/java/javaee/downloads/index.html" rel="nofollow noreferrer">Java EE SDK</a> download at Oracle.com basically contains GlassFish. So if you happen to already have downloaded Java EE SDK, then you basically already have GlassFish. Also note that for example GlassFish and JBoss AS/WildFly are <em>more</em> than just a servletcontainer, they also supports JSF, EJB, JPA and all other Java EE fanciness. See also a.o. <a href="http://stackoverflow.com/questions/7295096">What exactly is Java EE?</a></p><p>Once having installed both Eclipse for Java EE and a servletcontainer on your machine, do the following steps in Eclipse:</p><p><strong>Integrate servletcontainer in Eclipse</strong></p><p>a. <strong>Via Servers view</strong></p><p>Pick the appropriate servletcontainer make and version and walk through the wizard.</p><p><a href="https://i.stack.imgur.com/99Li8.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/99Li8m.png"/></a></p><p>b. <strong>Or, via Eclipse preferences</strong></p><p>You can <em>Add</em>, <em>Edit</em> and <em>Remove</em> servers here.</p><p><a href="https://i.stack.imgur.com/hf9Go.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hf9Gom.png"/></a></p><p><strong>Associate server with project</strong></p><p>a. <strong>In new project</strong></p><p>In the wizard, set the <em>Target Runtime</em> to the integrated server.</p><p><a href="https://i.stack.imgur.com/M259E.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/M259Em.png"/></a></p><p>b. <strong>Or, in existing project</strong></p><p>In <em>Targeted Runtimes</em> section, select the integrated server.</p><p><a href="https://i.stack.imgur.com/jcY3M.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/jcY3Mm.png"/></a></p><p>Either way, Eclipse will then automatically take the servletcontainer's libraries in the build path. This way you'll be able to import and use the Servlet API.</p><p>You should in any case not have the need to fiddle around in the <em>Build Path</em> property of the project. You should above all <strong>never</strong> manually copy/download/move/include the individual servletcontainer-specific libraries like <code>servlet-api.jar</code>, <code>jsp-api.jar</code>, <code>el-api.jar</code>, <code>j2ee.jar</code>, <code>javaee.jar</code>, etc. It would only lead to future portability, compatibility, classpath and maintainability troubles, because your webapp would not work when it's deployed to a servletcontainer of a different make/version than where those libraries are originally obtained from.</p><p>In case you're using Maven, you need to make absolutely sure that servletcontainer-specific libraries which are already provided by the target runtime are marked as <code>&lt;scope&gt;provided&lt;/scope&gt;</code>.</p><p>Here are some typical exceptions which you can get when you litter the <code>/WEB-INF/lib</code> or even <code>/JRE/lib</code>, <code>/JRE/lib/ext</code>, etc with servletcontainer-specific libraries in a careless attempt to fix the compilation errors:</p></body></html>

===ID===
584cbf863e2ca508e5f0719e
===QUESTION===
How to use an existing database with an Android application [duplicate]
This question already has an answer here: I have already created an SQLite database. I want to use this database file with my Android project. I want to bundle this database with my application.  Instead of creating a new database, how can the application gain access to this database and use it as its database? 
===LINK===
http://stackoverflow.com/questions/9109438/how-to-use-an-existing-database-with-an-android-application
===KEYWORDS===
creating database created question bundle 
===ANSWER===
270
<html><body><p><strong>NOTE:</strong>
Before trying this code, please find this line in the below code:</p><pre><code>private static String DB_NAME ="YourDbName"; // Database name
</code></pre><p>DB_NAME here is the name of your database. It is assumed that you have a copy of the database in the assets folder, so for example if your database name is ordersDB, then the value of DB_NAME will be ordersDB,</p><pre><code>private static String DB_NAME ="ordersDB";
</code></pre><p>Keep the database in <strong>assets folder</strong> and then follow the below:</p><p>DataHelper class:</p><pre><code>import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import android.content.Context;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

public class DataBaseHelper extends SQLiteOpenHelper
{
    private static String TAG = "DataBaseHelper"; // Tag just for the LogCat window
    //destination path (location) of our database on device
    private static String DB_PATH = "";
    private static String DB_NAME ="YourDbName";// Database name
    private SQLiteDatabase mDataBase;
    private final Context mContext;

    public DataBaseHelper(Context context)
    {
        super(context, DB_NAME, null, 1);// 1? Its database Version
        if(android.os.Build.VERSION.SDK_INT &gt;= 17){
           DB_PATH = context.getApplicationInfo().dataDir + "/databases/";
        }
        else
        {
           DB_PATH = "/data/data/" + context.getPackageName() + "/databases/";
        }
        this.mContext = context;
    }

    public void createDataBase() throws IOException
    {
        //If the database does not exist, copy it from the assets.

        boolean mDataBaseExist = checkDataBase();
        if(!mDataBaseExist)
        {
            this.getReadableDatabase();
            this.close();
            try
            {
                //Copy the database from assests
                copyDataBase();
                Log.e(TAG, "createDatabase database created");
            }
            catch (IOException mIOException)
            {
                throw new Error("ErrorCopyingDataBase");
            }
        }
    }

    //Check that the database exists here: /data/data/your package/databases/Da Name
    private boolean checkDataBase()
    {
        File dbFile = new File(DB_PATH + DB_NAME);
        //Log.v("dbFile", dbFile + "   "+ dbFile.exists());
        return dbFile.exists();
    }

    //Copy the database from assets
    private void copyDataBase() throws IOException
    {
        InputStream mInput = mContext.getAssets().open(DB_NAME);
        String outFileName = DB_PATH + DB_NAME;
        OutputStream mOutput = new FileOutputStream(outFileName);
        byte[] mBuffer = new byte[1024];
        int mLength;
        while ((mLength = mInput.read(mBuffer))&gt;0)
        {
            mOutput.write(mBuffer, 0, mLength);
        }
        mOutput.flush();
        mOutput.close();
        mInput.close();
    }

    //Open the database, so we can query it
    public boolean openDataBase() throws SQLException
    {
        String mPath = DB_PATH + DB_NAME;
        //Log.v("mPath", mPath);
        mDataBase = SQLiteDatabase.openDatabase(mPath, null, SQLiteDatabase.CREATE_IF_NECESSARY);
        //mDataBase = SQLiteDatabase.openDatabase(mPath, null, SQLiteDatabase.NO_LOCALIZED_COLLATORS);
        return mDataBase != null;
    }

    @Override
    public synchronized void close()
    {
        if(mDataBase != null)
            mDataBase.close();
        super.close();
    }
}
</code></pre><p><strong>Write a DataAdapter class like:</strong></p><pre><code>import java.io.IOException;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

public class TestAdapter
{
    protected static final String TAG = "DataAdapter";

    private final Context mContext;
    private SQLiteDatabase mDb;
    private DataBaseHelper mDbHelper;

    public TestAdapter(Context context)
    {
        this.mContext = context;
        mDbHelper = new DataBaseHelper(mContext);
    }

    public TestAdapter createDatabase() throws SQLException
    {
        try
        {
            mDbHelper.createDataBase();
        }
        catch (IOException mIOException)
        {
            Log.e(TAG, mIOException.toString() + "  UnableToCreateDatabase");
            throw new Error("UnableToCreateDatabase");
        }
        return this;
    }

    public TestAdapter open() throws SQLException
    {
        try
        {
            mDbHelper.openDataBase();
            mDbHelper.close();
            mDb = mDbHelper.getReadableDatabase();
        }
        catch (SQLException mSQLException)
        {
            Log.e(TAG, "open &gt;&gt;"+ mSQLException.toString());
            throw mSQLException;
        }
        return this;
    }

    public void close()
    {
        mDbHelper.close();
    }

     public Cursor getTestData()
     {
         try
         {
             String sql ="SELECT * FROM myTable";

              Cursor mCur = mDb.rawQuery(sql, null);
             if (mCur!=null)
             {
                mCur.moveToNext();
             }
             return mCur;
         }
         catch (SQLException mSQLException)
         {
             Log.e(TAG, "getTestData &gt;&gt;"+ mSQLException.toString());
             throw mSQLException;
         }
     }
}
</code></pre><p><strong>Now you can use it like:</strong></p><pre><code>TestAdapter mDbHelper = new TestAdapter(urContext);
mDbHelper.createDatabase();
mDbHelper.open();

Cursor testdata = mDbHelper.getTestData();

mDbHelper.close();
</code></pre><p><strong>EDIT: Thanks to JDx</strong></p><p>For <a href="https://en.wikipedia.org/wiki/Android_version_history#Android_4.1_Jelly_Bean_.28API_level_16.29" rel="nofollow noreferrer">Android 4.1</a> (Jelly Bean), change:</p><pre><code>DB_PATH = "/data/data/" + context.getPackageName() + "/databases/";
</code></pre><p>to:</p><pre><code>DB_PATH = context.getApplicationInfo().dataDir + "/databases/";
</code></pre><p>in the DataHelper class this code will work on JB 4.2 multi users.</p></body></html>

===ID===
584cbf873e2ca508e5f0719f
===QUESTION===
How can I convert my Java program to an .exe file? [closed]
If I have a Java source file (*.java) or a class file (*.class), how can I convert it to a .exe file? I also need an installer for my program. Is there an open source program that can do that? 
===LINK===
http://stackoverflow.com/questions/147181/how-can-i-convert-my-java-program-to-an-exe-file
===KEYWORDS===
convert java program closed installer 
===ANSWER===
263
<html><body><p>Some options: </p><p>See also <a href="http://www.cs.princeton.edu/introcs/85application/jar/jar.html" rel="nofollow noreferrer">Distributing your Application as an executable JAR file</a> and the <a href="http://docs.oracle.com/javase/tutorial/deployment/jar/index.html" rel="nofollow noreferrer">Oracle docs</a> on how to create a jar file that can be executed with a double-click on Windows.</p><p><em>(EDIT: Last release was in 2007)</em></p><p>JSmooth is a Java Executable Wrapper. It creates native Windows launchers (standard .exe) for your java applications. It makes java deployment much smoother and user-friendly, as it is able to find any installed Java VM by itself.</p><p><em>(EDIT: Shareware: Last updated in 08/29/2013 version-8.4)</em></p><p>JexePack is a command line tool (great for automated scripting) that allows you to package your Java application (class files), optionally along with its resources (like GIF/JPG/TXT/etc), into a single compressed 32-bit Windows EXE, which runs using Sun's Java Runtime Environment. Both console and windowed applications are supported.</p><p><em>(EDIT: Commercial with Free Trial, Last version is from 2012)</em></p><p>A LAX Executable is an executable file that is used to launch a Java application on any LaunchAnywhere-compatible platform. Currently, InstallAnywhere creates LaunchAnywheres on Windows 95/98/NT/2000/Me, Solaris, Linux, and Mac OS X. LaunchAnywhere enables end-users to double-click on an icon (Windows or Mac OS X) or type a single command (UNIX) to start a Java application.</p><p>See also for reference <a href="http://www.excelsior-usa.com/articles/java-to-exe.html" rel="nofollow noreferrer">Convert Java to EXE: Why, When, When Not and How</a></p></body></html>

===ID===
584cbf873e2ca508e5f071a0
===QUESTION===
Loading image resource
I am having a error for my GUI. Trying to set title bar icon then be included in a Runnable JAR. Here is the error I am getting: The image is in the correct directory which "resources" folder is the root of the 
project file 
===LINK===
http://stackoverflow.com/questions/9864267/loading-image-resource
===KEYWORDS===
gui error included folder root 
===ANSWER===
42
<html><body><p>First of all, change this line : </p><pre><code>image = ImageIO.read(getClass().getClassLoader().getResource("resources/icon.gif"));
</code></pre><p>to this : </p><pre><code>image = ImageIO.read(getClass().getResource("/resources/icon.gif"));
</code></pre><p><strong>More info</strong>, on as to where lies the difference between the two approaches, can be found on this thread - <a href="http://stackoverflow.com/a/676273/1057230"><strong>Different ways of loading a Resource</strong></a></p><p><strong>For Eclipse:</strong> </p><p><strong>For NetBeans:</strong> </p><p><strong>For IntelliJ IDEA:</strong></p><p>Use the last link to check how to access this file now in Java code. Though for this example, one would be using </p><p><code>getClass().getResource("/resources/images/myImage.imageExtension");</code></p><p>Press <kbd>Shift</kbd> + <kbd>F10</kbd>, to make and run the project. The <strong>resources and images</strong> folders, will be created automatically inside the <strong>out</strong> folder.</p><p><strong>If you are doing it manually :</strong> </p><p><strong>QUICK REFERENCE CODE EXAMPLE(though for more detail consider, A little extra clarification link):</strong></p><pre><code>package swingtest;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 * Created with IntelliJ IDEA.
 * User: Gagandeep Bali
 * Date: 7/1/14
 * Time: 9:44 AM
 * To change this template use File | Settings | File Templates.
 */
public class ImageExample {

    private MyPanel contentPane;

    private void displayGUI() {
        JFrame frame = new JFrame("Image Example");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        contentPane = new MyPanel();

        frame.setContentPane(contentPane);
        frame.pack();
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }

    private class MyPanel extends JPanel {

        private BufferedImage image;

        public MyPanel() {
            try {
                image = ImageIO.read(MyPanel.class.getResource("/resources/images/planetbackground.jpg"));
            } catch (IOException ioe) {
                ioe.printStackTrace();
            }
        }

        @Override
        public Dimension getPreferredSize() {
            return image == null ? new Dimension(400, 300): new Dimension(image.getWidth(), image.getHeight());
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.drawImage(image, 0, 0, this);
        }
    }

    public static void main(String[] args) {
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                new ImageExample().displayGUI();
            }
        };
        EventQueue.invokeLater(runnable);
    }
}
</code></pre></body></html>

===ID===
584cbf883e2ca508e5f071a1
===QUESTION===
How does the Java for each loop work?
What would the equivalent for loop look like without using the for each syntax? 
===LINK===
http://stackoverflow.com/questions/85190/how-does-the-java-for-each-loop-work
===KEYWORDS===
equivalent java loop syntax 
===ANSWER===
660
<html><body><pre><code>for(Iterator&lt;String&gt; i = someList.iterator(); i.hasNext(); ) {
    String item = i.next();
    System.out.println(item);
}
</code></pre><p>Note that if you need to use <code>i.remove();</code> in your loop, or access the actual <code>iterator</code> in some way, you cannot use the <code>for( : )</code> idiom, since the actual <code>Iterator</code> is merely inferred.</p><p>As was noted by Denis Bueno, this code works for any object that <code>implements</code> the <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html" rel="nofollow noreferrer"><code>Iterable interface</code></a>.</p><p>Also, if the right-hand side of the <code>for(:)</code> idiom is an <code>array</code> rather than an <code>Iterable</code> object, the internal code uses an int index counter and checks against array.length instead. See the <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.14.2" rel="nofollow noreferrer">Java Language Specification</a>.</p></body></html>

===ID===
584cbf883e2ca508e5f071a2
===QUESTION===
How to append text to an existing file in Java
I need to append text repeatedly to an existing file in Java. How do I do that? 
===LINK===
http://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java
===KEYWORDS===
java 
===ANSWER===
482
<html><body><p>Are you doing this for logging purposes?  If so there are <a href="http://en.wikipedia.org/wiki/Java_logging_framework" rel="nofollow noreferrer">several libraries for this</a>. Two of the most popular are <a href="http://logging.apache.org/log4j/" rel="nofollow noreferrer">Log4j</a> and <a href="http://logback.qos.ch/" rel="nofollow noreferrer">Logback</a>.</p><p>If you just need to do this one time, the <a href="https://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html" rel="nofollow noreferrer">Files class</a> makes this easy:</p><pre><code>try {
    Files.write(Paths.get("myfile.txt"), "the text".getBytes(), StandardOpenOption.APPEND);
}catch (IOException e) {
    //exception handling left as an exercise for the reader
}
</code></pre><p>However, if you will be writing to the same file many times, the above has to open and close the file on the disk many times, which is a slow operation. In this case, a buffered writer is better:</p><pre><code>try(FileWriter fw = new FileWriter("outfilename", true);
    BufferedWriter bw = new BufferedWriter(fw);
    PrintWriter out = new PrintWriter(bw))
{
    out.println("the text");
    //more code
    out.println("more text");
    //more code
} catch (IOException e) {
    //exception handling left as an exercise for the reader
}
</code></pre><p><strong>Notes:</strong></p><pre><code>try {
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("myfile.txt", true)));
    out.println("the text");
    out.close();
} catch (IOException e) {
    //exception handling left as an exercise for the reader
}
</code></pre><p>If you need robust exception handling for older Java, it gets very verbose:</p><pre><code>FileWriter fw = null;
BufferedWriter bw = null;
PrintWriter out = null;
try {
    fw = new FileWriter("myfile.txt", true);
    bw = new BufferedWriter(fw);
    out = new PrintWriter(bw);
    out.println("the text");
    out.close();
} catch (IOException e) {
    //exception handling left as an exercise for the reader
}
finally {
    try {
        if(out != null)
            out.close();
    } catch (IOException e) {
        //exception handling left as an exercise for the reader
    }
    try {
        if(bw != null)
            bw.close();
    } catch (IOException e) {
        //exception handling left as an exercise for the reader
    }
    try {
        if(fw != null)
            fw.close();
    } catch (IOException e) {
        //exception handling left as an exercise for the reader
    }
}
</code></pre></body></html>

===ID===
584cbf893e2ca508e5f071a3
===QUESTION===
What is the difference between == vs equals() in Java?
I wanted to clarify if I understand this correctly: Am I correct in my understanding ? 
===LINK===
http://stackoverflow.com/questions/7520432/what-is-the-difference-between-vs-equals-in-java
===KEYWORDS===
difference java equals understanding clarify 
===ANSWER===
304
<html><body><p>In general, the answer to  your question is "yes", but...</p></body></html>

===ID===
584cbf8a3e2ca508e5f071a4
===QUESTION===
What does “Could not find or load main class” mean?
A common problem that new Java developers experience is that their programs fail to run with the error message:   Could not find or load main class ... What does this mean, what causes it, and how should you fix it? 
===LINK===
http://stackoverflow.com/questions/18093928/what-does-could-not-find-or-load-main-class-mean
===KEYWORDS===
fix run find 
===ANSWER===
437
<html><body><p>First of all, you need to understand the correct way to launch a program using the <code>java</code> (or <code>javaw</code>) command.</p><p>The normal syntax<sup>1</sup> is this:</p><pre><code>    java [ &lt;option&gt; ... ] &lt;class-name&gt; [&lt;argument&gt; ...]
</code></pre><p>where <code>&lt;option&gt;</code> is a command line option (starting with a "-" character), <code>&lt;class-name&gt;</code> is a fully qualified Java class name, and <code>&lt;argument&gt;</code> is an arbitrary command line argument that gets passed to your application.<br>
<sup>1 - There is a second syntax for "executable" JAR files which I will describe at the bottom.</sup></br></p><p>The fully qualified classname is conventionally written as you would in Java source code; e.g.</p><pre><code>    packagename.packagename2.packagename3.ClassName
</code></pre><p>However some versions of the <code>java</code> command allow you to use slashes instead of periods; e.g.</p><pre><code>    packagename/packagename2/packagename3/ClassName
</code></pre><p>which (confusingly) looks like a file pathname, but isn't one.  Note that the term <em>fully qualified classname</em> is standard Java terminology ... not something I just made up to confuse you :-)</p><p>Here is an example of what a <code>java</code> command should look like:</p><pre><code>    java -Xmx100m com.acme.example.ListUsers fred joe bert
</code></pre><p>The above is going to cause the <code>java</code> command to do the following:</p><p>When you get the message "Could not find or load main class ...", that means that the first step has failed.  The <code>java</code> command was not able to find the class.  And indeed, the "..." in the message will be the <em>fully qualified class name</em> that <code>java</code> is looking for. </p><p>So why might it be unable to find the class?  Basically, there are two main causes:</p><p>The first likely cause is that you may have provided the wrong class name.  (Or ... the right class name, but in the wrong form.)   Considering the example above, here a variety of <strong>wrong ways</strong> to specify the class name:</p><p>Example #1 - a simple class name:</p><pre><code>java ListUser
</code></pre><p>When the class is declared in a package such as <code>com.acme.example</code>, then you must use the full classname <em>including</em> the package name in the <code>java</code> command; e.g. </p><pre><code>java com.acme.example.ListUser
</code></pre><p>Example #2 - a filename or pathname rather than a class name:</p><pre><code>java ListUser.class
java com/acme/example/ListUser.class
</code></pre><p>Example #3 - a class name with the casing incorrect:</p><pre><code>java com.acme.example.listuser
</code></pre><p>Example #4 - a typo</p><pre><code>java com.acme.example.mistuser
</code></pre><p>The second likely cause is that the class name is correct, but that the <code>java</code> command cannot find the class.  To understand this, you need to understand the concept of the "classpath".  This is explained <em>well</em> by the Oracle documentation:</p><p>So ... if you have specified the class name correctly, the next thing to check is that you have specified the classpath correctly:</p><p>Additional Notes:</p><p>When you put a directory on the classpath, it notionally corresponds to the root of the qualified name space.  Classes are located in the directory structure beneath that root, <em>by mapping the fully qualified name to a pathname</em>.  So for example, if "/usr/local/acme/classes" is on the class path, then when the JVM looks for a class called <code>com.acme.example.Foon</code>, it will look for a ".class" file with this pathname:</p><pre><code>    /usr/local/acme/classes/com/acme/example/Foon.class
</code></pre><p>If you had put "/usr/local/acme/classes/com/acme/example" on the classpath, then the JVM wouldn't be able to find the class.</p><p>The classpath needs to include all of the <em>other</em> (non-system) classes that your application depends on.  (The system classes are located automatically, and you rarely need to concern yourself with this.)</p><p>The alternative syntax used for "executable" JAR files is as follows:</p><pre><code>    java [ &lt;option&gt; ... ] -jar &lt;jar-file-name&gt; [&lt;argument&gt; ...]
</code></pre><p>e.g.</p><pre><code>    java -Xmx100m -jar /usr/local/acme-example/listuser.jar fred
</code></pre><p>In this case the name of the entry-point class (i.e. <code>com.acme.example.ListUser</code>) and the classpath are specified in the MANIFEST of the JAR file.</p><p>A typical Java IDE has support for running Java applications in the IDE JVM itself or in a child JVM.  These are <em>generally</em> immune from this particular exception, because the IDE uses its own mechanisms to construct the runtime classpath, identify the main class and create the <code>java</code> command line.</p><p>However it is still possible for this exception to occur, if you do things behind the back of the IDE to break things.  For example, if you have previously set up an Application Launcher for your Java app in Eclipse, and you then moved the JAR file containing the "main" class to a different place in the file system <em>without telling Eclipse</em>, Eclipse would unwittingly launch the JVM with an incorrect classpath.</p><p>In short, if you get this problem in an IDE, check for things like stale IDE state, broken project references or broken launcher configurations.</p><p>From the Java Documentation:</p><p><a class="doc-link" href="http://stackoverflow.com/documentation/java/3720/the-classpath">The Classpath</a></p><p>oo</p></body></html>

===ID===
584cbf8a3e2ca508e5f071a5
===QUESTION===
When to use LinkedList over ArrayList?
I've always been one to simply use: I use the interface as the type name for  portability , so that when I ask questions such as these I can rework my code.   When should  LinkedList  be used over  ArrayList  and vice-versa? 
===LINK===
http://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist
===KEYWORDS===
code linkedlist portability vice arraylist 
===ANSWER===
2230
<html><body><p><strong>TL;DR</strong> <code>ArrayList</code> with <code>ArrayDeque</code> are preferable in <em>much</em> more use-cases than <code>LinkedList</code>. Not sure — just start with <code>ArrayList</code>.</p><p><code>LinkedList</code> and <code>ArrayList</code> are two different implementations of the List interface. <code>LinkedList</code> implements it with a doubly-linked list. <code>ArrayList</code> implements it with a dynamically re-sizing array.</p><p>As with standard linked list and array operations, the various methods will have different algorithmic runtimes.</p><p>For <a href="http://docs.oracle.com/javase/8/docs/api/java/util/LinkedList.html" rel="nofollow noreferrer"><code>LinkedList&lt;E&gt;</code></a></p><p><sup>Note: <em>O(n/4)</em> is average, <em>O(1)</em> best case (e.g. index = 0), <em>O(n/2)</em> worst case (middle of list)</sup></p><p>For <a href="http://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html" rel="nofollow noreferrer"><code>ArrayList&lt;E&gt;</code></a></p><p><sup>Note: <em>O(n/2)</em> is average, <em>O(1)</em> best case (end of list), <em>O(n)</em> worst case (start of list)</sup></p><p><code>LinkedList&lt;E&gt;</code> allows for constant-time insertions or removals <em>using iterators</em>, but only sequential access of elements. In other words, you can walk the list forwards or backwards, but finding a position in the list takes time proportional to the size of the list. Javadoc says <em>"operations that index into the list will traverse the list from the beginning or the end, whichever is closer"</em>, so those methods are <em>O(n/4)</em> on average, though <em>O(1)</em> for <code>index = 0</code>.</p><p><code>ArrayList&lt;E&gt;</code>, on the other hand, allow fast random read access, so you can grab any element in constant time. But adding or removing from anywhere but the end requires shifting all the latter elements over, either to make an opening or fill the gap. Also, if you add more elements than the capacity of the underlying array, a new array (1.5 times the size) is allocated, and the old array is copied to the new one, so adding to an <code>ArrayList</code> is <em>O(n)</em> in the worst case but constant on average.</p><p>So depending on the operations you intend to do, you should choose the implementations accordingly. Iterating over either kind of List is practically equally cheap. (Iterating over an <code>ArrayList</code> is technically faster, but unless you're doing something really performance-sensitive, you shouldn't worry about this -- they're both constants.)</p><p>The main benefits of using a <code>LinkedList</code> arise when you re-use existing iterators to insert and remove elements. These operations can then be done in <em>O(1)</em> by changing the list locally only. In an array list, the remainder of the array needs to be <em>moved</em> (i.e. copied). On the other side, seeking in a <code>LinkedList</code> means following the links in <em>O(n)</em>, whereas in an <code>ArrayList</code> the desired position can be computed mathematically and accessed in <em>O(1)</em>.</p><p>Another benefit of using a <code>LinkedList</code> arise when you add or remove from the head of the list, since those operations are <em>O(1)</em>, while they are <em>O(n)</em> for <code>ArrayList</code>. Note that <code>ArrayDeque</code> may be a good alternative to <code>LinkedList</code> for adding and removing from the head, but it is not a <code>List</code>.</p><p>Also, if you have large lists, keep in mind that memory usage is also different. Each element of a <code>LinkedList</code> has more overhead since pointers to the next and previous elements are also stored. <code>ArrayLists</code> don't have this overhead. However, <code>ArrayLists</code> take up as much memory as is allocated for the capacity, regardless of whether elements have actually been added.</p><p>The default initial capacity of an <code>ArrayList</code> is pretty small (10 from Java 1.4 - 1.8). But since the underlying implementation is an array, the array must be resized if you add a lot of elements. To avoid the high cost of resizing when you know you're going to add a lot of elements, construct the <code>ArrayList</code> with a higher initial capacity.</p><p>It's worth noting that <strong>Vector</strong> also implements the List interface and is almost identical to<code>ArrayList</code>. The difference is that Vector is synchronized, so it is thread-safe. Because of this, it is also slightly slower than <code>ArrayList</code>. So as far as I understand, most Java programmers avoid Vector in favor of <code>ArrayList</code> since they will probably synchronize explicitly anyway if they care about that.</p></body></html>

===ID===
584cbf8b3e2ca508e5f071a6
===QUESTION===
“implements Runnable” vs. “extends Thread”
From what time I've spent with threads in Java, I've found these two ways to write threads: With  implements Runnable : Or, with  extends Thread : Is there any significant difference in these two blocks of code ? 
===LINK===
http://stackoverflow.com/questions/541487/implements-runnable-vs-extends-thread
===KEYWORDS===
code java ways threads time 
===ANSWER===
1083
<html><body><p>Yes: implements <code>Runnable</code> is the preferred way to do it, IMO. You're not really specialising the thread's behaviour.  You're just giving it something to run. That means <a href="http://en.wikipedia.org/wiki/Object_composition" rel="nofollow noreferrer">composition</a> is the <em>philosophically</em> "purer" way to go.</p><p>In <em>practical</em> terms, it means you can implement <code>Runnable</code> and extend from another class as well.</p></body></html>

===ID===
584cbf8c3e2ca508e5f071a7
===QUESTION===
Java inner class and static nested class
What is the main difference between an inner class and a static nested class in Java? Does design / implementation play a role in choosing one of these? 
===LINK===
http://stackoverflow.com/questions/70324/java-inner-class-and-static-nested-class
===KEYWORDS===
role java class choosing 
===ANSWER===
1223
<html><body><p>Nested classes are divided into two categories: static and non-static. Nested classes that are declared static are simply called static nested classes. Non-static nested classes are called inner classes. </p><p>Static nested classes are accessed using the enclosing class name:</p><pre><code>OuterClass.StaticNestedClass
</code></pre><p>For example, to create an object for the static nested class, use this syntax:</p><pre><code>OuterClass.StaticNestedClass nestedObject = new OuterClass.StaticNestedClass();
</code></pre><p>Objects that are instances of an inner class exist within an instance of the outer class. Consider the following classes:</p><pre><code>class OuterClass {
    ...
    class InnerClass {
        ...
    }
}
</code></pre><p>An instance of InnerClass can exist only within an instance of OuterClass and has direct access to the methods and fields of its enclosing instance.</p><p>To instantiate an inner class, you must first instantiate the outer class. Then, create the inner object within the outer object with this syntax:</p><pre><code>OuterClass.InnerClass innerObject = outerObject.new InnerClass();
</code></pre><p>see: <a href="http://download.oracle.com/javase/tutorial/java/javaOO/nested.html" rel="nofollow noreferrer">Java Tutorial - Nested Classes</a></p><p>For completeness note that there is also such a thing as an <a href="http://stackoverflow.com/questions/20468856/is-it-true-that-every-inner-class-requires-an-enclosing-instance">inner class <em>without</em> an enclosing instance</a>:</p><pre><code>class A {
  int t() { return 1; }
  static A a =  new A() { int t() { return 2; } };
}
</code></pre><p>Here, <code>new A() { ... }</code> is an <em>inner class defined in a static context</em> and does not have an enclosing instance.</p></body></html>

===ID===
584cbf8c3e2ca508e5f071a8
===QUESTION===
Calculating the difference between two Java date instances
I'm using Java's java.util.date class in Scala and want to compare a date object and the current time. I know I can calculate the delta by using getTime(): However, this just leaves me with a Long representing milliseconds. Is there any simpler, nicer way to get a time delta? 
===LINK===
http://stackoverflow.com/questions/1555262/calculating-the-difference-between-two-java-date-instances
===KEYWORDS===
compare java calculate nicer scala 
===ANSWER===
145
<html><body><p>The JDK <code>Date</code> API is horribly broken unfortunately.  I recommend using <a href="http://joda-time.sourceforge.net/" rel="nofollow noreferrer">Joda Time library</a>.</p><p>Joda Time has a concept of time <a href="http://joda-time.sourceforge.net/key_interval.html" rel="nofollow noreferrer">Interval</a>:</p><pre><code>Interval interval = new Interval(oldTime, new Instant());
</code></pre><p>EDIT: By the way, Joda has two concepts: <code>Interval</code> for representing an interval of time between two time instants (represent time between 8am and 10am), and a <code>Duration</code> that represents a length of time without the actual time boundaries (e.g. represent two hours!)</p><p>If you only care about time comparisions, most <code>Date</code> implementations (including the JDK one) implements <code>Comparable</code> interface which allows you to use the <a href="http://java.sun.com/javase/6/docs/api/java/lang/Comparable.html#compareTo(T)" rel="nofollow noreferrer"><code>Comparable.compareTo()</code></a></p></body></html>

===ID===
584cbf8d3e2ca508e5f071a9
===QUESTION===
Show JDBC ResultSet in HTML in JSP page using MVC and DAO pattern
I'm implementing MVC using JSP and JDBC. I have imported a database class file to my JSP file and I would like to show the data of a DB table. I don't know how I should return the  ResultSet  from the Java class to the JSP page and embed it in HTML. How can I achieve this? 
===LINK===
http://stackoverflow.com/questions/5003142/show-jdbc-resultset-in-html-in-jsp-page-using-mvc-and-dao-pattern
===KEYWORDS===
jdbc imported show resultset return 
===ANSWER===
92
<html><body><p>In a well designed MVC approach, the JSP file should not contain any line of Java code and the servlet class should not contain any line of JDBC code.</p><p>Assuming that you want to show a list of products in a webshop, the following code needs to be created.</p><p>A <code>Product</code> class representing a real world entity of a product, it should be just a <a href="http://stackoverflow.com/questions/1727603">Javabean</a>.</p><pre><code>public class Product {

    private Long id; 
    private String name;
    private String description;
    private BigDecimal price;

    // Add/generate getters/setters/c'tors/equals/hashcode boilerplate.
}
</code></pre><p>A <a href="http://balusc.omnifaces.org/2008/07/dao-tutorial-data-layer.html" rel="nofollow">DAO</a> class which does all the nasty JDBC work and returns a nice <code>List&lt;Product&gt;</code>.</p><pre><code>public class ProductDAO {

    private DataSource dataSource;

    public ProductDAO(DataSource dataSource) {
        this.dataSource = dataSource;
    }

    public List&lt;Product&gt; list() throws SQLException {
        List&lt;Product&gt; products = new ArrayList&lt;Product&gt;();

        try (
            Connection connection = dataSource.getConnection();
            PreparedStatement statement = connection.prepareStatement("SELECT id, name, description, price FROM product");
            ResultSet resultSet = statement.executeQuery();
        ) {
            while (resultSet.next()) {
                Product product = new Product();
                product.setId(resultSet.getLong("id"));
                product.setName(resultSet.getString("name"));
                product.setDescription(resultSet.getString("description"));
                product.setPrice(resultSet.getBigDecimal("price"));
                products.add(product);
            }
        }

        return products;
    }

}
</code></pre><p>A <a href="http://stackoverflow.com/tags/servlets/info">servlet</a> class which obtains the list and puts it in the request scope.</p><pre><code>@WebServlet("/products")
public class ProductsServlet extends HttpServlet {

    @Resource("jdbc/YourDB") // For Tomcat, define as &lt;Resource&gt; in context.xml and declare as &lt;resource-ref&gt; in web.xml.
    private DataSource dataSource;
    private ProductDAO productDAO;

    @Override
    public void init() {
        productDAO = new ProductDAO(dataSource);
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {
            List&lt;Product&gt; products = productDAO.list();
            request.setAttribute("products", products); // Will be available as ${products} in JSP
            request.getRequestDispatcher("/WEB-INF/products.jsp").forward(request, response);
        } catch (SQLException e) {
            throw new ServletException("Cannot obtain products from DB", e);
        }
    }

}
</code></pre><p>Finally a <a href="http://stackoverflow.com/tags/jsp/info">JSP</a> file in <code>/WEB-INF/products.jsp</code> which uses <a href="http://stackoverflow.com/tags/jstl/info">JSTL</a> <code>&lt;c:forEach&gt;</code> to iterate over <code>List&lt;Product&gt;</code> which is made available in <a href="http://stackoverflow.com/tags/el/info">EL</a> by <code>${products}</code>, and uses JSTL <code>&lt;c:out&gt;</code> to escape string properties in order to avoid <a href="http://stackoverflow.com/questions/2658922">XSS</a> holes when it concerns user-controlled input.</p><pre class="lang-xml prettyprint-override"><code>&lt;%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %&gt;
&lt;%@ taglib uri="http://java.sun.com/jsp/jstl/format" prefix="fmt" %&gt;
...
&lt;table&gt;
    &lt;c:forEach items="${products}" var="product"&gt;
        &lt;tr&gt;
            &lt;td&gt;${product.id}&lt;/td&gt;
            &lt;td&gt;&lt;c:out value="${product.name}" /&gt;&lt;/td&gt;
            &lt;td&gt;&lt;c:out value="${product.description}" /&gt;&lt;/td&gt;
            &lt;td&gt;&lt;fmt:formatNumber value="${product.price}" type="currency" currencyCode="USD" /&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/c:forEach&gt;
&lt;/table&gt;
</code></pre><p>To get it to work, just call the servlet by its URL. Provided that the servlet is annotated <code>@WebServlet("/products")</code> or mapped in <code>web.xml</code> with <code>&lt;url-pattern&gt;/products&lt;/url-pattern&gt;</code>, then you can call it by <code>http://example.com/contextname/products</code></p></body></html>

===ID===
584cbf8e3e2ca508e5f071aa
===QUESTION===
How do I create a Java string from the contents of a file?
I've been using the idiom below for some time now. And it seems to be the most wide-spread, at least on the sites I've visited. Is there a better/different way to read a file into a string in Java? 
===LINK===
http://stackoverflow.com/questions/326390/how-do-i-create-a-java-string-from-the-contents-of-a-file
===KEYWORDS===
wide java string read create 
===ANSWER===
965
<html><body><p>Here's a compact, robust idiom for Java 7, wrapped up in a utility method:</p><pre><code>static String readFile(String path, Charset encoding) 
  throws IOException 
{
  byte[] encoded = Files.readAllBytes(Paths.get(path));
  return new String(encoded, encoding);
}
</code></pre><p>Java 7 added a <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllLines%28java.nio.file.Path,%20java.nio.charset.Charset%29" rel="nofollow noreferrer">convenience method to read a file as lines of text,</a> represented as a <code>List&lt;String&gt;</code>. This approach is "lossy" because the line separators are stripped from the end of each line.</p><pre><code>List&lt;String&gt; lines = Files.readAllLines(Paths.get(path), encoding);
</code></pre><p>The first method, that preserves line breaks, can temporarily require memory several times the size of the file, because for a short time the raw file contents (a byte array), and the decoded characters (each of which is 16 bits even if encoded as 8 bits in the file) reside in memory at once. It is safest to apply to files that you know to be small relative to the available memory.</p><p>The second method, reading lines, is usually more memory efficient, because the input byte buffer for decoding doesn't need to contain the entire file. However, it's still not suitable for files that are very large relative to available memory.</p><p>For reading large files, you need a different design for your program, one that reads a chunk of text from a stream, processes it, and then moves on to the next, reusing the same fixed-sized memory block. Here, "large" depends on the computer specs. Nowadays, this threshold might be many gigabytes of RAM.</p><p>One thing that is missing from the sample in the original post is the character encoding. There are some special cases where the platform default is what you want, but they are rare, and you should be able justify your choice.</p><p>The <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/StandardCharsets.html" rel="nofollow noreferrer"><code>StandardCharsets</code></a> class define some constants for the encodings required of all Java runtimes:</p><pre><code>String content = readFile("test.txt", StandardCharsets.UTF_8);
</code></pre><p>The platform default is available from <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html#defaultCharset%28%29" rel="nofollow noreferrer">the <code>Charset</code> class</a> itself:</p><pre><code>String content = readFile("test.txt", Charset.defaultCharset());
</code></pre><p>Note: This answer largely replaces my Java 6 version. The utility of Java 7 safely simplifies the code, and the old answer, which used a mapped byte buffer, prevented the file that was read from being deleted until the mapped buffer was garbage collected. You can view the old version via the "edited" link on this answer.</p></body></html>

===ID===
584cbf8e3e2ca508e5f071ab
===QUESTION===
What is the reason behind “non-static method cannot be referenced from a static context”? [duplicate]
This question already has an answer here: The very common beginner mistake is when you try to use a class property "statically" without making an instance of that class. It leaves you with the mentioned error message. You can either make the non static method static or make an instance of that class to use its properties. Why? I am not asking for solutions. I would be grateful to know what's the reason behind it. The very core reason! 
===LINK===
http://stackoverflow.com/questions/290884/what-is-the-reason-behind-non-static-method-cannot-be-referenced-from-a-static
===KEYWORDS===
referenced grateful leaves question duplicate 
===ANSWER===
173
<html><body><p>You can't call something that doesn't exist.  Since you haven't created an object, the non-static method doesn't exist yet.  A static method (by definition) always exists.</p></body></html>

===ID===
584cbf8e3e2ca508e5f071ac
===QUESTION===
Division of integers in Java
This is a basic question but I can't find an answer.  I've looked into floating point arithmetic and a few other topics but nothing has seemed to address this.  I'm sure I just have the wrong terminology. Basically, I want to take two quantities - completed, and total - and divide them to come up with a percentage (of how much has been completed).  The quantities are  long s.  Here's the setup: I've tried reassigning the result to a double - it prints  0.0 .  Where am I going wrong? Incidentally, the next step is to multiply this result by 100, which I assume should be easy once this small hurdle is stepped over. BTW not homework here just plain old numskull-ness (and maybe too much coding today). 
===LINK===
http://stackoverflow.com/questions/7220681/division-of-integers-in-java
===KEYWORDS===
btw divide topics result incidentally 
===ANSWER===
77
<html><body><p>Converting the <em>output</em> is too late; the calculation has already taken place in integer arithmetic.  You need to convert the <em>inputs</em> to <code>double</code>:</p><pre><code>System.out.println((double)completed/(double)total);
</code></pre><p>Note that you don't actually need to convert <em>both</em> of them; so long as one is <code>double</code>, the other will be implicitly converted.  But I prefer to do both, for symmetry.</p></body></html>

===ID===
584cbf8f3e2ca508e5f071ad
===QUESTION===
Converting String to Int in Java?
How can I convert a  String  to an  int  in Java? My String contains only numbers and I want to return the number it represents. For example, given the string  "1234"  the result should be the number  1234 . 
===LINK===
http://stackoverflow.com/questions/5585779/converting-string-to-int-in-java
===KEYWORDS===
represents convert return string int 
===ANSWER===
2657
<html><body><pre><code>int foo = Integer.parseInt("1234");
</code></pre><p>See the <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#parseInt-java.lang.String-">Java Documentation</a> for more information.</p><p><em>(If you have it in a <code>StringBuilder</code> (or the ancient <code>StringBuffer</code>), you'll need to do <code>Integer.parseInt(myBuilderOrBuffer.toString());</code> instead).</em></p></body></html>

===ID===
584cbf8f3e2ca508e5f071ae
===QUESTION===
Why is Java Vector class considered obsolete or deprecated?
Why is Java Vector considered a legacy class, obsolete or deprecated? Isn't its use valid when working with concurrency? And if I don't want to manually synchronize objects and just want to use a thread-safe collection without needing to make fresh copies of the underlying array (as  CopyOnWriteArrayList  does), then is it fine to use  Vector ? What about  Stack , which is a subclass of  Vector , what should I use instead of it? 
===LINK===
http://stackoverflow.com/questions/1386275/why-is-java-vector-class-considered-obsolete-or-deprecated
===KEYWORDS===
vector don thread working deprecated 
===ANSWER===
517
<html><body><p><code>Vector</code> synchronizes on each individual operation. That's almost never what you want to do.</p><p>Generally you want to synchronize a <em>whole sequence</em> of operations. Synchronizing individual operations is both less safe (if you iterate over a <code>Vector</code>, for instance, you still need to take out a lock to avoid anyone else changing the collection at the same time, which would cause a <code>ConcurrentModificationException</code> in the iterating thread) but also slower (why take out a lock repeatedly when once will be enough)?</p><p>Of course, it also has the overhead of locking even when you don't need to.</p><p>Basically, it's a very flawed approach to synchronization in most situations. As <strong>Mr Brian Henk</strong> pointed out, you can decorate a collection using the calls such as <a href="http://java.sun.com/javase/6/docs/api/java/util/Collections.html#synchronizedList(java.util.List)" rel="nofollow noreferrer"><code>Collections.synchronizedList</code></a> - the fact that <code>Vector</code> combines both the "resized array" collection implementation with the "synchronize every operation" bit is another example of poor design; the decoration approach gives cleaner separation of concerns.</p><p>As for a <code>Stack</code> equivalent - I'd look at <code>Deque</code>/<code>ArrayDeque</code> to start with.</p></body></html>

===ID===
584cbf903e2ca508e5f071af
===QUESTION===
Manipulating an Access database from Java without ODBC
I want to manipulate a Microsoft Access database (.accdb or .mdb file) from my Java project. I don't want to use the JDBC-ODBC Bridge and the Access ODBC driver from Microsoft because: I have seen other answers mentioning a JDBC driver for Access databases named  UCanAccess . How can I set up my Java project to use this approach? (Answers suggesting better ways of working with Access databases from Java would also be most welcome.) 
===LINK===
http://stackoverflow.com/questions/21955256/manipulating-an-access-database-from-java-without-odbc
===KEYWORDS===
accdb set don working ways 
===ANSWER===
109
<html><body><p><a href="http://ucanaccess.sourceforge.net/site.html" rel="nofollow noreferrer">UCanAccess</a> is a pure Java JDBC driver that allows us to read from and write to Access databases without using ODBC. It uses two other packages, <a href="http://jackcess.sourceforge.net/" rel="nofollow noreferrer">Jackcess</a> and <a href="http://hsqldb.org/" rel="nofollow noreferrer">HSQLDB</a>, to perform these tasks. The following is a brief overview of how to get it set up.</p><p> </p><p>If your project uses <a href="https://maven.apache.org/index.html" rel="nofollow noreferrer">Maven</a> you can simply include UCanAccess via the following coordinates:</p><p><strong>groupId:</strong> net.sf.ucanaccess<br>
<strong>artifactId:</strong> ucanaccess</br></p><p> </p><p>As mentioned above, UCanAccess requires Jackcess and HSQLDB. Jackcess in turn has its own <a href="http://jackcess.sourceforge.net/dependencies.html" rel="nofollow noreferrer">dependencies</a>. So to use UCanAccess you will need to include the following components:</p><p><a href="http://ucanaccess.sourceforge.net/site.html" rel="nofollow noreferrer">UCanAccess</a> (ucanaccess-x.x.x.jar)<br>
<a href="http://hsqldb.org/" rel="nofollow noreferrer">HSQLDB</a> (hsqldb.jar, version 2.2.5 or newer)<br>
<a href="http://jackcess.sourceforge.net/" rel="nofollow noreferrer">Jackcess</a> (jackcess-2.x.x.jar)<br>
<a href="http://commons.apache.org/proper/commons-lang/" rel="nofollow noreferrer">commons-lang</a> (commons-lang-2.6.jar, or newer 2.x version)<br>
<a href="http://commons.apache.org/proper/commons-logging/" rel="nofollow noreferrer">commons-logging</a> (commons-logging-1.1.1.jar, or newer 1.x version)</br></br></br></br></p><p>Fortunately, UCanAccess includes all of the required JAR files in its distribution file. When you unzip it you will see something like</p><pre class="lang-none prettyprint-override"><code>ucanaccess-3.0.3.jar  
  /lib/
    commons-lang-2.6.jar  
    commons-logging-1.1.1.jar  
    hsqldb.jar  
    jackcess-2.1.3.jar
</code></pre><p>All you need to do is add all <strong>five (5)</strong> JARs to your project.</p><p>NOTE: Do <strong>not</strong> add <code>loader/ucanload.jar</code> to your build path if you are adding the other five (5) JAR files. The <code>UcanloadDriver</code> class is only used in special circumstances and requires a different setup. See the related answer <a href="http://stackoverflow.com/a/34469789/2144390">here</a> for details.</p><p><strong>Eclipse:</strong> Right-click the project in Package Explorer and choose <code>Build Path &gt; Configure Build Path...</code>. Click the "Add External JARs..." button to add each of the five (5) JARs. When you are finished your Java Build Path should look something like this</p><p><a href="https://i.stack.imgur.com/ZP3X3.png" rel="nofollow noreferrer"><img alt="BuildPath.png" src="https://i.stack.imgur.com/ZP3X3.png"/></a></p><p><strong>NetBeans:</strong> Expand the tree view for your project, right-click the "Libraries" folder and choose "Add JAR/Folder...", then browse to the JAR file. </p><p><img alt="nbAddJar.png" src="https://i.stack.imgur.com/dVN3d.png"/></p><p>After adding all five (5) JAR files the "Libraries" folder should look something like this:</p><p><img alt="nbLibraries.png" src="https://i.stack.imgur.com/e5FKa.png"/></p><p><strong>IntelliJ IDEA:</strong> Choose <code>File &gt; Project Structure...</code> from the main menu. In the "Libraries" pane click the "Add" (<code>+</code>) button and add the five (5) JAR files. Once that is done the project should look something like this:</p><p><a href="https://i.stack.imgur.com/AnOp5.png" rel="nofollow noreferrer"><img alt="IntelliJ.png" src="https://i.stack.imgur.com/AnOp5.png"/></a></p><p> </p><p>Now "U Can Access" data in .accdb and .mdb files using code like this</p><pre class="lang-java prettyprint-override"><code>// assumes...
//     import java.sql.*;
Connection conn=DriverManager.getConnection(
        "jdbc:ucanaccess://C:/__tmp/test/zzz.accdb");
Statement s = conn.createStatement();
ResultSet rs = s.executeQuery("SELECT [LastName] FROM [Clients]");
while (rs.next()) {
    System.out.println(rs.getString(1));
}
</code></pre><p> </p><p>At the time of writing this Q&amp;A I had no involvement in or affiliation with the UCanAccess project; I just used it. I have since become a contributor to the project.</p></body></html>

===ID===
584cbf913e2ca508e5f071b0
===QUESTION===
In Java, what is the best way to determine the size of an object?
For example, let's say I have an application that can read in a CSV file with piles of data rows.  I give the user a summary of the number of rows based on types of data, but I want to make sure that I don't read in too many rows of data and cause  OutOfMemoryError s.  Each row translates into an object.  Is there an easy way to find out the size of that object programmatically?  Is there a reference that defines how large primitive types and object references are for a  VM ? Right now, I have code that says read up to  32,000 rows , but I'd also like to have code that says read as many rows as possible until I've used  32MB  of memory.  Maybe that is a different question, but I'd still like to know.  
===LINK===
http://stackoverflow.com/questions/52353/in-java-what-is-the-best-way-to-determine-the-size-of-an-object
===KEYWORDS===
code reference give number determine 
===ANSWER===
324
<html><body><p>You can use the <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/instrument/Instrumentation.html" rel="nofollow noreferrer">java.lang.instrument package</a></p><p>Compile and put this class in a JAR:</p><pre><code>import java.lang.instrument.Instrumentation;

public class ObjectSizeFetcher {
    private static Instrumentation instrumentation;

    public static void premain(String args, Instrumentation inst) {
        instrumentation = inst;
    }

    public static long getObjectSize(Object o) {
        return instrumentation.getObjectSize(o);
    }
}
</code></pre><p>Add the following to your <code>MANIFEST.MF</code>:</p><pre><code>Premain-Class: ObjectSizeFetcher
</code></pre><p>Use getObjectSize:</p><pre><code>public class C {
    private int x;
    private int y;

    public static void main(String [] args) {
        System.out.println(ObjectSizeFetcher.getObjectSize(new C()));
    }
}
</code></pre><p>Invoke with:</p><pre><code>java -javaagent:ObjectSizeFetcherAgent.jar C
</code></pre></body></html>

===ID===
584cbf913e2ca508e5f071b1
===QUESTION===
What is a StackOverflowError?
What is a  StackOverflowError , what causes it, and how should I deal with them? 
===LINK===
http://stackoverflow.com/questions/214741/what-is-a-stackoverflowerror
===KEYWORDS===
stackoverflowerror deal 
===ANSWER===
240
<html><body><p>Parameters and local variables are allocated on the stack (with reference types the object lives on the heap and a variable references that object). The stack typically lives at the upper end of your address space and as it is used up it heads towards the bottom of the address space (i.e. towards zero).</p><p>Your process also has a heap, which lives at the bottom end of your process. As you allocate memory this heap can grow towards the upper end of your address space. As you can see, there is the potential for the heap to "collide" with the stack (a bit like tectonic plates!!!).</p><p>The common cause for a stack overflow is a bad recursive call. Typically this is caused when your recursive functions doesn't have the correct termination condition, so it ends up calling itself forever. However, with GUI programming it's possible to generate indirect recursion. For example, your app may be handling paint messages and whilst processing them it may call a function that causes the system to send another paint message. Here you've not explicitly called yourself, but the OS/VM has done it for you.</p><p>To deal with them you'll need to examine your code. If you've got functions that call themselves then check that you've got a terminating condition. If you have then check than when calling the function you have at least modified one of the arguments, otherwise there'll be no visible change for the recursively called function and the terminating condition is useless.</p><p>If you've got no obvious recursive functions then check to see if you're calling any library functions that indirectly will cause your function to be called (like the implicit case above).</p></body></html>

===ID===
584cbf923e2ca508e5f071b2
===QUESTION===
What is a serialVersionUID and why should I use it?
Eclipse issues warnings when a  serialVersionUID  is missing.   The serializable class Foo does not declare a static final
  serialVersionUID field of type long What is  serialVersionUID  and why is it important?  Please show an example where missing  serialVersionUID  will cause a problem. 
===LINK===
http://stackoverflow.com/questions/285793/what-is-a-serialversionuid-and-why-should-i-use-it
===KEYWORDS===
show missing important problem declare 
===ANSWER===
1409
<html><body><p>The docs for <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html" rel="nofollow noreferrer"><code>java.io.Serializable</code></a> are probably about as good an explanation as you'll get:</p><p>The serialization runtime associates
  with each serializable class a version
  number, called a serialVersionUID,
  which is used during deserialization
  to verify that the sender and receiver
  of a serialized object have loaded
  classes for that object that are
  compatible with respect to
  serialization. If the receiver has
  loaded a class for the object that has
  a different serialVersionUID than that
  of the corresponding sender's class,
  then deserialization will result in an
  <code>InvalidClassException</code>. A serializable
  class can declare its own
  serialVersionUID explicitly by
  declaring a field named
  "<code>serialVersionUID</code>" that must be
  static, final, and of type <code>long</code>:</p><pre><code>ANY-ACCESS-MODIFIER static final long serialVersionUID = 42L;
</code></pre><p>If a
  serializable class does not explicitly
  declare a serialVersionUID, then the
  serialization runtime will calculate a
  default serialVersionUID value for
  that class based on various aspects of
  the class, as described in the
  Java(TM) Object Serialization
  Specification. However, it is <em>strongly
  recommended</em> that all serializable
  classes explicitly declare
  serialVersionUID values, since the
  default serialVersionUID computation
  is highly sensitive to class details
  that may vary depending on compiler
  implementations, and can thus result
  in unexpected <code>InvalidClassExceptions</code>
  during deserialization. Therefore, to
  guarantee a consistent
  serialVersionUID value across
  different java compiler
  implementations, a serializable class
  must declare an explicit
  serialVersionUID value. It is also
  strongly advised that explicit
  serialVersionUID declarations use the
  private modifier where possible, since
  such declarations apply only to the
  immediately declaring
  class--serialVersionUID fields are not
  useful as inherited members.</p></body></html>

===ID===
584cbf923e2ca508e5f071b3
===QUESTION===
How to create a file and write to a file in Java?
What's the simplest way to create and write to a (text) file in Java? 
===LINK===
http://stackoverflow.com/questions/2885173/how-to-create-a-file-and-write-to-a-file-in-java
===KEYWORDS===
java text create write file 
===ANSWER===
1036
<html><body><p>Creating a text file (note that this will overwrite the file if it already exists):</p><pre><code>try{
    PrintWriter writer = new PrintWriter("the-file-name.txt", "UTF-8");
    writer.println("The first line");
    writer.println("The second line");
    writer.close();
} catch (IOException e) {
   // do something
}
</code></pre><p>Creating a binary file (will also overwrite the file):</p><pre><code>byte data[] = ...
FileOutputStream out = new FileOutputStream("the-file-name");
out.write(data);
out.close();
</code></pre><p><strong>Java 7+</strong> users can use the <a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/nio/file/Files.html" rel="nofollow noreferrer"><code>Files</code></a> class to write to files:</p><p>Creating a text file:</p><pre><code>List&lt;String&gt; lines = Arrays.asList("The first line", "The second line");
Path file = Paths.get("the-file-name.txt");
Files.write(file, lines, Charset.forName("UTF-8"));
//Files.write(file, lines, Charset.forName("UTF-8"), StandardOpenOption.APPEND);
</code></pre><p>Creating a binary file:</p><pre><code>byte data[] = ...
Path file = Paths.get("the-file-name");
Files.write(file, data);
//Files.write(file, data, StandardOpenOption.APPEND);
</code></pre></body></html>

===ID===
584cbf933e2ca508e5f071b4
===QUESTION===
Read/convert an InputStream to a String
If you have  java.io.InputStream  object, how should you process that object and produce a  String ? Suppose I have an  InputStream  that contains text data, and I want to convert this to a  String  (for example, so I can write the contents of the stream to a log file). What is the easiest way to take the  InputStream  and convert it to a  String ? 
===LINK===
http://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string
===KEYWORDS===
read/convert convert java string stream 
===ANSWER===
1483
<html><body><p>A nice way to do this is using <a href="http://commons.apache.org/" rel="nofollow noreferrer">Apache commons</a> <code><a href="https://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/IOUtils.html" rel="nofollow noreferrer">IOUtils</a></code> to copy the <code>InputStream</code> into a <code>StringWriter</code>... something like</p><pre><code>StringWriter writer = new StringWriter();
IOUtils.copy(inputStream, writer, encoding);
String theString = writer.toString();
</code></pre><p>or even</p><pre><code>// NB: does not close inputStream, you can use IOUtils.closeQuietly for that
String theString = IOUtils.toString(inputStream, encoding); 
</code></pre><p>Alternatively, you could use <code>ByteArrayOutputStream</code> if you don't want to mix your Streams and Writers</p></body></html>

===ID===
584cbf943e2ca508e5f071b5
===QUESTION===
How to test a class that has private methods, fields or inner classes?
How do I use JUnit to test a class that has internal private methods, fields or nested classes? It seems bad to change the access modifier for a method just to be able to run a test.  
===LINK===
http://stackoverflow.com/questions/34571/how-to-test-a-class-that-has-private-methods-fields-or-inner-classes
===KEYWORDS===
run fields class method bad 
===ANSWER===
1038
<html><body><p>If you have somewhat of a legacy application, and you're not allowed to change the visibility of your methods, the best way to test private methods is to use <a href="http://en.wikipedia.org/wiki/Reflection_%28computer_programming%29" rel="nofollow noreferrer">reflection</a>. </p><p>Internally we're using helpers to get/set <code>private</code> and <code>private static</code> variables as well as invoke <code>private</code> and <code>private static</code> methods. The following patterns will let you do pretty much anything related to the private methods and fields. Of course you can't change <code>private static final</code> variables through reflection.</p><pre><code>Method method = targetClass.getDeclaredMethod(methodName, argClasses);
method.setAccessible(true);
return method.invoke(targetObject, argObjects);
</code></pre><p>And for fields:</p><pre><code>Field field = targetClass.getDeclaredField(fieldName);
field.setAccessible(true);
field.set(object, value);
</code></pre><p><strong>Notes:</strong><br>
  1. <code>targetClass.getDeclaredMethod(methodName, argClasses)</code> lets you look into <code>private</code> methods. The same thing applies for
  <code>getDeclaredField</code>.<br>
  2. The <code>setAccessible(true)</code> is required to play around with privates.</br></br></p></body></html>

===ID===
584cbf953e2ca508e5f071b6
===QUESTION===
Reading a plain text file in Java
It seems there are different ways to read and write data of files in Java. I want to read ASCII data from a file. What are the possible ways and their differences? 
===LINK===
http://stackoverflow.com/questions/4716503/reading-a-plain-text-file-in-java
===KEYWORDS===
files java ways differences read 
===ANSWER===
337
<html><body><p>ASCII is a TEXT file so you would use <a href="http://docs.oracle.com/javase/7/docs/api/java/io/Reader.html">Readers</a> for reading. Java also supports reading from a binary file using <a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html">InputStreams</a>. If the files being read are huge then you would want to use a <a href="http://docs.oracle.com/javase/7/docs/api/java/io/BufferedReader.html">BufferedReader</a> on top of a <a href="http://docs.oracle.com/javase/7/docs/api/java/io/FileReader.html">FileReader</a> to improve read performance.</p><p>Go through <a href="http://www.javapractices.com/topic/TopicAction.do?Id=42">this article</a> on how to use a Reader</p><p>I'd also recommend you download and read this wonderful (yet free) book called <a href="http://www.mindviewinc.com/Books/downloads.html"><strong>Thinking In Java</strong></a></p><p><strong>In Java 7</strong>:</p><p><a href="http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllBytes%28java.nio.file.Path%29">new String(Files.readAllBytes(...))</a> or <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllLines%28java.nio.file.Path,%20java.nio.charset.Charset%29">Files.readAllLines(...)</a></p><p><strong>In Java 8</strong>:</p><p><a href="http://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#lines-java.nio.file.Path-">Files.lines(..).forEach(...)</a></p></body></html>

===ID===
584cbf953e2ca508e5f071b7
===QUESTION===
Cannot refer to a non-final variable inside an inner class defined in a different method
Edited:
I need to change the values of several variables as they run several times thorugh a timer. I need to keep updating the values with every iteration through the timer. I cannot set the values to final as that will prevent me from updating the values however I am getting the error I describe in the initial question below: I had previously written what is below: I am getting the error "cannot refer to a non-final variable inside an inner class defined in a different method". This is happening for the double called price and the Price called priceObject. Do you know why I get this problem. I do not understand why I need to have a final declaration. Also if you can see what it is I am trying to do, what do I have to do to get around this problem. 
===LINK===
http://stackoverflow.com/questions/1299837/cannot-refer-to-a-non-final-variable-inside-an-inner-class-defined-in-a-differen
===KEYWORDS===
edited set run happening prevent 
===ANSWER===
173
<html><body><p>Java doesn't support true <a href="http://en.wikipedia.org/wiki/Closure_(computer_science)" rel="nofollow noreferrer">closures</a>, even though using an anonymous class like you are using here (new TimerTask() { ... }) looks like a kind of closure.</p><p><strong>edit</strong> - <em>See the comments below - the following is not a correct explanation, as KeeperOfTheSoul points out.</em></p><p>This is why it doesn't work:</p><p>The variables lastPrice and price are local variables in the main() method. The object that you create with the anonymous class might last until after the main() method returns.</p><p>When the main() method returns, local variables (such as lastPrice and price) will be cleaned up from the stack, so they won't exist anymore after main() returns.</p><p>But the anonymous class object references these variables. Things would go horribly wrong if the anonymous class object tries to access the variables after they have been cleaned up.</p><p>By making lastPrice and price <code>final</code>, they are not really variables anymore, but constants. The compiler can then just replace the use of lastPrice and price in the anonymous class with the values of the constants (at compile time, ofcourse), and you won't have the problem with accessing non-existent variables anymore.</p><p>Other programming languages that do support closures do it by treating those variables specially - by making sure they don't get destroyed when the method ends, so that the closure can still access the variables.</p><p>@Ankur: You could do this:</p><pre><code>public static void main(String args[]) {
    int period = 2000;
    int delay = 2000;

    Timer timer = new Timer();

    timer.scheduleAtFixedRate(new TimerTask() {
        // Variables as member variables instead of local variables in main()
        private double lastPrice = 0;
        private Price priceObject = new Price();
        private double price = 0;

        public void run() {
            price = priceObject.getNextPrice(lastPrice);
            System.out.println();
            lastPrice = price;
        }
    }, delay, period);      
}
</code></pre></body></html>

===ID===
584cbf963e2ca508e5f071b8
===QUESTION===
Converting ISO 8601-compliant String to java.util.Date
I am trying to convert an  ISO 8601  formatted String to a java.util.Date.  I found the pattern "yyyy-MM-dd'T'HH:mm:ssZ" to be ISO8601-compliant if used with a Locale (compare sample).
However, using the java.text.SimpleDateFormat, I cannot convert the correctly formatted String "2010-01-01T12:00:00+01:00". I have to convert it first to "2010-01-01T12:00:00+0100", without the colon. 
So, the current solution is which obviously isn't that nice. Am I missing something or is there a better solution? answer Thanks to JuanZe's comment, I found the  Joda-Time  magic, it is also  described here .
So, the solution is Or more simply, use the default parser via the constructor: To me, this is nice. 
===LINK===
http://stackoverflow.com/questions/2201925/converting-iso-8601-compliant-string-to-java-util-date
===KEYWORDS===
comment locale text simpledateformat yyyy 
===ANSWER===
349
<html><body><p>Unfortunately, the time zone formats available to <a href="http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" rel="nofollow noreferrer">SimpleDateFormat</a> (Java 6 and earlier) are not <a href="https://en.wikipedia.org/wiki/ISO_8601" rel="nofollow noreferrer">ISO 8601</a> compliant. SimpleDateFormat understands time zone strings like "GMT+01:00" or "+0100", the latter according to <a href="http://www.ietf.org/rfc/rfc0822.txt" rel="nofollow noreferrer" title="STANDARD FOR THE FORMAT OF ARPA INTERNET TEXT MESSAGES">RFC # 822</a>.</p><p>Even if Java 7 added support for time zone descriptors according to ISO 8601, SimpleDateFormat is still not able to properly parse a complete date string, as it has no support for optional parts.</p><p>Reformatting your input string using regexp is certainly one possibility, but the replacement rules are not as simple as in your question:</p><p>The easier solution is possibly to use the data type converter in JAXB, since JAXB must be able to parse ISO8601 date string according to the XML Schema specification. <code>javax.xml.bind.DatatypeConverter.parseDateTime("2010-01-01T12:00:00Z")</code> will give you a <code>Calendar</code> object and you can simply use getTime() on it, if you need a <code>Date</code> object.</p><p>You could probably use <a href="http://www.joda.org/joda-time/" rel="nofollow noreferrer">Joda-Time</a> as well, but I don't know why you should bother with that.</p></body></html>

===ID===
584cbf963e2ca508e5f071b9
===QUESTION===
StringBuilder vs String concatenation in toString() in Java
Given the 2  toString()  implementations below, which one is preferred: or ? More importantly, given we have only 3 properties it might not make a difference, but at what point would you switch from  +  concat to   StringBuilder ? 
===LINK===
http://stackoverflow.com/questions/1532461/stringbuilder-vs-string-concatenation-in-tostring-in-java
===KEYWORDS===
java point stringbuilder make preferred 
===ANSWER===
621
<html><body><p>Version 1 is preferable because it is shorter and <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.18.1" rel="nofollow noreferrer">the compiler will in fact turn it into version 2</a> - no performance difference whatsoever.</p><p>More importantly given we have only 3
  properties it might not make a
  difference, but at what point do you
  switch from concat to builder?</p><p>At the point where you're concatenating in a loop - that's usually when the compiler can't substitute <code>StringBuilder</code> by itself.</p></body></html>

===ID===
584cbf973e2ca508e5f071ba
===QUESTION===
How to use java.util.Scanner to correctly read user input from System.in and act on it? [closed]
This is meant to be a  canonical question/answer  that can be used as a
  duplicate target. These requirements are based on the most common
  questions posted every day and may be added to as needed. They all
  require the same basic code structure to get to each of the scenarios
  and they are generally dependant on one another. I want to be able to have my program automatically wait for the next input after each previous input as well. I don't want to use anything that isn't available in the JDK. I want to know how to detect an  exit  command and end my program when that command is entered. I want to know how to match multiple commands for the  exit  command in a case-insensitive way. I want to be able to match regular expression patterns as well as the built-in primitives. For example, how to match what appears to be a date (  2014/10/18  )? I want to know how to match things that might not easily be implemented with regular expression matching - for example, an URL (  http://google.com  ). 
===LINK===
http://stackoverflow.com/questions/26446599/how-to-use-java-util-scanner-to-correctly-read-user-input-from-system-in-and-act
===KEYWORDS===
scanner requirements primitives http implemented 
===ANSWER===
8
<html><body><p>The following is how to properly use the <code>java.util.Scanner</code> class to interactively read user input from <code>System.in</code> correctly( sometimes referred to as <code>stdin</code>, especially in C, C++ and other languages as well as in Unix and Linux). It idiomatically demonstrates the most common things that are requested to be done.</p><pre><code>package com.stackoverflow.scanner;

import javax.annotation.Nonnull;
import java.math.BigInteger;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.*;
import java.util.regex.Pattern;

import static java.lang.String.format;

public class ScannerExample
{
    private static final Set&lt;String&gt; EXIT_COMMANDS;
    private static final Set&lt;String&gt; HELP_COMMANDS;
    private static final Pattern DATE_PATTERN;
    private static final String HELP_MESSAGE;

    static
    {
        final SortedSet&lt;String&gt; ecmds = new TreeSet&lt;String&gt;(String.CASE_INSENSITIVE_ORDER);
        ecmds.addAll(Arrays.asList("exit", "done", "quit", "end", "fino"));
        EXIT_COMMANDS = Collections.unmodifiableSortedSet(ecmds);
        final SortedSet&lt;String&gt; hcmds = new TreeSet&lt;String&gt;(String.CASE_INSENSITIVE_ORDER);
        hcmds.addAll(Arrays.asList("help", "helpi", "?"));
        HELP_COMMANDS = Collections.unmodifiableSet(hcmds);
        DATE_PATTERN = Pattern.compile("\\d{4}([-\\/])\\d{2}\\1\\d{2}"); // http://regex101.com/r/xB8dR3/1
        HELP_MESSAGE = format("Please enter some data or enter one of the following commands to exit %s", EXIT_COMMANDS);
    }

    /**
     * Using exceptions to control execution flow is always bad.
     * That is why this is encapsulated in a method, this is done this
     * way specifically so as not to introduce any external libraries
     * so that this is a completely self contained example.
     * @param s possible url
     * @return true if s represents a valid url, false otherwise
     */
    private static boolean isValidURL(@Nonnull final String s)
    {
        try { new URL(s); return true; }
        catch (final MalformedURLException e) { return false; }
    }

    private static void output(@Nonnull final String format, @Nonnull final Object... args)
    {
        System.out.println(format(format, args));
    }

    public static void main(final String[] args)
    {
        final Scanner sis = new Scanner(System.in);
        output(HELP_MESSAGE);
        while (sis.hasNext())
        {
            if (sis.hasNextInt())
            {
                final int next = sis.nextInt();
                output("You entered an Integer = %d", next);
            }
            else if (sis.hasNextLong())
            {
                final long next = sis.nextLong();
                output("You entered a Long = %d", next);
            }
            else if (sis.hasNextDouble())
            {
                final double next = sis.nextDouble();
                output("You entered a Double = %f", next);
            }
            else if (sis.hasNext("\\d+"))
            {
                final BigInteger next = sis.nextBigInteger();
                output("You entered a BigInteger = %s", next);
            }
            else if (sis.hasNextBoolean())
            {
                final boolean next = sis.nextBoolean();
                output("You entered a Boolean representation = %s", next);
            }
            else if (sis.hasNext(DATE_PATTERN))
            {
                final String next = sis.next(DATE_PATTERN);
                output("You entered a Date representation = %s", next);
            }
            else // unclassified
            {
                final String next = sis.next();
                if (isValidURL(next))
                {
                    output("You entered a valid URL = %s", next);
                }
                else
                {
                    if (EXIT_COMMANDS.contains(next))
                    {
                        output("Exit command %s issued, exiting!", next);
                        break;
                    }
                    else if (HELP_COMMANDS.contains(next)) { output(HELP_MESSAGE); }
                    else { output("You entered an unclassified String = %s", next); }
                }
            }
        }
        /*
           This will close the underlying Readable, in this case System.in, and free those resources.
           You will not be to read from System.in anymore after this you call .close().
           If you wanted to use System.in for something else, then don't close the Scanner.
        */
        sis.close();
        System.exit(0);
    }
}
</code></pre><p>I purposely kept this example compatible with JDK 6. If some scenario really demands a feature of JDK 7/8 I or someone else will post a new answer with specifics about how to modify this for that version JDK.</p><p>This shows exactly how to <a href="http://en.wikipedia.org/wiki/Idiom_(language_structure)" rel="nofollow">idiomatically</a> read commands from the user interactively and dispatch those commands. The majority of questions about <code>java.util.Scanner</code> are of the <em>how can I get my program to quit when I enter some specific input</em> category. This shows that and more.</p><p>The dispatch logic is intentionally naive so as to not complicate the solution for new readers. A dispatcher based on a <code>Strategy Pattern</code> or <code>Chain Of Responsibility</code> pattern would be more appropriate for real world problems that would be much more complex.</p><p>The code was deliberately structured as to require no <code>Exception</code> handling because there is no scenario where some data might not be correct.</p><p>I rarely see anyone using the <code>.hasNext()</code> properly, by testing for the generic <code>.hasNext()</code> to control the event loop, and then using the <code>if(.hasNextXxx())</code> idiom lets you decide how and what to proceed with your code without having to worry about asking for an <code>int</code> when none is available, thus no exception handling code.</p><p>Notice that there are no mutable variables used in the code, this is important to learn how to do, it eliminates four of the most major sources of runtime errors and subtle bugs.</p><p>No <code>nulls</code> means no possibility of a  <code>NullPointerExceptions</code>!</p><p>No mutability means that you don't have to worry about method arguments changing or anything else changing. When you step debug through you never have to use <code>watch</code> to see what variables are change to what values, if they are changing. This makes the logic 100% deterministic when you read it.</p><p>No mutability means your code is automatically thread-safe.</p><p>No side effects. If nothing can change, the you don't have to worry about some subtle side effect of some edge case changing something unexpectedly!</p><p><a href="http://www.vertigrated.com/blog/2011/05/the-final-word-on-final/" rel="nofollow">Read this if you don't understand how to apply the <code>final</code> keyword in your own code.</a></p><p>Notice how I use a <code>Set&lt;String&gt;</code> and use <code>.contains()</code> to classify the commands instead of a massive <code>switch</code> or <code>if/elseif</code> monstrosity that would bloat your code and more importantly make maintenance a nightmare! Adding a new overloaded command is as simple as adding a new <code>String</code> to the array in the constructor.</p><p>This also would work very well with <code>i18n</code> and <code>i10n</code> and the proper <code>ResourceBundles</code>.
A <code>Map&lt;Locale,Set&lt;String&gt;&gt;</code> would let you have multiple language support with very little overhead!</p><p>I have decided that all my code should <a href="http://stackoverflow.com/a/228305/177800">explicitly</a> declare if something is <code>@Nonnull</code> or <code>@Nullable</code>. It lets your IDE help warn you about potential <code>NullPointerException</code> hazards and when you do not have to check.</p><p>Most importantly it documents the expectation for future readers that none of these method parameters should be <code>null</code>.</p><p>Really think about this one before you do it.</p><p>What do you think will happen <code>System.in</code> if you were to call <code>sis.close()</code>? See the comments in the listing above.</p></body></html>

===ID===
584cbf973e2ca508e5f071bb
===QUESTION===
Java: checked vs unchecked exception explanation
I have read multiple posts on StackOverFlow about checked vs unchecked exceptions. I'm honestly still not quite sure how to use them properly.  Joshua Bloch in " Effective Java " said that  Use checked exceptions for
  recoverable conditions and runtime
  exceptions for programming errors
  (Item 58 in 2nd edition) Let's see if I understand this correctly. Here is my understanding of a checked exception: 1. Is the above consider a checked exception? 2. Is RuntimeException an unchecked exception? Here is my understanding of an unchecked exception: 4. Now, couldnt the above code also be a checked exception? I can try to recover the situation like this? Can I?  (Note: my 3rd question is inside the  catch  above) 5. Why do people do this? Why do they let the exception bubble up? Isn't handling the error sooner better? Why bubble up?  EDIT: Should I bubble up the exact exception or mask it using Exception? Below are my readings In Java, when should I create a checked exception, and when should it be a runtime exception? When to choose checked and unchecked exceptions 
===LINK===
http://stackoverflow.com/questions/6115896/java-checked-vs-unchecked-exception-explanation
===KEYWORDS===
code runtimeexception couldnt recover checked 
===ANSWER===
285
<html><body><p>Many people say that checked exceptions (i.e. these that you should explicitly catch or rethrow) should not be used at all. They were eliminated in C# for example, and most languages don't have them. So you can always throw a subclass of <code>RuntimeException</code> (unchecked exception)</p><p>However, I think checked exceptions are useful - they are used when you want to force the user of your API to think how to handle the exceptional situation (if it is recoverable). It's just that checked exceptions are overused in the Java platform, which makes people hate them.</p><p><a href="http://techblog.bozho.net/?p=316">Here's my extended view on the topic</a>.</p><p>As for the particular questions:</p><p><strong>Is the <code>NumberFormatException</code> consider a checked exception?</strong><br>
No. <code>NumberFormatException</code> is unchecked (= is subclass of <code>RuntimeException</code>). Why? I don't know. (but there should have been a method <code>isValidInteger(..)</code>)</br></p><p><strong>Is <code>RuntimeException</code> an unchecked exception?</strong><br>
Yes, exactly.</br></p><p><strong>What should I do here?</strong><br>
It depends on where this code is and what you want to happen. If it is in the UI layer - catch it and show a warning; if it's in the service layer - don't catch it at all - let it bubble. Just don't swallow the exception. If an exception occurs in most of the cases you should choose one of these:</br></p><p><strong>Now, couldn't the above code also be a checked exception? I can try to recover the situation like this? Can I?</strong><br>
It could've been. But nothing stops you from catching the unchecked exception as well</br></p><p><strong>Why do people add class <code>Exception</code> in the throws clause?</strong><br>
Most often because people are lazy to consider what to catch and what to rethrow. Throwing <code>Exception</code> is a bad practice and should be avoided.</br></p><p>Alas, there is no single rule to let you determine when to catch, when to rethrow, when to use checked and when to use unchecked exceptions. I agree this causes much confusion and a lot of bad code. The general principle is stated by Bloch (you quoted a part of it). And the general principle is to rethrow an exception to the layer where you can handle it.</p></body></html>

===ID===
584cbf983e2ca508e5f071bc
===QUESTION===
Why are only final variables accessible in anonymous class?
a  can only be final here.  Why?  How can I reassign  a  in  onClick()  method without keeping it as private member? How can I return the  5*a  when it clicked? I mean, 
===LINK===
http://stackoverflow.com/questions/4732544/why-are-only-final-variables-accessible-in-anonymous-class
===KEYWORDS===
keeping return method onclick reassign 
===ANSWER===
326
<html><body><p>As noted in comments, some of this becomes irrelevant in Java 8, where <code>final</code> can be implicit. Only an <em>effectively</em> final variable can be used in an anonymous inner class or lambda expression though.</p><p>It's basically due to the way Java manages <a href="http://en.wikipedia.org/wiki/Closure_%28computer_science%29">closures</a>.</p><p>When you create an instance of an anonymous inner class, any variables which are used within that class have their <em>values</em> copied in via the autogenerated constructor. This avoids the compiler having to autogenerate various extra types to hold the logical state of the "local variables", as for example the C# compiler does... (When C# captures a variable in an anonymous function, it really captures the variable - the closure can update the variable in a way which is seen by the main body of the method, and vice versa.)</p><p>As the value has been copied into the instance of the anonymous inner class, it would look odd if the variable could be modified by the rest of the method - you could have code which appeared to be working with an out-of-date variable (because that's effectively what <em>would</em> be happening... you'd be working with a copy taken at a different time). Likewise if you could make changes within the anonymous inner class, developers might expect those changes to be visible within the body of the enclosing method.</p><p>Making the variable final removes all these possibilities - as the value can't be changed  at all, you don't need to worry about whether such changes will be visible. The only ways to allow the method and the anonymous inner class see each other's changes is to use a mutable type of some description. This could be the enclosing class itself, an array, a mutable wrapper type... anything like that. Basically it's a bit like communicating between one method and another: changes made to the <em>parameters</em> of one method aren't seen by its caller, but changes made to the objects <em>referred to</em> by the parameters are seen.</p><p>If you're interested in a more detailed comparison between Java and C# closures, I have an <a href="http://csharpindepth.com/Articles/Chapter5/Closures.aspx">article</a> which goes into it further. I wanted to focus on the Java side in this answer :)</p></body></html>

===ID===
584cbf983e2ca508e5f071bd
===QUESTION===
How to retrieve and display images from a database in a JSP page?
How can I retrieve and display images from a database in a JSP page? 
===LINK===
http://stackoverflow.com/questions/2340406/how-to-retrieve-and-display-images-from-a-database-in-a-jsp-page
===KEYWORDS===
retrieve database 
===ANSWER===
54
<html><body><p>Let's see in steps what should happen: </p><p>That should be it. It almost writes code itself. Let's start with HTML (in <a href="http://stackoverflow.com/tags/jsp/info">JSP</a>):</p><pre class="lang-html prettyprint-override"><code>&lt;img src="${pageContext.request.contextPath}/images/foo.png"&gt;
&lt;img src="${pageContext.request.contextPath}/images/bar.png"&gt;
&lt;img src="${pageContext.request.contextPath}/images/baz.png"&gt;
</code></pre><p>You can if necessary also dynamically set <code>src</code> with <a href="http://stackoverflow.com/tags/el/info">EL</a> while iterating using <a href="http://stackoverflow.com/tags/jstl/info">JSTL</a>:</p><pre class="lang-html prettyprint-override"><code>&lt;c:forEach items="${imagenames}" var="imagename"&gt;
    &lt;img src="${pageContext.request.contextPath}/images/${imagename}"&gt;
&lt;/c:forEach&gt;
</code></pre><p>Then define/create a <a href="http://stackoverflow.com/tags/servlets/info">servlet</a> which listens on GET requests on URL pattern of <code>/images/*</code>, the below example uses plain vanilla JDBC for the job:</p><pre><code>@WebServlet("/images/*")
public class ImageServlet extends HttpServlet {

    // content=blob, name=varchar(255) UNIQUE.
    private static final String SQL_FIND = "SELECT content FROM Image WHERE name = ?";

    @Resource(name="jdbc/yourDB") // For Tomcat, define as &lt;Resource&gt; in context.xml and declare as &lt;resource-ref&gt; in web.xml.
    private DataSource dataSource;

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String imageName = request.getPathInfo().substring(1); // Returns "foo.png".

        try (Connection connection = dataSource.getConnection(); PreparedStatement statement = connection.prepareStatement(SQL_FIND)) {
            statement.setString(1, imageName);

            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    byte[] content = resultSet.getBytes("content");
                    response.setContentType(getServletContext().getMimeType(imageName));
                    response.setContentLength(content.length);
                    response.getOutputStream().write(content);
                } else {
                    response.sendError(HttpServletResponse.SC_NOT_FOUND); // 404.
                }
            }
        } catch (SQLException e) {
            throw new ServletException("Something failed at SQL/DB level.", e);
        }
    }

}
</code></pre><p>That's it. In case you worry about HEAD and caching headers and properly responding on those requests, use this <a href="http://stackoverflow.com/questions/132052/servlet-for-serving-static-content/29991447#29991447">abstract template for static resource servlet</a>.</p></body></html>

===ID===
584cbf993e2ca508e5f071be
===QUESTION===
Assigning variables with dynamic names in Java
I'd like to assign a set of variables in java as follows: How can I achieve this in Java? 
===LINK===
http://stackoverflow.com/questions/6729605/assigning-variables-with-dynamic-names-in-java
===KEYWORDS===
variables set java assign achieve 
===ANSWER===
62
<html><body><p>This is not how you do things in Java.   There are no dynamic variables in Java.  Java variables have to be declared in the source code (*).  Period.</p><p>Depending on what you are trying to achieve, you should use an array, a <code>List</code> or a <code>Map</code>; e.g.</p><pre><code>int n[] = new int[3];
for (int i = 0; i &lt; 3; i++) {
    n[i] = 5;
}

List&lt;Integer&gt; n = new ArrayList&lt;Integer&gt;();
for (int i = 1; i &lt; 4; i++) {
    n.add(5);
}

Map&lt;String, Integer&gt; n = new HashMap&lt;String, Integer&gt;();
for (int i = 1; i &lt; 4; i++) {
    n.put("n" + i, 5);
}
</code></pre><p><sup>* - That statement is slightly inaccurate.  If you use BCEL or ASM, you can "declare" the variables in the bytecode file.  But don't do it!  That way lies madness!</sup></p></body></html>

===ID===
584cbf993e2ca508e5f071bf
===QUESTION===
Design Patterns web based applications
I am designing a simple web based application. I am new to this web based domain.I needed your advice regarding the design patterns like how responsibility should be distributed among Servlets, criteria to make new Servlet, etc. Actually I have few entities on my home page and corresponding to each one of them we have few options like add, edit and delete. Earlier I was using one Servlet per options like Servlet1 for add entity1, Servlet2 for edit entity1 and so on and in this way we ended up having a large number of servlets. Now we are changing our design. My question is how you exactly choose how you choose the responsibility of a servlet. Should we have one Servlet per entity which will process all it's options and forward request to service layer.Or should we have one servlet for the whole page which will process the whole page request and then forward it to corresponding service layer.Also should the request object forwarded to service layer or not. Please you guide us in choosing the best design.Also any pointer to a good design pattern material will be welcome. 
===LINK===
http://stackoverflow.com/questions/3541077/design-patterns-web-based-applications
===KEYWORDS===
process distributed entity ended design 
===ANSWER===
418
<html><body><p>A bit decent web application consists of a mix of design patterns. I'll mention only the most important ones.</p><p>The core (architectural) design pattern you'd like to use is the <a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" rel="nofollow noreferrer">Model-View-Controller pattern</a>. The <em>Controller</em> is to be represented by a Servlet which (in)directly creates/uses a specific <em>Model</em> and <em>View</em> based on the request. The <em>Model</em> is to be represented by Javabean classes. This is often further dividable in <em>Business Model</em> which contains the actions (behaviour) and <em>Data Model</em> which contains the data (information). The <em>View</em> is to be represented by JSP files which have direct access to the (<em>Data</em>) <em>Model</em> by EL (Expression Language). </p><p>Then there are variations based on how actions and events are handled. The popular ones are:</p><p><strong>Request (action) based MVC</strong>: this is the simplest to implement. The (<em>Business</em>) <em>Model</em> works directly with <code>HttpServletRequest</code> and <code>HttpServletResponse</code> objects. You have to gather, convert and validate the request parameters (mostly) yourself. The <em>View</em> can be represented by plain vanilla HTML/CSS/JS and it does not maintain state across requests. This is how among others <a href="http://stackoverflow.com/tags/spring-mvc/info">Spring MVC</a>, <a href="http://stackoverflow.com/tags/struts/info">Struts</a> and <a href="http://stackoverflow.com/tags/stripes/info">Stripes</a> works.</p><p><strong>Component based MVC</strong>: this is harder to implement. But you end up with a simpler model and view wherein all the "raw" Servlet API is abstracted completely away. You shouldn't have the need to gather, convert and validate the request parameters yourself. The <em>Controller</em> does this task and sets the gathered, converted and validated request parameters in the <em>Model</em>. All you need to do is to define action methods which works directly with the model properties. The <em>View</em> is represented by "components" in flavor of JSP taglibs or XML elements which in turn generates HTML/CSS/JS. The state of the <em>View</em> for the subsequent requests is maintained in the session. This is particularly helpful for server-side conversion, validation and value change events. This is how among others <a href="http://stackoverflow.com/tags/jsf/info">JSF</a>, <a href="http://stackoverflow.com/tags/wicket/info">Wicket</a> and <a href="http://stackoverflow.com/tags/playframework/info">Play!</a> works.</p><p>As a side note, hobbying around with a homegrown MVC framework is a very nice learning exercise, and I do recommend it as long as you keep it for personal/private purposes. But once you go professional, then it's strongly recommended to pick an existing framework rather than reinventing your own. Learning an existing and well-developed framework takes in long term less time than developing and maintaining a robust framework yourself.</p><p>In the below detailed explanation I'll restrict myself to request based MVC since that's easier to implement.</p><p>First, the <em>Controller</em> part should implement the <a href="http://en.wikipedia.org/wiki/Front_Controller_pattern" rel="nofollow noreferrer">Front Controller pattern</a> (which is a specialized kind of <a href="http://en.wikipedia.org/wiki/Mediator_pattern" rel="nofollow noreferrer">Mediator pattern</a>). It should consist of only a single servlet which provides a centralized entry point of all requests. It should create the <em>Model</em> based on information available by the request, such as the pathinfo or servletpath, the method and/or specific parameters. The <em>Business Model</em> is called <code>Action</code> in the below <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html" rel="nofollow noreferrer"><code>HttpServlet</code></a> example.</p><pre><code>protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    try {
        Action action = ActionFactory.getAction(request);
        String view = action.execute(request, response);

        if (view.equals(request.getPathInfo().substring(1)) {
            request.getRequestDispatcher("/WEB-INF/" + view + ".jsp").forward(request, response);
        }
        else {
            response.sendRedirect(view); // We'd like to fire redirect in case of a view change as result of the action (PRG pattern).
        }
    }
    catch (Exception e) {
        throw new ServletException("Executing action failed.", e);
    }
}
</code></pre><p>Executing the action should return some identifier to locate the view. Simplest would be to use it as filename of the JSP. Map this servlet on a specific <code>url-pattern</code> in <code>web.xml</code>, e.g. <code>/pages/*</code>, <code>*.do</code> or even just <code>*.html</code>. </p><p>In case of prefix-patterns as for example <code>/pages/*</code> you could then invoke URL's like <a href="http://example.com/pages/register" rel="nofollow noreferrer">http://example.com/pages/register</a>, <a href="http://example.com/pages/login" rel="nofollow noreferrer">http://example.com/pages/login</a>, etc and provide <code>/WEB-INF/register.jsp</code>, <code>/WEB-INF/login.jsp</code> with the appropriate GET and POST actions. The parts <code>register</code>, <code>login</code>, etc are then available by <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getPathInfo--" rel="nofollow noreferrer"><code>request.getPathInfo()</code></a> as in above example. </p><p>When you're using suffix-patterns like <code>*.do</code>, <code>*.html</code>, etc, then you could then invoke URL's like <a href="http://example.com/register.do" rel="nofollow noreferrer">http://example.com/register.do</a>, <a href="http://example.com/login.do" rel="nofollow noreferrer">http://example.com/login.do</a>, etc and you should change the code examples in this answer (also the <code>ActionFactory</code>) to extract the <code>register</code> and <code>login</code> parts by <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getServletPath--" rel="nofollow noreferrer"><code>request.getServletPath()</code></a> instead.</p><p>The <code>Action</code> should follow the <a href="http://en.wikipedia.org/wiki/Strategy_pattern" rel="nofollow noreferrer">Strategy pattern</a>. It needs to be defined as an abstract/interface type which should do the work based on the <em>passed-in</em> arguments of the abstract method (this is the difference with the <a href="http://en.wikipedia.org/wiki/Command_pattern" rel="nofollow noreferrer">Command pattern</a>, wherein the abstract/interface type should do the work based on the arguments which are been passed-in during the <em>creation</em> of the implementation).</p><pre><code>public interface Action {
    public String execute(HttpServletRequest request, HttpServletResponse response) throws Exception;
}
</code></pre><p>You may want to make the <code>Exception</code> more specific with a custom exception like <code>ActionException</code>. It's just a basic kickoff example, the rest is all up to you.</p><p>Here's an example of a <code>LoginAction</code> which (as its name says) logs in the user. The <code>User</code> itself is in turn a <em>Data Model</em>. The <em>View</em> is aware of the presence of the <code>User</code>.</p><pre><code>public class LoginAction implements Action {

    public String execute(HttpServletRequest request, HttpServletResponse response) throws Exception {
        String username = request.getParameter("username");
        String password = request.getParameter("password");
        User user = userDAO.find(username, password);

        if (user != null) {
            request.getSession().setAttribute("user", user); // Login user.
            return "home"; // Redirect to home page.
        }
        else {
            request.setAttribute("error", "Unknown username/password. Please retry."); // Store error message in request scope.
            return "login"; // Go back to redisplay login form with error.
        }
    }

}
</code></pre><p>The <code>ActionFactory</code> should follow the <a href="http://en.wikipedia.org/wiki/Factory_method" rel="nofollow noreferrer">Factory method pattern</a>. Basically, it should provide a creational method which returns a concrete implementation of an abstract/interface type. In this case, it should return an implementation of the <code>Action</code> interface based on the information provided by the request. For example, the <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getMethod--" rel="nofollow noreferrer">method</a> and <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getPathInfo--" rel="nofollow noreferrer">pathinfo</a> (the pathinfo is the part after the context and servlet path in the request URL, excluding the query string).</p><pre><code>public static Action getAction(HttpServletRequest request) {
    return actions.get(request.getMethod() + request.getPathInfo());
}
</code></pre><p>The <code>actions</code> in turn should be some static/applicationwide <code>Map&lt;String, Action&gt;</code> which holds all known actions. It's up to you how to fill this map. Hardcoding:</p><pre><code>actions.put("POST/register", new RegisterAction());
actions.put("POST/login", new LoginAction());
actions.put("GET/logout", new LogoutAction());
// ...
</code></pre><p>Or configurable based on a properties/XML configuration file in the classpath: (pseudo)</p><pre><code>for (Entry entry : configuration) {
    actions.put(entry.getKey(), Class.forName(entry.getValue()).newInstance());
}
</code></pre><p>Or dynamically based on a scan in the classpath for classes implementing a certain interface and/or annotation: (pseudo)</p><pre><code>for (ClassFile classFile : classpath) {
    if (classFile.isInstanceOf(Action.class)) {
       actions.put(classFile.getAnnotation("mapping"), classFile.newInstance());
    }
}
</code></pre><p>Keep in mind to create a "do nothing" <code>Action</code> for the case there's no mapping. Let it for example return directly the <code>request.getPathInfo().substring(1)</code> then.</p><p>Those were the important patterns so far. </p><p>To get a step further, you could use the <a href="http://en.wikipedia.org/wiki/Facade_pattern" rel="nofollow noreferrer">Facade pattern</a> to create a <code>Context</code> class which in turn wraps the request and response objects and offers several convenience methods delegating to the request and response objects and pass that as argument into the <code>Action#execute()</code> method instead. This adds an extra abstract layer to hide the raw Servlet API away. You should then basically end up with <strong>zero</strong> <code>import javax.servlet.*</code> declarations in every <code>Action</code> implementation. In JSF terms, this is what the <a href="http://docs.oracle.com/javaee/7/api/javax/faces/context/FacesContext.html" rel="nofollow noreferrer"><code>FacesContext</code></a> and <a href="http://docs.oracle.com/javaee/7/api/javax/faces/context/ExternalContext.html" rel="nofollow noreferrer"><code>ExternalContext</code></a> classes are doing. You can find a concrete example in <a href="http://stackoverflow.com/questions/4764285/retrieving-web-session-from-a-pojo-outside-the-web-container/4764894#4764894">this answer</a>.</p><p>Then there's the <a href="http://en.wikipedia.org/wiki/State_pattern" rel="nofollow noreferrer">State pattern</a> for the case that you'd like to add an extra abstraction layer to split the tasks of gathering the request parameters, converting them, validating them, updating the model values and execute the actions. In JSF terms, this is what the <a href="http://download.oracle.com/javaee/7/api/javax/faces/lifecycle/Lifecycle.html" rel="nofollow noreferrer"><code>LifeCycle</code></a> is doing.</p><p>Then there's the <a href="http://en.wikipedia.org/wiki/Composite_pattern" rel="nofollow noreferrer">Composite pattern</a> for the case that you'd like to create a component based view which can be attached with the model and whose behaviour depends on the state of the request based lifecycle. In JSF terms, this is what the <a href="http://docs.oracle.com/javaee/7/api/javax/faces/component/UIComponent.html" rel="nofollow noreferrer"><code>UIComponent</code></a> represent. </p><p>This way you can evolve bit by bit towards a component based framework.</p></body></html>

===ID===
584cbf9a3e2ca508e5f071c0
===QUESTION===
What does the 'static' keyword do in a class?
To be specific, I was trying this code: But it gave the error  Cannot access non-static field in static method main So I changed the declaration of  clock  to this: And it worked. What does it mean to put that keyword before the declaration? What exactly will it do and/or restrict in terms of what can be done to that object? 
===LINK===
http://stackoverflow.com/questions/413898/what-does-the-static-keyword-do-in-a-class
===KEYWORDS===
access declaration code terms keyword 
===ANSWER===
382
<html><body><p><code>static</code> members belong to the class instead of a specific instance.</p><p>It means that <b>only one instance of a <code>static</code> field exists</b><sup>[1]</sup> even if you create a million instances of the class or you don't create any. It will be shared by all instances.</p><p>Since <code>static</code> methods also do not belong to a specific instance, they can't refer to instance members (how would you know which instance Hello class you want to refer to?). <code>static</code> members can only refer to <code>static</code> members. Instance members can, of course access <code>static</code> members.</p><p><i>Side note:</i> Of course, <code>static</code> members can access instance members <b>through an object reference</b>.</p><p>Example:</p><pre><code>public class Example {
    private static boolean staticField;
    private boolean instanceField;
    public static void main(String[] args) {
        // a static method can access static fields
        staticField = true;

        // a static method can access instance fields through an object reference
        Example instance = new Example();
        instance.instanceField = true;
    }
</code></pre><p>[1]: Depending on the runtime characteristics, it can be one per ClassLoader or AppDomain or thread, but that is beside the point.</p></body></html>

===ID===
584cbf9a3e2ca508e5f071c1
===QUESTION===
What's the difference between JavaScript and Java?
What's the difference between JavaScript and Java? 
===LINK===
http://stackoverflow.com/questions/245062/whats-the-difference-between-javascript-and-java
===KEYWORDS===
difference java javascript 
===ANSWER===
575
<html><body><p>Java and Javascript are similar like Car and Carpet are similar.</p></body></html>

===ID===
584cbf9a3e2ca508e5f071c2
===QUESTION===
How to best position Swing GUIs?
In  another thread  I stated that I liked to center my GUIs by doing something like this: But Andrew Thompson had a different opinion, to instead call and inquiring minds want to know why? 
===LINK===
http://stackoverflow.com/questions/7143287/how-to-best-position-swing-guis
===KEYWORDS===
center thread stated guis call 
===ANSWER===
145
<html><body><p>To my eye, a GUI in the middle of the screen looks so.. "splash-screen'ish". I keep waiting for them to disappear and the <em>real</em> GUI to appear!</p><p>Since Java 1.5 we've had access to <a href="http://docs.oracle.com/javase/8/docs/api/java/awt/Window.html#setLocationByPlatform-boolean-" rel="nofollow noreferrer"><code>Window.setLocationByPlatform(boolean)</code></a>. which..</p><p>Sets whether this Window should appear at the default location for the native windowing system or at the current location (returned by getLocation) the next time the Window is made visible. This behavior resembles a native window shown without programmatically setting its location. <strong>Most windowing systems cascade windows if their locations are not explicitly set.</strong> The actual location is determined once the window is shown on the screen. </p><p>Have a look at the effect of this example that puts 3 GUIs into the default positions as chosen by the OS - on Windows 7, Linux with Gnome &amp; Mac OS X.</p><p><img alt="Stacked windows on Windows 7" src="https://i.stack.imgur.com/D1JLb.png"> <img alt="enter image description here" src="https://i.stack.imgur.com/5kvJV.png">
<img alt="Stacked windows on Mac OS X" src="https://i.stack.imgur.com/J2zQu.png"/></img></img></p><p>(3 lots of) 3 GUIs neatly stacked.  This represents 'the path of least surprise' for the end user, since it is how the OS might position 3 instances of the default plain-text editor (or anything else, for that matter).  My thanks to trashgod for the Linux &amp; Mac. images.</p><p>Here is the simple code used:</p><pre><code>import javax.swing.*;

class WhereToPutTheGui {

    public static void initGui() {
        for (int ii=1; ii&lt;4; ii++) {
            JFrame f = new JFrame("Frame " + ii);
            f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            String s =
                "os.name: " + System.getProperty("os.name") +
                "\nos.version: " + System.getProperty("os.version");
            f.add(new JTextArea(s,3,28));  // suggest a size
            f.pack();
            // Let the OS handle the positioning!
            f.setLocationByPlatform(true);
            f.setVisible(true);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater( new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(
                        UIManager.getSystemLookAndFeelClassName());
                } catch (Exception useDefault) {}
                initGui();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbf9b3e2ca508e5f071c3
===QUESTION===
Trusting all certificates using HttpClient over HTTPS
Recently posted a question regarding the  HttpClient  over Https ( found here ).  I've made some headway, but I've run into new issues. As with my last problem, I can't seem to find an example anywhere that works for me. Basically, I want my client to accept any certificate (because I'm only ever pointing to one server) but I keep getting a  javax.net.ssl.SSLException: Not trusted server certificate exception. So this is what I have: And here's the error I'm getting: 
===LINK===
http://stackoverflow.com/questions/2642777/trusting-all-certificates-using-httpclient-over-https
===KEYWORDS===
pointing trusting accept headway javax 
===ANSWER===
360
<html><body><p><strong>Note: Do not implement this in production code you are ever going to use on a network you do not entirely trust. Especially anything going over the public internet.</strong> </p><p>Your question is just what I want to know. After I did some searches, the conclusion is as follows.</p><p>In HttpClient way, you should create a custom class from org.apache.http.conn.ssl.SSLSocketFactory, not the one org.apache.http.conn.ssl.SSLSocketFactory
 itself. Some clues can be found in this post <a href="http://stackoverflow.com/questions/2899079/custom-ssl-handling-stopped-working-on-android-2-2-froyo">Custom SSL handling stopped working on Android 2.2 FroYo</a>.</p><p>An example is like  ...</p><pre><code>import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.security.KeyManagementException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;

import org.apache.http.conn.ssl.SSLSocketFactory;
public class MySSLSocketFactory extends SSLSocketFactory {
    SSLContext sslContext = SSLContext.getInstance("TLS");

    public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException, KeyManagementException, KeyStoreException, UnrecoverableKeyException {
        super(truststore);

        TrustManager tm = new X509TrustManager() {
            public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {
            }

            public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {
            }

            public X509Certificate[] getAcceptedIssuers() {
                return null;
            }
        };

        sslContext.init(null, new TrustManager[] { tm }, null);
    }

    @Override
    public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {
        return sslContext.getSocketFactory().createSocket(socket, host, port, autoClose);
    }

    @Override
    public Socket createSocket() throws IOException {
        return sslContext.getSocketFactory().createSocket();
    }
}
</code></pre><p>and use this class while creating instance of HttpClient.</p><pre><code>public HttpClient getNewHttpClient() {
    try {
        KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());
        trustStore.load(null, null);

        MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);
        sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);

        HttpParams params = new BasicHttpParams();
        HttpProtocolParams.setVersion(params, HttpVersion.HTTP_1_1);
        HttpProtocolParams.setContentCharset(params, HTTP.UTF_8);

        SchemeRegistry registry = new SchemeRegistry();
        registry.register(new Scheme("http", PlainSocketFactory.getSocketFactory(), 80));
        registry.register(new Scheme("https", sf, 443));

        ClientConnectionManager ccm = new ThreadSafeClientConnManager(params, registry);

        return new DefaultHttpClient(ccm, params);
    } catch (Exception e) {
        return new DefaultHttpClient();
    }
}
</code></pre><p>BTW, the link below is for someone who is looking for HttpURLConnection solution.
<a href="http://stackoverflow.com/questions/995514/https-connection-android/1000205#1000205">Https Connection Android</a></p><p>I have tested the above two kinds of solutions on froyo, and they all work like a charm in my cases. Finally, using HttpURLConnection may face the redirect problems, but this is beyond the topic.</p><p>Note: Before you decide to trust all certificates, you probably should know the site full well and won't be harmful of it to end-user.</p><p>Indeed, the risk you take should be considered carefully, including the effect of hacker's mock site mentioned in the following comments that I deeply appreciated. In some situation, although it might be hard to take care of all certificates, you'd better know the implicit drawbacks to trust all of them.</p></body></html>

===ID===
584cbf9c3e2ca508e5f071c4
===QUESTION===
How to pass an object from one activity to another on Android
I am trying to work on sending an object of my  customer  class from one  Activity  and display it in another  Activity . The code for the customer class: I want to send its object from one  Activity  to another and then display the data on the other  Activity . How can I achieve that? 
===LINK===
http://stackoverflow.com/questions/2736389/how-to-pass-an-object-from-one-activity-to-another-on-android
===KEYWORDS===
sending code work object pass 
===ANSWER===
515
<html><body><p>One option could be letting your custom class implement the <code>Serializable</code> interface and then you can pass object instances in the intent extra using the <code>putExtra(Serializable..)</code> variant of the <code>Intent#putExtra()</code> method.</p><p><strong>Pseudocode</strong>:</p><pre><code>//To pass:
intent.putExtra("MyClass", obj);

// To retrieve object in second Activity
getIntent().getSerializableExtra("MyClass");
</code></pre></body></html>

===ID===
584cbf9c3e2ca508e5f071c5
===QUESTION===
When do you use Java's @Override annotation and why?
What are the best practices for using Java's  @Override  annotation and why?    It seems like it would be overkill to mark every single overridden method with the  @Override  annotation.   Are there certain programming situations that call for using the  @Override  and others that should never use the  @Override ?    
===LINK===
http://stackoverflow.com/questions/94361/when-do-you-use-javas-override-annotation-and-why
===KEYWORDS===
java mark overkill practices call 
===ANSWER===
515
<html><body><p>Use it every time you override a method for two benefits.  Do it so that you can take advantage of the compiler checking to make sure you actually are overriding a method when you think you are.  This way, if you make a common mistake of misspelling a method name or not correctly matching the parameters, you will be warned that you method does not actually override as you think it does.  Secondly, it makes your code easier to understand because it is more obvious when methods are overwritten.</p><p>Additionally, in Java 1.6 you can use it to mark when a method implements an interface for the same benefits.  I think it would be better to have a separate annotation (like <code>@Implements</code>), but it's better than nothing.</p></body></html>

===ID===
584cbf9d3e2ca508e5f071c6
===QUESTION===
Java 256-bit AES Password-Based Encryption
I need to implement 256 bit AES encryption, but all the examples I have found online use a "KeyGenerator" to generate a 256 bit key, but I would like to use my own passkey. How can I create my own key? I have tried padding it out to 256 bits, but then I get an error saying that the key is too long. I do have the unlimited jurisdiction patch installed, so thats not the problem :) Ie. The KeyGenerator looks like this ... Code taken from here EDIT I was actually padding the password out to 256 bytes, not bits, which is too long. The following is some code I am using now that I have some more experience with this. The "TODO" bits you need to do yourself :-) 
===LINK===
http://stackoverflow.com/questions/992019/java-256-bit-aes-password-based-encryption
===KEYWORDS===
experience code passkey keygenerator todo 
===ANSWER===
346
<html><body><p>Share the <code>password</code> (a <code>char[]</code>) and <code>salt</code> (a <code>byte[]</code>—8 bytes selected by a <code>SecureRandom</code> makes a good salt—which doesn't need to be kept secret) with the recipient out-of-band. Then to derive a good key from this information:</p><pre><code>/* Derive the key, given password and salt. */
SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
KeySpec spec = new PBEKeySpec(password, salt, 65536, 256);
SecretKey tmp = factory.generateSecret(spec);
SecretKey secret = new SecretKeySpec(tmp.getEncoded(), "AES");
</code></pre><p>The magic numbers (which could be defined as constants somewhere) 65536 and 256 are the key derivation iteration count and the key size, respectively.</p><p>The key derivation function is iterated to require significant computational effort, and that prevents attackers from quickly trying many different passwords. The iteration count can be changed depending on the computing resources available. </p><p>The key size can be reduced to 128 bits, which is still considered "strong" encryption, but it doesn't give much of a safety margin if attacks are discovered that weaken AES.</p><p>Used with a proper block-chaining mode, the same derived key can be used to encrypt many messages. In CBC, a random initialization vector (IV) is generated for each message, yielding different cipher text even if the plain text is identical. CBC may not be the most secure mode available to you (see AEAD below); there are many other modes with different security properties, but they all use a similar random input. In any case, the outputs of each encryption operation are the cipher text <em>and</em> the initialization vector:</p><pre><code>/* Encrypt the message. */
Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
cipher.init(Cipher.ENCRYPT_MODE, secret);
AlgorithmParameters params = cipher.getParameters();
byte[] iv = params.getParameterSpec(IvParameterSpec.class).getIV();
byte[] ciphertext = cipher.doFinal("Hello, World!".getBytes("UTF-8"));
</code></pre><p>Store the <code>ciphertext</code> and the <code>iv</code>. On decryption, the <code>SecretKey</code> is regenerated in exactly the same way, using using the password with the same salt and iteration parameters. Initialize the cipher with this key <em>and</em> the initialization vector stored with the message:</p><pre><code>/* Decrypt the message, given derived key and initialization vector. */
Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
cipher.init(Cipher.DECRYPT_MODE, secret, new IvParameterSpec(iv));
String plaintext = new String(cipher.doFinal(ciphertext), "UTF-8");
System.out.println(plaintext);
</code></pre><p>Java 7 included API support for AEAD cipher modes, and the "SunJCE" provider included with OpenJDK and Oracle distributions implements these beginning with Java 8. One of these modes is strongly recommended in place of CBC; it will protect the integrity of the data as well as their privacy.</p><p>A <code>java.security.InvalidKeyException</code> with the message "Illegal key size or default parameters" means that the cryptography strength <em>is</em> limited; the unlimited strength jurisdiction policy files are not in the correct location. In a JDK, they should be placed under <code>${jdk}/jre/lib/security</code> </p><p>Based on the problem description, it sounds like the policy files are not correctly installed. Systems can easily have multiple Java runtimes; double-check to make sure that the correct location is being used.</p></body></html>

===ID===
584cbf9d3e2ca508e5f071c7
===QUESTION===
Cannot make a static reference to the non-static method
Building a multi-language application in Java. Getting an error when inserting String value from  R.string  resource XML file: This is the error message: Error: Cannot make a static reference to the non-static method getText(int) from the type 
       Context How is this caused and how can I solve it? 
===LINK===
http://stackoverflow.com/questions/4969171/cannot-make-a-static-reference-to-the-non-static-method
===KEYWORDS===
building multi java int caused 
===ANSWER===
106
<html><body><p>Since <code>getText()</code> is non-static you cannot call it from a static method.</p><p>To understand why, you have to understand the difference between the two.</p><p>Instance (non-static) methods work on objects that are of a particular type (the class). These are created with the new like this:</p><pre><code>SomeClass myObject = new SomeClass();
</code></pre><p>To call an instance method, you call it on the instance (<code>myObject</code>):</p><pre><code>myObject.getText(...)
</code></pre><p><s>However a static method/field can be called <strong>only</strong> on the type directly, say like this:</s>
<em>The previous statement is not correct. <a href="http://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html" rel="nofollow">One can also refer to static fields with an object reference like</a> <code>myObject.staticMethod()</code> but this is discouraged because it does not make it clear that they are class variables.</em> </p><pre><code>... = SomeClass.final
</code></pre><p>And the two cannot work together as they operate on different data spaces (instance data and class data)</p><p>Let me try and explain. Consider this class (psuedocode):</p><pre><code>class Test {
     string somedata = "99";
     string getText() { return somedata; } 
     static string TTT = "0";
}
</code></pre><p>Now I have the following use case:</p><pre><code>Test item1 = new Test();
 item1.somedata = "200";

 Test item2 = new Test();

 Test.TTT = "1";
</code></pre><p>What are the values?</p><p>Well</p><pre><code>in item1 TTT = 1 and somedata = 200
in item2 TTT = 1 and somedata = 99
</code></pre><p>In other words, <code>TTT</code> is a datum that is shared by all the instances of the type. So it make no sense to say </p><pre><code>class Test {
         string somedata = "99";
         string getText() { return somedata; } 
  static string TTT = getText(); // error there is is no somedata at this point 
}
</code></pre><p><strong>So the question is why is <em>TTT</em> static or why is getText() not static?</strong> </p><p>Remove the <code>static</code> and it should get past this error - but without understanding what your type does it's only a sticking plaster till the next error. What are the requirements of <code>getText()</code> that require it to be non-static?</p></body></html>

===ID===
584cbf9e3e2ca508e5f071c8
===QUESTION===
Avoiding != null statements
The idiom I use the most when programming in Java is to test if  object != null  before I use it. This is to avoid a  NullPointerException . I find the code very ugly, and it becomes unreadable. Is there a good alternative to this?  I want to address the necessity to test every object if you want to access a field or method of this object. For example: In this case I will avoid a  NullPointerException , and I don't know exactly if the object is  null  or not. These tests appear throughout my code as a consequence. 
===LINK===
http://stackoverflow.com/questions/271526/avoiding-null-statements
===KEYWORDS===
code unreadable null find java 
===ANSWER===
1892
<html><body><p>This to me sounds like a reasonably common problem that junior to intermediate developers tend to face at some point: they either don't know or don't trust the contracts they are participating in and defensively overcheck for nulls.  Additionally, when writing their own code, they tend to rely on returning nulls to indicate something thus requiring the caller to check for nulls.</p><p>To put this another way, there are two instances where null checking comes up:</p><p>Where null is a valid response in terms of the contract; and</p><p>Where it isn't a valid response.</p><p>(2) is easy.  Either use <code>assert</code> statements (assertions) or allow failure (for example,  <a href="http://docs.oracle.com/javase/6/docs/api/index.html?java/lang/NullPointerException.html" rel="nofollow noreferrer">NullPointerException</a>).  Assertions are a highly-underused Java feature that was added in 1.4.  The syntax is:</p><pre><code>assert &lt;condition&gt;
</code></pre><p>or</p><pre><code>assert &lt;condition&gt; : &lt;object&gt;
</code></pre><p>where <code>&lt;condition&gt;</code> is a boolean expression and <code>&lt;object&gt;</code> is an object whose <code>toString()</code> method's output will be included in the error.</p><p>An <code>assert</code> statement throws an <code>Error</code> (<code>AssertionError</code>) if the condition is not true.  By default, Java ignores assertions.  You can enable assertions by passing the option <code>-ea</code> to the JVM.  You can enable and disable assertions for individual classes and packages.  This means that you can validate code with the assertions while developing and testing, and disable them in a production environment, although my testing has shown next to no performance impact from assertions.</p><p>Not using assertions in this case is OK because the code will just fail, which is what will happen if you use assertions.  The only difference is that with assertions it might happen sooner, in a more-meaningful way and possibly with extra information, which may help you to figure out why it happened if you weren't expecting it.</p><p>(1) is a little harder.  If you have no control over the code you're calling then you're stuck.  If null is a valid response, you have to check for it.</p><p>If it's code that you do control, however (and this is often the case), then it's a different story.  Avoid using nulls as a response.  With methods that return collections, it's easy: return empty collections (or arrays) instead of nulls pretty much all the time.</p><p>With non-collections it might be harder.  Consider this as an example: if you have these interfaces:</p><pre><code>public interface Action {
  void doSomething();
}

public interface Parser {
  Action findAction(String userInput);
}
</code></pre><p>where Parser takes raw user input and finds something to do, perhaps if you're implementing a command line interface for something.  Now you might make the contract that it returns null if there's no appropriate action.  That leads the null checking you're talking about.</p><p>An alternative solution is to never return null and instead use the <a href="https://en.wikipedia.org/wiki/Null_Object_pattern" rel="nofollow noreferrer">Null Object pattern</a>:</p><pre><code>public class MyParser implements Parser {
  private static Action DO_NOTHING = new Action() {
    public void doSomething() { /* do nothing */ }
  };

  public Action findAction(String userInput) {
    // ...
    if ( /* we can't find any actions */ ) {
      return DO_NOTHING;
    }
  }
}
</code></pre><p>Compare:</p><pre><code>Parser parser = ParserFactory.getParser();
if (parser == null) {
  // now what?
  // this would be an example of where null isn't (or shouldn't be) a valid response
}
Action action = parser.findAction(someInput);
if (action == null) {
  // do nothing
} else {
  action.doSomething();
}
</code></pre><p>to</p><pre><code>ParserFactory.getParser().findAction(someInput).doSomething();
</code></pre><p>which is a much better design because it leads to more concise code.</p><p>That said, perhaps it is entirely appropriate for the findAction() method to throw an Exception with a meaningful error message -- especially in this case where you are relying on user input.  It would be much better for the findAction method to throw an Exception than for the calling method to blow up with a simple NullPointerException with no explanation.</p><pre><code>try {
    ParserFactory.getParser().findAction(someInput).doSomething();
} catch(ActionNotFoundException anfe) {
    userConsole.err(anfe.getMessage());
}
</code></pre><p>Or if you think the try/catch mechanism is too ugly, rather than Do Nothing your default action should provide feedback to the user.</p><pre><code>public Action findAction(final String userInput) {
    /* Code to return requested Action if found */
    return new Action() {
        public void doSomething() {
            userConsole.err("Action not found: " + userInput);
        }
    }
}
</code></pre></body></html>

===ID===
584cbf9f3e2ca508e5f071c9
===QUESTION===
How to get the path of a running JAR file?
My code runs inside a JAR file, say foo.jar, and I need to know, in the code, in which folder the running foo.jar is. So, if foo.jar is in  C:\FOO\ , I want to get that path no matter what my current working directory is. 
===LINK===
http://stackoverflow.com/questions/320542/how-to-get-the-path-of-a-running-jar-file
===KEYWORDS===
code jar matter \foo\ path 
===ANSWER===
359
<html><body><pre><code>return new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath());
</code></pre><p>Obviously, this will do odd things if your class was loaded from a non-file location.</p></body></html>

===ID===
584cbf9f3e2ca508e5f071ca
===QUESTION===
How do I invoke a Java method when given the method name as a string?
If I have two variables: Without knowing the class of  obj , how can I call the method identified by  methodName  on it? The method being called has no parameters, and a  String  return value. It's  a getter for a Java bean . 
===LINK===
http://stackoverflow.com/questions/160970/how-do-i-invoke-a-java-method-when-given-the-method-name-as-a-string
===KEYWORDS===
knowing methodname invoke parameters called 
===ANSWER===
619
<html><body><p>Coding from the hip, it would be something like:</p><pre><code>java.lang.reflect.Method method;
try {
  method = obj.getClass().getMethod(methodName, param1.class, param2.class, ..);
} catch (SecurityException e) { ... }
  catch (NoSuchMethodException e) { ... }
</code></pre><p>The parameters identify the very specific method you need (if there are several overloaded available, if the method has no arguments, only give <code>methodName</code>).</p><p>Then you invoke that method by calling</p><pre><code>try {
  method.invoke(obj, arg1, arg2,...);
} catch (IllegalArgumentException e) { ... }
  catch (IllegalAccessException e) { ... }
  catch (InvocationTargetException e) { ... }
</code></pre><p>Again, leave out the arguments in <code>.invoke</code>, if you don't have any. But yeah. Read about <a href="http://java.sun.com/docs/books/tutorial/reflect/index.html" rel="nofollow noreferrer">Java Reflection</a></p></body></html>

===ID===
584cbfa03e2ca508e5f071cb
===QUESTION===
read/write to Windows Registry using Java
How is it possible to read/write to the Windows Registry using java? 
===LINK===
http://stackoverflow.com/questions/62289/read-write-to-windows-registry-using-java
===KEYWORDS===
read/write java 
===ANSWER===
285
<html><body><p>I know this question is old, but it is the first search result on google to "java read/write to registry".  Recently I found this amazing piece of code which:</p><p>This is pure, Java code.</p><p>It uses reflection to work, by actually accessing the private methods in the java.util.prefs.Preferences class. The internals of this class are complicated, but the class itself is very easy to use.</p><p>For example, the following code obtains the exact windows distribution <strong>from the registry</strong>:</p><pre><code>String value = WinRegistry.readString (
    WinRegistry.HKEY_LOCAL_MACHINE,                             //HKEY
   "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion",           //Key
   "ProductName");                                              //ValueName
    System.out.println("Windows Distribution = " + value);          
</code></pre><p>Here is the original class. Just copy paste it and it should work:</p><pre><code>import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;
import java.util.ArrayList;
import java.util.List;
import java.util.prefs.Preferences;

public class WinRegistry {
  public static final int HKEY_CURRENT_USER = 0x80000001;
  public static final int HKEY_LOCAL_MACHINE = 0x80000002;
  public static final int REG_SUCCESS = 0;
  public static final int REG_NOTFOUND = 2;
  public static final int REG_ACCESSDENIED = 5;

  private static final int KEY_ALL_ACCESS = 0xf003f;
  private static final int KEY_READ = 0x20019;
  private static final Preferences userRoot = Preferences.userRoot();
  private static final Preferences systemRoot = Preferences.systemRoot();
  private static final Class&lt;? extends Preferences&gt; userClass = userRoot.getClass();
  private static final Method regOpenKey;
  private static final Method regCloseKey;
  private static final Method regQueryValueEx;
  private static final Method regEnumValue;
  private static final Method regQueryInfoKey;
  private static final Method regEnumKeyEx;
  private static final Method regCreateKeyEx;
  private static final Method regSetValueEx;
  private static final Method regDeleteKey;
  private static final Method regDeleteValue;

  static {
    try {
      regOpenKey = userClass.getDeclaredMethod("WindowsRegOpenKey",
          new Class[] { int.class, byte[].class, int.class });
      regOpenKey.setAccessible(true);
      regCloseKey = userClass.getDeclaredMethod("WindowsRegCloseKey",
          new Class[] { int.class });
      regCloseKey.setAccessible(true);
      regQueryValueEx = userClass.getDeclaredMethod("WindowsRegQueryValueEx",
          new Class[] { int.class, byte[].class });
      regQueryValueEx.setAccessible(true);
      regEnumValue = userClass.getDeclaredMethod("WindowsRegEnumValue",
          new Class[] { int.class, int.class, int.class });
      regEnumValue.setAccessible(true);
      regQueryInfoKey = userClass.getDeclaredMethod("WindowsRegQueryInfoKey1",
          new Class[] { int.class });
      regQueryInfoKey.setAccessible(true);
      regEnumKeyEx = userClass.getDeclaredMethod(  
          "WindowsRegEnumKeyEx", new Class[] { int.class, int.class,  
              int.class });  
      regEnumKeyEx.setAccessible(true);
      regCreateKeyEx = userClass.getDeclaredMethod(  
          "WindowsRegCreateKeyEx", new Class[] { int.class,  
              byte[].class });  
      regCreateKeyEx.setAccessible(true);  
      regSetValueEx = userClass.getDeclaredMethod(  
          "WindowsRegSetValueEx", new Class[] { int.class,  
              byte[].class, byte[].class });  
      regSetValueEx.setAccessible(true); 
      regDeleteValue = userClass.getDeclaredMethod(  
          "WindowsRegDeleteValue", new Class[] { int.class,  
              byte[].class });  
      regDeleteValue.setAccessible(true); 
      regDeleteKey = userClass.getDeclaredMethod(  
          "WindowsRegDeleteKey", new Class[] { int.class,  
              byte[].class });  
      regDeleteKey.setAccessible(true); 
    }
    catch (Exception e) {
      throw new RuntimeException(e);
    }
  }

  private WinRegistry() {  }

  /**
   * Read a value from key and value name
   * @param hkey   HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE
   * @param key
   * @param valueName
   * @return the value
   * @throws IllegalArgumentException
   * @throws IllegalAccessException
   * @throws InvocationTargetException
   */
  public static String readString(int hkey, String key, String valueName) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    if (hkey == HKEY_LOCAL_MACHINE) {
      return readString(systemRoot, hkey, key, valueName);
    }
    else if (hkey == HKEY_CURRENT_USER) {
      return readString(userRoot, hkey, key, valueName);
    }
    else {
      throw new IllegalArgumentException("hkey=" + hkey);
    }
  }

  /**
   * Read value(s) and value name(s) form given key 
   * @param hkey  HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE
   * @param key
   * @return the value name(s) plus the value(s)
   * @throws IllegalArgumentException
   * @throws IllegalAccessException
   * @throws InvocationTargetException
   */
  public static Map&lt;String, String&gt; readStringValues(int hkey, String key) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    if (hkey == HKEY_LOCAL_MACHINE) {
      return readStringValues(systemRoot, hkey, key);
    }
    else if (hkey == HKEY_CURRENT_USER) {
      return readStringValues(userRoot, hkey, key);
    }
    else {
      throw new IllegalArgumentException("hkey=" + hkey);
    }
  }

  /**
   * Read the value name(s) from a given key
   * @param hkey  HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE
   * @param key
   * @return the value name(s)
   * @throws IllegalArgumentException
   * @throws IllegalAccessException
   * @throws InvocationTargetException
   */
  public static List&lt;String&gt; readStringSubKeys(int hkey, String key) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    if (hkey == HKEY_LOCAL_MACHINE) {
      return readStringSubKeys(systemRoot, hkey, key);
    }
    else if (hkey == HKEY_CURRENT_USER) {
      return readStringSubKeys(userRoot, hkey, key);
    }
    else {
      throw new IllegalArgumentException("hkey=" + hkey);
    }
  }

  /**
   * Create a key
   * @param hkey  HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE
   * @param key
   * @throws IllegalArgumentException
   * @throws IllegalAccessException
   * @throws InvocationTargetException
   */
  public static void createKey(int hkey, String key) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    int [] ret;
    if (hkey == HKEY_LOCAL_MACHINE) {
      ret = createKey(systemRoot, hkey, key);
      regCloseKey.invoke(systemRoot, new Object[] { new Integer(ret[0]) });
    }
    else if (hkey == HKEY_CURRENT_USER) {
      ret = createKey(userRoot, hkey, key);
      regCloseKey.invoke(userRoot, new Object[] { new Integer(ret[0]) });
    }
    else {
      throw new IllegalArgumentException("hkey=" + hkey);
    }
    if (ret[1] != REG_SUCCESS) {
      throw new IllegalArgumentException("rc=" + ret[1] + "  key=" + key);
    }
  }

  /**
   * Write a value in a given key/value name
   * @param hkey
   * @param key
   * @param valueName
   * @param value
   * @throws IllegalArgumentException
   * @throws IllegalAccessException
   * @throws InvocationTargetException
   */
  public static void writeStringValue
    (int hkey, String key, String valueName, String value) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    if (hkey == HKEY_LOCAL_MACHINE) {
      writeStringValue(systemRoot, hkey, key, valueName, value);
    }
    else if (hkey == HKEY_CURRENT_USER) {
      writeStringValue(userRoot, hkey, key, valueName, value);
    }
    else {
      throw new IllegalArgumentException("hkey=" + hkey);
    }
  }

  /**
   * Delete a given key
   * @param hkey
   * @param key
   * @throws IllegalArgumentException
   * @throws IllegalAccessException
   * @throws InvocationTargetException
   */
  public static void deleteKey(int hkey, String key) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    int rc = -1;
    if (hkey == HKEY_LOCAL_MACHINE) {
      rc = deleteKey(systemRoot, hkey, key);
    }
    else if (hkey == HKEY_CURRENT_USER) {
      rc = deleteKey(userRoot, hkey, key);
    }
    if (rc != REG_SUCCESS) {
      throw new IllegalArgumentException("rc=" + rc + "  key=" + key);
    }
  }

  /**
   * delete a value from a given key/value name
   * @param hkey
   * @param key
   * @param value
   * @throws IllegalArgumentException
   * @throws IllegalAccessException
   * @throws InvocationTargetException
   */
  public static void deleteValue(int hkey, String key, String value) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    int rc = -1;
    if (hkey == HKEY_LOCAL_MACHINE) {
      rc = deleteValue(systemRoot, hkey, key, value);
    }
    else if (hkey == HKEY_CURRENT_USER) {
      rc = deleteValue(userRoot, hkey, key, value);
    }
    if (rc != REG_SUCCESS) {
      throw new IllegalArgumentException("rc=" + rc + "  key=" + key + "  value=" + value);
    }
  }

  // =====================

  private static int deleteValue
    (Preferences root, int hkey, String key, String value)
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {
        new Integer(hkey), toCstr(key), new Integer(KEY_ALL_ACCESS) });
    if (handles[1] != REG_SUCCESS) {
      return handles[1];  // can be REG_NOTFOUND, REG_ACCESSDENIED
    }
    int rc =((Integer) regDeleteValue.invoke(root,  
        new Object[] { 
          new Integer(handles[0]), toCstr(value) 
          })).intValue();
    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });
    return rc;
  }

  private static int deleteKey(Preferences root, int hkey, String key) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    int rc =((Integer) regDeleteKey.invoke(root,  
        new Object[] { new Integer(hkey), toCstr(key) })).intValue();
    return rc;  // can REG_NOTFOUND, REG_ACCESSDENIED, REG_SUCCESS
  }

  private static String readString(Preferences root, int hkey, String key, String value)
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {
        new Integer(hkey), toCstr(key), new Integer(KEY_READ) });
    if (handles[1] != REG_SUCCESS) {
      return null; 
    }
    byte[] valb = (byte[]) regQueryValueEx.invoke(root, new Object[] {
        new Integer(handles[0]), toCstr(value) });
    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });
    return (valb != null ? new String(valb).trim() : null);
  }

  private static Map&lt;String,String&gt; readStringValues
    (Preferences root, int hkey, String key)
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    HashMap&lt;String, String&gt; results = new HashMap&lt;String,String&gt;();
    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {
        new Integer(hkey), toCstr(key), new Integer(KEY_READ) });
    if (handles[1] != REG_SUCCESS) {
      return null;
    }
    int[] info = (int[]) regQueryInfoKey.invoke(root,
        new Object[] { new Integer(handles[0]) });

    int count = info[0]; // count  
    int maxlen = info[3]; // value length max
    for(int index=0; index&lt;count; index++)  {
      byte[] name = (byte[]) regEnumValue.invoke(root, new Object[] {
          new Integer
            (handles[0]), new Integer(index), new Integer(maxlen + 1)});
      String value = readString(hkey, key, new String(name));
      results.put(new String(name).trim(), value);
    }
    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });
    return results;
  }

  private static List&lt;String&gt; readStringSubKeys
    (Preferences root, int hkey, String key)
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    List&lt;String&gt; results = new ArrayList&lt;String&gt;();
    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {
        new Integer(hkey), toCstr(key), new Integer(KEY_READ) 
        });
    if (handles[1] != REG_SUCCESS) {
      return null;
    }
    int[] info = (int[]) regQueryInfoKey.invoke(root,
        new Object[] { new Integer(handles[0]) });

    int count  = info[0]; // Fix: info[2] was being used here with wrong results. Suggested by davenpcj, confirmed by Petrucio
    int maxlen = info[3]; // value length max
    for(int index=0; index&lt;count; index++)  {
      byte[] name = (byte[]) regEnumKeyEx.invoke(root, new Object[] {
          new Integer
            (handles[0]), new Integer(index), new Integer(maxlen + 1)
          });
      results.add(new String(name).trim());
    }
    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });
    return results;
  }

  private static int [] createKey(Preferences root, int hkey, String key)
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    return  (int[]) regCreateKeyEx.invoke(root,
        new Object[] { new Integer(hkey), toCstr(key) });
  }

  private static void writeStringValue 
    (Preferences root, int hkey, String key, String valueName, String value) 
    throws IllegalArgumentException, IllegalAccessException,
    InvocationTargetException 
  {
    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {
        new Integer(hkey), toCstr(key), new Integer(KEY_ALL_ACCESS) });

    regSetValueEx.invoke(root,  
        new Object[] { 
          new Integer(handles[0]), toCstr(valueName), toCstr(value) 
          }); 
    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });
  }

  // utility
  private static byte[] toCstr(String str) {
    byte[] result = new byte[str.length() + 1];

    for (int i = 0; i &lt; str.length(); i++) {
      result[i] = (byte) str.charAt(i);
    }
    result[str.length()] = 0;
    return result;
  }
}
</code></pre><p>I was unable to find and give credit to the original author of this code. If you find any details, please add a comment and I will add it here.</p></body></html>

===ID===
584cbfa03e2ca508e5f071cc
===QUESTION===
What is reflection and why is it useful?
What is reflection, and why is it useful? I'm particularly interested in Java, but I assume the principles are the same in any language. 
===LINK===
http://stackoverflow.com/questions/37628/what-is-reflection-and-why-is-it-useful
===KEYWORDS===
java reflection language assume principles 
===ANSWER===
962
<html><body><p>The name reflection is used to describe code which is able to inspect other code in the same system (or itself).</p><p>For example, say you have an object of an unknown type in Java, and you would like to call a 'doSomething' method on it if one exists. Java's static typing system isn't really designed to support this unless the object conforms to a known interface, but using reflection, your code can look at the object and find out if it has a method called 'doSomething' and then call it if you want to.</p><p>So, to give you a code example of this in Java (imagine the object in question is foo) :</p><pre><code>Method method = foo.getClass().getMethod("doSomething", null);
method.invoke(foo, null);
</code></pre><p>One very common use case in Java is the usage with annotations. JUnit 4, for example, will use reflection to look through your classes for methods tagged with the @Test annotation, and will then call them when running the unit test.</p><p>There are some good reflection examples to get you started at <a href="http://docs.oracle.com/javase/tutorial/reflect/index.html" rel="nofollow noreferrer">http://docs.oracle.com/javase/tutorial/reflect/index.html</a></p><p>And finally, yes, the concepts are pretty much similar in other statically types languages which support reflection (like C#). In dynamically typed languages, the use case described above is less necessary (since the compiler will allow any method to be called on any object, failing at runtime if it does not exist), but the second case of looking for methods which are marked or work in a certain way is still common.</p></body></html>

===ID===
584cbfa13e2ca508e5f071cd
===QUESTION===
Convert a string representation of a hex dump to a byte array using Java?
I am looking for a way to convert a long string (from a dump), that represents hex values into a byte array. I couldn't have phrased it better than the person that posted the same question here: http://www.experts-exchange.com/Programming/Programming_Languages/Java/Q_21062554.html But to keep it original, I'll phrase it my own way: suppose I have a string "00A0BF" that I would like interpreted as the byte[] {0x00,0xA0,0xBf} what should I do? I am a Java novice and ended up using BigInteger and watching out for leading hex zeros. But I think it is ugly and I am sure I am missing something simple...  
===LINK===
http://stackoverflow.com/questions/140131/convert-a-string-representation-of-a-hex-dump-to-a-byte-array-using-java
===KEYWORDS===
missing dump simple interpreted ended 
===ANSWER===
419
<html><body><p>Here's a solution that I think is better than any posted so far:</p><pre><code>public static byte[] hexStringToByteArray(String s) {
    int len = s.length();
    byte[] data = new byte[len / 2];
    for (int i = 0; i &lt; len; i += 2) {
        data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) &lt;&lt; 4)
                             + Character.digit(s.charAt(i+1), 16));
    }
    return data;
}
</code></pre><p>Reasons why it is an improvement:</p><p>Safe with leading zeros (unlike BigInteger) and with negative byte values (unlike Byte.parseByte)</p><p>Doesn't convert the String into a <code>char[]</code>, or create StringBuilder and String objects for every single byte.</p><p>Feel free to add argument checking via <code>assert</code> or exceptions if the argument is not known to be safe.</p></body></html>

===ID===
584cbfa13e2ca508e5f071ce
===QUESTION===
Java generics - type erasure - when and what happens
I read about Java's type erasure  on Sun's website . When does type erasure occur?  At compile time / runtime? When the class is loaded / runtime? When the class is instantiated? A lot of sites (including the Sun tutorial mentioned above) say type erasure occurs at compile time. If the type information is completely removed at compile time, how does the JDK check type compatibility when a method using generics is invoked with no type information or wrong type information.  Consider the following example: Say class A has a method,  empty(Box<? extends Number> b) . We compile A.java and get the class file A.class. Now we create another class B which invokes the method empty with a non-parameterized argument (raw type)-  empty(new Box()) . If we compile B.java with A.class in the classpath, javac is smart enough to raise a warning. So A.class  has  some type information stored in it. My guess would be that type erasure occurs when the class is loaded, but it is just a guess. So when does it happen?  
===LINK===
http://stackoverflow.com/questions/339699/java-generics-type-erasure-when-and-what-happens
===KEYWORDS===
javac warning including loaded happen 
===ANSWER===
157
<html><body><p>Type erasure applies to the <em>use</em> of generics. There's definitely metadata in the class file to say whether or not a method/type <em>is</em> generic, and what the constraints are etc. But when generics are <em>used</em>, they're converted into compile-time checks and execution-time casts. So this code:</p><pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add("Hi");
String x = list.get(0);
</code></pre><p>is compiled into</p><pre><code>List list = new ArrayList();
list.add("Hi");
String x = (String) list.get(0);
</code></pre><p>At execution time there's no way of finding out that <code>T=String</code> for the list object - that information is gone.</p><p>... but the <code>List&lt;T&gt;</code> interface itself still advertises itself as being generic.</p><p>EDIT: Just to clarify, the compiler does retain the information about the <em>variable</em> being a <code>List&lt;String&gt;</code> - but you still can't find out that <code>T=String</code> for the list object itself.</p></body></html>

===ID===
584cbfa23e2ca508e5f071cf
===QUESTION===
Why do I need to override the equals and hashCode methods in Java?
Recently I read through this
  Developer Works Document . The document is all about defining  hashCode()  and  equals()  effectively and correctly, but I am not able to figure out why we need to override these two methods.  How can I take the decision to implement these method efficiently? 
===LINK===
http://stackoverflow.com/questions/2265503/why-do-i-need-to-override-the-equals-and-hashcode-methods-in-java
===KEYWORDS===
recently methods figure read decision 
===ANSWER===
276
<html><body><p>Joshua Bloch says on Effective Java</p><p>You must override hashCode() in every class that overrides equals(). Failure to do so will result in a violation of the general contract for Object.hashCode(), which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable.</p><p>Let's try to understand it with an example of what would happen if we override <code>equals()</code> without overriding <code>hashCode()</code> and attempt to use a <code>Map</code>.</p><p>Say we have a class like this and that two objects of <code>MyClass</code> are equal if their <code>importantField</code> is equal (with <code>hashCode()</code> and <code>equals()</code> generated by eclipse)</p><pre><code>public class MyClass {

    private final String importantField;
    private final String anotherField;

    public MyClass(final String equalField, final String anotherField) {
        this.importantField = equalField;
        this.anotherField = anotherField;
    }

    public String getEqualField() {
        return importantField;
    }

    public String getAnotherField() {
        return anotherField;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result
                + ((importantField == null) ? 0 : importantField.hashCode());
        return result;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final MyClass other = (MyClass) obj;
        if (importantField == null) {
            if (other.importantField != null)
                return false;
        } else if (!importantField.equals(other.importantField))
            return false;
        return true;
    }

}
</code></pre><p><strong>Override only <code>equals</code></strong></p><p>If only <code>equals</code> is overriden, then when you call <code>myMap.put(first,someValue)</code> first will hash to some bucket and when you call <code>myMap.put(second,someOtherValue)</code> it will hash to some other bucket (as they have a different <code>hashCode</code>). So, although they are equal, as they don't hash to the same bucket, the map can't realize it and both of them stay in the map.</p><p>Although it is not necessary to override <code>equals()</code> if we override <code>hashCode()</code>, let's see what would happen in this particular case where we know that two objects of <code>MyClass</code> are equal if their <code>importantField</code> is equal but we do not override <code>equals()</code>.</p><p><strong>Override only <code>hashCode</code></strong></p><p>Imagine you have this</p><pre><code>MyClass first = new MyClass("a","first");
MyClass second = new MyClass("a","second");
</code></pre><p>If you only override <code>hashCode</code> then when you call <code>myMap.put(first,someValue)</code> it takes first, calculates its <code>hashCode</code> and stores it in a given bucket. Then when you call <code>myMap.put(second,someOtherValue)</code> it should replace first with second  as per the <a href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Map.html#put%28java.lang.Object,%20java.lang.Object%29" rel="nofollow noreferrer">Map Documentation</a> because they are equal (according to the business requirement).</p><p>But the problem is that equals was not redefined, so when the map hashes <code>second</code> and iterates through the bucket looking if there is an object <code>k</code> such that <code>second.equals(k)</code> is true it won't find any as <code>second.equals(first)</code> will be <code>false</code>.</p><p>Hope it was clear</p></body></html>

===ID===
584cbfa23e2ca508e5f071d0
===QUESTION===
Change date format in a Java string
I've a  String  representing a date. I'd like to convert it to a  Date  and output it in  YYYY-MM-DD  format. 2011-01-18 How can I achieve this? Okay, based on the answers I retrieved below, here's something I've tried: But it outputs  02011-00-1  instead of the desired  2011-01-18 . What am I doing wrong? 
===LINK===
http://stackoverflow.com/questions/4772425/change-date-format-in-a-java-string
===KEYWORDS===
convert based retrieved answers yyyy 
===ANSWER===
363
<html><body><p>Use <a href="https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-"><code>LocalDateTime#parse()</code></a> (or <a href="https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#parse-java.lang.CharSequence-java.time.format.DateTimeFormatter-"><code>ZonedDateTime#parse()</code></a> if the string happens to contain a time zone part) to parse a <code>String</code> in a certain pattern into a <code>LocalDateTime</code>.</p><pre><code>String oldstring = "2011-01-18 00:00:00.0";
LocalDateTime datetime = LocalDateTime.parse(oldstring, DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.S"));
</code></pre><p>Use <a href="https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#format-java.time.format.DateTimeFormatter-"><code>LocalDateTime#format()</code></a> (or <a href="https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#format-java.time.format.DateTimeFormatter-"><code>ZonedDateTime#format()</code></a>) to format a <code>LocalDateTime</code> into a <code>String</code> in a certain pattern.</p><pre><code>String newstring = datetime.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
System.out.println(newstring); // 2011-01-18
</code></pre><p><strong>Or</strong>, when you're not on Java 8 yet, use <a href="http://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#parse-java.lang.String-"><code>SimpleDateFormat#parse()</code></a> to parse a <code>String</code> in a certain pattern into a <code>Date</code>.</p><pre><code>String oldstring = "2011-01-18 00:00:00.0";
Date date = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S").parse(oldstring);
</code></pre><p>Use <a href="http://docs.oracle.com/javase/8/docs/api/java/text/DateFormat.html#format-java.util.Date-"><code>SimpleDateFormat#format()</code></a> to format a <code>Date</code> into a <code>String</code> in a certain pattern.</p><pre><code>String newstring = new SimpleDateFormat("yyyy-MM-dd").format(date);
System.out.println(newstring); // 2011-01-18
</code></pre><p><strong>Update</strong>: as per your failed attempt: the patterns are <strong>case sensitive</strong>. Read the <a href="http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html"><code>java.text.SimpleDateFormat</code> javadoc</a> what the individual parts stands for. So stands for example <code>M</code> for months and <code>m</code> for minutes. Also, years exist of four digits <code>yyyy</code>, not five <code>yyyyy</code>. Look closer at the code snippets I posted here above.</p></body></html>

===ID===
584cbfa33e2ca508e5f071d1
===QUESTION===
Examples of GoF Design Patterns in Java's core libraries
I am learning GoF Java Design Patterns and I want to see some real life examples of them. What are some good examples of these Design Patterns in Java's core libraries? 
===LINK===
http://stackoverflow.com/questions/1673841/examples-of-gof-design-patterns-in-javas-core-libraries
===KEYWORDS===
java examples 
===ANSWER===
2255
<html><body><p>You can find an overview of a lot of design patterns in <a href="https://en.wikipedia.org/wiki/Software_design_pattern#Classification_and_list" rel="nofollow noreferrer">Wikipedia</a>. It also mentions which patterns are mentioned by GoF. I'll sum them up here and try to assign as many pattern implementations as possible, found in both the Java SE and Java EE APIs.</p></body></html>

===ID===
584cbfa33e2ca508e5f071d2
===QUESTION===
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure
I'm working on getting my database to talk to my Java programs. Can someone give me a quick and dirty sample program using the JDBC? I'm getting a rather stupendous error: Contents of the test file: 
===LINK===
http://stackoverflow.com/questions/2983248/com-mysql-jdbc-exceptions-jdbc4-communicationsexception-communications-link-fai
===KEYWORDS===
jdbc jdbc4 working give database 
===ANSWER===
138
<html><body><p>So, you have a </p><p>com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure<br>
  java.net.ConnectException: Connection refused</br></p><p>I'm quoting from <a href="http://stackoverflow.com/questions/2839321/java-connectivity-with-mysql/2840358#2840358">this answer</a> which also contains a step-by-step MySQL+JDBC tutorial:</p><p>If you get a <code>SQLException: Connection refused</code> or <code>Connection timed out</code> or a MySQL specific <code>CommunicationsException: 
  Communications link failure</code>, then it means that the DB isn't reachable at all. This can have one or more of the following causes:</p><p>To solve the one or the other, follow the following advices:</p></body></html>

===ID===
584cbfa43e2ca508e5f071d3
===QUESTION===
How do I discover memory usage of my application in Android?
How can I find the memory used on my Android application, programmatically? I hope there is a way to do it. Plus, how do I get the free memory of the phone too? 
===LINK===
http://stackoverflow.com/questions/2298208/how-do-i-discover-memory-usage-of-my-application-in-android
===KEYWORDS===
application programmatically phone memory android 
===ANSWER===
896
<html><body><p>Note that memory usage on modern operating systems like Linux is an <em>extremely</em> complicated and difficult to understand area.  In fact the chances of you actually correctly interpreting whatever numbers you get is extremely low.  (Pretty much every time I look at memory usage numbers with other engineers, there is always a long discussion about what they actually mean that only results in a vague conclusion.)</p><p><strong>Note: we now have much more extensive documentation on <a href="http://developer.android.com/training/articles/memory.html" rel="nofollow noreferrer">Managing Your App's Memory</a> that covers much of the material here and is more up-to-date with the state of Android.</strong></p><p>First thing is to probably read the last part of this article which has some discussion of how memory is managed on Android:</p><p><a href="http://android-developers.blogspot.com/2010/02/service-api-changes-starting-with.html" rel="nofollow noreferrer">Service API changes starting with Android 2.0</a></p><p>Now <code>ActivityManager.getMemoryInfo()</code> is our highest-level API for looking at overall memory usage.  This is mostly there to help an application gauge how close the system is coming to having no more memory for background processes, thus needing to start killing needed processes like services.  For pure Java applications, this should be of little use, since the Java heap limit is there in part to avoid one app from being able to stress the system to this point.</p><p>Going lower-level, you can use the Debug API to get raw kernel-level information about memory usage: <a href="http://developer.android.com/intl/de/reference/android/os/Debug.html#getMemoryInfo" rel="nofollow noreferrer">android.os.Debug.MemoryInfo</a></p><p>Note starting with 2.0 there is also an API, <code>ActivityManager.getProcessMemoryInfo</code>, to get this information about another process: <a href="http://developer.android.com/reference/android/app/ActivityManager.html#getProcessMemoryInfo(int[])" rel="nofollow noreferrer">ActivityManager.getProcessMemoryInfo(int[])</a></p><p>This returns a low-level MemoryInfo structure with all of this data:</p><pre><code>    /** The proportional set size for dalvik. */
    public int dalvikPss;
    /** The private dirty pages used by dalvik. */
    public int dalvikPrivateDirty;
    /** The shared dirty pages used by dalvik. */
    public int dalvikSharedDirty;

    /** The proportional set size for the native heap. */
    public int nativePss;
    /** The private dirty pages used by the native heap. */
    public int nativePrivateDirty;
    /** The shared dirty pages used by the native heap. */
    public int nativeSharedDirty;

    /** The proportional set size for everything else. */
    public int otherPss;
    /** The private dirty pages used by everything else. */
    public int otherPrivateDirty;
    /** The shared dirty pages used by everything else. */
    public int otherSharedDirty;
</code></pre><p>But as to what the difference is between <code>Pss</code>, <code>PrivateDirty</code>, and <code>SharedDirty</code>...  well now the fun begins.</p><p>A lot of memory in Android (and Linux systems in general) is actually shared across multiple processes.  So how much memory a processes uses is really not clear.  Add on top of that paging out to disk (let alone swap which we don't use on Android) and it is even less clear.</p><p>Thus if you were to take all of the physical RAM actually mapped in to each process, and add up all of the processes, you would probably end up with a number much greater than the actual total RAM.</p><p>The <code>Pss</code> number is a metric the kernel computes that takes into account memory sharing -- basically each page of RAM in a process is scaled by a ratio of the number of other processes also using that page.  This way you can (in theory) add up the pss across all processes to see the total RAM they are using, and compare pss between processes to get a rough idea of their relative weight.</p><p>The other interesting metric here is <code>PrivateDirty</code>, which is basically the amount of RAM inside the process that can not be paged to disk (it is not backed by the same data on disk), and is not shared with any other processes.  Another way to look at this is the RAM that will become available to the system when that process goes away (and probably quickly subsumed into caches and other uses of it).</p><p>That is pretty much the SDK APIs for this.  However there is more you can do as a developer with your device.</p><p>Using <code>adb</code>, there is a lot of information you can get about the memory use of a running system.  A common one is the command <code>adb shell dumpsys meminfo</code> which will spit out a bunch of information about the memory use of each Java process, containing the above info as well as a variety of other things.  You can also tack on the name or pid of a single process to see, for example <code>adb shell dumpsys meminfo system</code> give me the system process:</p><pre>
** MEMINFO in pid 890 [system] **
                    native   dalvik    other    total
            size:    10940     7047      N/A    17987
       allocated:     8943     5516      N/A    14459
            free:      336     1531      N/A     1867
           (Pss):     4585     9282    11916    25783
  (shared dirty):     2184     3596      916     6696
    (priv dirty):     4504     5956     7456    17916

 Objects
           Views:      149        ViewRoots:        4
     AppContexts:       13       Activities:        0
          Assets:        4    AssetManagers:        4
   Local Binders:      141    Proxy Binders:      158
Death Recipients:       49
 OpenSSL Sockets:        0

 SQL
            heap:      205          dbFiles:        0
       numPagers:        0   inactivePageKB:        0
    activePageKB:        0
</pre><p>The top section is the main one, where <code>size</code> is the total size in address space of a particular heap, <code>allocated</code> is the kb of actual allocations that heap thinks it has, <code>free</code> is the remaining kb free the heap has for additional allocations, and <code>pss</code> and <code>priv dirty</code> are the same as discussed before specific to pages associated with each of the heaps.</p><p>If you just want to look at memory usage across all processes, you can use the command <code>adb shell procrank</code>.  Output of this on the same system looks like:</p><pre>
  PID      Vss      Rss      Pss      Uss  cmdline
  890   84456K   48668K   25850K   21284K  system_server
 1231   50748K   39088K   17587K   13792K  com.android.launcher2
  947   34488K   28528K   10834K    9308K  com.android.wallpaper
  987   26964K   26956K    8751K    7308K  com.google.process.gapps
  954   24300K   24296K    6249K    4824K  com.android.phone
  948   23020K   23016K    5864K    4748K  com.android.inputmethod.latin
  888   25728K   25724K    5774K    3668K  zygote
  977   24100K   24096K    5667K    4340K  android.process.acore
...
   59     336K     332K      99K      92K  /system/bin/installd
   60     396K     392K      93K      84K  /system/bin/keystore
   51     280K     276K      74K      68K  /system/bin/servicemanager
   54     256K     252K      69K      64K  /system/bin/debuggerd
</pre><p>Here the <code>Vss</code> and <code>Rss</code> columns are basically noise (these are the straight-forward address space and RAM usage of a process, where if you add up the RAM usage across processes you get an ridiculously large number).</p><p><code>Pss</code> is as we've seen before, and <code>Uss</code> is <code>Priv Dirty</code>.</p><p>Interesting thing to note here: <code>Pss</code> and <code>Uss</code> are slightly (or more than slightly) different than what we saw in <code>meminfo</code>.  Why is that?  Well procrank uses a different kernel mechanism to collect its data than <code>meminfo</code> does, and they give slightly different results.  Why is that?  Honestly I haven't a clue.  I believe <code>procrank</code> may be the more accurate one...  but really, this just leave the point: "take any memory info you get with a grain of salt; often a very large grain."</p><p>Finally there is the command <code>adb shell cat /proc/meminfo</code> that gives a summary of the overall memory usage of the system.  There is a lot of data here, only the first few numbers worth discussing (and the remaining ones understood by few people, and my questions of those few people about them often resulting in conflicting explanations):</p><pre>
MemTotal:         395144 kB
MemFree:          184936 kB
Buffers:             880 kB
Cached:            84104 kB
SwapCached:            0 kB
</pre><p><code>MemTotal</code> is the total amount of memory available to the kernel and user space (often less than the actual physical RAM of the device, since some of that RAM is needed for the radio, DMA buffers, etc).</p><p><code>MemFree</code> is the amount of RAM that is not being used at all.  The number you see here is very high; typically on an Android system this would be only a few MB, since we try to use available memory to keep processes running</p><p><code>Cached</code> is the RAM being used for filesystem caches and other such things.  Typical systems will need to have 20MB or so for this to avoid getting into bad paging states; the Android out of memory killer is tuned for a particular system to make sure that background processes are killed before the cached RAM is consumed too much by them to result in such paging.</p></body></html>

===ID===
584cbfa53e2ca508e5f071d4
===QUESTION===
Setting multiple jars in java classpath
Is there a way to include all the jar files within a directory in the classpath? I'm trying  java -classpath lib/*.jar:. my.package.Program  and it is not able to find class files that are certainly in those jars.  Do I need to add each jar file to the classpath separately?  
===LINK===
http://stackoverflow.com/questions/219585/setting-multiple-jars-in-java-classpath
===KEYWORDS===
java package jar classpath add 
===ANSWER===
755
<html><body><p>Using Java 6 or later, the classpath option supports wildcards. Note the following:</p><p><strong>Windows</strong></p><p><code>java -cp "Test.jar;lib/*" my.package.MainClass</code></p><p><strong>Unix</strong></p><p><code>java -cp "Test.jar:lib/*" my.package.MainClass</code></p><p>This is similar to Windows, but uses <code>:</code> instead of <code>;</code>. If you cannot use wildcards, <code>bash</code> allows the following syntax (where <code>lib</code> is the directory containing all the Java archive files):</p><p><code>java -cp $(echo lib/*.jar | tr ' ' ':')</code></p><p>(Note that using a classpath is incompatible with the <code>-jar</code> option. See also: <a href="http://stackoverflow.com/questions/13018100/execute-jar-file-with-multiple-classpath-libraries-from-command-prompt">Execute jar file with multiple classpath libraries from command prompt</a>)</p><p><strong>Understanding Wildcards</strong></p><p>From the <a href="http://java.sun.com/javase/6/docs/technotes/tools/windows/classpath.html" rel="nofollow noreferrer">Classpath</a> document:</p><p>Class path entries can contain the basename wildcard character <code>*</code>, which is considered equivalent to specifying a list of all the files
  in the directory with the extension <code>.jar</code> or <code>.JAR</code>. For example, the
  class path entry <code>foo/*</code> specifies all JAR files in the directory named
  foo. A classpath entry consisting simply of <code>*</code> expands to a list of all
  the jar files in the current directory.</p><p>A class path entry that contains <code>*</code> will not match class files. To
  match both classes and JAR files in a single directory foo, use either
  <code>foo;foo/*</code> or <code>foo/*;foo</code>. The order chosen determines whether the
  classes and resources in <code>foo</code> are loaded before JAR files in <code>foo</code>, or
  vice versa.</p><p>Subdirectories are not searched recursively. For example, <code>foo/*</code> looks
  for JAR files only in <code>foo</code>, not in <code>foo/bar</code>, <code>foo/baz</code>, etc.</p><p>The order in which the JAR files in a directory are enumerated in the
  expanded class path is not specified and may vary from platform to
  platform and even from moment to moment on the same machine. A
  well-constructed application should not depend upon any particular
  order. If a specific order is required then the JAR files can be
  enumerated explicitly in the class path.</p><p>Expansion of wildcards is done early, prior to the invocation of a
  program's main method, rather than late, during the class-loading
  process itself. Each element of the input class path containing a
  wildcard is replaced by the (possibly empty) sequence of elements
  generated by enumerating the JAR files in the named directory. For
  example, if the directory <code>foo</code> contains <code>a.jar</code>, <code>b.jar</code>, and <code>c.jar</code>, then
  the class path <code>foo/*</code> is expanded into <code>foo/a.jar;foo/b.jar;foo/c.jar</code>,
  and that string would be the value of the system property
  <code>java.class.path</code>.</p><p>The <code>CLASSPATH</code> environment variable is not treated any differently from
  the <code>-classpath</code> (or <code>-cp</code>) command-line option. That is, wildcards are
  honored in all these cases. However, class path wildcards are not
  honored in the <code>Class-Path jar-manifest</code> header.</p></body></html>

===ID===
584cbfa53e2ca508e5f071d5
===QUESTION===
Java's +=, -=, *=, /= compound assignment operators
Until today I thought that for example: is just a shortcut for: But what if we try this: Then  i = i + j;  will not compile but  i += j;  will compile fine. Does it mean that in fact  i += j;  is a shortcut for something like this
 i = (type of i) (i + j) ? 
===LINK===
http://stackoverflow.com/questions/8710619/javas-compound-assignment-operators
===KEYWORDS===
compile java shortcut thought today 
===ANSWER===
1905
<html><body><p>As always with these questions, the JLS holds the answer. In this case <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2">§15.26.2 Compound Assignment Operators</a>. An extract:</p><p>A compound assignment expression of the form <code>E1 op= E2</code> is equivalent to <code>E1 = (T)((E1) op (E2))</code>, where <code>T</code> is the type of <code>E1</code>, except that <code>E1</code> is evaluated only once.</p><p>An example cited from <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2">§15.26.2</a></p><p>[...] the following code is correct:</p><pre><code>short x = 3;
x += 4.6;
</code></pre><p>and results in x having the value 7 because it is equivalent to:</p><pre><code>short x = 3;
x = (short)(x + 4.6);
</code></pre><p>In other words, your assumption is correct.</p></body></html>

===ID===
584cbfa63e2ca508e5f071d6
===QUESTION===
What is the difference between JSF, Servlet and JSP?
How are JSP and Servlet related to each other? Is JSP some kind of Servlet? How are JSP and JSF related to each other? Is JSF some kind of prebuild UI based JSP like ASP.NET-MVC? 
===LINK===
http://stackoverflow.com/questions/2095397/what-is-the-difference-between-jsf-servlet-and-jsp
===KEYWORDS===
kind asp jsf mvc jsp 
===ANSWER===
931
<html><body><p>JSP is a <strong>Java view technology</strong> running on the server machine which allows you to write template text in client side languages (like HTML, CSS, JavaScript, ect.). JSP supports <a href="http://docs.oracle.com/javaee/5/tutorial/doc/bnann.html" rel="nofollow noreferrer">taglibs</a>, which are backed by pieces of Java code that let you control the page flow or output dynamically. A well-known taglib is <a href="http://stackoverflow.com/tags/jstl/info">JSTL</a>. JSP also supports <a href="http://stackoverflow.com/tags/el/info">Expression Language</a>, which can be used to access backend data (via attributes available in the page, request, session and application scopes), mostly in combination with taglibs.</p><p>When a JSP is requested for the first time or when the web app starts up, the servlet container will compile it into a class extending <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServlet.html" rel="nofollow noreferrer"><code>HttpServlet</code></a> and use it during the web app's lifetime. You can find the generated source code in the server's work directory. In for example <a href="http://tomcat.apache.org" rel="nofollow noreferrer">Tomcat</a>, it's the <code>/work</code> directory. On a JSP request, the servlet container will execute the compiled JSP class and send the generated output (usually just HTML/CSS/JS) through the web server over a network to the client side, which in turn displays it in the web browser.</p><p>Servlet is a <strong>Java application programming interface (API)</strong> running on the server machine, which intercepts requests made by the client and generates/sends a response. A well-known example is the <code>HttpServlet</code> which provides methods to hook on <a href="http://www.w3.org/Protocols/rfc2616/rfc2616.html" rel="nofollow noreferrer">HTTP</a> requests using the popular <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html" rel="nofollow noreferrer">HTTP methods</a> such as <code>GET</code> and <code>POST</code>. You can configure <code>HttpServlet</code>s to listen to a certain HTTP URL pattern, which is configurable in <code>web.xml</code>, or more recently with <a href="http://docs.oracle.com/javaee/6/tutorial/doc/bnafd.html" rel="nofollow noreferrer">Java EE 6</a>, with <code>@WebServlet</code> annotation.</p><p>When a Servlet is first requested or during web app startup, the servlet container will create an instance of it and keep it in memory during the web app's lifetime. The same instance will be reused for every incoming request whose URL matches the servlet's URL pattern. You can access the request data by <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html" rel="nofollow noreferrer"><code>HttpServletRequest</code></a> and handle the response by <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletResponse.html" rel="nofollow noreferrer"><code>HttpServletResponse</code></a>. Both objects are available as method arguments inside any of the overridden methods of <code>HttpServlet</code>, such as <code>doGet()</code> and <code>doPost()</code>.</p><p>JSF is a <strong>component based MVC framework</strong> which is built on top of the Servlet API and provides <a href="http://docs.oracle.com/javaee/6/tutorial/doc/bnarf.html" rel="nofollow noreferrer">components</a> via taglibs which can be used in JSP or any other Java based view technology such as <a href="http://docs.oracle.com/javaee/6/tutorial/doc/giepx.html" rel="nofollow noreferrer">Facelets</a>. Facelets is much more suited to JSF than JSP. It namely provides great <a href="http://docs.oracle.com/javaee/6/tutorial/doc/giqxp.html" rel="nofollow noreferrer">templating capabilities</a> such as <a href="http://docs.oracle.com/javaee/6/tutorial/doc/giqzr.html" rel="nofollow noreferrer">composite components</a>, while JSP basically only offers the <a href="http://java.sun.com/products/jsp/syntax/2.0/syntaxref2020.html#8828" rel="nofollow noreferrer"><code>&lt;jsp:include&gt;</code></a> for templating, so that you're forced to create custom components with raw Java code (which is a bit opaque and a lot of tedious work in JSF) when you want to replace a repeated group of components with a single component. Since JSF 2.0, JSP has been deprecated as view technology in favor of Facelets.</p><p>As being a MVC (<a href="http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" rel="nofollow noreferrer">Model-View-Controller</a>) framework, JSF provides the <a href="http://docs.oracle.com/javaee/6/api/javax/faces/webapp/FacesServlet.html" rel="nofollow noreferrer"><code>FacesServlet</code></a> as the sole request-response <em>Controller</em>. It takes all the standard and tedious HTTP request/response work from your hands, such as gathering user input, validating/converting them, putting them in model objects, invoking actions and rendering the response. This way you end up with basically a JSP or Facelets (XHTML) page for <em>View</em> and a JavaBean class as <em>Model</em>. The JSF components are used to bind the view with the model (such as your ASP.NET web control does) and the <code>FacesServlet</code> uses the <em>JSF component tree</em> to do all the work.</p></body></html>

===ID===
584cbfa63e2ca508e5f071d7
===QUESTION===
How to declare an array
How do I declare an array in Java? 
===LINK===
http://stackoverflow.com/questions/1200621/how-to-declare-an-array
===KEYWORDS===
array java declare 
===ANSWER===
1504
<html><body><p>You can either use array declaration or array literal (but only when you declare and affect the variable right away, array literals cannot be used for re-assigning an array). </p><p>For primitive types: </p><pre><code>int[] myIntArray = new int[3];
int[] myIntArray = {1,2,3};
int[] myIntArray = new int[]{1,2,3};
</code></pre><p>For classes, for example <code>String</code>, it's the same:</p><pre><code>String[] myStringArray = new String[3];
String[] myStringArray = {"a","b","c"};
String[] myStringArray = new String[]{"a","b","c"};
</code></pre><p>For more examples, see the <a class="doc-link" href="http://stackoverflow.com/documentation/java/99/arrays/404/creating-and-initializing-arrays#t=201607261943570177">documentation page.</a></p></body></html>

===ID===
584cbfa73e2ca508e5f071d8
===QUESTION===
Why is char[] preferred over String for passwords in Java?
In Swing, the password field has a  getPassword()  (returns  char[] ) method instead of the usual  getText()  (returns  String ) method. Similarly, I have come across a suggestion not to use  String  to handle passwords. Why does  String  pose a threat to security when it comes to passwords?
It feels inconvenient to use  char[] . 
===LINK===
http://stackoverflow.com/questions/8881291/why-is-char-preferred-over-string-for-passwords-in-java
===KEYWORDS===
passwords getpassword string similarly preferred 
===ANSWER===
2845
<html><body><p><strong>Strings are immutable</strong>. That means once you've created the <code>String</code>, if another process can dump memory, there's no way (aside from <a href="https://en.wikipedia.org/wiki/Reflection_%28computer_programming%29" rel="nofollow noreferrer">reflection</a>) you can get rid of the data before <a href="https://en.wikipedia.org/wiki/Garbage_collection_%28computer_science%29" rel="nofollow noreferrer">garbage collection</a> kicks in.</p><p>With an array, you can explicitly wipe the data after you're done with it. You can overwrite the array with anything you like, and the password won't be present anywhere in the system, even before garbage collection.</p><p>So yes, this <em>is</em> a security concern - but even using <code>char[]</code> only reduces the window of opportunity for an attacker, and it's only for this specific type of attack.</p><p>As noted in comments, it's possible that arrays being moved by the garbage collector will leave stray copies of the data in memory. I believe this is implementation-specific - the garbage collector <em>may</em> clear all memory as it goes, to avoid this sort of thing. Even if it does, there's still the time during which the <code>char[]</code> contains the actual characters as an attack window.</p></body></html>

===ID===
584cbfa73e2ca508e5f071d9
===QUESTION===
How to efficiently iterate over each Entry in a Map?
If I have an object implementing the  Map  interface in Java and I wish to iterate over every pair contained within it, what is the most efficient way of going through the map?   Will the ordering of elements depend on the specific map implementation that I have for the interface? 
===LINK===
http://stackoverflow.com/questions/46898/how-to-efficiently-iterate-over-each-entry-in-a-map
===KEYWORDS===
map java efficient ordering entry 
===ANSWER===
2786
<html><body><pre><code>Map&lt;String, String&gt; map = ...
for (Map.Entry&lt;String, String&gt; entry : map.entrySet())
{
    System.out.println(entry.getKey() + "/" + entry.getValue());
}
</code></pre></body></html>

===ID===
584cbfa83e2ca508e5f071da
===QUESTION===
Random shuffling of an array
I need to randomly shuffle the following Array: Is there any function to do that? 
===LINK===
http://stackoverflow.com/questions/1519736/random-shuffling-of-an-array
===KEYWORDS===
function array 
===ANSWER===
172
<html><body><p>Using Collections to shuffle an array of primitive types is a bit of an overkill...</p><p>It is simple enough to implement the function yourself, using for example the <a href="http://en.wikipedia.org/wiki/Fisher-Yates_shuffle" rel="nofollow noreferrer">Fisher–Yates shuffle</a>:</p><pre><code>import java.util.*;
import java.util.concurrent.ThreadLocalRandom;

class Test
{
  public static void main(String args[])
  {
    int[] solutionArray = { 1, 2, 3, 4, 5, 6, 16, 15, 14, 13, 12, 11 };

    shuffleArray(solutionArray);
    for (int i = 0; i &lt; solutionArray.length; i++)
    {
      System.out.print(solutionArray[i] + " ");
    }
    System.out.println();
  }

  // Implementing Fisher–Yates shuffle
  static void shuffleArray(int[] ar)
  {
    // If running on Java 6 or older, use `new Random()` on RHS here
    Random rnd = ThreadLocalRandom.current();
    for (int i = ar.length - 1; i &gt; 0; i--)
    {
      int index = rnd.nextInt(i + 1);
      // Simple swap
      int a = ar[index];
      ar[index] = ar[i];
      ar[i] = a;
    }
  }
}
</code></pre></body></html>

===ID===
584cbfa83e2ca508e5f071db
===QUESTION===
Why does my ArrayList contain N copies of the last item added to the list?
I'm adding three different objects to an ArrayList, but the list contains three copies of the last object I added.  For example: Expected: Actual: What mistake have I made? Note: this is designed to be a canonical Q&A for the numerous similar issues that arise on this site. 
===LINK===
http://stackoverflow.com/questions/19843506/why-does-my-arraylist-contain-n-copies-of-the-last-item-added-to-the-list
===KEYWORDS===
adding added actual canonical arraylist 
===ANSWER===
58
<html><body><p>This problem has two typical causes:</p><p>Static fields in your list object</p><p>Accidentally adding the <em>same</em> object to the list</p><p>If you have static fields in your list object, each object in your list will appear to be the same because they hold the same values. Consider the class below:</p><pre><code>public class Foo {
  private static int value; 
  //      ^^^^^^------------ - Here's the problem!

  public Foo(int value) {
    this.value = value;
  }

  public int getValue() {
    return value;
  }
}
</code></pre><p>In that example, there is only one <code>int value</code> which is shared between all instances of <code>Foo</code> because it is declared <code>static</code>. (See <a href="https://docs.oracle.com/javase/tutorial/java/javaOO/classvars.html" rel="nofollow"><em>"Understanding Class Members"</em></a> tutorial.)</p><p>If you add multiple <code>Foo</code> objects to a list using the code below, each instance will return <code>3</code> from a call to <code>getValue()</code>:</p><pre><code>for (int i = 0; i &lt; 4; i++) {      
  list.add(new Foo(i));
}
</code></pre><p>The solution is simple - don't use the <code>static</code> keywords for fields in your class unless you actually want the values shared between every instance of that class.</p><p>If you add a temporary variable to a list, you must create a new instance each time you loop. Consider the following erroneous code snippet:</p><pre><code>List&lt;Foo&gt; list = new ArrayList&lt;Foo&gt;();    
Foo tmp = new Foo();

for (int i = 0; i &lt; 3; i++) {
  tmp.setValue(i);
  list.add(tmp);
}
</code></pre><p>Here, the <code>tmp</code> object was constructed outside the loop. As a result, the <em>same object instance</em> is being added to the list three times. The instance will hold the value <code>2</code>, because that was the value passed during the last call to <code>setValue()</code>.</p><p>To fix this, just move the object construction inside the loop:</p><pre><code>List&lt;Foo&gt; list = new ArrayList&lt;Foo&gt;();        

for (int i = 0; i &lt; 3; i++) {
  Foo tmp = new Foo(); // &lt;-- fresh instance!
  tmp.setValue(i);
  list.add(tmp);
}
</code></pre></body></html>

===ID===
584cbfa93e2ca508e5f071dc
===QUESTION===
How do I copy an object in Java?
Consider the below code: So, I want to copy the 'dum' to 'dumtwo' and I want to change 'dum' without affecting the 'dumtwo'. But the above code is not doing that. When I change something in 'dum', the same change is happening in 'dumtwo' also. I guess, when I say  dumtwo = dum , Java copies the  reference only . So, is there any way to create a fresh copy of 'dum' and assign it to 'dumtwo'? 
===LINK===
http://stackoverflow.com/questions/869033/how-do-i-copy-an-object-in-java
===KEYWORDS===
guess code java dum dumtwo 
===ANSWER===
385
<html><body><p>Create a copy constructor:</p><pre><code>class DummyBean {
  private String dummy;

  public DummyBean(DummyBean another) {
    this.dummy = another.dummy; // you can access  
  }
}
</code></pre><p>Every object has also a clone method which can be used to copy the object, but don't use it. It's way too easy to create a class and do improper clone method. If you are going to do that, read at least what Joshua Bloch has to say about it in <em><a href="http://books.google.com/books?id=ka2VUBqHiWkC&amp;pg=PA55&amp;lpg=PA55&amp;dq=effective+java+clone&amp;source=bl&amp;ots=yXGhLnv4O4&amp;sig=zvEip5tp5KGgwqO1sCWgtGyJ1Ns&amp;hl=en&amp;ei=CYANSqygK8jktgfM-JGcCA&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=3#PPA54,M1" rel="nofollow noreferrer">Effective Java</a></em>.</p></body></html>

===ID===
584cbfa93e2ca508e5f071dd
===QUESTION===
Browser can't access/find relative resources like CSS, images and links when calling a Servlet which forwards to a JSP
I'm having trouble with loading CSS and images and creating links to other pages when I have a servlet forward to a JSP. Specifically, when I set my  <welcome-file>  to  index.jsp , the CSS is being loaded and my images are being displayed. However, if I set my  <welcome-file>  to  HomeServlet  which forwards control to  index.jsp , the CSS is not being applied and my images are not being displayed.  My CSS file is in  web/styles/default.css . 
My images are in  web/images/ . I'm linking to my CSS like so: I'm displaying my images as follows: How is this problem caused and how can I solve it? Update 1 : I've added the structure of the application, as well as some other information that might help. The  header.jsp  file is the file that contains the link tag for the CSS. The  HomeServlet  is set as my  welcome-file  in  web.xml : The servlet is declared and mapped as followes in the  web.xml : Update 2 : I found the problem finally - my servlet was mapped incorrectly. Apparently when setting a Servlet as your  <welcome-file>  it can't have a URL pattern of  / , which I find sort of weird, because wouldn't that stand for the root directory of the site? The new mapping is as follows: 
===LINK===
http://stackoverflow.com/questions/3655316/browser-cant-access-find-relative-resources-like-css-images-and-links-when-cal
===KEYWORDS===
declared set links displayed file> 
===ANSWER===
74
<html><body><p>All relative URLs in the HTML page generated by the JSP file are relative to the current request URL (the URL as you see in the browser address bar) and <strong>not</strong> to the location of the JSP file in the server side as you seem to expect. It's namely the webbrowser who has to download those resources individually by URL, not the webserver who has to include them from disk somehow.</p><p>Apart from changing the relative URLs to make them relative to the URL of the servlet instead of the location of the JSP file, another way to fix this problem is to make them relative to the domain root (i.e. start with a <code>/</code>). This way you don't need to worry about changing the relative paths once again when you change the URL of the servlet.</p><pre class="lang-xml prettyprint-override"><code>&lt;head&gt;
    &lt;link rel="stylesheet" href="/context/css/default.css" /&gt;
    &lt;script src="/context/js/default.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;img src="/context/img/logo.png" /&gt;
    &lt;a href="/context/page.jsp"&gt;link&lt;/a&gt;
    &lt;form action="/context/servlet"&gt;&lt;input type="submit" /&gt;&lt;/form&gt;
&lt;/body&gt;
</code></pre><p>However, you would probably like not to hardcode the context path. Very reasonable. You can obtain the context path in EL by <code>${pageContext.request.contextPath}</code>.</p><pre class="lang-xml prettyprint-override"><code>&lt;head&gt;
    &lt;link rel="stylesheet" href="${pageContext.request.contextPath}/css/default.css" /&gt;
    &lt;script src="${pageContext.request.contextPath}/js/default.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;img src="${pageContext.request.contextPath}/img/logo.png" /&gt;
    &lt;a href="${pageContext.request.contextPath}/page.jsp"&gt;link&lt;/a&gt;
    &lt;form action="${pageContext.request.contextPath}/servlet"&gt;&lt;input type="submit" /&gt;&lt;/form&gt;
&lt;/body&gt;
</code></pre><p><em>(which can easily be shortened by <code>&lt;c:set var="root" value="${pageContext.request.contextPath}" /&gt;</code> and used as <code>${root}</code> elsewhere)</em></p><p>Or, if you don't fear unreadable XML and broken XML syntax highlighting, use <a href="http://stackoverflow.com/tags/jstl/info">JSTL</a> <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/c/url.html" rel="nofollow noreferrer"><code>&lt;c:url&gt;</code></a>:</p><pre class="lang-xml prettyprint-override"><code>&lt;head&gt;
    &lt;link rel="stylesheet" href="&lt;c:url value="/css/default.css" /&gt;" /&gt;
    &lt;script src="&lt;c:url value="/js/default.js" /&gt;"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;img src="&lt;c:url value="/img/logo.png" /&gt;" /&gt;
    &lt;a href="&lt;c:url value="/page.jsp" /&gt;"&gt;link&lt;/a&gt;
    &lt;form action="&lt;c:url value="/servlet" /&gt;"&gt;&lt;input type="submit" /&gt;&lt;/form&gt;
&lt;/body&gt;
</code></pre><p>Either way, this is in turn pretty cumbersome if you have a lot of relative URLs. For that you can use the <code>&lt;base&gt;</code> tag. All relative URL's will instantly become relative to it. It has however to start with the scheme (<code>http://</code>, <code>https://</code>, etc). There's no neat way to obtain the base context path in plain EL, so we need a little help of <a href="http://stackoverflow.com/tags/jstl/info">JSTL</a> here.</p><pre class="lang-xml prettyprint-override"><code>&lt;%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt;
&lt;%@taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %&gt;
&lt;c:set var="req" value="${pageContext.request}" /&gt;
&lt;c:set var="uri" value="${req.requestURI}" /&gt;
&lt;c:set var="url"&gt;${req.requestURL}&lt;/c:set&gt;
...
&lt;head&gt;
    &lt;base href="${fn:substring(url, 0, fn:length(url) - fn:length(uri))}${req.contextPath}/" /&gt;
    &lt;link rel="stylesheet" href="css/default.css" /&gt;
    &lt;script src="js/default.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;img src="img/logo.png" /&gt;
    &lt;a href="page.jsp"&gt;link&lt;/a&gt;
    &lt;form action="servlet"&gt;&lt;input type="submit" /&gt;&lt;/form&gt;
&lt;/body&gt;
</code></pre><p>This has in turn (again) some caveats. Anchors (the <code>#identifier</code> URL's) will become relative to the base path as well! You would like to make it relative to the request URL (URI) instead. So, change like</p><pre class="lang-xml prettyprint-override"><code>&lt;a href="#identifier"&gt;jump&lt;/a&gt;
</code></pre><p>to</p><pre class="lang-xml prettyprint-override"><code>&lt;a href="${uri}#identifier"&gt;jump&lt;/a&gt;
</code></pre><p>Each way has its own pros and cons. It's up to you which to choose. At least, you should now understand how this problem is caused and how to solve it :)</p></body></html>

===ID===
584cbfaa3e2ca508e5f071de
===QUESTION===
getResourceAsStream() vs FileInputStream
I was trying to load a file in a webapp, and I was getting a  FileNotFound  exception when I used  FileInputStream . However, using the same path, I was able to load the file when I did  getResourceAsStream() . 
What is the difference between the two methods, and why does one work while the other doesn't? 
===LINK===
http://stackoverflow.com/questions/2308188/getresourceasstream-vs-fileinputstream
===KEYWORDS===
load getresourceasstream methods work doesn 
===ANSWER===
230
<html><body><p>The <a href="http://docs.oracle.com/javase/8/docs/api/java/io/File.html" rel="nofollow noreferrer"><code>java.io.File</code></a> and consorts acts on the local disk file system. The root cause of your problem is that <em>relative</em> paths in <code>java.io</code> are dependent on the current working directory. I.e. the directory from which the JVM (in your case: the webserver's one) is started. This may for example be <code>C:\Tomcat\bin</code> or something entirely different, but thus <em>not</em> <code>C:\Tomcat\webapps\contextname</code> or whatever you'd expect it to be. In a normal Eclipse project, that would be <code>C:\Eclipse\workspace\projectname</code>. You can learn about the current working directory the following way:</p><pre><code>System.out.println(new File(".").getAbsolutePath());
</code></pre><p>However, the working directory is in no way programmatically controllable. You should really prefer using <em>absolute</em> paths in the <code>File</code> API instead of relative paths. E.g. <code>C:\full\path\to\file.ext</code>. </p><p>You don't want to hardcode or guess the absolute path in Java (web)applications. That's only portability trouble (i.e. it runs in system X, but not in system Y). The normal practice is to place those kind of resources in the <strong>classpath</strong>, or to add its full path to the classpath (in an IDE like Eclipse that's the <code>src</code> folder and the "build path" respectively). This way you can grab them with help of the <code>ClassLoader</code> by  <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html#getResource-java.lang.String-" rel="nofollow noreferrer"><code>ClassLoader#getResource()</code></a> or <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html#getResourceAsStream-java.lang.String-" rel="nofollow noreferrer"><code>ClassLoader#getResourceAsStream()</code></a>. It is able to locate files relative to the "root" of the classpath, as you by coincidence figured out. In webapplications (or any other application which uses multiple classloaders) it's recommend to use the <code>ClassLoader</code> as returned by <code>Thread.currentThread().getContextClassLoader()</code> for this so you can look "outside" the webapp context as well.</p><p>Another alternative in webapps is the <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html#getResource-java.lang.String-" rel="nofollow noreferrer"><code>ServletContext#getResource()</code></a> and its counterpart <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html#getResourceAsStream-java.lang.String-" rel="nofollow noreferrer"><code>ServletContext#getResourceAsStream()</code></a>. It is able to access files located in the public <code>web</code> folder of the webapp project, including the <code>/WEB-INF</code> folder. The <code>ServletContext</code> is available in servlets by the inherited <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/GenericServlet.html#getServletContext--" rel="nofollow noreferrer"><code>getServletContext()</code></a> method, you can call it as-is. </p></body></html>

===ID===
584cbfaa3e2ca508e5f071df
===QUESTION===
Swing: Obtain Image of JFrame
How do I obtain a  java.awt.Image  of a JFrame? I want to obtain a screen shot of a  JFrame  (for later use within my application). This is presently accomplished using the robot to take a screen shot specifying the coordinates and dimensions of the  JFrame  involved. However, I believe that there is a better way: Swing components, by default, render themselves as images into a double buffer prior to painting themselves onto the screen. Is there a way to obtain these images from the component? 
===LINK===
http://stackoverflow.com/questions/5853879/swing-obtain-image-of-jframe
===KEYWORDS===
jframe java dimensions render default 
===ANSWER===
64
<html><body><pre><code>import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Image;
import java.awt.Graphics;

import java.awt.image.BufferedImage;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.InputEvent;

import javax.swing.*;

import javax.swing.border.TitledBorder;

import javax.imageio.ImageIO;

import java.io.File;

/**
Create a screenshot of a component.
@author Andrew Thompson
*/
class ComponentImageCapture {

  static final String HELP =
    "Type Ctrl-0 to get a screenshot of the current GUI.\n" +
    "The screenshot will be saved to the current " +
    "directory as 'screenshot.png'.";

  public static BufferedImage getScreenShot(
    Component component) {

    BufferedImage image = new BufferedImage(
      component.getWidth(),
      component.getHeight(),
      BufferedImage.TYPE_INT_RGB
      );
    // call the Component's paint method, using
    // the Graphics object of the image.
    component.paint( image.getGraphics() ); // alternately use .printAll(..)
    return image;
  }

  public static void main(String[] args) {
    Runnable r = new Runnable() {
      public void run() {
        final JFrame f = new JFrame("Test Screenshot");

        JMenuItem screenshot =
          new JMenuItem("Screenshot");
        screenshot.setAccelerator(
          KeyStroke.getKeyStroke(
            KeyEvent.VK_0,
            InputEvent.CTRL_DOWN_MASK
          ));
        screenshot.addActionListener(
          new ActionListener(){
            public void actionPerformed(ActionEvent ae) {
              BufferedImage img = getScreenShot(
                f.getContentPane() );
              JOptionPane.showMessageDialog(
                null,
                new JLabel(
                  new ImageIcon(
                    img.getScaledInstance(
                      img.getWidth(null)/2,
                      img.getHeight(null)/2,
                      Image.SCALE_SMOOTH )
                    )));
              try {
                // write the image as a PNG
                ImageIO.write(
                  img,
                  "png",
                  new File("screenshot.png"));
              } catch(Exception e) {
                e.printStackTrace();
              }
            }
          } );
        JMenu menu = new JMenu("Other");
        menu.add(screenshot);
        JMenuBar mb = new JMenuBar();
        mb.add(menu);
        f.setJMenuBar(mb);

        JPanel p = new JPanel( new BorderLayout(5,5) );
        p.setBorder( new TitledBorder("Main GUI") );
        p.add( new JScrollPane(new JTree()),
          BorderLayout.WEST );
        p.add( new JScrollPane( new JTextArea(HELP,10,30) ),
          BorderLayout.CENTER );

        f.setContentPane( p );
        f.pack();
        f.setLocationRelativeTo(null);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setVisible(true);
      }
    };
    SwingUtilities.invokeLater(r);
  }
} 
</code></pre><p><img alt="GUI with captured image" src="https://i.stack.imgur.com/fw4B7.png"/></p><p>The code shown above presumes the component has been realized on-screen, prior to rendering.</p><p>Rob Camick shows how to paint an unrealized component in the <a href="http://tips4java.wordpress.com/2008/10/13/screen-image/" rel="nofollow noreferrer">Screen Image</a> class.</p><p>Another thread that might be of relevance, is <a href="http://forums.oracle.com/forums/thread.jspa?messageID=5697465&amp;" rel="nofollow noreferrer">Render JLabel without 1st displaying</a>, particularly the 'one line fix' by Darryl Burke.</p><p></p><p>Here is an updated variant of the code shown on the second link.</p><pre><code>import java.awt.*;
import java.awt.image.BufferedImage;
import javax.swing.*;

public class LabelRenderTest {

    public static void main(String[] args) {
        SwingUtilities.invokeLater( new Runnable() {
            public void run() {

            String title = "&lt;html&gt;&lt;body style='width: 200px; padding: 5px;'&gt;"
                + "&lt;h1&gt;Do U C Me?&lt;/h1&gt;"
                + "Here is a long string that will wrap.  "
                + "The effect we want is a multi-line label.";

                JFrame f = new JFrame("Label Render Test");
                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                BufferedImage image = new BufferedImage(
                    400,
                    300,
                    BufferedImage.TYPE_INT_RGB);
                Graphics2D imageGraphics = image.createGraphics();
                GradientPaint gp = new GradientPaint(
                    20f,
                    20f,
                    Color.red,
                    380f,
                    280f,
                    Color.orange);
                imageGraphics.setPaint(gp);
                imageGraphics.fillRect(0, 0, 400, 300);

                JLabel textLabel = new JLabel(title);
                textLabel.setSize(textLabel.getPreferredSize());

                Dimension d = textLabel.getPreferredSize();
                BufferedImage bi = new BufferedImage(
                    d.width,
                    d.height,
                    BufferedImage.TYPE_INT_ARGB);
                Graphics g = bi.createGraphics();
                g.setColor(new Color(255, 255, 255, 128));
                g.fillRoundRect(
                    0,
                    0,
                    bi.getWidth(f),
                    bi.getHeight(f),
                    15,
                    10);
                g.setColor(Color.black);
                textLabel.paint(g);
                Graphics g2 = image.getGraphics();
                g2.drawImage(bi, 20, 20, f);

                ImageIcon ii = new ImageIcon(image);
                JLabel imageLabel = new JLabel(ii);

                f.getContentPane().add(imageLabel);
                f.pack();
                f.setLocationByPlatform(true);

                f.setVisible(true);
            }
        });
    }
}
</code></pre><p><img alt="Label rendered on image" src="https://i.stack.imgur.com/BUWfe.png"/></p></body></html>

===ID===
584cbfab3e2ca508e5f071e0
===QUESTION===
Recommendations for a heap analysis tool for Java? [closed]
List your favorite heap analysis tools (e.g. jprofiler, jmap, ...).
Let's keep it one tool per answer, with a short list of pros and cons for each tool. 
===LINK===
http://stackoverflow.com/questions/2064427/recommendations-for-a-heap-analysis-tool-for-java
===KEYWORDS===
cons java jprofiler pros tool 
===ANSWER===
13
<html><body><p><strong>YourKit</strong> : <a href="http://www.yourkit.com/" rel="nofollow noreferrer">http://www.yourkit.com/</a></p><p><strong>Pros:</strong></p><p><strong>Cons:</strong>
Of course... it's not free :(</p></body></html>

===ID===
584cbfab3e2ca508e5f071e1
===QUESTION===
Can a progress bar be used in a class outside main?
Right now, my main just calls a gui with 10 rows.  Based on how many of those rows have text, 1 of 9 classes is called (two rows must have text).  The called class performs calculations that I'd like to have the progress bar tied to.  Here is an example of one of the called classes (each class is similar, but different enough to warrant a new class.)  I believe the problem is a violation of EDT rules, but all the examples I've seen on them involve a main argument.  The frame appears when the code is run, but the progress bar doesn't update until all calculations are completed. 
===LINK===
http://stackoverflow.com/questions/4637215/can-a-progress-bar-be-used-in-a-class-outside-main
===KEYWORDS===
rows based calls violation text 
===ANSWER===
25
<html><body><p><a href="http://docs.oracle.com/javase/tutorial/uiswing/concurrency/worker.html"><code>SwingWorker</code></a> is ideal for this. The example below performs a simple iteration in the background, while reporting progress and intermediate results in a window. You can pass whatever parameters you need in a suitable <a href="http://docs.oracle.com/javase/tutorial/uiswing/concurrency/worker.html"><code>SwingWorker</code></a> constructor.</p><pre><code>import java.awt.EventQueue;
import java.awt.GridLayout;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.*;

/** @see http://stackoverflow.com/questions/4637215 */
public class TwoRoot extends JFrame {

    private static final String s = "0.000000000000000";
    private JProgressBar progressBar = new JProgressBar(0, 100);
    private JLabel label = new JLabel(s, JLabel.CENTER);

    public TwoRoot() {
        this.setLayout(new GridLayout(0, 1));
        this.setTitle("√2");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.add(progressBar);
        this.add(label);
        this.setSize(161, 100);
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    public void runCalc() {
        progressBar.setIndeterminate(true);
        TwoWorker task = new TwoWorker();
        task.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent e) {
                if ("progress".equals(e.getPropertyName())) {
                    progressBar.setIndeterminate(false);
                    progressBar.setValue((Integer) e.getNewValue());
                }
            }
        });
        task.execute();
    }

    private class TwoWorker extends SwingWorker&lt;Double, Double&gt; {

        private static final int N = 5;
        private final DecimalFormat df = new DecimalFormat(s);
        double x = 1;

        @Override
        protected Double doInBackground() throws Exception {
            for (int i = 1; i &lt;= N; i++) {
                x = x - (((x * x - 2) / (2 * x)));
                setProgress(i * (100 / N));
                publish(Double.valueOf(x));
                Thread.sleep(1000); // simulate latency
            }
            return Double.valueOf(x);
        }

        @Override
        protected void process(List&lt;Double&gt; chunks) {
            for (double d : chunks) {
                label.setText(df.format(d));
            }
        }
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                TwoRoot t = new TwoRoot();
                t.runCalc();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbfab3e2ca508e5f071e2
===QUESTION===
Converting JSON to Java
I want to be able to access properties from a JSON string within my Java action method. The string is available by simply saying  myJsonString = object.getJson() . Below is an example of what the string can look like: In this string every JSON object contains an array of other JSON objects. The intention is to extract a list of IDs where any given object possessing a group property that contains other JSON objects. I looked at Google's Gson as a potential JSON plugin. Can anyone offer some form of guidance as to how I can generate Java from this JSON string? 
===LINK===
http://stackoverflow.com/questions/1688099/converting-json-to-java
===KEYWORDS===
google java string form offer 
===ANSWER===
279
<html><body><p><em>I looked at Google's Gson as a potential JSON plugin. Can anyone offer some form of guidance as to how I can generate Java from this JSON string?</em></p><p><a href="http://code.google.com/p/google-gson/" rel="nofollow noreferrer">Google Gson</a> supports generics and nested beans. The <code>[]</code> in JSON represents an array and should map to a Java collection such as <a href="http://docs.oracle.com/javase/6/docs/api/java/util/List.html" rel="nofollow noreferrer"><code>List</code></a> or just a plain Java array. The <code>{}</code> in JSON represents an object and should map to a Java <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Map.html" rel="nofollow noreferrer"><code>Map</code></a> or just some JavaBean class.</p><p>You have a JSON object with several properties of which the <code>groups</code> property represents an array of nested objects of the very same type. This can be parsed with Gson the following way:</p><pre><code>package com.stackoverflow.q1688099;

import java.util.List;
import com.google.gson.Gson;

public class Test {

    public static void main(String... args) throws Exception {
        String json = 
            "{"
                + "'title': 'Computing and Information systems',"
                + "'id' : 1,"
                + "'children' : 'true',"
                + "'groups' : [{"
                    + "'title' : 'Level one CIS',"
                    + "'id' : 2,"
                    + "'children' : 'true',"
                    + "'groups' : [{"
                        + "'title' : 'Intro To Computing and Internet',"
                        + "'id' : 3,"
                        + "'children': 'false',"
                        + "'groups':[]"
                    + "}]" 
                + "}]"
            + "}";

        // Now do the magic.
        Data data = new Gson().fromJson(json, Data.class);

        // Show it.
        System.out.println(data);
    }

}

class Data {
    private String title;
    private Long id;
    private Boolean children;
    private List&lt;Data&gt; groups;

    public String getTitle() { return title; }
    public Long getId() { return id; }
    public Boolean getChildren() { return children; }
    public List&lt;Data&gt; getGroups() { return groups; }

    public void setTitle(String title) { this.title = title; }
    public void setId(Long id) { this.id = id; }
    public void setChildren(Boolean children) { this.children = children; }
    public void setGroups(List&lt;Data&gt; groups) { this.groups = groups; }

    public String toString() {
        return String.format("title:%s,id:%d,children:%s,groups:%s", title, id, children, groups);
    }
}
</code></pre><p>Fairly simple, isn't it? Just have a suitable JavaBean and call <a href="http://google-gson.googlecode.com/svn/tags/1.3/docs/javadocs/com/google/gson/Gson.html#fromJson%28java.lang.String,%20java.lang.Class%29" rel="nofollow noreferrer"><code>Gson#fromJson()</code></a>.</p></body></html>

===ID===
584cbfac3e2ca508e5f071e3
===QUESTION===
Decode Base64 data in Java
I have an image that is Base64 encoded. What is the best way to decode that in Java? Hopefully using only the libraries included with Sun Java 6. 
===LINK===
http://stackoverflow.com/questions/469695/decode-base64-data-in-java
===KEYWORDS===
decode image java 
===ANSWER===
372
<html><body><p>As of v6, Java SE ships with JAXB. <a href="http://download.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html" rel="nofollow noreferrer"><code>javax.xml.bind.DatatypeConverter</code></a> has static methods that make this easy. See <a href="http://download.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html#parseBase64Binary(java.lang.String)" rel="nofollow noreferrer"><code>parseBase64Binary()</code></a> and <a href="http://download.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html#printBase64Binary%28byte[]%29" rel="nofollow noreferrer"><code>printBase64Binary()</code></a>.</p></body></html>

===ID===
584cbfad3e2ca508e5f071e4
===QUESTION===
Java - No enclosing instance of type Foo is accessible
I have the following code: I know  Thing  does nothing, but my Hello, World program compiles just fine without it. It's only my defined classes that are failing on me. And it refuses to compile. I get  No enclosing instance of type Hello is accessible."  at the line that creates a new Thing. I'm guessing either: Any ideas? 
===LINK===
http://stackoverflow.com/questions/9560600/java-no-enclosing-instance-of-type-foo-is-accessible
===KEYWORDS===
accessible creates code java guessing 
===ANSWER===
330
<html><body><p><code>static class Thing</code> will make your program work.</p><p>As it is, you've got <code>Thing</code> as an inner class, which (by definition) is associated with a particular instance of <code>Hello</code> (even if it never uses or refers to it), which means it's an error to say <code>new Thing();</code> without having a particular <code>Hello</code> instance in scope. </p><p>If you declare it as a static class instead, then it's a "nested" class, which doesn't need a particular <code>Hello</code> instance.</p></body></html>

===ID===
584cbfad3e2ca508e5f071e5
===QUESTION===
Loop doesn't see changed value without a print statement
In my code I have a loop that waits for some state to be changed from a different thread. The other thread works, but my loop never sees the changed value.  It waits forever.  However, when I put a  System.out.println  statement in the loop, it suddenly works! Why? The following is an example of my code: While the while loop is running, I call  deliverPizza()  from a different thread to set the  pizzaArrived  variable. But the loop only works when I uncomment the  System.out.println("waiting");  statement. What's going on? 
===LINK===
http://stackoverflow.com/questions/25425130/loop-doesnt-see-changed-value-without-a-print-statement
===KEYWORDS===
waiting code sees thread waits 
===ANSWER===
64
<html><body><p>The JVM is allowed to assume that other threads do not change the <code>pizzaArrived</code> variable during the loop. In other words, it can hoist the <code>pizzaArrived == false</code> test outside the loop, optimizing this:</p><pre><code>while (pizzaArrived == false) {}
</code></pre><p>into this:</p><pre><code>if (pizzaArrived == false) while (true) {}
</code></pre><p>which is an infinite loop.</p><p>To ensure that changes made by one thread are visible to other threads you must always add some <strong>synchronization</strong> between the threads. The simplest way to do this is to make the shared variable <code>volatile</code>:</p><pre><code>volatile boolean pizzaArrived = false;
</code></pre><p>Making a variable <code>volatile</code> guarantees that different threads will see the effects of each other's changes to it. This prevents the JVM from caching the value of <code>pizzaArrived</code> or hoisting the test outside the loop. Instead, it must read the value of the real variable every time.</p><p>(More formally, <code>volatile</code> creates a <em>happens-before</em> relationship between accesses to the variable. This means that <a href="https://stackoverflow.com/questions/19738651/volatile-variable-explanation-in-java-docs">all other work a thread did</a> before delivering the pizza is also visible to the thread receiving the pizza, even if those other changes are not to <code>volatile</code> variables.)</p><p><a href="http://docs.oracle.com/javase/tutorial/essential/concurrency/syncmeth.html">Synchronized methods</a> are used principally to implement mutual exclusion (preventing two things happening at the same time), but they also have all the same side-effects that <code>volatile</code> has. Using them when reading and writing a variable is another way to make the changes visible to other threads:</p><pre><code>class MyHouse {
    boolean pizzaArrived = false;

    void eatPizza() {
        while (getPizzaArrived() == false) {}
        System.out.println("That was delicious!");
    }

    synchronized boolean getPizzaArrived() {
        return pizzaArrived;
    }

    synchronized void deliverPizza() {
        pizzaArrived = true;
    }
}
</code></pre><p><code>System.out</code> is a <code>PrintStream</code> object. The methods of <code>PrintStream</code> are synchronized like this:</p><pre><code>public void println(String x) {
    synchronized (this) {
        print(x);
        newLine();
    }
}
</code></pre><p>The synchronization prevents <code>pizzaArrived</code> being cached during the loop. <em>Strictly speaking, <strong>both</strong> threads must synchronize on the same object</em> to guarantee that changes to the variable are visible. (For example, calling <code>println</code> after setting <code>pizzaArrived</code> and calling it again before reading <code>pizzaArrived</code> would be correct.) If only one thread synchronizes on a particular object, the JVM is allowed to ignore it. In practice, the JVM is not smart enough to prove that other threads won't call <code>println</code> after setting <code>pizzaArrived</code>, so it assumes that they might. Therefore, it cannot cache the variable during the loop if you call <code>System.out.println</code>. That's why loops like this work when they have a print statement, although it is not a correct fix.</p><p>Using <code>System.out</code> is not the only way to cause this effect, but it is the one people discover most often, when they are trying to debug why their loop doesn't work!</p><p><code>while (pizzaArrived == false) {}</code> is a busy-wait loop. That's bad! While it waits, it hogs the CPU, which slows down other applications, and increases the power usage, temperature, and fan speed of the system. Ideally, we would like the loop thread to sleep while it waits, so it does not hog the CPU.</p><p>Here are some ways to do that:</p><p>A low-level solution is to <a href="https://stackoverflow.com/questions/2536692/a-simple-scenario-using-wait-and-notify-in-java">use the wait/notify methods of <code>Object</code></a>:</p><pre><code>class MyHouse {
    boolean pizzaArrived = false;

    void eatPizza() {
        synchronized (this) {
            while (!pizzaArrived) {
                try {
                    this.wait();
                } catch (InterruptedException e) {}
            }
        }

        System.out.println("That was delicious!");
    }

    void deliverPizza() {
        synchronized (this) {
            pizzaArrived = true;
            this.notifyAll();
        }
    }
}
</code></pre><p>In this version of the code, the loop thread calls <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait--"><code>wait()</code></a>, which puts the thread the sleep. It will not use any CPU cycles while sleeping. After the second thread sets the variable, it calls <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll--"><code>notifyAll()</code></a> to wake up any/all threads which were waiting on that object. This is like having the pizza guy ring the doorbell, so you can sit down and rest while waiting, instead of standing awkwardly at the door.</p><p>When calling wait/notify on an object you must hold the synchronization lock of that object, which is what the above code does. You can use any object you like so long as both threads use the same object: here I used <code>this</code> (the instance of <code>MyHouse</code>). Usually, two threads would not be able to enter synchronized blocks of the same object simultaneously (which is part of the purpose of synchronization) but it works here because a thread temporarily releases the synchronization lock when it is inside the <code>wait()</code> method.</p><p>A <a href="http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html"><code>BlockingQueue</code></a> is used to implement producer-consumer queues. "Consumers" take items from the front of the queue, and "producers" push items on at the back. An example:</p><pre><code>class MyHouse {
    final BlockingQueue&lt;Object&gt; queue = new LinkedBlockingQueue&lt;&gt;();

    void eatFood() throws InterruptedException {
        // take next item from the queue (sleeps while waiting)
        Object food = queue.take();
        // and do something with it
        System.out.println("Eating: " + food);
    }

    void deliverPizza() throws InterruptedException {
        // in producer threads, we push items on to the queue.
        // if there is space in the queue we can return immediately;
        // the consumer thread(s) will get to it later
        queue.put("A delicious pizza");
    }
}
</code></pre><p>Note: The <code>put</code> and <code>take</code> methods of <code>BlockingQueue</code> can throw <code>InterruptedException</code>s, which are checked exceptions which must be handled. In the above code, for simplicity, the exceptions are rethrown. You might prefer to catch the exceptions in the methods and retry the put or take call to be sure it succeeds. Apart from that one point of ugliness, <code>BlockingQueue</code> is very easy to use.</p><p>No other synchronization is needed here because a <code>BlockingQueue</code> makes sure that everything threads did before putting items in the queue is visible to the threads taking those items out.</p><p><code>Executor</code>s are like ready-made <code>BlockingQueue</code>s which execute tasks. Example:</p><pre><code>// A "SingleThreadExecutor" has one work thread and an unlimited queue
ExecutorService executor = Executors.newSingleThreadExecutor();

Runnable eatPizza = () -&gt; { System.out.println("Eating a delicious pizza"); };
Runnable cleanUp = () -&gt; { System.out.println("Cleaning up the house"); };

// we submit tasks which will be executed on the work thread
executor.execute(eatPizza);
executor.execute(cleanUp);
// we continue immediately without needing to wait for the tasks to finish
</code></pre><p>For details see the doc for <a href="http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html"><code>Executor</code></a>, <a href="http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html"><code>ExecutorService</code></a>, and <a href="http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html"><code>Executors</code></a>.</p><p>Looping while waiting for the user to click something in a UI is wrong. Instead, use the event handling features of the UI toolkit. <a href="http://docs.oracle.com/javase/tutorial/uiswing/events/index.html">In Swing</a>, for example:</p><pre><code>JLabel label = new JLabel();
JButton button = new JButton("Click me");
button.addActionListener((ActionEvent e) -&gt; {
    // This event listener is run when the button is clicked.
    // We don't need to loop while waiting.
    label.setText("Button was clicked");
});
</code></pre><p>Because the event handler runs on the event dispatch thread, doing long work in the event handler blocks other interaction with the UI until the work is finished. Slow operations can be started on a new thread, or dispatched to a waiting thread using one of the above techniques (wait/notify, a <code>BlockingQueue</code>, or <code>Executor</code>). You can also use a <a href="http://docs.oracle.com/javase/tutorial/uiswing/concurrency/worker.html"><code>SwingWorker</code></a>, which is designed exactly for this, and automatically supplies a background worker thread:</p><pre><code>JLabel label = new JLabel();
JButton button = new JButton("Calculate answer");

// Add a click listener for the button
button.addActionListener((ActionEvent e) -&gt; {

    // Defines MyWorker as a SwingWorker whose result type is String:
    class MyWorker extends SwingWorker&lt;String,Void&gt; {
        @Override
        public String doInBackground() throws Exception {
            // This method is called on a background thread.
            // You can do long work here without blocking the UI.
            // This is just an example:
            Thread.sleep(5000);
            return "Answer is 42";
        }

        @Override
        protected void done() {
            // This method is called on the Swing thread once the work is done
            String result;
            try {
                result = get();
            } catch (Exception e) {
                throw new RuntimeException(e);
            }
            label.setText(result); // will display "Answer is 42"
        }
    }

    // Start the worker
    new MyWorker().execute();
});
</code></pre><p>To perform periodic actions, you can use a <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Timer.html"><code>java.util.Timer</code></a>. It is easier to use than writing your own timing loop, and easier to start and stop. This demo prints the current time once per second:</p><pre><code>Timer timer = new Timer();
TimerTask task = new TimerTask() {
    @Override
    public void run() {
        System.out.println(System.currentTimeMillis());
    }
};
timer.scheduleAtFixedRate(task, 0, 1000);
</code></pre><p>Each <code>java.util.Timer</code> has its own background thread which is used to execute its scheduled <code>TimerTask</code>s. Naturally, the thread sleeps between tasks, so it does not hog the CPU.</p><p>In Swing code, there is also a <a href="http://docs.oracle.com/javase/tutorial/uiswing/misc/timer.html"><code>javax.swing.Timer</code></a>, which is similar, but it executes the listener on the Swing thread, so you can safely interact with Swing components without needing to manually switch threads:</p><pre><code>JFrame frame = new JFrame();
frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
Timer timer = new Timer(1000, (ActionEvent e) -&gt; {
    frame.setTitle(String.valueOf(System.currentTimeMillis()));
});
timer.setRepeats(true);
timer.start();
frame.setVisible(true);
</code></pre><p>If you are writing multithreaded code, it is worth exploring the classes in these packages to see what is available:</p><p>And also see the <a href="http://docs.oracle.com/javase/tutorial/essential/concurrency/index.html">Concurrency section</a> of the Java tutorials. Multithreading is complicated, but there is lots of help available!</p></body></html>

===ID===
584cbfad3e2ca508e5f071e6
===QUESTION===
What's wrong with overridable method calls in constructors?
I have a Wicket page class that sets the page title depending on the result of an abstract method. NetBeans warns me with the message "Overridable method call in constructor", but what should be wrong with it? The only alternative I can imagine is to pass the results of otherwise abstract methods to the super constructor in subclasses. But that could be hard to read with many parameters. 
===LINK===
http://stackoverflow.com/questions/3404301/whats-wrong-with-overridable-method-calls-in-constructors
===KEYWORDS===
hard parameters read subclasses sets 
===ANSWER===
338
<html><body><p>Simply put, this is wrong because it unnecessarily opens up possibilities to <em>MANY</em> bugs. When the <code>@Override</code> is invoked, the state of the object may be inconsistent and/or incomplete.</p><p>A quote from <em>Effective Java 2nd Edition, Item 17: Design and document for inheritance, or else prohibit it</em>:</p><p>There are a few more restrictions that a class must obey to allow inheritance. <strong>Constructors must not invoke overridable methods</strong>, directly or indirectly. If you violate this rule, program failure will result. The superclass constructor runs before the subclass constructor, so the overriding method in the subclass will be invoked before the subclass constructor has run. If the overriding method depends on any initialization performed by the subclass constructor, the method will not behave as expected.</p><p>Here's an example to illustrate:</p><pre><code>public class ConstructorCallsOverride {
    public static void main(String[] args) {
        abstract class Base {
            Base() { overrideMe(); }
            abstract void overrideMe(); 
        }
        class Child extends Base {
            final int x;
            Child(int x) { this.x = x; }
            @Override void overrideMe() {
                System.out.println(x);
            }
        }
        new Child(42); // prints "0"
    }
}
</code></pre><p>Here, when <code>Base</code> constructor calls <code>overrideMe</code>, <code>Child</code> has not finished initializing the <code>final int x</code>, and the method gets the wrong value. This will almost certainly lead to bugs and errors.</p><p>Constructors with many parameters can lead to poor readability, and better alternatives exist.</p><p>Here's a quote from <em>Effective Java 2nd Edition, Item 2: Consider a builder pattern when faced with many constructor parameters</em>:</p><p>Traditionally, programmers have used the <em>telescoping constructor</em> pattern, in which you provide a constructor with only the required parameters, another with a single optional parameters, a third with two optional parameters, and so on...</p><p>The telescoping constructor pattern is essentially something like this:</p><pre><code>public class Telescope {
    final String name;
    final int levels;
    final boolean isAdjustable;

    public Telescope(String name) {
        this(name, 5);
    }
    public Telescope(String name, int levels) {
        this(name, levels, false);
    }
    public Telescope(String name, int levels, boolean isAdjustable) {       
        this.name = name;
        this.levels = levels;
        this.isAdjustable = isAdjustable;
    }
}
</code></pre><p>And now you can do any of the following:</p><pre><code>new Telescope("X/1999");
new Telescope("X/1999", 13);
new Telescope("X/1999", 13, true);
</code></pre><p>You can't, however, currently set only the <code>name</code> and <code>isAdjustable</code>, and leaving <code>levels</code> at default. You can provide more constructor overloads, but obviously the number would explode as the number of parameters grow, and you may even have multiple <code>boolean</code> and <code>int</code> arguments, which would really make a mess out of things.</p><p>As you can see, this isn't a pleasant pattern to write, and even less pleasant to use (What does "true" mean here? What's 13?).</p><p>Bloch recommends using a builder pattern, which would allow you to write something like this instead:</p><pre><code>Telescope telly = new Telescope.Builder("X/1999").setAdjustable(true).build();
</code></pre><p>Note that now the parameters are named, and you can set them in any order you want, and you can skip the ones that you want to keep at default values. This is certainly much better than telescoping constructors, especially when there's a huge number of parameters that belong to many of the same types.</p></body></html>

===ID===
584cbfae3e2ca508e5f071e7
===QUESTION===
Hibernate hbm2ddl.auto possible values and what they do?
I really want to know more about the update, export and the values that could be given to  hibernate.hbm2ddl.auto 
I need to know when to use the update and when not? And what is the alternative? These are changes that could happen over DB: In each case what is the best solution? 
===LINK===
http://stackoverflow.com/questions/438146/hibernate-hbm2ddl-auto-possible-values-and-what-they-do
===KEYWORDS===
case hibernate happen auto update 
===ANSWER===
702
<html><body><p>From the <a href="https://docs.jboss.org/hibernate/orm/5.2/userguide/html_single/Hibernate_User_Guide.html#configurations-hbmddl" rel="nofollow noreferrer">community documentation</a>:</p><p>hibernate.hbm2ddl.auto    Automatically validates or exports schema DDL to the database when the SessionFactory is created. With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.</p><p>e.g. validate | update | create | create-drop </p><p>So the list of possible options are,</p><p>These options seem intended to be developers tools and not to facilitate any production level databases, you may want to have a look at the following question; <a href="http://stackoverflow.com/questions/221379/hibernate-hbm2ddl-autoupdate-in-production">Hibernate: hbm2ddl.auto=update in production?</a></p></body></html>

===ID===
584cbfae3e2ca508e5f071e8
===QUESTION===
Java: maintaining aspect ratio of JPanel background image
I have a  JPanel  with a painted background image and a layout manager holding other smaller images, all of this inside a  JFrame . The background image is pretty big and I want to be able to have it maintain its aspect ratio whether its on a big or small monitor.  Eventually, I want to be able to have my  LayoutManager  and the smaller images in its cells "glued" to the background picture. I looked around for resources and it seems that many examples use a  BufferedImage  but I am not; will this pose a problem? I'll post my code below for painting the image, If I lack any information please let me know. EDIT:  I should mention that I know the aspect ratio formula:
  original height / original width x new width = new height 
However, I do not know how to use that correctly to my advantage. 
===LINK===
http://stackoverflow.com/questions/11959758/java-maintaining-aspect-ratio-of-jpanel-background-image
===KEYWORDS===
code image lack height examples 
===ANSWER===
31
<html><body><p>Well, the quickest and easiest solution is to use <code>Image.getScaledInstance</code></p><pre><code>g.drawImage(img.getScaledInstance(newWidth, -1, Image. SCALE_SMOOTH), x, y, this);
</code></pre><p>If your wondering about the negative number, the java docs say:</p><p>If either width or height is a negative number then a value is
  substituted to maintain the aspect ratio of the original image
  dimensions. If both width and height are negative, then the original
  image dimensions are used.</p><p><strong>UPDATE</strong></p><p>Just as a side note (my Google was playing up).</p><p><code>getScaledInstance</code> is neither the fastest or highest quality approach, but it is the easiest.</p><p>Take a read through <a href="http://today.java.net/pub/a/today/2007/04/03/perils-of-image-getscaledinstance.html" rel="nofollow noreferrer">The Perils of Image.getScaledInstance</a> for some more ideas</p><p><strong>UPDATE</strong></p><p>Scaling an image to fit an area is slightly more complicated then simply scaling the aspect ratio.  You have to make a choice over if you want the image to "fit" within the area (possibly leaving blank areas around it) or over "fill" the area (so that it's smallest dimension fits the largest dimension of the area).</p><p><img alt="Fit" src="https://i.stack.imgur.com/PMPbZ.png"><img alt="Fill" src="https://i.stack.imgur.com/3T9Gt.png"/></img></p><p>Fit &amp; Fill</p><p>Basically, I work with scale factors</p><p>This returns the scaling factor for a particular size.  I use this to make decisions about which factor I want to use based which algorithm I need</p><pre><code>public static double getScaleFactor(int iMasterSize, int iTargetSize) {

    double dScale = 1;
    if (iMasterSize &gt; iTargetSize) {

        dScale = (double) iTargetSize / (double) iMasterSize;

    } else {

        dScale = (double) iTargetSize / (double) iMasterSize;

    }

    return dScale;

}
</code></pre><p>It's used by these two methods.  They simply take two <code>Dimension</code>s.  The original and the target.</p><pre><code>public static double getScaleFactorToFit(Dimension original, Dimension toFit) {

    double dScale = 1d;

    if (original != null &amp;&amp; toFit != null) {

        double dScaleWidth = getScaleFactor(original.width, toFit.width);
        double dScaleHeight = getScaleFactor(original.height, toFit.height);

        dScale = Math.min(dScaleHeight, dScaleWidth);

    }

    return dScale;

}

public static double getScaleFactorToFill(Dimension masterSize, Dimension targetSize) {

    double dScaleWidth = getScaleFactor(masterSize.width, targetSize.width);
    double dScaleHeight = getScaleFactor(masterSize.height, targetSize.height);

    double dScale = Math.max(dScaleHeight, dScaleWidth);

    return dScale;

}
</code></pre><p>It's relatively simple to pass an image into (either directly or via a support method).  So for example, you could call this from within your <code>paint</code> method</p><pre><code>double factor getScaledFactorToFit(new Dimension(image.getWidth(), image.getHeight()), getSize());

int scaledWidth = image.getWidth() * scale;
int scaledHeight *= image.getWidth() * scale;
</code></pre><p>This will automatically take care of the aspect ratio for you ;)</p><p><strong>UPDATED with expanded example</strong></p><pre><code>public double getScaleFactor(int iMasterSize, int iTargetSize) {

    double dScale = 1;
    if (iMasterSize &gt; iTargetSize) {

        dScale = (double) iTargetSize / (double) iMasterSize;

    } else {

        dScale = (double) iTargetSize / (double) iMasterSize;

    }

    return dScale;

}

public double getScaleFactorToFit(Dimension original, Dimension toFit) {

    double dScale = 1d;

    if (original != null &amp;&amp; toFit != null) {

        double dScaleWidth = getScaleFactor(original.width, toFit.width);
        double dScaleHeight = getScaleFactor(original.height, toFit.height);

        dScale = Math.min(dScaleHeight, dScaleWidth);

    }

    return dScale;

}

@Override
protected void paintComponent(Graphics g) {

    super.paintComponent(g);

    double scaleFactor = Math.min(1d, getScaleFactorToFit(new Dimension(image.getWidth(), image.getHeight()), getSize()));

    int scaleWidth = (int) Math.round(image.getWidth() * scaleFactor);
    int scaleHeight = (int) Math.round(image.getHeight() * scaleFactor);

    Image scaled = image.getScaledInstance(scaleWidth, scaleHeight, Image.SCALE_SMOOTH);

    int width = getWidth() - 1;
    int height = getHeight() - 1;

    int x = (width - scaled.getWidth(this)) / 2;
    int y = (height - scaled.getHeight(this)) / 2;

    g.drawImage(scaled, x, y, this);

}
</code></pre></body></html>

===ID===
584cbfaf3e2ca508e5f071e9
===QUESTION===
What is the point of the diamond operator in Java 7?
The diamond operator in java 7 allows code like the following: However in Java 5/6, I can simply write: My understanding of type erasure is that these are exactly the same. (The generic gets removed at runtime anyway).  Why bother with the diamond at all? What new functionality / type safety does it allow? If it doesn't yield any new functionality why do they mention it as a feature? Is my understanding of this concept flawed? 
===LINK===
http://stackoverflow.com/questions/4166966/what-is-the-point-of-the-diamond-operator-in-java-7
===KEYWORDS===
code runtime generic bother point 
===ANSWER===
395
<html><body><p>The issue with</p><pre><code>List&lt;String&gt; list = new LinkedList();
</code></pre><p>is that on the left hand side, you are using the <em>generic</em> type <code>List&lt;String&gt;</code> where on the right side you are using the <em>raw</em> type <code>LinkedList</code>. Raw types in Java effectively only exist for compatibility with pre-generics code and should never be used in new code unless 
you absolutely have to.</p><p>Now, if Java had generics from the beginning and didn't have types, such as <code>LinkedList</code>, that were originally created before it had generics, it probably could have made it so that the constructor for a generic type automatically infers its type parameters from the left-hand side of the assignment if possible. But it didn't, and it must treat raw types and generic types differently for backwards compatibility. That leaves them needing to make a <em>slightly different</em>, but equally convenient, way of declaring a new instance of a generic object without having to repeat its type parameters... the diamond operator.</p><p>As far as your original example of <code>List&lt;String&gt; list = new LinkedList()</code>, the compiler generates a warning for that assignment because it must. Consider this:</p><pre><code>List&lt;String&gt; strings = ... // some list that contains some strings

// Totally legal since you used the raw type and lost all type checking!
List&lt;Integer&gt; integers = new LinkedList(strings);
</code></pre><p>Generics exist to provide compile-time protection against doing the wrong thing. In the above example, using the raw type means you don't get this protection and will get an error at runtime. This is why you should not use raw types.</p><pre><code>// Not legal since the right side is actually generic!
List&lt;Integer&gt; integers = new LinkedList&lt;&gt;(strings);
</code></pre><p>The diamond operator, however, allows the right hand side of the assignment to be defined as a true generic instance with the same type parameters as the left side... without having to type those parameters again. It allows you to keep the safety of generics with <em>almost</em> the same effort as using the raw type.</p><p>I think the key thing to understand is that raw types (with no <code>&lt;&gt;</code>) cannot be treated the same as generic types. When you declare a raw type, you get none of the benefits and type checking of generics. You also have to keep in mind that <em>generics are a general purpose part of the Java language</em>... they don't just apply to the no-arg constructors of <code>Collection</code>s!</p></body></html>

===ID===
584cbfaf3e2ca508e5f071ea
===QUESTION===
Java multiple file transfer over socket
Ok, trying to transfer a specified directory of files over a socket, remove the directory objects from the arraylist, so only files are left, and transfer them 1 by 1 over the same socket.  The arraylist here is filled with ONLY files, no directories.  Heres the receive and send code for the client and server respectively .  The code runs fine without errors, except for ALL the data is being written to the first file.  The subsequent files are created in the server folder, but they are 0 bytes.  Any input would be greatly appreciated. THIS IS THE SERVER CODE FOR RECEIVING THE FILES THIS IS THE CLIENT CODE FOR SENDING THE FILES 
===LINK===
http://stackoverflow.com/questions/10367698/java-multiple-file-transfer-over-socket
===KEYWORDS===
files sending errors socket created 
===ANSWER===
18
<html><body><p>You are reading the socket until <code>read()</code> returns -1. This is the end-of-stream condition (EOS). EOS happens when the peer closes the connection. Not when it finishes writing one file.</p><p>You need to send the file size ahead of each file. You're already doing a similar thing with the file count. Then make sure you read exactly that many bytes for that file:</p><pre><code>String filename = dis.readUTF();
long fileSize = dis.readLong();
FileOutputStream fos = new FileOutputStream(filename);
while (fileSize &gt; 0 &amp;&amp; (n = dis.read(buf, 0, (int)Math.min(buf.length, fileSize)) != -1)
{
  fos.write(buf,0,n);
  fileSize -= n;
}
fos.close();
</code></pre><p>You can enclose all this in a loop that terminates when <code>readUTF()</code> throws <code>EOFException</code>. Conversely of course you have to call <code>writeUTF(filename)</code> and <code>writeLong(filesize)</code> at the sender, before sending the data.</p></body></html>

===ID===
584cbfb03e2ca508e5f071eb
===QUESTION===
How can I concatenate two arrays in Java?
I need to concatenate two String arrays in Java. What is the easiest way to do this? 
===LINK===
http://stackoverflow.com/questions/80476/how-can-i-concatenate-two-arrays-in-java
===KEYWORDS===
concatenate arrays java easiest 
===ANSWER===
752
<html><body><p>I found a one-line solution from the good old Apache Commons Lang library.<br> <a href="http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/ArrayUtils.html#addAll%28T%5B%5D,%20T...%29" rel="nofollow noreferrer"><code>ArrayUtils.addAll(T[], T...)</code></a></br></p><p>Code:</p><pre><code>String[] both = (String[])ArrayUtils.addAll(first, second);
</code></pre></body></html>

===ID===
584cbfb03e2ca508e5f071ec
===QUESTION===
Integer division: How do you produce a double?
For this code block: the value of  d  is  0.0 . It can be forced to work by casting: But is there another way to get the correct  double  result? I don't like casting primitives, who knows what may happen. 
===LINK===
http://stackoverflow.com/questions/3144610/integer-division-how-do-you-produce-a-double
===KEYWORDS===
forced casting double work produce 
===ANSWER===
95
<html><body><pre><code>double num = 5;
</code></pre><p>That avoids a cast.  But you'll find that the cast conversions are well-defined.  You don't have to guess, just check the <a href="http://docs.oracle.com/javase/specs/jls/se7/html/index.html" rel="nofollow noreferrer">JLS</a>.  int to double is a widening conversion.  From <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.1.2" rel="nofollow noreferrer">§5.1.2</a>:</p><p>Widening primitive conversions do not
  lose information about the overall
  magnitude of a numeric value.</p><p>[...]</p><p>Conversion of an int or a long value
  to float, or of a long value to
  double, may result in loss of
  precision-that is, the result may lose
  some of the least significant bits of
  the value. In this case, the resulting
  floating-point value will be a
  correctly rounded version of the
  integer value, using IEEE 754
  round-to-nearest mode <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-4.html#jls-4.2.4" rel="nofollow noreferrer">(§4.2.4)</a>.</p><p>5 can be expressed exactly as a double.</p></body></html>

===ID===
584cbfb13e2ca508e5f071ed
===QUESTION===
Why can't I switch on a String?
Why can't I switch on a  String ? Is this functionality going to be put into a later Java version? Can someone explain why I can't do this, as in, the technical way Java's  switch  statement works? 
===LINK===
http://stackoverflow.com/questions/338206/why-cant-i-switch-on-a-string
===KEYWORDS===
java string technical explain switch 
===ANSWER===
863
<html><body><p>Switch statements with <code>String</code> cases have been implemented in <a href="http://openjdk.java.net/projects/jdk7/features/" rel="nofollow noreferrer">Java SE 7</a>, at least 16 years <a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=1223179" rel="nofollow noreferrer">after they were first requested.</a> A clear reason for the delay was not provided, but it likely had to do with performance.</p><p>The feature has now been implemented in <code>javac</code> <a href="http://blogs.oracle.com/darcy/entry/project_coin_string_switch_anatomy" rel="nofollow noreferrer">with a "de-sugaring" process;</a> a clean, high-level syntax using <code>String</code> constants in <code>case</code> declarations is expanded at compile-time into more complex code following a pattern. The resulting code uses JVM instructions that have always existed.</p><p>A <code>switch</code> with <code>String</code> cases is translated into two switches during compilation. The first maps each string to a unique integer—its position in the original switch. This is done by first switching on the hash code of the label. The corresponding case is an <code>if</code> statement that tests string equality; if there are collisions on the hash, the test is a cascading <code>if-else-if</code>. The second switch mirrors that in the original source code, but substitutes the case labels with their corresponding positions. This two-step process makes it easy to preserve the flow control of the original switch.</p><p>For more technical depth on <code>switch</code>, you can refer to the JVM Specification, where the <a href="http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-3.html#jvms-3.10" rel="nofollow noreferrer">compilation of switch statements</a> is described. In a nutshell, there are two different JVM instructions that can be used for a switch, depending on the sparsity of the constants used by the cases. Both depend on using integer constants for each case to execute efficiently. </p><p>If the constants are dense, they are used as an index (after subtracting the lowest value) into a table of instruction pointers—the <code>tableswitch</code> instruction. </p><p>If the constants are sparse, a binary search for the correct case is performed—the <code>lookupswitch</code> instruction. </p><p>In de-sugaring a <code>switch</code> on <code>String</code> objects, both instructions are likely to be used. The <code>lookupswitch</code> is suitable for the first switch on hash codes to find the original position of the case. The resulting ordinal is a natural fit for a <code>tableswitch</code>.</p><p>Both instructions require the integer constants assigned to each case to be sorted at compile time. At runtime, while the <code>O(1)</code> performance of <code>tableswitch</code> generally appears better than the <code>O(log(n))</code> performance of <code>lookupswitch</code>, it requires some analysis to determine whether the table is dense enough to justify the space–time tradeoff. Bill Venners wrote <a href="http://www.artima.com/underthehood/flowP.html" rel="nofollow noreferrer">a great article</a> that covers this in more detail, along with an under-the-hood look at other Java flow control instructions.</p><p>Prior to JDK 7, <code>enum</code> could approximate a <code>String</code>-based switch. This uses <a href="http://docs.oracle.com/javase/specs/jls/se5.0/html/classes.html#8.9" rel="nofollow noreferrer">the static <code>valueOf</code></a> method generated by the compiler on every <code>enum</code> type. For example:</p><pre><code>Pill p = Pill.valueOf(str);
switch(p) {
  case RED:  pop();  break;
  case BLUE: push(); break;
}
</code></pre></body></html>

===ID===
584cbfb13e2ca508e5f071ee
===QUESTION===
Java Look and Feel (L&F)  [closed]
I am developing a desktop application with Java Swing for my personal use.I am in need of some beautiful Look and Feel for my application. How can I do it using Java or a 3rd party API? 
===LINK===
http://stackoverflow.com/questions/3954616/java-look-and-feel-lf
===KEYWORDS===
beautiful java developing personal feel 
===ANSWER===
185
<html><body><p>There is a lot of possibilities for LaFs :</p></body></html>

===ID===
584cbfb23e2ca508e5f071ef
===QUESTION===
Is there an eval() function in Java?
I have a string like the following: Now I have to get the result of  20  by using the string. I know in some other languages the  eval()  function will do this.
How can I do this in Java? 
===LINK===
http://stackoverflow.com/questions/2605032/is-there-an-eval-function-in-java
===KEYWORDS===
function java string languages result 
===ANSWER===
88
<html><body><p>You can use the <a href="https://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngine.html" rel="nofollow noreferrer"><code>ScriptEngine</code></a> class and evaluate it as a Javascript string.</p><pre><code>ScriptEngineManager manager = new ScriptEngineManager();
ScriptEngine engine = manager.getEngineByName("js");
Object result = engine.eval("4*5");
</code></pre><p>There may be a better way, but this one works.</p></body></html>

===ID===
584cbfb23e2ca508e5f071f0
===QUESTION===
Floating point arithmetic not producing exact results [duplicate]
This question already has an answer here: I need to do some floating point arithmetic in Java as shown in the code below: This is to simulate the range of values given as output by the  Betfair spinner widget . Floating point arithmetic in Java seems to introduce some unexpected errors. For example, I get 2.180000000000001 instead of 2.18. What use are floating point numbers is you can't trust the results of arithmetic performed on them? How can I get around this issue? 
===LINK===
http://stackoverflow.com/questions/1661273/floating-point-arithmetic-not-producing-exact-results
===KEYWORDS===
shown code java duplicate question 
===ANSWER===
31
<html><body><p>If you need exact <em>decimal</em> values, you should use <code>java.math.BigDecimal</code>. Then read <a href="http://docs.sun.com/source/806-3568/ncg_goldberg.html" rel="nofollow noreferrer">"What Every Computer Scientist Should Know About Floating-Point Arithmetic"</a> for the background of why you're getting those results.</p><p>(I have a <a href="http://csharpindepth.com/Articles/General/FloatingPoint.aspx" rel="nofollow noreferrer">.NET-centric article</a> which you may find easier to read - and certainly shorter. The differences between Java and .NET are mostly irrelevant for the purposes of understanding this issue.)</p></body></html>

===ID===
584cbfb33e2ca508e5f071f1
===QUESTION===
Dealing with “java.lang.OutOfMemoryError: PermGen space” error
Recently I ran into this error in my web application: java.lang.OutOfMemoryError: PermGen space It's a typical Hibernate/JPA + IceFaces/JSF application running on Tomcat 6 and JDK 1.6.
Apparently this can occur after redeploying an application a few times. What causes it and what can be done to avoid it?
How do I fix the problem? 
===LINK===
http://stackoverflow.com/questions/88235/dealing-with-java-lang-outofmemoryerror-permgen-space-error
===KEYWORDS===
lang “java fix java application 
===ANSWER===
520
<html><body><p>The solution was to add these flags to JVM command line when Tomcat is started:</p><pre><code>-XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled
</code></pre><p>You can do that by shutting down the tomcat service, then going into the Tomcat/bin directory and running tomcat6w.exe. Under the "Java" tab, add the arguments to the "Java Options" box. Click "OK" and then restart the service.</p><p>If you get an error <em>the specified service does not exist as an installed service</em> you should run:</p><pre><code>tomcat6w //ES//servicename
</code></pre><p>where <strong><em>servicename</em></strong> is the name of the server as viewed in services.msc</p><p>Source: orx's comment on <a href="http://www.jroller.com/agileanswers/entry/preventing_java_s_java_lang" rel="nofollow noreferrer">Eric's Agile Answers</a>.</p></body></html>

===ID===
584cbfb33e2ca508e5f071f2
===QUESTION===
How to download and save a file from Internet using Java?
There is an online file (such as  http://www.example.com/information.asp ) I need to grab and save to a directory. I know there are several methods for grabbing and reading online files (URLs) line-by-line, but is there a way to just download and save the file using Java? 
===LINK===
http://stackoverflow.com/questions/921262/how-to-download-and-save-a-file-from-internet-using-java
===KEYWORDS===
file asp http methods grabbing 
===ANSWER===
420
<html><body><p>Give a try to <a href="http://en.wikipedia.org/wiki/New_I/O" rel="nofollow noreferrer">Java NIO</a>:</p><pre><code>URL website = new URL("http://www.website.com/information.asp");
ReadableByteChannel rbc = Channels.newChannel(website.openStream());
FileOutputStream fos = new FileOutputStream("information.html");
fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
</code></pre><p>Using <code>transferFrom()</code> is <strong>potentially</strong> much more efficient than a simple loop that reads from the source channel and writes to this channel. Many operating systems can transfer bytes directly from the source channel into the filesystem cache without actually copying them.</p><p>Check more about it <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/channels/FileChannel.html" rel="nofollow noreferrer">here</a>.</p><p><strong>Note</strong>: The third parameter in transferFrom is the maximum number of bytes to transfer.  <code>Integer.MAX_VALUE</code> will transfer at most 2^31 bytes, <code>Long.MAX_VALUE</code> will allow at most 2^63 bytes (larger than any file in existence). </p></body></html>

===ID===
584cbfb43e2ca508e5f071f3
===QUESTION===
Setting the default Java character encoding?
How do I properly set the default character encoding used by the JVM (1.5.x) programmatically? I have read that  -Dfile.encoding=whatever  used to be the way to go for older JVMs... I don't have that luxury for reasons I wont get into. I have tried: And the property gets set, but it doesn't seem to cause the final getBytes call below to use UTF8: 
===LINK===
http://stackoverflow.com/questions/361975/setting-the-default-java-character-encoding
===KEYWORDS===
wont property don programmatically utf8 
===ANSWER===
204
<html><body><p>Unfortunately, the <code>file.encoding</code> property has to be specified as the JVM starts up; by the time your main method is entered, the character encoding used by <code>String.getBytes()</code> and the default constructors of <code>InputStreamReader</code> and <code>OutputStreamWriter</code> has been permanently cached.</p><p>As <a href="http://stackoverflow.com/a/623036/3474">Edward Grech points out,</a> in a special case like this, the environment variable <code>JAVA_TOOL_OPTIONS</code> <em>can</em> be used to specify this property, but it's normally done like this:</p><pre><code>java -Dfile.encoding=UTF-8 … com.x.Main
</code></pre><p><code>Charset.defaultCharset()</code> will reflect changes to the <code>file.encoding</code> property, but most of the code in the core Java libraries that need to determine the default character encoding do not use this mechanism.</p><p>When you are encoding or decoding, you can query the <code>file.encoding</code> property or <code>Charset.defaultCharset()</code> to find the current default encoding, and use the appropriate method or constructor overload to specify it.</p></body></html>

===ID===
584cbfb43e2ca508e5f071f4
===QUESTION===
Creating a custom button in Java with JButton
I am trying to create a button that has a custom shape (hexagon), but otherwise acts like a normal JButton would (that is, works with an ActionListener). I have created a class that extends AbstractButton, but it doesn't seem to be sending events to the ActionListener when I click it. If I change the class to extend JButton it works perfectly, but it screws up the way the button is displayed. I'm assuming that there is a method that I need to override to get it to fire events, but I can't figure out what it is. 
===LINK===
http://stackoverflow.com/questions/5751311/creating-a-custom-button-in-java-with-jbutton
===KEYWORDS===
works java creating figure created 
===ANSWER===
14
<html><body><p>You will have to extend <code>JButton</code> class not <code>AbstractButton</code>. Try the following things and you will get idea.</p><p>The first move is to subclass <code>JButton</code>.</p><p>Then, in your subclass, start by redefining the <code>paintComponent(Graphics)</code> method. If you want any changes.</p><p>Then, override <code>paintBorder(Graphics)</code> to give it a shape of hexagon.</p></body></html>

===ID===
584cbfb53e2ca508e5f071f5
===QUESTION===
How to generate a random alpha-numeric string?
I've been looking for a  simple  Java algorithm to generate a pseudo-random alpha-numeric string.  In my situation it would be used as a unique session/key identifier that would "likely" be unique over 500K+ generation (my needs don't really require anything much more sophisticated).  Ideally, I would be able to specify a length depending on my uniqueness needs. For example, a generated string of length 12 might look something like  "AEYGF7K0DM1X" .   
===LINK===
http://stackoverflow.com/questions/41107/how-to-generate-a-random-alpha-numeric-string
===KEYWORDS===
don ideally require pseudo sophisticated 
===ANSWER===
1041
<html><body><p>Here is code for secure, easy, but a little bit more expensive session identifiers.</p><pre><code>import java.security.SecureRandom;
import java.math.BigInteger;

public final class SessionIdentifierGenerator {
  private SecureRandom random = new SecureRandom();

  public String nextSessionId() {
    return new BigInteger(130, random).toString(32);
  }
}
</code></pre><p>This works by choosing 130 bits from a cryptographically secure random bit generator, and encoding them in base-32. 128 bits is considered to be cryptographically <em>strong,</em> but each digit in a base 32 number can encode 5 bits, so 128 is rounded up to the next multiple of 5. This encoding is compact and efficient, with 5 random bits per character. Compare this to a random UUID, which only has 3.4 bits per character in standard layout, and only 122 random bits in total.</p><p>If you allow session identifiers to be easily guessable (too short, flawed random number generator, etc.), attackers can hijack other's sessions. Note that <code>SecureRandom</code> objects are expensive to initialize, so you'll want to keep one around and reuse it.</p><p>Here is alternative code for cheap, insecure random alpha-numeric strings. You can tweak the "symbols" if you want to use more characters.</p><pre><code>public class RandomString {

  private static final char[] symbols;

  static {
    StringBuilder tmp = new StringBuilder();
    for (char ch = '0'; ch &lt;= '9'; ++ch)
      tmp.append(ch);
    for (char ch = 'a'; ch &lt;= 'z'; ++ch)
      tmp.append(ch);
    symbols = tmp.toString().toCharArray();
  }   

  private final Random random = new Random();

  private final char[] buf;

  public RandomString(int length) {
    if (length &lt; 1)
      throw new IllegalArgumentException("length &lt; 1: " + length);
    buf = new char[length];
  }

  public String nextString() {
    for (int idx = 0; idx &lt; buf.length; ++idx) 
      buf[idx] = symbols[random.nextInt(symbols.length)];
    return new String(buf);
  }
}
</code></pre></body></html>

===ID===
584cbfb53e2ca508e5f071f6
===QUESTION===
PreparedStatement IN clause alternatives?
What are the best workarounds for using a SQL  IN  clause with instances of  java.sql.PreparedStatement , which is not supported for multiple values due to SQL injection attack security issues: One  ?  placeholder represents one value, rather than a list of values. Consider the following SQL statement: Using  preparedStatement.setString( 1, "'A', 'B', 'C'" );  is essentially a non-working attempt at a workaround of the reasons for using  ?  in the first place.   What workarounds are available? 
===LINK===
http://stackoverflow.com/questions/178479/preparedstatement-in-clause-alternatives
===KEYWORDS===
essentially preparedstatement java workaround reasons 
===ANSWER===
124
<html><body><p>An analysis of the various options available, and the pros and cons of each is available <a href="http://www.javaranch.com/journal/200510/Journal200510.jsp#a2" rel="nofollow noreferrer">here</a>.</p><p>The suggested options are:</p><p>None of these options are super great, though.</p><p>Duplicate questions have been answered in these places with equally sane alternatives, still none of them super great:</p><p>The Right Answer, if you are using JDBC4 and a server that supports <code>x = ANY(y)</code>, is to use <code>PreparedStatement.setArray</code> as described here:</p><p>There doesn't seem to be any way to make <code>setArray</code> work with IN-lists, though.</p></body></html>

===ID===
584cbfb63e2ca508e5f071f7
===QUESTION===
How to read XML using XPath in Java
I want to read XML data using XPath in Java, so for the information I have gathered I am not able to parse XML according to my requirement. here is what I want to do: Get XML file from online via its URL, then use XPath to parse it, I want to create two methods in it. One is in which I enter a specific node attribute id, and I get all the child nodes as result, and second is suppose I just want to get a specific child node value only In above example I want to read all the elements if I search via @name and also one function in which I just want the url from @name 'Javascript' only return one node element. I hope I cleared my question :) Thanks. Kai 
===LINK===
http://stackoverflow.com/questions/2811001/how-to-read-xml-using-xpath-in-java
===KEYWORDS===
function requirement methods parse result 
===ANSWER===
276
<html><body><p>You need something along the lines of this:</p><pre><code>DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
DocumentBuilder builder = factory.newDocumentBuilder();
Document doc = builder.parse(&lt;uri_as_string&gt;);
XPathFactory xPathfactory = XPathFactory.newInstance();
XPath xpath = xPathfactory.newXPath();
XPathExpression expr = xpath.compile(&lt;xpath_expression&gt;);
</code></pre><p>Then you call <code>expr.evaluate()</code> passing in the document defined in that code and the return type you are expecting, and cast the result to the object type of the result.</p><p>If you need help with a specific XPath expressions, you should probably ask it as separate questions (unless that was your question in the first place here - I understood your question to be how to use the API in Java).</p><p>Edit: (Response to comment): This XPath expression will get you the text of the first URL element under PowerBuilder:</p><pre><code>/howto/topic[@name='PowerBuilder']/url/text()
</code></pre><p>This will get you the second:</p><pre><code>/howto/topic[@name='PowerBuilder']/url[2]/text()
</code></pre><p>You get that with this code:</p><pre><code>expr.evaluate(doc, XPathConstants.STRING);
</code></pre><p>If you don't know how many URLs are in a given node, then you should rather do something like this:</p><pre><code>XPathExpression expr = xpath.compile("/howto/topic[@name='PowerBuilder']/url");
NodeList nl = (NodeList) expr.evaluate(doc, XPathConstants.NODESET);
</code></pre><p>And then loop over the NodeList.</p></body></html>

===ID===
584cbfb63e2ca508e5f071f8
===QUESTION===
How to convert a byte array to a hex string in Java?
I have a byte array filled with hex numbers and printing it the easy way is pretty pointless because there are many unprintable elements. What I need is the exact hexcode in the form of:  3a5f771c 
===LINK===
http://stackoverflow.com/questions/9655181/how-to-convert-a-byte-array-to-a-hex-string-in-java
===KEYWORDS===
convert printing java form easy 
===ANSWER===
546
<html><body><p>From the discussion <a href="http://stackoverflow.com/q/332079/1284661">here</a>, and especially <a href="http://stackoverflow.com/a/2197650/1284661">this</a> answer, this is the function I currently use:</p><pre><code>final protected static char[] hexArray = "0123456789ABCDEF".toCharArray();
public static String bytesToHex(byte[] bytes) {
    char[] hexChars = new char[bytes.length * 2];
    for ( int j = 0; j &lt; bytes.length; j++ ) {
        int v = bytes[j] &amp; 0xFF;
        hexChars[j * 2] = hexArray[v &gt;&gt;&gt; 4];
        hexChars[j * 2 + 1] = hexArray[v &amp; 0x0F];
    }
    return new String(hexChars);
}
</code></pre><p>My own tiny benchmarks (a million bytes a thousand times, 256 bytes 10 million times) showed it to be much faster than any other alternative, about half the time on long arrays.  Compared to the answer I took it from, switching to bitwise ops --- as suggested in the discussion --- cut about 20% off of the time for long arrays. (Edit: When I say it's faster than the alternatives, I mean the alternative code offered in the discussions. Performance is equivalent to Commons Codec, which uses very similar code.)</p></body></html>

===ID===
584cbfb73e2ca508e5f071f9
===QUESTION===
How to call a SOAP web service on Android
I am having a lot of trouble finding good information on how to call a standard SOAP/WSDL web service with Android. All I've been able to find are either very convoluted documents and references to "kSoap2" and then some bit about parsing it all manually with  SAX . OK, that's fine, but it's 2008, so I figured there should be some good library for calling standard web services. The web service is just basically one created in  NetBeans . I would like to have IDE support for generating the plumbing classes. I just need the easiest/most-elegant way to contact a  WSDL  based web service from an Android-based phone. 
===LINK===
http://stackoverflow.com/questions/297586/how-to-call-a-soap-web-service-on-android
===KEYWORDS===
generating figured bit netbeans manually 
===ANSWER===
205
<html><body><p>Android does not provide any sort of SOAP library. You can either write your own, or use something like <a href="http://ksoap2.sourceforge.net/" rel="nofollow noreferrer">kSOAP 2</a>. As you note, others have been able to compile and use kSOAP2 in their own projects, but I haven't had to.</p><p>Google has shown, to date, little interest in adding a SOAP library to Android. My suspicion for this is that they'd rather support the current trends in Web Services toward REST-based services, and using JSON as a data encapsulation format. Or, using XMPP for messaging. But that is just conjecture.</p><p>XML-based web services are a slightly non-trivial task on Android at this time. Not knowing NetBeans, I can't speak to the tools available there, but I agree that a better library should be available. It is possible that the XmlPullParser will save you from using SAX, but I don't know much about that.</p></body></html>

===ID===
584cbfb83e2ca508e5f071fa
===QUESTION===
How can I test if an array contains a certain value?
I have a  String[]  with values like so: Given  String s , is there a good way of testing whether  VALUES  contains  s ? 
===LINK===
http://stackoverflow.com/questions/1128723/how-can-i-test-if-an-array-contains-a-certain-value
===KEYWORDS===
good string testing values test 
===ANSWER===
1783
<html><body><pre><code>Arrays.asList(yourArray).contains(yourValue)
</code></pre><p>Warning: this doesn't work for arrays of primitives (see the comments).</p><p>You can now use a <code>Stream</code> to check whether an array of <code>int</code>, <code>double</code> or <code>long</code> contains a value (by respectively using a <code>IntStream</code>, <code>DoubleStream</code> or <code>LongStream</code>)</p><pre><code>int[] a = {1,2,3,4};
boolean contains = IntStream.of(a).anyMatch(x -&gt; x == 4);
</code></pre></body></html>

===ID===
584cbfb83e2ca508e5f071fb
===QUESTION===
Remove HTML tags from a String
Is there a good way to remove HTML from a Java string?  A simple regex like  will work, but things like  &amp;  wont be converted correctly and non-HTML between the two angle brackets will be removed (i.e. the  .*?  in the regex will disappear).   
===LINK===
http://stackoverflow.com/questions/240546/remove-html-tags-from-a-string
===KEYWORDS===
wont regex good string &amp 
===ANSWER===
384
<html><body><p>Use a HTML parser instead of regex. This is dead simple with <a href="http://jsoup.org" rel="nofollow noreferrer">Jsoup</a>.</p><pre><code>public static String html2text(String html) {
    return Jsoup.parse(html).text();
}
</code></pre><p>Jsoup also <a href="https://jsoup.org/cookbook/cleaning-html/whitelist-sanitizer" rel="nofollow noreferrer">supports</a> removing HTML tags against a customizable whitelist, which is very useful if you want to allow only e.g. <code>&lt;b&gt;</code>, <code>&lt;i&gt;</code> and <code>&lt;u&gt;</code>.</p></body></html>

===ID===
584cbfb93e2ca508e5f071fc
===QUESTION===
How can I increment a date by one day in Java?
I am getting date in the format as yyyy-mm-dd. I need to increment this by one day. How can I do this? 
===LINK===
http://stackoverflow.com/questions/428918/how-can-i-increment-a-date-by-one-day-in-java
===KEYWORDS===
java format yyyy increment date 
===ANSWER===
476
<html><body><p>Something like this should do the trick:</p><pre><code>String dt = "2008-01-01";  // Start date
SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
Calendar c = Calendar.getInstance();
c.setTime(sdf.parse(dt));
c.add(Calendar.DATE, 1);  // number of days to add
dt = sdf.format(c.getTime());  // dt is now the new date
</code></pre></body></html>

===ID===
584cbfb93e2ca508e5f071fd
===QUESTION===
What is the Java string pool and how is “s” different from new String(“s”)?
What is meant by  String Pool ? And what is the difference between the following declarations: Is there any difference between the storing of these two strings by the JVM? 
===LINK===
http://stackoverflow.com/questions/2486191/what-is-the-java-string-pool-and-how-is-s-different-from-new-strings
===KEYWORDS===
meant storing string declarations jvm 
===ANSWER===
111
<html><body><p>The string pool is the JVM's particular implementation of the concept of <a href="http://en.wikipedia.org/wiki/String_interning" rel="nofollow noreferrer">string interning</a>:</p><p>In computer science, string interning
  is a method of storing only one copy
  of each distinct string value, which
  must be immutable. Interning strings
  makes some string processing tasks
  more time- or space-efficient at the
  cost of requiring more time when the
  string is created or interned. The
  distinct values are stored in a string
  intern pool.</p><p>Basically, a string intern pool allows a runtime to save memory by preserving immutable strings in a pool so that areas of the application can reuse instances of common strings instead of creating multiple instances of it.</p><p>As an interesting side note, string interning is an example of the <a href="http://en.wikipedia.org/wiki/Flyweight_pattern" rel="nofollow noreferrer">flyweight design pattern</a>:</p><p>Flyweight is a software design
  pattern. A flyweight is an object that
  minimizes memory use by sharing as
  much data as possible with other
  similar objects; it is a way to use
  objects in large numbers when a simple
  repeated representation would use an
  unacceptable amount of memory.</p></body></html>

===ID===
584cbfba3e2ca508e5f071fe
===QUESTION===
Why are static variables considered evil?
I am a Java programmer who is new to the corporate world. Recently I've developed an application using  Groovy  and Java. All through the code I've used quite a good number of statics. I was asked by the senior technical lot to cut down on the number of statics used. I've googled about the same, and I find that many programmers are fairly against using static variables. I find static variables more convenient to use. And I presume that they are efficient too (please correct me if I am wrong), because if I had to make 10,000 calls to a function within a class, I would be glad to make the method static and use a straightforward  class.methodCall()  on it instead of cluttering the memory with 10,000 instances of the class, right? Moreover statics reduce the inter-dependencies on the other parts of the code. They can act as perfect state holders. Adding to this I find that statics are widely implemented in some languages like Smalltalk and  Scala . So why is this oppression for statics prevalent among programmers (especially in the world of Java)? PS: please do correct me if my assumptions about statics are wrong. 
===LINK===
http://stackoverflow.com/questions/7026507/why-are-static-variables-considered-evil
===KEYWORDS===
code number assumptions find smalltalk 
===ANSWER===
493
<html><body><p>Static variables represent global state. That's hard to reason about and hard to test: if I create a new instance of an object, I can reason about its new state within tests. If I use code which is using static variables, it could be in any state - and anything could be modifying it.</p><p>I could go on for quite a while, but the bigger concept to think about is that the tighter the scope of something, the easier it is to reason about. We're good at thinking about small things, but it's hard to reason about the state of a million line system if there's no modularity. This applies to all sorts of things, by the way - not just static variables.</p></body></html>

===ID===
584cbfbb3e2ca508e5f071ff
===QUESTION===
How are Anonymous (inner) classes used in Java?
What is the use of anonymous classes in Java? Can we say that usage of anonymous class is one of the advantages of Java? 
===LINK===
http://stackoverflow.com/questions/355167/how-are-anonymous-inner-classes-used-in-java
===KEYWORDS===
usage advantages classes java anonymous 
===ANSWER===
263
<html><body><p>By an "anonymous class", I take it you mean <a href="http://docs.oracle.com/javase/tutorial/java/javaOO/innerclasses.html" rel="nofollow noreferrer">anonymous inner class</a>.</p><p>An anonymous inner class can come useful when making an instance of an object with certain "extras" such as overloading methods, without having to actually subclass a class.</p><p>I tend to use it as a shortcut for attaching an event listener:</p><pre><code>button.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        // do something
    }
});
</code></pre><p>Using this method makes coding a little bit quicker, as I don't need to make an extra class that implements <code>ActionListener</code> -- I can just instantiate an anonymous inner class without actually making a separate class.</p><p>I only use this technique for "quick and dirty" tasks where making an entire class feels unnecessary. Having multiple anonymous inner classes that do exactly the same thing should be refactored to an actual class, be it an inner class or a separate class.</p></body></html>

===ID===
584cbfbb3e2ca508e5f07200
===QUESTION===
Can you find all classes in a package using reflection?
Is it possible to find all classes or interfaces in a given package? (Quickly looking at e.g.  Package , it would seem like no.) 
===LINK===
http://stackoverflow.com/questions/520328/can-you-find-all-classes-in-a-package-using-reflection
===KEYWORDS===
reflection package interfaces quickly classes 
===ANSWER===
248
<html><body><p>Due to the dynamic nature of class loaders, this is not possible. Class loaders are not required to tell the VM which classes it can provide, instead they are just handed requests for classes, and have to return a class or throw an exception.</p><p>However, if you write your own class loaders, or examine the classpaths and it's jars, it's possible to find this information. This will be via filesystem operations though, and not reflection. There might even be libraries that can help you do this.</p><p>If there are classes that get generated, or delivered remotely, you will not be able to discover those classes.</p><p>The normal method is instead to somewhere register the classes you need access to in a file, or reference them in a different class. Or just use convention when it comes to naming.</p><p>Addendum: <a href="https://github.com/ronmamo/reflections" rel="nofollow noreferrer">The Reflections Library</a> will allow you to look up classes in the current classpath. It can be used to get all classes in a package:</p><pre><code> Reflections reflections = new Reflections("my.project.prefix");

 Set&lt;Class&lt;? extends Object&gt;&gt; allClasses = 
     reflections.getSubTypesOf(Object.class);
</code></pre></body></html>

===ID===
584cbfbc3e2ca508e5f07201
===QUESTION===
Get generic type of class at runtime
How can I achieve this? Everything I have tried so far always returns type  Object  rather than the specific type used. 
===LINK===
http://stackoverflow.com/questions/3403909/get-generic-type-of-class-at-runtime
===KEYWORDS===
runtime class achieve 
===ANSWER===
170
<html><body><p>As others mentioned, it's only possible via reflection in certain circumstances.</p><p>If you really need the type, this is the usual (type-safe) workaround pattern:</p><pre><code>public class GenericClass&lt;T&gt; {

     private final Class&lt;T&gt; type;

     public GenericClass(Class&lt;T&gt; type) {
          this.type = type;
     }

     public Class&lt;T&gt; getMyType() {
         return this.type;
     }
}
</code></pre></body></html>

===ID===
584cbfbc3e2ca508e5f07202
===QUESTION===
Remove Top-Level Container on Runtime
Unfortunately, it looks like this recently closed  question  was not well understood. Here is the typical output: I'll try asking this question again: How can I k*i*l*l on Runtime the first-opened top-Level  Container , and help with closing for me one of Swing NightMares? 
===LINK===
http://stackoverflow.com/questions/6309407/remove-top-level-container-on-runtime
===KEYWORDS===
understood closing runtime question 
===ANSWER===
19
<html><body><p>Invoking <a href="http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#dispose%28%29" rel="nofollow noreferrer"><code>dispose()</code></a> allows the host platform to reclaim memory consumed by the heavyweight peer, but it can't do so until <em>after</em> the <code>WINDOW_CLOSING</code> event is processed on the <code>EventQueue</code>. Even then, <code>gc()</code> is a suggestion.</p><p>Addendum: Another way to see the nightmare is via a profiler. Running the example below with <code>jvisualvm</code>, one can see that periodic collection never <em>quite</em> returns to baseline. I've exaggerated the vertical axis by starting with an artificially small heap. Additional examples are shown <a href="http://stackoverflow.com/questions/5916028/how-do-i-get-appcontext-to-release-awt-components-so-they-can-be-garbage-collecte/5918785#5918785">here</a>. When memory is very limited, I've used two approaches:</p><p>Emergent: Loop from the command line, starting a new VM each time.</p><p>Urgent: Eliminate the heavyweight component entirely, running headless and composing in a <code>BufferedImage</code> using 2D graphics and lightweight components only.</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/KBGJq.png"/></p><pre><code>import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.WindowEvent;
import javax.swing.JDialog;

/** @see http://stackoverflow.com/questions/6309407 */
public class DialogClose extends JDialog {

    public DialogClose(int i) {
        this.setTitle("Dialog " + String.valueOf(i));
        this.setPreferredSize(new Dimension(320, 200));
    }

    private void display() {
        this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        passSomeTime();
        this.setVisible(false);
        this.dispatchEvent(new WindowEvent(
            this, WindowEvent.WINDOW_CLOSING));
        this.dispose();
        passSomeTime();
    }

    private void passSomeTime() {
        try {
            Thread.sleep(100);
        } catch (InterruptedException ie) {
            ie.printStackTrace(System.err);
        }
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                int count = 0;
                while (true) {
                    new DialogClose(count++).display();
                }
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbfbd3e2ca508e5f07203
===QUESTION===
Java: when to use static methods
I am wondering when to use static methods? Say if I have a class with a few getters and setters, a method or two, and I want those methods only to be invokable on an instance object of the class. Does this mean I should use a static method? e.g or (is this the static way?) I'm rather confused! 
===LINK===
http://stackoverflow.com/questions/2671496/java-when-to-use-static-methods
===KEYWORDS===
java methods getters confused class 
===ANSWER===
777
<html><body><p>One rule-of-thumb: ask yourself "does it make sense to call this method, even if no Obj has been constructed yet?"  If so, it should definitely be static.</p><p>So in a class <code>Car</code> you might have a method <code>double convertMpgToKpl(double mpg)</code> which would be static, because one might want to know what 35mpg converts to, even if nobody has ever built a Car.  But <code>void setMileage(double mpg)</code> (which sets the efficiency of one particular Car) can't be static since it's inconceivable to call the method before any Car has been constructed.</p><p>(Btw, the converse isn't always true: you might sometimes have a method which involves two <code>Car</code> objects, and still want it to be static.  E.g. <code>Car theMoreEfficientOf( Car c1, Car c2 )</code>.  Although this could be converted to a non-static version, some would argue that since there isn't a "privileged" choice of which Car is more important, you shouldn't force a caller to choose one Car as the object you'll invoke the method on.  This situation accounts for a fairly small fraction of all static methods, though.)</p></body></html>

===ID===
584cbfbd3e2ca508e5f07204
===QUESTION===
How should I load Jars dynamically at runtime?
Why is it so hard to do this in Java? If you want to have any kind of module system you need to be able to load jars dynamically. I'm told there's a way of doing it by writing your own  ClassLoader , but that's a lot of work for something that should (in my mind at least) be as easy as calling a method with a jar file as its argument. Any suggestions for simple code that does this? 
===LINK===
http://stackoverflow.com/questions/60764/how-should-i-load-jars-dynamically-at-runtime
===KEYWORDS===
kind work java easy runtime 
===ANSWER===
128
<html><body><p>The reason it's hard is security.  Classloaders are meant to be immutable; you shouldn't be able to willy-nilly add classes to it at runtime.  I'm actually very surprised that works with the system classloader.  Here's how you do it making your own child classloader:</p><pre><code>URLClassLoader child = new URLClassLoader (myJar.toURL(), this.getClass().getClassLoader());
Class classToLoad = Class.forName ("com.MyClass", true, child);
Method method = classToLoad.getDeclaredMethod ("myMethod");
Object instance = classToLoad.newInstance ();
Object result = method.invoke (instance);
</code></pre><p>Painful, but there it is.</p></body></html>

===ID===
584cbfbe3e2ca508e5f07205
===QUESTION===
How to deal with “java.lang.OutOfMemoryError: Java heap space” error (64MB heap size)
I am writing a client-side  Swing  application (graphical font designer) on  Java 5 . Recently, I am running into  java.lang.OutOfMemoryError: Java heap space  error because I am not being conservative on memory usage. The user can open unlimited number of files, and the program keeps the opened objects in the memory. After a quick research I found  Ergonomics in the 5.0 Java Virtual Machine  and others saying on Windows machine the JVM defaults max heap size as  64MB . Given this situation, how should I deal with this constraint? I could increase the  max heap size  using  command line  option to java, but that would require figuring out available RAM and writing some launching program or script. Besides, increasing to some finite max does not ultimately get rid of the issue. I could rewrite some of my code to persist objects to file system frequently (using database is the same thing) to free up the memory. It could work, but it's probably a lot work too. If you could point me to details of above ideas or some alternatives like  automatic virtual memory, extending heap size dynamically , that will be great. 
===LINK===
http://stackoverflow.com/questions/37335/how-to-deal-with-java-lang-outofmemoryerror-java-heap-space-error-64mb-heap
===KEYWORDS===
point code deal rewrite ram 
===ANSWER===
141
<html><body><p>Ultimately you always have a finite max of heap to use no matter what platform you are running on. In Windows 32 bit this is around 2gb (not specifically heap but total amount of memory per process). It just happens that Java happens to make the default smaller (presumably so that the programmer can't create programs that have runaway memory allocation without running into this problem and having to examine exactly what they are doing).</p><p>So this given there are several approaches you could take to either determine what amount of memory you need or to reduce the amount of memory you are using. One common mistake with garbage collected languages such as Java or C# is to keep around references to objects that you no longer are using, or allocating many objects when you could reuse them instead. As long as objects have a reference to them they will continue to use heap space as the garbage collector will not delete them.</p><p>In this case you can use a Java memory profiler to determine what methods in your program are allocating large number of objects and then determine if there is a way to make sure they are no longer referenced, or to not allocate them in the first place. One option which I have used in the past is "JMP" <a href="http://www.khelekore.org/jmp/" rel="nofollow noreferrer">http://www.khelekore.org/jmp/</a>.</p><p>If you determine that you are allocating these objects for a reason and you need to keep around references (depending on what you are doing this might be the case), you will just need to increase the max heap size when you start the program. However, once you do the memory profiling and understand how your objects are getting allocated you should have a better idea about how much memory you need. </p><p>In general if you can't guarantee that your program will run in some finite amount of memory (perhaps depending on input size) you will always run into this problem. Only after exhausting all of this will you need to look into caching objects out to disk etc. At this point you should have a very good reason to say "I need Xgb of memory" for something and you can't work around it by improving your algorithms or memory allocation patterns. Generally this will only usually be the case for algorithms operating on large datasets (like a database or some scientific analysis program) and then techniques like caching and memory mapped IO become useful.</p></body></html>

===ID===
584cbfbe3e2ca508e5f07206
===QUESTION===
Migrating from JSF 1.2 to JSF 2.0
I am working with a rather large app written in  JSF 1.2 .
JSF 1.2 is around 6 years old now. I need to upgrade to JSF 2.0. How painful will this be? I noticed that some attributes in custom tags have been changed etc.  
===LINK===
http://stackoverflow.com/questions/4441713/migrating-from-jsf-1-2-to-jsf-2-0
===KEYWORDS===
upgrade working changed noticed attributes 
===ANSWER===
216
<html><body><p>Painfulness of upgrading JSF 1.2 to 2.0 depends on the view technology which you are currently using and which you want to use.</p><p>Regardless of the view technology switch, <em>at least</em> the following steps should be done:</p><p>Update root declaration of <code>faces-config.xml</code> to comply JSF 2.0 spec.</p><pre class="lang-xml prettyprint-override"><code>&lt;faces-config
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd"
    version="2.0"&gt;
</code></pre><p>Ensure that root declaration of <code>web.xml</code> already complies <em>at least</em> Servlet 2.5. JSF 2.0 won't work on 2.4 or lower (<a href="http://stackoverflow.com/questions/5998447/running-jsf-2-0-on-servlet-2-4-container">although it's hackable</a>).</p><pre class="lang-xml prettyprint-override"><code>&lt;web-app 
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
    id="YourWebappID"
    version="2.5"&gt;
</code></pre><p>If you're using <strong>JSP 2.x</strong> and want to <strong>keep</strong> using it, then you basically don't need to change anything else. </p><p>If you're already using a suffix <code>url-pattern</code> for the <code>FacesServlet</code>, like <code>*.jsf</code>, then it's good to know that the <code>FacesServlet</code> will first scan for <code>*.xhtml</code> file and if it is not present, then scan for <code>*.jsp</code> file. This provides you room to gradually convert from JSP to Facelets behind the scenes without changing the URL's. </p><p>But if you're using a prefix <code>url-pattern</code>, like <code>/faces/*</code> and you want to gradually upgrade from JSP to Facelets, then you really have to change it to <code>*.jsf</code> and possibly also all links in the existing JSP pages.</p><p>You only need to keep in mind that the new JSF 2.0 provided implicit navigation doesn't scan for the presence of the file, it will go to <code>outcome.xhtml</code> anyway. So if you want to come from or go to <code>*.jsp</code>, then you still need to include it in the viewid the JSF 1.x way.</p><p>If you're using <strong>Facelets 1.x</strong> as view technology and want to use the JSF 2.0 supplied <strong>Facelets 2.0</strong>, then you need to do the following additional steps:</p><p>Update root declaration of existing Facelet taglib XML's to comply Facelets 2.0.</p><pre class="lang-xml prettyprint-override"><code>&lt;facelet-taglib 
    xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd"
    version="2.0"&gt;
</code></pre><p>That should basically be it.</p><p>If you're using <strong>JSP 2.x</strong> as view technology and you want to upgrade to <strong>Facelets 2.0</strong> immediately, then you need to do a lot of changes before the site can go live. You're basically changing the view technology here. </p><p>On every master page, you need to change the following basic JSP template..</p><pre class="lang-xml prettyprint-override"><code>&lt;%@page contentType="text/html" pageEncoding="UTF-8"%&gt;
&lt;%@taglib prefix="f" uri="http://java.sun.com/jsf/core"%&gt;
&lt;%@taglib prefix="h" uri="http://java.sun.com/jsf/html"%&gt;
&lt;!DOCTYPE html&gt;
&lt;f:view&gt;
    &lt;html lang="en"&gt;
        &lt;head&gt;
            &lt;title&gt;JSP page&lt;/title&gt;
        &lt;/head&gt;
        &lt;body&gt;
            &lt;h:outputText value="JSF components here." /&gt;
        &lt;/body&gt;
    &lt;/html&gt;
&lt;/f:view&gt;
</code></pre><p>..to the following basic Facelets template:</p><pre class="lang-xml prettyprint-override"><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"&gt;
    &lt;h:head&gt;
        &lt;title&gt;XHTML page&lt;/title&gt;
    &lt;/h:head&gt;
    &lt;h:body&gt;
        &lt;h:outputText value="JSF components here." /&gt;
    &lt;/h:body&gt;  
&lt;/html&gt;
</code></pre><p>If your existing JSP pages are well designed, you should not have any line of <em>scriptlet</em> code and you should also have only the <code>&lt;jsp:include&gt;</code> as the sole JSP-specific tag. Any of those needs to be changed from:</p><pre class="lang-xml prettyprint-override"><code>&lt;jsp:include page="include.jsp" /&gt;
</code></pre><p>to</p><pre class="lang-xml prettyprint-override"><code>&lt;ui:include src="include.xhtml" /&gt;
</code></pre><p>The basic JSP include page template of..</p><pre class="lang-xml prettyprint-override"><code>&lt;%@page contentType="text/html" pageEncoding="UTF-8"%&gt;
&lt;%@taglib prefix="f" uri="http://java.sun.com/jsf/core"%&gt;
&lt;%@taglib prefix="h" uri="http://java.sun.com/jsf/html"%&gt;
&lt;f:subview id="include"&gt;
    &lt;h:outputText value="JSF components here." /&gt;
&lt;/f:subview&gt;
</code></pre><p>..should be changed to the following basic Facelets include page template:</p><pre class="lang-xml prettyprint-override"><code>&lt;ui:composition
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:ui="http://java.sun.com/jsf/facelets"&gt;
    &lt;h:outputText value="JSF components here." /&gt;
&lt;/ui:composition&gt;
</code></pre><p>You need to change the JSP TLD files to Facelets TLD files as described in this <a href="http://javaserverfaces.java.net/nonav/rlnotes/2.0.0/migration.html">Mojarra Migration Guide</a>.</p><p>Regardless of the migration approach, you can gradually <a href="http://blogs.oracle.com/rlubke/entry/faces_config_xml_we_don">eliminate</a> the <code>faces-config.xml</code> by the new JSF 2.0 annotations. Any <code>&lt;managed-bean&gt;</code> can be annotated by <a href="http://download.oracle.com/javaee/6/api/javax/faces/bean/ManagedBean.html"><code>@ManagedBean</code></a>:</p><pre><code>@ManagedBean(name="managedBeanName")
@RequestScoped
public class SomeBean {}
</code></pre><p>Next to <a href="http://download.oracle.com/javaee/6/api/javax/faces/bean/RequestScoped.html"><code>@RequestScoped</code></a>, there are also <a href="http://download.oracle.com/javaee/6/api/javax/faces/bean/ViewScoped.html"><code>@ViewScoped</code></a>, <a href="http://download.oracle.com/javaee/6/api/javax/faces/bean/SessionScoped.html"><code>@SessionScoped</code></a> and <a href="http://download.oracle.com/javaee/6/api/javax/faces/bean/ApplicationScoped.html"><code>@ApplicationScoped</code></a> available. If you omit the <code>name</code> attribute of the <code>@ManagedBean</code>, then it will default to classname with the 1st char lowercased. </p><pre><code>@ManagedBean
@RequestScoped
public class SomeBean {}
</code></pre><p>In this particular example, it will be <code>#{someBean}</code>.</p><p>Any <code>&lt;managed-property&gt;</code> can be annotated using <a href="http://download.oracle.com/javaee/6/api/javax/faces/bean/ManagedProperty.html"><code>@ManagedProperty</code></a>:</p><pre><code>@ManagedProperty("#{otherBean}")
private OtherBean otherBean;
</code></pre><p>Any <code>&lt;validator&gt;</code> can be annotated using <a href="http://download.oracle.com/javaee/6/api/javax/faces/validator/FacesValidator.html"><code>@FacesValidator</code></a>:</p><pre><code>@FacesValidator("someValidator")
public class SomeValidator implements Validator {}
</code></pre><p>Any <code>&lt;converter&gt;</code> can be annotated using <a href="http://download.oracle.com/javaee/6/api/javax/faces/convert/FacesConverter.html"><code>@FacesConverter</code></a></p><pre><code>@FacesConverter("someConverter")
public class SomeConverter implements Converter {}
</code></pre><p>Any <code>&lt;renderer&gt;</code> can be annotated using <a href="http://download.oracle.com/javaee/6/api/javax/faces/render/FacesRenderer.html"><code>@FacesRenderer</code></a></p><pre><code>@FacesRenderer(componentFamily="someComponentFamily", rendererType="someRendererType")
public class SomeRenderer extends Renderer {}
</code></pre><p>Any <code>&lt;navigation-case&gt;</code> which uses the filename of the XHTML page as both <code>&lt;from-outcome&gt;</code> and <code>&lt;to-view-id&gt;</code> can be removed since this will be <a href="http://andyschwartz.wordpress.com/2009/07/31/whats-new-in-jsf-2/#navigation-implicit">implicitly</a> done. This can be gradually done by changing all outcome values to match the filename of the target view.</p><p>Finally, any session scoped bean which was been put in the session with the sole reason to retain the bean data in subsequent requests in the same tab/window can better be marked <code>@ViewScoped</code>, because this way the bean won't be affected when the enduser opens the same page in different tabs/windows.</p><p>Note that I don't take any 3rd party componant libraries like PrimeFaces/RichFaces/IceFaces into account in this answer, it would then be impossible to write a reliable answer since it basically boils down to "it depends". In general it's sufficient to just upgrade the component library to a -by themselves verified- JSF 2.0 compatible version as per their instructions. Best is to just write unit tests, run them before and after the upgrade and fix any issues individually. </p><p>Here are at least some useful links with regard to migration of the specific component library:</p><p>PrimeFaces has no migration guide for PrimeFaces 1.x to 2.x as PrimeFaces 1.x requires Facelets 1.x already, so you just have to follow Facelets 1.x to 2.x migration steps. However, there's a PrimeFaces <a href="http://code.google.com/p/primefaces/wiki/MigrationGuideFrom22to30">2.x to 3.x migration guide</a> which might apply as well on migrating from PrimeFaces 1.x to 3.x. Tomahawk has also no migration guide. Basically the only which you need to change are the JARs and if necessary get rid of all <code>&lt;t:saveState&gt;</code> references on a request scoped bean by making the bean view scoped.</p></body></html>

===ID===
584cbfbf3e2ca508e5f07207
===QUESTION===
Using JFreeChart to display recent changes in a time series
How can I use  JFreeChart  to display just the most recent data in a continually updated time series? Addenda: A complete, working example that incorporates the accepted answer is shown  here . See also this  variation  having two series. See also this  Q&A  regarding  setTimeBase() . 
===LINK===
http://stackoverflow.com/questions/5048852/using-jfreechart-to-display-recent-changes-in-a-time-series
===KEYWORDS===
incorporates shown addenda working settimebase 
===ANSWER===
15
<html><body><p>You can also eliminate the zero by first advanceTime(), then appendData.  (swap the way they are doing it in the example).   </p></body></html>

===ID===
584cbfc03e2ca508e5f07208
===QUESTION===
Socket using in a swing applet
I should made a server & client in Java,based on Swing and gui.I neeed to make somehow a socket that will go from the server to the client and from the client to the server, and will pass some kind of a string.I would like to have later a function that would do several things according to the string that would be in the socket. 
For some reason I couldn't find a simple example for code that shows how it's done in a simple way. 
Anyone has any simple example or can explain how is it being done? 
===LINK===
http://stackoverflow.com/questions/3244400/socket-using-in-a-swing-applet
===KEYWORDS===
code simple pass find based 
===ANSWER===
23
<html><body><p>Based on this <a href="http://groups.google.com/group/comp.lang.java.help/msg/9f7f86db103f35c9" rel="nofollow noreferrer">example</a>, here's a simple network client-server pair using Swing. Note some issues related to correct synchronization: The GUI itself is constructed on the event dispatch thread using <a href="http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/awt/EventQueue.html#invokeLater%28java.lang.Runnable%29" rel="nofollow noreferrer"><code>invokeLater()</code></a>. In addition, the code relies on the thread safety of <a href="http://docs.oracle.com/javase/6/docs/api/javax/swing/JTextArea.html#append%28java.lang.String%29" rel="nofollow noreferrer"><code>append()</code></a>. Finally, it incorporates a handy tip from the article <a href="http://tips4java.wordpress.com/2008/10/22/text-area-scrolling/" rel="nofollow noreferrer"><em>Text Area Scrolling</em></a>.</p><p>Update: In Java 7, <a href="http://docs.oracle.com/javase/7/docs/api/javax/swing/JTextArea.html#append%28java.lang.String%29" rel="nofollow noreferrer"><code>append()</code></a> is no longer marked as thread safe; <code>invokeLater()</code> is used in <code>display()</code> to sequence updates.</p><p><img alt="http://i29.tinypic.com/6isl4y.png" src="http://i29.tinypic.com/6isl4y.png"/></p><pre><code>package net;

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.util.Scanner;
import javax.swing.*;
import javax.swing.text.DefaultCaret;

/**
 * A simple network client-server pair
 * @http://stackoverflow.com/questions/3245805
 */
public class Echo implements ActionListener, Runnable {

    private static final String HOST = "127.0.0.1";
    private static final int PORT = 12345;
    private final JFrame f = new JFrame();
    private final JTextField tf = new JTextField(25);
    private final JTextArea ta = new JTextArea(15, 25);
    private final JButton send = new JButton("Send");
    private volatile PrintWriter out;
    private Scanner in;
    private Thread thread;
    private Kind kind;

    public static enum Kind {

        Client(100, "Trying"), Server(500, "Awaiting");
        private int offset;
        private String activity;

        private Kind(int offset, String activity) {
            this.offset = offset;
            this.activity = activity;
        }
    }

    public Echo(Kind kind) {
        this.kind = kind;
        f.setTitle("Echo " + kind);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.getRootPane().setDefaultButton(send);
        f.add(tf, BorderLayout.NORTH);
        f.add(new JScrollPane(ta), BorderLayout.CENTER);
        f.add(send, BorderLayout.SOUTH);
        f.setLocation(kind.offset, 300);
        f.pack();
        send.addActionListener(this);
        ta.setLineWrap(true);
        ta.setWrapStyleWord(true);
        DefaultCaret caret = (DefaultCaret) ta.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        display(kind.activity + HOST + " on port " + PORT);
        thread = new Thread(this, kind.toString());
    }

    public void start() {
        f.setVisible(true);
        thread.start();
    }

    //@Override
    public void actionPerformed(ActionEvent ae) {
        String s = tf.getText();
        if (out != null) {
            out.println(s);
        }
        display(s);
        tf.setText("");
    }

    //@Override
    public void run() {
        try {
            Socket socket;
            if (kind == Kind.Client) {
                socket = new Socket(HOST, PORT);
            } else {
                ServerSocket ss = new ServerSocket(PORT);
                socket = ss.accept();
            }
            in = new Scanner(socket.getInputStream());
            out = new PrintWriter(socket.getOutputStream(), true);
            display("Connected");
            while (true) {
                display(in.nextLine());
            }
        } catch (Exception e) {
            display(e.getMessage());
            e.printStackTrace(System.err);
        }
    }

    private void display(final String s) {
        EventQueue.invokeLater(new Runnable() {
            //@Override
            public void run() {
                ta.append(s + "\u23CE\n");
            }
        });
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            //@Override
            public void run() {
                new Echo(Kind.Server).start();
                new Echo(Kind.Client).start();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbfc13e2ca508e5f07209
===QUESTION===
How to check if a String is numeric in Java
How would you check if a String was a number before parsing it? 
===LINK===
http://stackoverflow.com/questions/1102891/how-to-check-if-a-string-is-numeric-in-java
===KEYWORDS===
java string number numeric parsing 
===ANSWER===
356
<html><body><p><a href="http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/math/NumberUtils.html#isNumber%28java.lang.String%29"><code>NumberUtils.isNumber</code></a> or <a href="http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/StringUtils.html#isNumeric%28java.lang.CharSequence%29"><code>StringUtils.isNumeric</code></a> from <a href="http://commons.apache.org/lang/">Apache Commons Lang</a>.</p><p>You can also use <a href="http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/StringUtils.html#isAlphanumericSpace%28java.lang.CharSequence%29"><code>StringUtils.isNumericSpace</code></a> which returns <code>true</code> for empty strings  and ignores internal spaces in the string. (The linked javadocs contain detailed examples for each method.)</p></body></html>

===ID===
584cbfc13e2ca508e5f0720a
===QUESTION===
Best XML parser for Java [closed]
I need to read smallish (few MB at the most, UTF-8 encoded) XML files, rummage around looking at various elements and attributes, perhaps modify a few and write the XML back out again to disk (preferably with nice, indented formatting). What would be the best XML parser for my needs?  There are lots to choose from.  Some I'm aware of are: And of course the one in the JDK (I'm using Java 6).  I'm familiar with Xerces but find it clunky. Recommendations? 
===LINK===
http://stackoverflow.com/questions/373833/best-xml-parser-for-java
===KEYWORDS===
preferably rummage elements utf xerces 
===ANSWER===
66
<html><body><p>If speed and memory is no problem, <em>dom4j</em> is a really good option. If you need speed, using a StAX parser like <em>Woodstox</em> is the right way, but you have to write more code to get things done and you have to get used to process XML in streams.</p></body></html>

===ID===
584cbfc23e2ca508e5f0720b
===QUESTION===
Change private static final field using Java reflection
I have a class with a  private static final  field that, unfortunately, I need to change at run-time. Using reflection I get this error:  java.lang.IllegalAccessException: Can not set static final boolean field Is there any way to change the value? 
===LINK===
http://stackoverflow.com/questions/3301635/change-private-static-final-field-using-java-reflection
===KEYWORDS===
lang run reflection illegalaccessexception time 
===ANSWER===
557
<html><body><p>Assuming no <code>SecurityManager</code> is preventing you from doing this, you can use <code>setAccessible</code> to get around <code>private</code> and resetting the modifier to get rid of <code>final</code>, and actually modify a <code>private static final</code> field.</p><p>Here's an example:</p><pre><code>import java.lang.reflect.*;

public class EverythingIsTrue {
   static void setFinalStatic(Field field, Object newValue) throws Exception {
      field.setAccessible(true);

      Field modifiersField = Field.class.getDeclaredField("modifiers");
      modifiersField.setAccessible(true);
      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);

      field.set(null, newValue);
   }
   public static void main(String args[]) throws Exception {      
      setFinalStatic(Boolean.class.getField("FALSE"), true);

      System.out.format("Everything is %s", false); // "Everything is true"
   }
}
</code></pre><p>Assuming no <code>SecurityException</code> is thrown, the above code prints <code>"Everything is true"</code>.</p><p>What's actually done here is as follows:</p><p>Extreme care should be taken whenever you do something like this. It may not work because a <code>SecurityManager</code> may be present, but even if it doesn't, depending on usage pattern, it may or may not work.</p><p><a href="http://java.sun.com/docs/books/jls/third_edition/html/memory.html#17.5.3" rel="nofollow noreferrer">JLS 17.5.3 Subsequent Modification of Final Fields</a></p><p>In some cases, such as deserialization, the system will need to change the <code>final</code> fields of an object after construction. <code>final</code> fields can be changed via reflection and other implementation dependent means. The only pattern in which this has reasonable semantics is one in which an object is constructed and then the <code>final</code> fields of the object are updated. The object should not be made visible to other threads, nor should the <code>final</code> fields be read, until all updates to the <code>final</code> fields of the object are complete. Freezes of a <code>final</code> field occur both at the end of the constructor in which the <code>final</code> field is set, and immediately after each modification of a <code>final</code> field via reflection or other special mechanism.</p><p>Even then, there are a number of complications. If a <code>final</code> field is initialized to a compile-time constant in the field declaration, changes to the <code>final</code> field may not be observed, since uses of that <code>final</code> field are replaced at compile time with the compile-time constant.</p><p>Another problem is that the specification allows aggressive optimization of <code>final</code> fields. Within a thread, it is permissible to reorder reads of a <code>final</code> field with those modifications of a final field that do not take place in the constructor.</p><p>Essentially,</p><pre><code>field.getModifiers() &amp; ~Modifier.FINAL
</code></pre><p>turns off the bit corresponding to <code>Modifier.FINAL</code> from <code>field.getModifiers()</code>. <code>&amp;</code> is the bitwise-and, and <code>~</code> is the bitwise-complement.</p></body></html>

===ID===
584cbfc23e2ca508e5f0720c
===QUESTION===
How do you kill a thread in Java?
How do you kill a thread in Java? 
===LINK===
http://stackoverflow.com/questions/671049/how-do-you-kill-a-thread-in-java
===KEYWORDS===
java kill thread 
===ANSWER===
128
<html><body><p>See this <a href="http://docs.oracle.com/javase/1.5.0/docs/guide/misc/threadPrimitiveDeprecation.html" rel="nofollow noreferrer">thread by Sun on why they deprecated <code>Thread.stop()</code></a>.  It goes into detail about why this was a bad method and what should be done to safely stop threads in general.  </p><p>The way they recomend is to use a shared variable as a flag which asks the background thread to stop.  This variable can then be set by a different object requesting the thread terminate.  </p></body></html>

===ID===
584cbfc33e2ca508e5f0720d
===QUESTION===
Round a double to 2 decimal places [duplicate]
This question already has an answer here: If the value is  200.3456 , it should be formatted to  200.34 .
If it is  200 , then it should be  200.00 . 
===LINK===
http://stackoverflow.com/questions/2808535/round-a-double-to-2-decimal-places
===KEYWORDS===
double question formatted duplicate answer 
===ANSWER===
445
<html><body><p>Here's an utility that <strong>rounds</strong> (instead of <em>truncating</em>) a double to specified number of decimal places.</p><p>For example:</p><pre><code>round(200.3456, 2); // returns 200.35
</code></pre><pre><code>public static double round(double value, int places) {
    if (places &lt; 0) throw new IllegalArgumentException();

    long factor = (long) Math.pow(10, places);
    value = value * factor;
    long tmp = Math.round(value);
    return (double) tmp / factor;
}
</code></pre><p>This <strong>breaks down badly</strong> in corner cases with either a very high number of decimal places (e.g. <code>round(1000.0d, 17)</code>) or large integer part (e.g. <code>round(90080070060.1d, 9)</code>). Thanks to <a href="http://stackoverflow.com/users/306488/sloin">Sloin</a> for pointing this out.</p><p>I've been using the above to round "not-too-big" doubles to 2 or 3 decimal places happily for years (for example to clean up time in seconds for logging purposes: 27.987654321987 -&gt; 27.99). But I guess it's best to avoid it, since more reliable ways are readily available, with cleaner code too. </p><p>(Adapted from <a href="http://stackoverflow.com/a/15643364/56285">this answer by Louis Wasserman</a> and <a href="http://stackoverflow.com/a/7548871/56285">this one by Sean Owen</a>.)</p><pre><code>public static double round(double value, int places) {
    if (places &lt; 0) throw new IllegalArgumentException();

    BigDecimal bd = new BigDecimal(value);
    bd = bd.setScale(places, RoundingMode.HALF_UP);
    return bd.doubleValue();
}
</code></pre><p>Note that <code>HALF_UP</code> is the rounding mode "commonly taught at school". Peruse the <a href="http://docs.oracle.com/javase/7/docs/api/java/math/RoundingMode.html" rel="nofollow noreferrer">RoundingMode documentation</a>, if you suspect you need something else such as <a href="http://en.wikipedia.org/wiki/Rounding#Round_half_to_even" rel="nofollow noreferrer">Bankers’ Rounding</a>.</p><p>Of course, if you prefer, you can inline the above into a one-liner:<br>
<code>new BigDecimal(value).setScale(places, RoundingMode.HALF_UP).doubleValue()</code></br></p><p>Always remember that floating point representations using <code>float</code> and <code>double</code> are <em>inexact</em>. 
For example, consider these expressions: </p><pre><code>999199.1231231235 == 999199.1231231236 // true
1.03 - 0.41 // 0.6200000000000001
</code></pre><p><strong><a href="http://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency">For exactness, you want to use BigDecimal</a></strong>. And while at it, use the constructor that takes a String, never the one taking double. For instance, try executing this:</p><pre><code>System.out.println(new BigDecimal(1.03).subtract(new BigDecimal(0.41)));
System.out.println(new BigDecimal("1.03").subtract(new BigDecimal("0.41")));
</code></pre><p>Some excellent further reading on the topic:</p><p>If you wanted String <em>formatting</em> instead of (or in addition to) strictly rounding numbers, see the other answers.  </p><p>Specifically, note that <code>round(200, 0)</code> returns <code>200.0</code>. If you want to output "<strong>200.00</strong>", you should first round and then format the result for output (which is perfectly explained in <a href="http://stackoverflow.com/questions/2808535/round-a-double-to-2-significant-figures-after-decimal-point/2808587#2808587">Jesper's answer</a>).</p></body></html>

===ID===
584cbfc33e2ca508e5f0720e
===QUESTION===
JTable duplicate values in row
I have a  JTable  populated with a custom  DataModel  (pasted below) and when I call the  populate()  method, it  appears  to populate the table with duplicate data - each row is filled with the same value over and over again.  However, on closer inspection (by simply println()ing the 'data' field), the data model isn't at fault - it holds correct data, in the format I expect.  What gives? 
===LINK===
http://stackoverflow.com/questions/9132987/jtable-duplicate-values-in-row
===KEYWORDS===
populate format pasted appears field 
===ANSWER===
9
<html><body><p>Here's a complete example that may prove helpful. As the sample <code>Map</code> is unmodifiable, I refer you to @mKorbel's <a href="http://stackoverflow.com/a/6656279/714968">example</a> on how to override <code>isCellEditable()</code> and <code>setValueAt()</code>.</p><pre><code>import java.awt.EventQueue;
import java.awt.GridLayout;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;

/** @see http://stackoverflow.com/questions/9132987 */
public class EnvTableTest extends JPanel {

    public EnvTableTest() {
        this.setLayout(new GridLayout());
        this.add(new JScrollPane(new JTable(new EnvDataModel())));
    }

    private static class EnvDataModel extends AbstractTableModel {

        private Map&lt;String, String&gt; data = System.getenv();
        private String[] keys;

        public EnvDataModel() {
            keys = data.keySet().toArray(new String[data.size()]);
        }

        @Override
        public String getColumnName(int col) {
            if (col == 0) {
                return "Key";
            } else {
                return "Value";
            }
        }

        @Override
        public int getColumnCount() {
            return 2;
        }

        @Override
        public int getRowCount() {
            return data.size();
        }

        @Override
        public Object getValueAt(int row, int col) {
            if (col == 0) {
                return keys[row];
            } else {
                return data.get(keys[row]);
            }
        }
    }

    private void display() {
        JFrame f = new JFrame("EnvTableTest");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(this);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new EnvTableTest().display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbfc43e2ca508e5f0720f
===QUESTION===
Java - sending HTTP parameters via POST method easily
I am successfully using this code to send   HTTP  requests with some parameters via  GET  method Now I may need to send the parameters (i.e. param1, param2, param3) via  POST  method because they are very long.
I was thinking to add an extra parameter to that method (i.e. String httpMethod). How can I change the code above as little as possible to be able to send paramters either via  GET  or  POST ? I was hoping that changing to would have done the trick, but the parameters are still sent via GET method. Has  HttpURLConnection  got any method that would help?
Is there any helpful Java construct? Any help would be very much appreciated. 
===LINK===
http://stackoverflow.com/questions/4205980/java-sending-http-parameters-via-post-method-easily
===KEYWORDS===
code java hoping parameters thinking 
===ANSWER===
296
<html><body><p>In a GET request, the parameters are sent as part of the URL.</p><p>In a POST request, the parameters are sent as a body of the request, after the headers.</p><p>To do a POST with HttpURLConnection, you need to write the parameters to the connection after you have opened the connection.</p><p>This code should get you started:</p><pre><code>String urlParameters  = "param1=a&amp;param2=b&amp;param3=c";
byte[] postData       = urlParameters.getBytes( StandardCharsets.UTF_8 );
int    postDataLength = postData.length;
String request        = "http://example.com/index.php";
URL    url            = new URL( request );
HttpURLConnection conn= (HttpURLConnection) url.openConnection();           
conn.setDoOutput( true );
conn.setInstanceFollowRedirects( false );
conn.setRequestMethod( "POST" );
conn.setRequestProperty( "Content-Type", "application/x-www-form-urlencoded"); 
conn.setRequestProperty( "charset", "utf-8");
conn.setRequestProperty( "Content-Length", Integer.toString( postDataLength ));
conn.setUseCaches( false );
try( DataOutputStream wr = new DataOutputStream( conn.getOutputStream())) {
   wr.write( postData );
}
</code></pre></body></html>

===ID===
584cbfc43e2ca508e5f07210
===QUESTION===
Generating all permutations of a given string
What is an elegant way to find all the permutations of a string. E.g.  ba , would be  ba  and  ab , but what about  abcdefgh ? Is there any example Java implementation? 
===LINK===
http://stackoverflow.com/questions/4240080/generating-all-permutations-of-a-given-string
===KEYWORDS===
generating string permutations abcdefgh elegant 
===ANSWER===
393
<html><body><pre><code>public static void permutation(String str) { 
    permutation("", str); 
}

private static void permutation(String prefix, String str) {
    int n = str.length();
    if (n == 0) System.out.println(prefix);
    else {
        for (int i = 0; i &lt; n; i++)
            permutation(prefix + str.charAt(i), str.substring(0, i) + str.substring(i+1, n));
    }
}
</code></pre><p>(via <a href="http://introcs.cs.princeton.edu/java/23recursion/Permutations.java.html">Introduction to Programming in Java</a>)</p></body></html>

===ID===
584cbfc53e2ca508e5f07211
===QUESTION===
Difference between int[] array and int array[]
I have recently been thinking about the difference between the two ways of defining an array: Is there a difference? 
===LINK===
http://stackoverflow.com/questions/129178/difference-between-int-array-and-int-array
===KEYWORDS===
recently thinking ways int array 
===ANSWER===
175
<html><body><p>They are semantically identical. The <code>int array[]</code> syntax was only added to help C programmers get used to java.</p><p><code>int[] array</code> is much preferable, and less confusing.</p></body></html>

===ID===
584cbfc53e2ca508e5f07212
===QUESTION===
Collision detection with complex shapes
I am wanting to make a game that has each level loaded from an image.
I want to draw up the whole level in Photoshop, and then set it as the background and allow the player to walk over it.
I want another invisible image to go over top which will be black in all places that I want to collide with. The reason I don't want to use tiles, which are much easier with rectangle collision and such, is because there will be complex corners and not everything will be rectangle. Is this a good idea, and is it possible to do easily?
Would this be a big CPU hog or is there a better way to do this? 
===LINK===
http://stackoverflow.com/questions/14574045/collision-detection-with-complex-shapes
===KEYWORDS===
photoshop draw set don easier 
===ANSWER===
23
<html><body><p>..there will be complex corners and not everything will be rectangle. </p><p>This could be achieved by drawing and dealing with <code>Shape</code> and <code>Area</code> instances. E.G.</p><p><img alt="ShapeCollision" src="https://i.stack.imgur.com/U2KHk.png"/></p><pre><code>import java.awt.*;
import java.awt.event.*;
import java.awt.geom.*;
import java.awt.image.BufferedImage;
import javax.swing.*;

class ShapeCollision {

    private BufferedImage img;
    private Area[] obstacles = new Area[4];
    private Area walls;

    int x; 
    int y;
    int xDelta = 3;
    int yDelta = 2;

    /** A method to determine if two instances of Area intersect */
    public boolean doAreasCollide(Area area1, Area area2) {
        boolean collide = false;

        Area collide1 = new Area(area1);
        collide1.subtract(area2);
        if (!collide1.equals(area1)) {
            collide = true;
        }

        Area collide2 = new Area(area2);
        collide2.subtract(area1);
        if (!collide2.equals(area2)) {
            collide = true;
        }

        return collide;
    }

    ShapeCollision() {
        int w = 400;
        int h = 200;
        img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        final JLabel imageLabel = new JLabel(new ImageIcon(img));
        x = w/2;
        y = h/2;

        //circle 
        obstacles[0] = new Area(new Ellipse2D.Double(40, 40, 30, 30));

        int[] xTriangle = {330,360,345};
        int[] yTriangle = {60,60,40};
        //triangle 
        obstacles[1] = new Area(new Polygon(xTriangle, yTriangle, 3));

        int[] xDiamond = {60,80,60,40};
        int[] yDiamond = {120,140,160,140};
        //diamond 
        obstacles[2] = new Area(new Polygon(xDiamond, yDiamond, 4));

        int[] xOther = {360,340,360,340};
        int[] yOther = {130,110,170,150};
        // other 
        obstacles[3] = new Area(new Polygon(xOther, yOther, 4));

        walls = new Area(new Rectangle(0,0,w,h));

        ActionListener animate = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                animate();
                imageLabel.repaint();
            }
        };
        Timer timer = new Timer(50, animate);

        timer.start();
        JOptionPane.showMessageDialog(null, imageLabel);
        timer.stop();
    }

    public void animate() {
        Graphics2D g = img.createGraphics();
        g.setRenderingHint(
                RenderingHints.KEY_ANTIALIASING, 
                RenderingHints.VALUE_ANTIALIAS_ON);

        g.setColor(Color.BLUE);
        g.fillRect(0, 0, img.getWidth(), img.getHeight());
        x+=xDelta;
        y+=yDelta;
        int s = 15;
        Area player = new Area(new Ellipse2D.Double(x, y, s, s));

        // Acid test of edge collision;
        if (doAreasCollide(player,walls)) {
            if ( x+s&gt;img.getWidth() || x&lt;0 ) {
                xDelta *= -1;
            } 
            if(y+s&gt;img.getHeight() || y&lt;0 ) {
                yDelta *= -1;
            }
        }
        g.setColor(Color.ORANGE);
        for (Area obstacle : obstacles) {
            if (doAreasCollide(obstacle, player)) {
                g.setColor(Color.RED);
            } else {
                g.setColor(Color.GREEN);
            }
            g.fill(obstacle);
        }

        g.setColor(Color.YELLOW);
        g.fill(player);


        g.dispose();
    }

    public static void main(String[] args) {
        Runnable r = new Runnable() {

            @Override
            public void run() {
                new ShapeCollision();
            }
        };
        // Swing GUIs should be created and updated on the EDT
        // http://docs.oracle.com/javase/tutorial/uiswing/concurrency/initial.html
        SwingUtilities.invokeLater(r);
    }
}
</code></pre><p>make it detect all the red color and set that as the collision bounds</p><p>At start-up, use the source seen in the <a href="http://stackoverflow.com/q/7218309/418556">Smoothing a jagged path</a> question to get an outline of the red pixels (see the <code>getOutline(Color target, BufferedImage bi)</code> method). Store that <code>Area</code> as the single obstacle on start-up.</p></body></html>

===ID===
584cbfc63e2ca508e5f07213
===QUESTION===
Why doesn't Java allow overriding of static methods?
Why is it not possible to override static methods? If possible, please use an example. 
===LINK===
http://stackoverflow.com/questions/2223386/why-doesnt-java-allow-overriding-of-static-methods
===KEYWORDS===
overriding java doesn 
===ANSWER===
335
<html><body><p>Overriding depends on having an instance of a class. The point of polymorphism is that you can subclass a class and the objects implementing those subclasses will have different behaviors for the same methods defined in the superclass (and overridden in the subclasses). A static method is not associated with any instance of a class so the concept is not applicable.</p><p>There were two considerations driving Java's design that impacted this. One was a concern with performance: there had been a lot of criticism of Smalltalk about it being too slow (garbage collection and polymorphic calls being part of that) and Java's creators were determined to avoid that. Another was the decision that the target audience for Java was C++ developers. Making static methods work the way they do had the benefit of familiarity for C++ programmers and was also very fast, because there's no need to wait until runtime to figure out which method to call.</p></body></html>

===ID===
584cbfc63e2ca508e5f07214
===QUESTION===
What is the difference between “text” and new String(“text”)?
What is the difference between these two following statements? 
===LINK===
http://stackoverflow.com/questions/3052442/what-is-the-difference-between-text-and-new-stringtext
===KEYWORDS===
“text” difference statements string 
===ANSWER===
98
<html><body><p><code>new String("text");</code>
explicitly creates a new and referentially distinct instance of a <code>String</code> object; <code>String s = "text";</code> may reuse an instance from the <strong>string constant pool</strong> if one is available.</p><p>You <em>very rarely</em> would ever want to use the <code>new String(anotherString)</code> constructor. From the API:</p><p><a href="http://java.sun.com/javase/6/docs/api/java/lang/String.html#String%28java.lang.String%29" rel="nofollow noreferrer"><code>String(String original)</code></a> : Initializes a <em>newly created</em> <code>String</code> object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string. Unless an explicit copy of original is needed, use of this constructor is unnecessary since strings are immutable. </p><p>Examine the following snippet:</p><pre><code>    String s1 = "foobar";
    String s2 = "foobar";

    System.out.println(s1 == s2);      // true

    s2 = new String("foobar");
    System.out.println(s1 == s2);      // false
    System.out.println(s1.equals(s2)); // true
</code></pre><p><code>==</code> on two reference types is a reference identity comparison. Two objects that are <code>equals</code> are not necessarily <code>==</code>. It is usually wrong to use <code>==</code> on reference types; most of the time <code>equals</code> need to be used instead.</p><p>Nonetheless, if for whatever reason you need to create two <code>equals</code> but not <code>==</code> string, you <em>can</em> use the <code>new String(anotherString)</code> constructor. It needs to be said again, however, that this is <em>very</em> peculiar, and is rarely the intention.</p></body></html>

===ID===
584cbfc73e2ca508e5f07215
===QUESTION===
Create instance of generic type in Java?
Is it possible to create an instance of a generic type in Java? I'm thinking based on what I've seen that the answer is  no  ( due to type erasure ), but I'd be interested if anyone can see something I'm missing: EDIT: It turns out that  Super Type Tokens  could be used to resolve my issue, but it requires a lot of reflection-based code, as some of the answers below have indicated. I'll leave this open for a little while to see if anyone comes up with anything dramatically different than Ian Robertson's  Artima Article . 
===LINK===
http://stackoverflow.com/questions/75175/create-instance-of-generic-type-in-java
===KEYWORDS===
resolve java reflection open missing 
===ANSWER===
210
<html><body><p>You are correct.  You can't do "new E".  But you can change it to</p><pre><code>private static class SomeContainer&lt;E&gt;
{
    E createContents(Class&lt;E&gt; clazz)
    {
        return clazz.newInstance();
    }
}
</code></pre><p>It's a pain.  But it works.  Wrapping it in the factory pattern makes it a little more tolerable.</p></body></html>

===ID===
584cbfc83e2ca508e5f07216
===QUESTION===
Validating input using java.util.Scanner
I'm taking user input from  System.in  using a  java.util.Scanner . I need to validate the input for things like: What's the best way to do this? 
===LINK===
http://stackoverflow.com/questions/3059333/validating-input-using-java-util-scanner
===KEYWORDS===
java scanner things system util 
===ANSWER===
105
<html><body><p><a href="http://java.sun.com/javase/6/docs/api/java/util/Scanner.html" rel="nofollow noreferrer"><code>java.util.Scanner</code></a> has many <code>hasNextXXX</code> methods that can be used to validate input. Here's a brief overview of all of them:</p><p><code>Scanner</code> is capable of more, enabled by the fact that it's regex-based. One important feature is <a href="http://java.sun.com/javase/6/docs/api/java/util/Scanner.html#useDelimiter%28java.lang.String%29" rel="nofollow noreferrer"><code>useDelimiter(String pattern)</code></a>, which lets you define what <em>pattern</em> separates your tokens. There are also <code>find</code> and <code>skip</code> methods that <em>ignores</em> delimiters.</p><p>The following discussion will keep the regex as simple as possible, so the focus remains on <code>Scanner</code>.</p><p>Here's a simple example of using <code>hasNextInt()</code> to validate positive <code>int</code> from the input.</p><pre><code>Scanner sc = new Scanner(System.in);
int number;
do {
    System.out.println("Please enter a positive number!");
    while (!sc.hasNextInt()) {
        System.out.println("That's not a number!");
        sc.next(); // this is important!
    }
    number = sc.nextInt();
} while (number &lt;= 0);
System.out.println("Thank you! Got " + number);
</code></pre><p>Here's an example session:</p><p><strong><em>Please enter a positive number!</em></strong><br>
  five<br>
<strong><em>That's not a number!</em></strong><br>
  -3<br>
<strong><em>Please enter a positive number!</em></strong><br>
  5<br>
<strong><em>Thank you! Got 5</em></strong></br></br></br></br></br></br></p><p>Note how much easier <code>Scanner.hasNextInt()</code> is to use compared to the more verbose <code>try/catch</code> <a href="http://java.sun.com/javase/6/docs/api/java/lang/Integer.html#parseInt%28java.lang.String%29" rel="nofollow noreferrer"><code>Integer.parseInt</code></a>/<a href="http://java.sun.com/javase/6/docs/api/java/lang/NumberFormatException.html" rel="nofollow noreferrer"><code>NumberFormatException</code></a> combo. By contract, a <code>Scanner</code> <em>guarantees</em> that if it <code>hasNextInt()</code>, then <code>nextInt()</code> will peacefully give you that <code>int</code>, and will <em>not</em> throw any <code>NumberFormatException</code>/<code>InputMismatchException</code>/<code>NoSuchElementException</code>.</p><p>Note that the snippet above contains a <code>sc.next()</code> statement to advance the <code>Scanner</code> until it <code>hasNextInt()</code>. It's important to realize that <strong><em>none</em> of the</strong> <code>hasNextXXX</code> <strong>methods advance the</strong> <code>Scanner</code> <strong>past any input!</strong> You will find that if you omit this line from the snippet, then it'd go into an infinite loop on an invalid input!</p><p>This has two consequences:</p><p>Here's an example of performing multiple <code>hasNextXXX</code> tests.</p><pre><code>Scanner sc = new Scanner(System.in);
while (!sc.hasNext("exit")) {
    System.out.println(
        sc.hasNextInt() ? "(int) " + sc.nextInt() :
        sc.hasNextLong() ? "(long) " + sc.nextLong() :  
        sc.hasNextDouble() ? "(double) " + sc.nextDouble() :
        sc.hasNextBoolean() ? "(boolean) " + sc.nextBoolean() :
        "(String) " + sc.next()
    );
}
</code></pre><p>Here's an example session:</p><p>5<br>
<strong><em>(int) 5</em></strong><br>
  false<br>
<strong><em>(boolean) false</em></strong><br>
  blah<br>
<strong><em>(String) blah</em></strong><br>
  1.1<br>
<strong><em>(double) 1.1</em></strong><br>
  100000000000<br>
<strong><em>(long) 100000000000</em></strong><br>
  exit  </br></br></br></br></br></br></br></br></br></br></p><p>Note that the order of the tests matters. If a <code>Scanner</code> <code>hasNextInt()</code>, then it also <code>hasNextLong()</code>, but it's not necessarily <code>true</code> the other way around. More often than not you'd want to do the more specific test before the more general test.</p><p><code>Scanner</code> has many advanced features supported by regular expressions. Here's an example of using it to validate vowels.</p><pre><code>Scanner sc = new Scanner(System.in);
System.out.println("Please enter a vowel, lowercase!");
while (!sc.hasNext("[aeiou]")) {
    System.out.println("That's not a vowel!");
    sc.next();
}
String vowel = sc.next();
System.out.println("Thank you! Got " + vowel);
</code></pre><p>Here's an example session:</p><p><strong><em>Please enter a vowel, lowercase!</em></strong><br>
  5<br>
<strong><em>That's not a vowel!</em></strong><br>
  z<br>
<strong><em>That's not a vowel!</em></strong><br>
  e<br>
<strong><em>Thank you! Got e</em></strong></br></br></br></br></br></br></p><p>In regex, as a Java string literal, the pattern <code>"[aeiou]"</code> is what is called a "character class"; it matches any of the letters <code>a</code>, <code>e</code>, <code>i</code>, <code>o</code>, <code>u</code>. Note that it's trivial to make the above test case-insensitive: just provide such regex pattern to the <code>Scanner</code>.</p><p>Sometimes you need to scan line-by-line, with multiple tokens on a line. The easiest way to accomplish this is to use <em>two</em> <code>Scanner</code>, where the second <code>Scanner</code> takes the <code>nextLine()</code> from the first <code>Scanner</code> as input. Here's an example:</p><pre><code>Scanner sc = new Scanner(System.in);
System.out.println("Give me a bunch of numbers in a line (or 'exit')");
while (!sc.hasNext("exit")) {
    Scanner lineSc = new Scanner(sc.nextLine());
    int sum = 0;
    while (lineSc.hasNextInt()) {
        sum += lineSc.nextInt();
    }
    System.out.println("Sum is " + sum);
}
</code></pre><p>Here's an example session:</p><p><strong><em>Give me a bunch of numbers in a line (or 'exit')</em></strong><br>
  3 4 5<br>
<strong><em>Sum is 12</em></strong><br>
  10 100 a million dollar<br>
<strong><em>Sum is 110</em></strong><br>
  wait what?<br>
<strong><em>Sum is 0</em></strong><br>
  exit</br></br></br></br></br></br></br></p><p>In addition to <a href="http://java.sun.com/javase/6/docs/api/java/util/Scanner.html#Scanner%28java.lang.String%29" rel="nofollow noreferrer"><code>Scanner(String)</code></a> constructor, there's also <a href="http://java.sun.com/javase/6/docs/api/java/util/Scanner.html#Scanner%28java.io.File%29" rel="nofollow noreferrer"><code>Scanner(java.io.File)</code></a> among others.</p></body></html>

===ID===
584cbfc83e2ca508e5f07217
===QUESTION===
Does finally always execute in Java?
I have a try/catch block with returns inside it. Will the finally block be called? For example: I know I can just type this in an see what happens (which is what I'm about to do, actually) but when I googled for answers nothing came up, so I figured I'd throw this up as a question. 
===LINK===
http://stackoverflow.com/questions/65035/does-finally-always-execute-in-java
===KEYWORDS===
execute figured java question googled 
===ANSWER===
1321
<html><body><p><code>finally</code> will be called.</p><p>The only times <code>finally</code> won't be called are:</p></body></html>

===ID===
584cbfc93e2ca508e5f07218
===QUESTION===
What is the best way to filter a Java Collection?
I want to filter a  java.util.Collection  based on a predicate. 
===LINK===
http://stackoverflow.com/questions/122105/what-is-the-best-way-to-filter-a-java-collection
===KEYWORDS===
filter util predicate java 
===ANSWER===
344
<html><body><p>Java 8 (<a href="https://blogs.oracle.com/thejavatutorials/entry/jdk_8_is_released" rel="nofollow noreferrer" title="Java 8 released">2014</a>) solves this problem using streams and lambdas in one line of code:</p><pre><code>List&lt;Person&gt; beerDrinkers = persons.stream()
    .filter(p -&gt; p.getAge() &gt; 16).collect(Collectors.toList());
</code></pre><p>Here's a <a href="http://zeroturnaround.com/rebellabs/java-8-explained-applying-lambdas-to-java-collections/" rel="nofollow noreferrer" title="Java 8 collections and lambdas">tutorial</a>.</p><p>Use <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html#removeIf-java.util.function.Predicate-" rel="nofollow noreferrer"><code>Collection#removeIf</code></a> to modify the collection in place (provided it supports element removal):</p><pre><code>persons.removeIf(p -&gt; p.getAge() &gt; 16);
</code></pre><p><a href="https://code.google.com/archive/p/lambdaj/" rel="nofollow noreferrer">lambdaj</a> allows filtering collections without writing loops or inner classes:</p><pre><code>List&lt;Person&gt; beerDrinkers = select(persons, having(on(Person.class).getAge(),
    greaterThan(16)));
</code></pre><p>Can you imagine something more readable?</p><p><strong>Disclaimer:</strong> I am a contributor on lambdaj</p></body></html>

===ID===
584cbfc93e2ca508e5f07219
===QUESTION===
Getting A File's Mime Type In Java
I was just wondering how most people fetch a mime type from a file in Java?  So far I've tried two utils:  JMimeMagic  &  Mime-Util .   The first gave me memory exceptions, the second doesn't close its streams off properly.  I was just wondering if anyone else had a method/library that they used and worked correctly? 
===LINK===
http://stackoverflow.com/questions/51438/getting-a-files-mime-type-in-java
===KEYWORDS===
java wondering utils doesn util 
===ANSWER===
248
<html><body><p>In Java 7 you can now just use <a href="http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#probeContentType%28java.nio.file.Path%29"><code>Files.probeContentType(path)</code></a>.</p></body></html>

===ID===
584cbfca3e2ca508e5f0721a
===QUESTION===
Add a complex image in the panel, with buttons around it in one customized user interface
How can i have this image like below into the  slavePanel  and on top of that JPanel adjust the  JButtons  which looks like the image but having buttons correctly wrapped around? (Right now they are shaped in 1 row, 4 column) Follow up:  Excellent one from  Andrew Thompson   + at-least my broken method 
===LINK===
http://stackoverflow.com/questions/10861852/add-a-complex-image-in-the-panel-with-buttons-around-it-in-one-customized-user
===KEYWORDS===
slavepanel shaped image buttons jbuttons 
===ANSWER===
14
<html><body><p><img alt="Compass Buttons" src="https://i.stack.imgur.com/9Sdk6.png"/></p><pre><code>import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import javax.swing.*;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;

public class CompassButtons {

    public CompassButtons(BufferedImage bi) {
        int w = bi.getWidth();
        int h = bi.getHeight();
        int step = w/3;
        JPanel p = new JPanel(new GridLayout(3,3));
        p.setOpaque(false);
        int count = 0;
        for (int ii=0; ii&lt;w; ii+=step) {
            for (int jj=0; jj&lt;h; jj+=step) {
                // This is it - GET THE SUB IMAGE
                Image icon = bi.getSubimage(jj, ii, step, step);
                if (count%2==1) {
                    JButton button = new JButton(new ImageIcon(icon));

                    // remove the border - indicate action using a different icon
                    button.setBorder(null);

                    // make a 'pressed' icon..
                    BufferedImage iconPressed = new BufferedImage(step,step,BufferedImage.TYPE_INT_ARGB);
                    Graphics g = iconPressed.getGraphics();
                    g.drawImage(icon, 0, 0, p);
                    g.setColor(Color.RED);
                    g.drawRoundRect(
                            0, 0, 
                            iconPressed.getWidth(p)-1, iconPressed.getHeight(p)-1, 
                            12, 12);
                    g.dispose();
                    button.setPressedIcon(new ImageIcon(iconPressed));

                    // make it transparent
                    button.setContentAreaFilled(false);

                    button.setActionCommand(""+count);
                    button.addActionListener(new ActionListener(){
                        @Override
                        public void actionPerformed(ActionEvent ae) {
                            System.out.println(ae.getActionCommand());
                        }
                    });

                    p.add(button);
                } else {
                    JLabel label = new JLabel(new ImageIcon(icon));
                    p.add(label);
                }
                count++;
            }
        }
        JPanel center = new JPanel(new GridBagLayout());
        center.setBackground(Color.BLACK);
        center.add(p);
        JOptionPane.showMessageDialog(null, center);
    }

    public static void main(String[] args) throws IOException {
        URL url = new URL("http://i.stack.imgur.com/SNN04.png");
        final BufferedImage bi = ImageIO.read(url);
        SwingUtilities.invokeLater(new Runnable(){
            @Override
            public void run() {
                new CompassButtons(bi);
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbfcb3e2ca508e5f0721b
===QUESTION===
Differences between HashMap and Hashtable?
What are the differences between a  HashMap  and a  Hashtable  in Java? Which is more efficient for non-threaded applications? 
===LINK===
http://stackoverflow.com/questions/40471/differences-between-hashmap-and-hashtable
===KEYWORDS===
efficient differences java hashmap hashtable 
===ANSWER===
2453
<html><body><p>There are several differences between HashMap and Hashtable in Java:</p><p><a href="http://java.sun.com/javase/7/docs/api/java/util/Hashtable.html" rel="nofollow noreferrer"><code>Hashtable</code></a> is synchronized, whereas <a href="http://java.sun.com/javase/7/docs/api/java/util/HashMap.html" rel="nofollow noreferrer"><code>HashMap</code></a> is not.  This makes <code>HashMap</code> better for non-threaded applications, as unsynchronized Objects typically perform better than synchronized ones.</p><p><code>Hashtable</code> does not allow <code>null</code> keys or values.  <code>HashMap</code> allows one <code>null</code> key and any number of <code>null</code> values.</p><p>One of HashMap's subclasses is <a href="http://java.sun.com/javase/7/docs/api/java/util/LinkedHashMap.html" rel="nofollow noreferrer"><code>LinkedHashMap</code></a>, so in the event that you'd want predictable iteration order (which is insertion order by default), you could easily swap out the <code>HashMap</code> for a <code>LinkedHashMap</code>.  This wouldn't be as easy if you were using <code>Hashtable</code>.</p><p>Since synchronization is not an issue for you, I'd recommend <code>HashMap</code>. If synchronization becomes an issue, you may also look at <a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html" rel="nofollow noreferrer"><code>ConcurrentHashMap</code></a>.</p></body></html>

===ID===
584cbfcb3e2ca508e5f0721c
===QUESTION===
How can I generate an MD5 hash?
Is there any method to generate MD5 hash of a string in Java? 
===LINK===
http://stackoverflow.com/questions/415953/how-can-i-generate-an-md5-hash
===KEYWORDS===
generate java method string 
===ANSWER===
432
<html><body><p><a href="http://docs.oracle.com/javase/8/docs/api/java/security/MessageDigest.html" rel="nofollow noreferrer"><code>java.security.MessageDigest</code></a> is your friend. Call <a href="http://download.oracle.com/javase/8/docs/api/java/security/MessageDigest.html#getInstance(java.lang.String)" rel="nofollow noreferrer"><code>getInstance("MD5")</code></a> to get an MD5 message digest you can use.</p></body></html>

===ID===
584cbfcc3e2ca508e5f0721d
===QUESTION===
How do I find the caller of a method using stacktrace or reflection?
I need to find the caller of a method. Is it possible using stacktrace or reflection? 
===LINK===
http://stackoverflow.com/questions/421280/how-do-i-find-the-caller-of-a-method-using-stacktrace-or-reflection
===KEYWORDS===
stacktrace reflection caller find method 
===ANSWER===
270
<html><body><pre><code>StackTraceElement[] stackTraceElements = Thread.currentThread().getStackTrace()
</code></pre><p>According to the Javadocs:</p><p>The last element of the array represents the bottom of the stack, which is the least recent method invocation in the sequence. </p><p>A <code>StackTraceElement</code> has <code>getClassName()</code>, <code>getFileName()</code>, <code>getLineNumber()</code> and <code>getMethodName()</code>.</p><p>You will have to experiment to determine which index you want
(probably <code>stackTraceElements[1]</code> or <code>[2]</code>).</p></body></html>

===ID===
584cbfcc3e2ca508e5f0721e
===QUESTION===
How to get the insert ID in JDBC?
I want to  INSERT  a record in a database (which is Microsoft SQL Server in my case) using JDBC in Java. At the same time, I want to obtain the insert ID. How can I achieve this using JDBC API? 
===LINK===
http://stackoverflow.com/questions/1915166/how-to-get-the-insert-id-in-jdbc
===KEYWORDS===
case insert jdbc java database 
===ANSWER===
437
<html><body><p>If it is an auto generated key, then you can use <a href="http://docs.oracle.com/javase/7/docs/api/java/sql/Statement.html#getGeneratedKeys%28%29" rel="nofollow noreferrer"><code>Statement#getGeneratedKeys()</code></a> for this. You need to call it on the same <code>Statement</code> as the one being used for the <code>INSERT</code>. You first need to create the statement using <a href="http://docs.oracle.com/javase/7/docs/api/java/sql/Statement.html#RETURN_GENERATED_KEYS" rel="nofollow noreferrer"><code>Statement.RETURN_GENERATED_KEYS</code></a> to notify the JDBC driver to return the keys. </p><p>Here's a basic example:</p><pre><code>public void create(User user) throws SQLException {
    try (
        Connection connection = dataSource.getConnection();
        PreparedStatement statement = connection.prepareStatement(SQL_INSERT,
                                      Statement.RETURN_GENERATED_KEYS);
    ) {
        statement.setString(1, user.getName());
        statement.setString(2, user.getPassword());
        statement.setString(3, user.getEmail());
        // ...

        int affectedRows = statement.executeUpdate();

        if (affectedRows == 0) {
            throw new SQLException("Creating user failed, no rows affected.");
        }

        try (ResultSet generatedKeys = statement.getGeneratedKeys()) {
            if (generatedKeys.next()) {
                user.setId(generatedKeys.getLong(1));
            }
            else {
                throw new SQLException("Creating user failed, no ID obtained.");
            }
        }
    }
}
</code></pre><p>Note that you're dependent on the JDBC driver whether it works. Currently, most of the last versions will do, but if I am correct, Oracle JDBC driver is still somewhat troublesome with this. MySQL and DB2 already supported it for ages. PostgreSQL started to support it short ago. No wording about MSSQL as I've never used it.</p><p>For Oracle, you can invoke a <code>CallableStatement</code> with a <code>RETURNING</code> clause or a <code>SELECT CURRVAL(sequencename)</code> (or whatever DB-specific syntax to do so) directly after the <code>INSERT</code> in the same transaction to obtain the last generated key. See also <a href="http://stackoverflow.com/questions/3552260/plsql-jdbc-how-to-get-last-row-id/3552353#3552353">this answer</a>.</p></body></html>

===ID===
584cbfcd3e2ca508e5f0721f
===QUESTION===
Increase heap size in Java
I am working on a Windows 2003 server (64-bit) with 8 GB RAM. How can I increase the heap memory maximum? I am using the  -Xmx1500m  flag to increase the heap size to 1500 Mb. Can I increase the heap memory to 75% of physical memory (6 GB Heap)? 
===LINK===
http://stackoverflow.com/questions/1565388/increase-heap-size-in-java
===KEYWORDS===
increase bit java working 
===ANSWER===
223
<html><body><p>You can increase to 4GB on a 32 bit system. If you're on a 64 bit system you can go higher. No need to worry if you've chosen incorrectly, if you ask for 5g on a 32 bit system java will complain about an invalid value and quit.</p><p>As others have posted, use the cmd-line flags - e.g. </p><pre><code>java -Xmx6g myprogram
</code></pre><p>You can get a full list (or a nearly full list, anyway) by typing java -X.</p></body></html>

===ID===
584cbfce3e2ca508e5f07220
===QUESTION===
Retain precision with double in Java
The above code prints: How would I get this to just print (or be able to use it as) 11.4? 
===LINK===
http://stackoverflow.com/questions/322749/retain-precision-with-double-in-java
===KEYWORDS===
print double java 
===ANSWER===
83
<html><body><p>As others have mentioned, you'll probably want to use the <a href="https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html" rel="nofollow noreferrer"><code>BigDecimal</code></a> class, if you want to have an exact representation of 11.4.</p><p>Now, a little explanation into why this is happening:</p><p>The <code>float</code> and <code>double</code> primitive types in Java are <a href="http://en.wikipedia.org/wiki/Floating_point" rel="nofollow noreferrer">floating point</a> numbers, where the number is stored as a binary representation of a fraction and a exponent.</p><p>More specifically, a double-precision floating point value such as the <code>double</code> type is a 64-bit value, where:</p><p>These parts are combined to produce a <code>double</code> representation of a value.</p><p>(Source: <a href="http://en.wikipedia.org/wiki/Double_precision" rel="nofollow noreferrer">Wikipedia: Double precision</a>)</p><p>For a detailed description of how floating point values are handled in Java, see the <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.2.3" rel="nofollow noreferrer">Section 4.2.3: Floating-Point Types, Formats, and Values</a> of the Java Language Specification.</p><p>The <code>byte</code>, <code>char</code>, <code>int</code>, <code>long</code> types are <a href="http://en.wikipedia.org/wiki/Fixed-point_arithmetic" rel="nofollow noreferrer">fixed-point</a> numbers, which are exact representions of numbers. Unlike fixed point numbers, floating point numbers will some times (safe to assume "most of the time") not be able to return an exact representation of a number. This is the reason why you end up with <code>11.399999999999</code> as the result of <code>5.6 + 5.8</code>.</p><p>When requiring a value that is exact, such as 1.5 or 150.1005, you'll want to use one of the fixed-point types, which will be able to represent the number exactly.</p><p>As has been mentioned several times already, Java has a <a href="https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html" rel="nofollow noreferrer"><code>BigDecimal</code></a> class which will handle very large numbers and very small numbers. </p><p>From the Java API Reference for the <code>BigDecimal</code> class:</p><p>Immutable,
  arbitrary-precision signed decimal
  numbers. A BigDecimal consists of an
  arbitrary precision integer unscaled
  value and a 32-bit integer scale. If
  zero or positive, the scale is the
  number of digits to the right of the
  decimal point. If negative, the
  unscaled value of the number is
  multiplied by ten to the power of the
  negation of the scale. The value of
  the number represented by the
  BigDecimal is therefore (unscaledValue
  × 10^-scale).</p><p>There has been many questions on Stack Overflow relating to the matter of floating point numbers and its precision. Here is a list of related questions that may be of interest:</p><p>If you really want to get down to the nitty gritty details of floating point numbers, take a look at <a href="http://docs.sun.com/source/806-3568/ncg_goldberg.html" rel="nofollow noreferrer">What Every Computer Scientist Should Know About Floating-Point Arithmetic</a>.</p></body></html>

===ID===
584cbfce3e2ca508e5f07221
===QUESTION===
What is the Java ?: operator called and what does it do?
I have been working with Java a couple of years, but up until recently I haven't run across this construct: This is probably a very simple question, but can someone explain it?  How do I read it?  I am pretty sure I know how it works. Correct?  What is this construct called? 
===LINK===
http://stackoverflow.com/questions/798545/what-is-the-java-operator-called-and-what-does-it-do
===KEYWORDS===
correct recently working read couple 
===ANSWER===
117
<html><body><p>Yes, it is a shorthand form of</p><pre><code>int count;
if (isHere)
    count = getHereCount(index);
else
    count = getAwayCount(index);
</code></pre><p>It's called the <strong>conditional operator</strong>. Many people (erroneously) call it <em>the ternary operator</em>, because it's the only ternary (three-argument) operator in Java, C, C++, and probably many other languages. But theoretically there <em>could</em> be another ternary operator, whereas there can only be one <em>conditional operator</em>.</p><p>The official name is given in the <a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.25" rel="nofollow noreferrer">Java Language Specification</a>:</p><p>The conditional operator <code>? :</code> uses the boolean value of one expression to decide which of two other expressions should be evaluated.</p><p>Note that both branches must lead to methods with return values:</p><p><strong>It is a compile-time error for either the second or the third operand expression to be an invocation of a void method.</strong></p><p><sup><em>In fact, by the grammar of expression statements (<a href="http://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.8" rel="nofollow noreferrer">§14.8</a>), it is not permitted for a conditional expression to appear in any context where an invocation of a void method could appear.</em></sup></p><p>So, if <code>doSomething()</code> and <code>doSomethingElse()</code> are void methods, you cannot compress this:</p><pre><code>if (someBool)
    doSomething();
else
    doSomethingElse();
</code></pre><p>into this:</p><pre><code>someBool ? doSomething() : doSomethingElse();
</code></pre><p>Simple words:</p><pre><code>booleanCondition ? executeThisPartIfBooleanConditionIsTrue : executeThisPartIfBooleanConditionIsFalse 
</code></pre></body></html>

===ID===
584cbfcf3e2ca508e5f07222
===QUESTION===
JTextFields on top of active drawing on JPanel, threading problems
Has anyone ever tried to use Swing to construct a proper multi-buffered rendering environment  on top of which Swing user interface elements can be added ?  In this case I have an animating red rectangle drawn onto a background. The background does not need to be updated every frame so I render it onto a BufferedImage and redraw only the portion necessary to clear the previous location of the rectangle. See the complete code below, this extends the example given by @trashgod in a previous thread,  here .  So far so good; smooth animation, low cpu usage, no flickering. Then I add a JTextField to the Jpanel (by clicking on any position on the screen), and focus on it by clicking inside the text box. Clearing the previous location of the rectangle now fails on every cursor blink, see the image below. I am curious if anyone has an idea of why this might happen (Swing not being thread-safe? The image being painted asynchronously?) and in what direction to look for possible solutions. This is on Mac OS 10.5, Java 1.6 
===LINK===
http://stackoverflow.com/questions/3256269/jtextfields-on-top-of-active-drawing-on-jpanel-threading-problems
===KEYWORDS===
@trashgod render frame focus good 
===ANSWER===
18
<html><body><p><code>NewTest</code> extends <code>JPanel</code>; but because you're not painting every pixel on each call to <code>paintComponent()</code>, you need to invoke the super-class's method and erase the old drawing:</p><pre><code>@Override
protected void paintComponent(Graphics g) {
    super.paintComponent(g);
    int width = this.getWidth();
    int height = this.getHeight();
    g.setColor(Color.black);
    g.fillRect(0, 0, width, height);
    ...
}
</code></pre><p>Addendum: As you note, setting the background color in the constructor precludes the need to fill the panel in <code>paintComponent()</code>, while <code>super.paintComponent()</code> allows the text field(s) to function correctly. As you observe, the proposed workaround is fragile. Instead, simplify the code and optimize as warranted. For example, you may not need the complication of insets, extra buffers and a component listener.</p><p>Addendum 2: Note that <code>super.paintComponent()</code> calls the UI delegate's <a href="http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/javax/swing/plaf/ComponentUI.html#update%28java.awt.Graphics,%20javax.swing.JComponent%29" rel="nofollow noreferrer"><code>update()</code></a> method, "which fills the specified component with its background color (if its opaque property is true)." You can use <code>setOpaque(false)</code> to preclude this.</p><p><img alt="Animation Test" src="https://i.stack.imgur.com/GOswq.png"/></p><pre><code>import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.awt.Transparency;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Timer;

/** @see http://stackoverflow.com/questions/3256941 */
public class AnimationTest extends JPanel implements ActionListener {

    private static final int WIDE = 640;
    private static final int HIGH = 480;
    private static final int RADIUS = 25;
    private static final int FRAMES = 24;
    private final Timer timer = new Timer(20, this);
    private final Rectangle rect = new Rectangle();
    private BufferedImage background;
    private int index;
    private long totalTime;
    private long averageTime;
    private int frameCount;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new AnimationTest().create();
            }
        });
    }

    private void create() {
        JFrame f = new JFrame("AnimationTest");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(this);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
        timer.start();
    }

    public AnimationTest() {
        super(true);
        this.setOpaque(false);
        this.setPreferredSize(new Dimension(WIDE, HIGH));
        this.addMouseListener(new MouseHandler());
        this.addComponentListener(new ComponentHandler());
    }

    @Override
    protected void paintComponent(Graphics g) {
        long start = System.nanoTime();
        super.paintComponent(g);
        int w = this.getWidth();
        int h = this.getHeight();
        g.drawImage(background, 0, 0, this);
        double theta = 2 * Math.PI * index++ / 64;
        g.setColor(Color.blue);
        rect.setRect(
            (int) (Math.sin(theta) * w / 3 + w / 2 - RADIUS),
            (int) (Math.cos(theta) * h / 3 + h / 2 - RADIUS),
            2 * RADIUS, 2 * RADIUS);
        g.fillOval(rect.x, rect.y, rect.width, rect.height);
        g.setColor(Color.white);
        if (frameCount == FRAMES) {
            averageTime = totalTime / FRAMES;
            totalTime = 0; frameCount = 0;
        } else {
            totalTime += System.nanoTime() - start;
            frameCount++;
        }
        String s = String.format("%1$5.3f", averageTime / 1000000d);
        g.drawString(s, 5, 16);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        this.repaint();
    }

    private class MouseHandler extends MouseAdapter {

        @Override
        public void mousePressed(MouseEvent e) {
            super.mousePressed(e);
            JTextField field = new JTextField("test");
            Dimension d = field.getPreferredSize();
            field.setBounds(e.getX(), e.getY(), d.width, d.height);
            add(field);
        }
    }

    private class ComponentHandler extends ComponentAdapter {

        private final GraphicsEnvironment ge =
            GraphicsEnvironment.getLocalGraphicsEnvironment();
        private final GraphicsConfiguration gc =
            ge.getDefaultScreenDevice().getDefaultConfiguration();
        private final Random r = new Random();

        @Override
        public void componentResized(ComponentEvent e) {
            super.componentResized(e);
            int w = getWidth();
            int h = getHeight();
            background = gc.createCompatibleImage(w, h, Transparency.OPAQUE);
            Graphics2D g = background.createGraphics();
            g.clearRect(0, 0, w, h);
            g.setColor(Color.green.darker());
            for (int i = 0; i &lt; 128; i++) {
                g.drawLine(w / 2, h / 2, r.nextInt(w), r.nextInt(h));
            }
            g.dispose();
            System.out.println("Resized to " + w + " x " + h);
        }
    }
}
</code></pre></body></html>

===ID===
584cbfcf3e2ca508e5f07223
===QUESTION===
What are the reasons why Map.get(Object key) is not (fully) generic
What are the reasons behind the decision to not have a fully generic get method 
in the interface of  java.util.Map<K, V> . To clarify the question, the signature of the method is  V get(Object key) instead of  V get(K key) and I'm wondering why (same thing for  remove, containsKey, containsValue ). 
===LINK===
http://stackoverflow.com/questions/857420/what-are-the-reasons-why-map-getobject-key-is-not-fully-generic
===KEYWORDS===
map generic java wondering thing 
===ANSWER===
197
<html><body><p>As mentioned by others, the reason why <code>get()</code>, etc. is not generic because the key of the entry you are retrieving does not have to be the same type as the object that you pass in to <code>get()</code>; the specification of the method only requires that they be equal. This follows from how the <code>equals()</code> method takes in an Object as parameter, not just the same type as the object.</p><p>Although it may be commonly true that many classes have <code>equals()</code> defined so that its objects can only be equal to objects of its own class, there are many places in Java where this is not the case. For example, the specification for <code>List.equals()</code> says that two List objects are equal if they are both Lists and have the same contents, even if they are different implementations of <code>List</code>. So coming back to the example in this question, according to the specification of the method is possible to have a <code>Map&lt;ArrayList, Something&gt;</code> and for me to call <code>get()</code> with a <code>LinkedList</code> as argument, and it should retrieve the key which is a list with the same contents. This would not be possible if <code>get()</code> were generic and restricted its argument type.</p></body></html>

===ID===
584cbfd03e2ca508e5f07224
===QUESTION===
What is x after “x = x++”?
What happens (behind the curtains) when this is executed? That is, when a variable is post incremented and assigned to itself in one statement? I compiled and executed this.  x  is still 7  even after the entire statement . In my book, it says that  x  is incremented! 
===LINK===
http://stackoverflow.com/questions/7911776/what-is-x-after-x-x
===KEYWORDS===
curtains executed incremented compiled assigned 
===ANSWER===
232
<html><body><p><code>x</code> does get incremented. But you are assigning the old value of <code>x</code> back into itself.</p><pre><code>x = x++;
</code></pre><p><code>x++</code> increments <code>x</code> and returns its old value. <code>x =</code> assigns the old value back to itself.</p><p>So in the end, <code>x</code> gets assigned back to its initial value.</p></body></html>

===ID===
584cbfd03e2ca508e5f07225
===QUESTION===
How to compare dates in Java?
How do I compare dates in between in Java?  Example: date1 is  22-02-2010 
 date2 is  07-04-2010  today  
 date3 is  25-12-2010 date3  is always greater than  date1  and  date2  is always today. How do I verify if today's date is in between date1 and date 3? 
===LINK===
http://stackoverflow.com/questions/2592501/how-to-compare-dates-in-java
===KEYWORDS===
date1 date3 date2 java greater 
===ANSWER===
333
<html><body><p><a href="http://java.sun.com/javase/6/docs/api/java/util/Date.html" rel="nofollow noreferrer">Date</a> has <a href="http://java.sun.com/javase/6/docs/api/java/util/Date.html#before(java.util.Date)" rel="nofollow noreferrer">before</a> and <a href="http://java.sun.com/javase/6/docs/api/java/util/Date.html#after(java.util.Date)" rel="nofollow noreferrer">after</a> methods and can be <a href="http://java.sun.com/javase/6/docs/api/java/util/Date.html#compareTo(java.util.Date)" rel="nofollow noreferrer">compared to each other</a> as follows:</p><pre><code>if(todayDate.after(historyDate) &amp;&amp; todayDate.before(futureDate)) {
    // In between
}
</code></pre><p>For an inclusive comparison:</p><pre><code>if(!historyDate.after(todayDate) &amp;&amp; !futureDate.before(todayDate)) {
    /* historyDate &lt;= todayDate &lt;= futureDate */ 
}
</code></pre><p>You could also give <a href="http://www.joda.org/joda-time/" rel="nofollow noreferrer">Joda-Time</a> a go, but note that:</p><p>Joda-Time is the <em>de facto</em> standard date and time library for Java prior to Java SE 8. Users are now asked to migrate to <a href="https://docs.oracle.com/javase/8/docs/api/java/time/package-summary.html" rel="nofollow noreferrer">java.time</a> (<a href="https://jcp.org/en/jsr/detail?id=310" rel="nofollow noreferrer">JSR-310</a>).</p><p>Back-ports are available for Java 6 and 7 as well as Android.</p></body></html>

===ID===
584cbfd13e2ca508e5f07226
===QUESTION===
How can I put a control in the JTableHeader of a JTable?
Given a  JTable  with a column of type  Boolean.class , the  default renderer  is a  JCheckBox . It's easy enough to select individual cells based on a  user selection , but it may be convenient to select all or none of the check boxes, too. These  recent   examples  mentioned using  JCheckBox  in the table header, but the implementation was awkward and unappealing. If I don't need to sort the column, how can I put a well-behaved control in the  JTableHeader ? Addendum: For convenience, I've added my  sscce  as an  answer , but I'd be pleased to accept an answer that addresses the  well-behaved  aspect of the problem. 
===LINK===
http://stackoverflow.com/questions/7137786/how-can-i-put-a-control-in-the-jtableheader-of-a-jtable
===KEYWORDS===
jcheckbox control addresses accept pleased 
===ANSWER===
13
<html><body><p>There are two parts of the problem (as I see it :-)</p><p>Usability: inventing UI-interaction/elements is prone to confusing users. In no particular order:</p><p>So even if interaction analysis comes out with a clear we-do-need/want-it, </p><p>Technical aspects</p></body></html>

===ID===
584cbfd13e2ca508e5f07227
===QUESTION===
Why is it frowned upon to use a null layout in Swing?
Recently, I started creating a program for the company I work for. Just as background info, I'm still a student and a beginner programmer, so my solution is probably not recommended and I didn't know how to do it otherwise, but it works and I'm not going to be judged for it because it's a student job totally unrelated to programming. The thing about the program is, it's going to be run on multiple different computer with different screen sizes and resolutions (800x600 and up). To make sure it takes as much of the screen as possible without losing any part of the program, I set the layout to null and hard-coded everything using relative values. The program is kiosk-style and I first get the screen size values and go from there (for example, off the top of my head, the left-side menu takes an eighth of the screen, the top bar 2%, etc.). I also use font metrics to make sure the components are sized correctly and that everything gets displayed nicely. My question is: why is it so frowned upon to make the layout null instead of using the layout managers? (I was told on some forums that this is a horrible way of doing things) I know how the layout manager works and know how to use the different layouts, but for the requirements of this program (multiple different resolutions, custom button shapes and placements, text changing on the components when you change language, etc.), I couldn't see myself using the layout managers to do it all. How do you more experienced programmers use the layout managers in a situation like this? And what do you do when you want a button to be somewhere specific and other components somewhere else specific that don't really match any of the predefined layouts? 
===LINK===
http://stackoverflow.com/questions/6592468/why-is-it-frowned-upon-to-use-a-null-layout-in-swing
===KEYWORDS===
work set hard layouts computer 
===ANSWER===
10
<html><body><p>If you layer the layout managers correctly the screen will re-flow to different sizes for you, the idea is to use a single set of layout managers on ALL screen sizes.</p><p>If you use null you will have to do each screen size yourself.  Not only that but if the app can be windowed you have to support every possible size they might scroll to.</p><p>That's kind of difficult to do, but the layout mangers are designed to do just that.</p><p>There are some common tricks.  BorderLayout is a great layout to start with.  Sometimes you might use it at multiple levels--often with just 2 or 3 components in it.  That's because it's really good at giving all but one area the minimum required area and giving everything else to the CENTER.</p><p>FlowLayout can be useful but it's tricky if your components are different sizes.</p><p>I wouldn't try GridBagLayout unless you are planning to write code to feed your layout manager (an excellent solution at that!).  </p><p>I also wouldn't use GUI builders, they don't know the overall way you want to reflow your layout.</p></body></html>

===ID===
584cbfd23e2ca508e5f07228
===QUESTION===
How to really read text file from classpath in Java
I am trying to read a text file which is set in CLASSPATH system variable. Not a user variable. I am trying to get input stream to the file as below: Place the directory of file ( D:\myDir )in CLASSPATH and try below: Place full path of file ( D:\myDir\SomeTextFile.txt )in CLASSPATH and try the same above 3 lines of code. But unfortunately NONE of them are working and I am always getting  null  into my InputStream  in . 
===LINK===
http://stackoverflow.com/questions/1464291/how-to-really-read-text-file-from-classpath-in-java
===KEYWORDS===
\mydir\sometextfile \mydir set java working 
===ANSWER===
403
<html><body><p>With the directory on the classpath, from a class loaded by the same classloader, you should be able to use either of:</p><pre><code>// From ClassLoader, all paths are "absolute" already - there's no context
// from which they could be relative. Therefore you don't need a leading slash.
InputStream in = this.getClass().getClassLoader()
                                .getResourceAsStream("SomeTextFile.txt");
// From Class, the path is relative to the package of the class unless
// you include a leading slash, so if you don't want to use the current
// package, include a slash like this:
InputStream in = this.getClass().getResourceAsStream("/SomeTextFile.txt");
</code></pre><p>If those aren't working, that suggests something else is wrong.</p><p>So for example, take this code:</p><pre><code>package dummy;

import java.io.*;

public class Test
{
    public static void main(String[] args)
    {
        InputStream stream = Test.class.getResourceAsStream("/SomeTextFile.txt");
        System.out.println(stream != null);
        stream = Test.class.getClassLoader().getResourceAsStream("SomeTextFile.txt");
        System.out.println(stream != null);
    }
}
</code></pre><p>And this directory structure:</p><pre><code>code
    dummy
          Test.class
txt
    SomeTextFile.txt
</code></pre><p>And then (using the Unix path separator as I'm on a Linux box):</p><pre><code>java -classpath code:txt dummy.Test
</code></pre><p>Results:</p><pre><code>true
true
</code></pre></body></html>

===ID===
584cbfd23e2ca508e5f07229
===QUESTION===
Java URL encoding of query string parameters
Say I have a URL  and I have a query entered by the user such as: random word £500 bank $ I want the result to be a properly encoded URL: What's the best way to achieve this? I tried  URLEncoder  and creating URI/URL objects but none of them come out quite right. 
===LINK===
http://stackoverflow.com/questions/10786042/java-url-encoding-of-query-string-parameters
===KEYWORDS===
url urlencoder user achieve result 
===ANSWER===
661
<html><body><p><a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html"><code>URLEncoder</code></a> should be the way to go. You only need to keep in mind to encode <em>only</em> the individual query string parameter name and/or value, not the entire URL, for sure not the query string parameter separator character <code>&amp;</code> nor the parameter name-value separator character <code>=</code>.</p><pre><code>String q = "random word £500 bank $";
String url = "http://example.com/query?q=" + URLEncoder.encode(q, "UTF-8");
</code></pre><p>Note that spaces in query parameters are represented by <code>+</code>, not <code>%20</code>, which is legitimately valid. The <code>%20</code> is usually to be used to represent spaces in URI itself (the part before the URI-query string separator character <code>?</code>), not in query string (the part after <code>?</code>).</p><p>Also note that there are two <code>encode()</code> methods. One without charset argument and another with. The one without charset argument is deprecated. Never use it and always specify the charset argument. The <a href="http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html">javadoc</a> even explicitly recommends to use the UTF-8 encoding, as mandated by <a href="http://tools.ietf.org/html/rfc3986">RFC3986</a> and <a href="http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars">W3C</a>.</p><p>All other characters are unsafe and are first converted into one or more bytes using some encoding scheme. Then each byte is represented by the 3-character string "%xy", where xy is the two-digit hexadecimal representation of the byte. <strong>The recommended encoding scheme to use is UTF-8</strong>. However, for compatibility reasons, if an encoding is not specified, then the default encoding of the platform is used.</p></body></html>

===ID===
584cbfd23e2ca508e5f0722a
===QUESTION===
Capturing stdout when calling Runtime.exec
When experiencing networking problems on client machines, I'd like to be able to run a few command lines and email the results of them to myself. I've found Runtime.exec will allow me to execute arbitrary commands, but Collecting the results in a String is more interesting. I realize I could redirect output to a file, and then read from the file, but my spidey sense is telling me there's a more elegant way of doing it. Suggestions? 
===LINK===
http://stackoverflow.com/questions/882772/capturing-stdout-when-calling-runtime-exec
===KEYWORDS===
collecting run string exec read 
===ANSWER===
38
<html><body><p>You need to capture both the std out and std err in the process. You can then write std out to a file/mail or similar.</p><p>See <a href="http://www.javaworld.com/javaworld/jw-12-2000/jw-1229-traps.html?page=4" rel="nofollow noreferrer">this article</a> for more info, and in particular note the <code>StreamGobbler</code> mechanism that captures stdout/err in separate threads. This is essential to prevent blocking and is the source of numerous errors if you don't do it properly!</p></body></html>

===ID===
584cbfd33e2ca508e5f0722b
===QUESTION===
How to read a large text file line by line using Java?
I need to read a large text file of around 5-6 GB line by line using Java. How can I do this quickly?  
===LINK===
http://stackoverflow.com/questions/5868369/how-to-read-a-large-text-file-line-by-line-using-java
===KEYWORDS===
read line java quickly 
===ANSWER===
611
<html><body><p>A common pattern is to use</p><pre><code>try (BufferedReader br = new BufferedReader(new FileReader(file))) {
    String line;
    while ((line = br.readLine()) != null) {
       // process the line.
    }
}
</code></pre><p>You can read the data faster if you assume there is no character encoding. e.g. ASCII-7 but it won't make much difference.  It is highly likely that what you do with the data will take much longer.</p><p>EDIT: A less common pattern to use which avoids the scope of <code>line</code> leaking.</p><pre><code>try(BufferedReader br = new BufferedReader(new FileReader(file))) {
    for(String line; (line = br.readLine()) != null; ) {
        // process the line.
    }
    // line is not visible here.
}
</code></pre><p>UPDATE: In Java 8 you can do</p><pre><code>try (Stream&lt;String&gt; stream = Files.lines(Paths.get(fileName))) {
        stream.forEach(System.out::println);
}
</code></pre><p>NOTE: You have to place the Stream in a try-with-resource block to ensure the file is closed. If you don't do this, the GC might clean up/close the file before you run out of file handles (or it might not)</p></body></html>

===ID===
584cbfd43e2ca508e5f0722c
===QUESTION===
What are the pros and cons of the leading Java HTML parsers? [closed]
Searching SO and Google, I've found that there are a few Java HTML parsers which are consistently recommended by various parties. Unfortunately it's hard to find any information on the strengths and weaknesses of the various libraries. I'm hoping that some people have spent some comparing these libraries, and can share what they've learned. Here's what I've seen: And if there's a major parser that I've missed, I'd love to hear about its pros and cons as well. Thanks! 
===LINK===
http://stackoverflow.com/questions/3152138/what-are-the-pros-and-cons-of-the-leading-java-html-parsers
===KEYWORDS===
information google love hoping people 
===ANSWER===
197
<html><body><p>Almost all known HTML parsers implements the <a href="http://docs.oracle.com/javase/6/docs/api/org/w3c/dom/package-summary.html" rel="nofollow noreferrer">W3C DOM API</a> (part of the JAXP API, Java API for XML processing) and gives you a <a href="http://docs.oracle.com/javase/6/docs/api/org/w3c/dom/Document.html" rel="nofollow noreferrer"><code>org.w3c.dom.Document</code></a> back which is ready for direct use by JAXP API. The major differences are usually to be found in the features of the parser in question. Most parsers are to a certain degree forgiving and lenient with non-wellformed HTML ("tagsoup"), like <a href="http://jtidy.sourceforge.net/" rel="nofollow noreferrer">JTidy</a>, <a href="http://nekohtml.sourceforge.net" rel="nofollow noreferrer">NekoHTML</a>, <a href="http://home.ccil.org/~cowan/XML/tagsoup/" rel="nofollow noreferrer">TagSoup</a> and <a href="http://htmlcleaner.sourceforge.net/" rel="nofollow noreferrer">HtmlCleaner</a>. You usually use this kind of HTML parsers to "tidy" the HTML source (e.g. replacing the HTML-valid <code>&lt;br&gt;</code> by a XML-valid <code>&lt;br /&gt;</code>), so that you can traverse it "the usual way" using the W3C DOM and JAXP API.</p><p>The only ones which jumps out are <a href="http://htmlunit.sourceforge.net/" rel="nofollow noreferrer">HtmlUnit</a> and <a href="http://jsoup.org/" rel="nofollow noreferrer">Jsoup</a>. </p><p><a href="http://htmlunit.sourceforge.net/" rel="nofollow noreferrer">HtmlUnit</a> provides a completely own API which gives you the possibility to act like a webbrowser programmatically. I.e. enter form values, click elements, invoke JavaScript, etcetera. It's much more than alone a HTML parser. It's a real "GUI-less webbrowser" and HTML unit testing tool.</p><p><a href="http://jsoup.org/" rel="nofollow noreferrer">Jsoup</a> also provides a completely own API. It gives you the possibility to select elements using <a href="http://jquery.com" rel="nofollow noreferrer">jQuery</a>-like <a href="http://www.w3.org/TR/css3-selectors/" rel="nofollow noreferrer">CSS selectors</a> and provides a slick API to traverse the HTML DOM tree to get the elements of interest. </p><p>Particularly the traversing of the HTML DOM tree is the major strength of Jsoup. Ones who have worked with <code>org.w3c.dom.Document</code> know what a hell of pain it is to traverse the DOM using the verbose <a href="http://docs.oracle.com/javase/6/docs/api/org/w3c/dom/NodeList.html" rel="nofollow noreferrer"><code>NodeList</code></a> and <a href="http://docs.oracle.com/javase/6/docs/api/org/w3c/dom/Node.html" rel="nofollow noreferrer"><code>Node</code></a> APIs. True, <a href="http://docs.oracle.com/javase/6/docs/api/javax/xml/xpath/XPath.html" rel="nofollow noreferrer"><code>XPath</code></a> makes the life easier, but still, it's another learning curve and it can end up to be still verbose. </p><p>Here's an example which uses a "plain" W3C DOM parser like JTidy in combination with XPath to extract the first paragraph of your question and the names of all answerers (I am using XPath since without it, the code needed to gather the information of interest would otherwise grow up 10 times as big, without writing utility/helper methods).</p><pre><code>String url = "http://stackoverflow.com/questions/3152138";
Document document = new Tidy().parseDOM(new URL(url).openStream(), null);
XPath xpath = XPathFactory.newInstance().newXPath();

Node question = (Node) xpath.compile("//*[@id='question']//*[contains(@class,'post-text')]//p[1]").evaluate(document, XPathConstants.NODE);
System.out.println("Question: " + question.getFirstChild().getNodeValue());

NodeList answerers = (NodeList) xpath.compile("//*[@id='answers']//*[contains(@class,'user-details')]//a[1]").evaluate(document, XPathConstants.NODESET);
for (int i = 0; i &lt; answerers.getLength(); i++) {
    System.out.println("Answerer: " + answerers.item(i).getFirstChild().getNodeValue());
}
</code></pre><p>And here's an example how to do exactly the same with Jsoup:</p><pre><code>String url = "http://stackoverflow.com/questions/3152138";
Document document = Jsoup.connect(url).get();

Element question = document.select("#question .post-text p").first();
System.out.println("Question: " + question.text());

Elements answerers = document.select("#answers .user-details a");
for (Element answerer : answerers) {
    System.out.println("Answerer: " + answerer.text());
}
</code></pre><p>Do you see the difference? It's not only less code, but Jsoup is also relatively easy to grasp if you already have moderate experience with CSS selectors (by e.g. developing websites and/or using jQuery).</p><p>The pros and cons of each should be clear enough now. If you just want to use the standard JAXP API to traverse it, then go for the first mentioned group of parsers. There are pretty <a href="http://java-source.net/open-source/html-parsers" rel="nofollow noreferrer">a lot</a> of them. Which one to choose depends on the features it provides (how is HTML cleaning made easy for you? are there some listeners/interceptors and tag-specific cleaners?) and the robustness of the library (how often is it updated/maintained/fixed?). If you like to unit test the HTML, then HtmlUnit is the way to go. If you like to extract specific data from the HTML (which is more than often the real world requirement), then Jsoup is the way to go.</p></body></html>

===ID===
584cbfd43e2ca508e5f0722d
===QUESTION===
Is it possible to use Java 8 for Android development?
Searching the web, it is not clear if Java 8 is supported for Android development or not. Before I download/setup Java 8, can some one point me at any "official" documentation that say Java 8 is or is not supported for Android development. 
===LINK===
http://stackoverflow.com/questions/23318109/is-it-possible-to-use-java-8-for-android-development
===KEYWORDS===
web official point clear supported 
===ANSWER===
114
<html><body><p>I think it is too early to say if Java 8 is suitable for Android development, officially Android needs the Java 6 JDK as mentioned at the bottom of this page: <a href="https://developer.android.com/sdk/installing/installing-adt.html" rel="nofollow noreferrer">https://developer.android.com/sdk/installing/installing-adt.html</a></p><p>If you installed the Java 8 JDK, then give it a try, if any problems appears try to set the compiler as 1.6 in Eclipse from window menu → <strong>Preferences</strong> → <strong>Java</strong> → <strong>Compiler</strong>.
By the way, this is works for me with Java 7:</p><p><img alt="Eclipse Preferences -&gt; Java -&gt; Compiler" src="https://i.stack.imgur.com/SCTyV.png"/></p><p>According to the <a href="http://developer.android.com/sdk/installing/index.html?pkg=studio" rel="nofollow noreferrer">Installing Android Studio</a> web page, to build apps for Android 5.0 and higher, JDK 7 is required:</p><p>Before you set up Android Studio, be sure you have installed JDK 6 or higher (the JRE alone is not sufficient)—JDK 7 is required when developing for Android 5.0 and higher. To check if you have JDK installed (and which version), open a terminal and type <code>javac -version</code>. If the JDK is not available or the version is lower than 6, <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="nofollow noreferrer">go download JDK</a>.</p><p>Officially:</p><p>Java 7 or higher is required if you are targeting Android 5.0 and
  higher.</p><p>this is implicit announce that Java 8 will work too, this is mentioned in eclipse plugin ADT page, but not mentioned in Android studio page or not updated yet. </p><p>Unofficially: install multiple JDK and try.</p><p><a href="http://developer.android.com/tools/sdk/eclipse-adt.html" rel="nofollow noreferrer">eclipse plugin ADT page:</a> </p><p><a href="http://developer.android.com/sdk/index.html#Requirements" rel="nofollow noreferrer">Android studio page:</a></p><p>Now it is possible to use some features of java 8 using the new toolchain called <a href="http://tools.android.com/tech-docs/jackandjill" rel="nofollow noreferrer">Jack &amp; Jill</a>, as mentioned in <a href="https://youtu.be/B08iLAtS3AQ?t=28m14s" rel="nofollow noreferrer">GOOGLE I/O 2016</a> , but still does not support all java 8 features.
For a how-to see <a href="https://developer.android.com/preview/j8-jack.html" rel="nofollow noreferrer">Java 8 Language Features | Android Developers</a>.</p></body></html>

===ID===
584cbfd53e2ca508e5f0722e
===QUESTION===
Why is it bad practice to call System.gc()?
After  answering  a question about how to  force-free objects in Java  (the guy was clearing a 1.5GB HashMap) with  System.gc() , I was told it's bad practice to call  System.gc()  manually, but the comments were not entirely convincing. In addition, no one seemed to dare to upvote, nor downvote my answer. I was told there that it's bad practice, but then I was also told that garbage collector runs don't systematically stop the world anymore, and that it could also effectively be used by the JVM only as a hint, so I'm kind of at loss. I do understand that the JVM usually knows better than you when it needs to reclaim memory. I also understand that worrying about a few kilobytes of data is silly. I also understand that even megabytes of data isn't what it was a few years back. But still, 1.5 gigabytes? And you  know  there's like 1.5 GB of data hanging around in memory; it's not like it's a shot in the dark. Is  System.gc()  systematically bad, or is there some point at which it becomes okay? So the question is actually double: 
===LINK===
http://stackoverflow.com/questions/2414105/why-is-it-bad-practice-to-call-system-gc
===KEYWORDS===
point force manually effectively megabytes 
===ANSWER===
164
<html><body><p>The reason everyone always says to avoid <code>System.gc()</code> is that it is a <em>pretty good indicator of fundamentally broken code</em>.  Any code that depends on it for correctness is certainly broken; any that rely on it for performance are most likely broken.</p><p>You don't know what sort of garbage collector you are running under.  There are certainly some that do not <em>"stop the world"</em> as you assert, but some JVMs aren't that smart or for various reasons (perhaps they are on a phone?) don't do it.  You don't know what it's going to do.</p><p>Also, it's not guaranteed to do anything.  The JVM may just entirely ignore your request.</p><p>The combination of "you don't know what it will do," "you don't know if it will even help," and "you shouldn't need to call it anyway" are why people are so forceful in saying that generally you shouldn't call it.  I think it's a case of "if you need to ask whether you should be using this, you shouldn't"</p><p><strong>EDIT</strong> to address a few concerns from the other thread:</p><p>After reading the thread you linked, there's a few more things I'd like to point out.
First, someone suggested that calling <code>gc()</code> may return memory to the system.  That's certainly not necessarily true - the Java heap itself grows independently of Java allocations.  </p><p>As in, the JVM will hold memory (many tens of megabytes) and grow the heap as necessary.  It doesn't necessarily return that memory to the system even when you free Java objects; it is perfectly free to hold on to the allocated memory to use for future Java allocations.</p><p>To show that it's possible that <code>System.gc()</code> does nothing, view:</p><p><a href="http://bugs.sun.com/view_bug.do?bug_id=6668279" rel="nofollow noreferrer">http://bugs.sun.com/view_bug.do?bug_id=6668279</a></p><p>and in particular that there's a <a href="http://java.sun.com/javase/technologies/hotspot/vmoptions.jsp" rel="nofollow noreferrer">-XX:DisableExplicitGC</a> VM option.</p></body></html>

===ID===
584cbfd53e2ca508e5f0722f
===QUESTION===
Immutability of Strings in Java
Consider the following example. Now, in Java, String objects are immutable. Then how come the object  str  can be assigned value "Help!". Isn't this contradicting the immutability of strings in Java? Can anybody please explain me the exact concept of immutability? Edit: Ok. I am now getting it, but just one follow-up question. What about the following code:  Does this mean that two objects are created again ("Mississippi" and "M!ss!ss!pp!") and the reference  str  points to a different object after  replace()  method?  
===LINK===
http://stackoverflow.com/questions/1552301/immutability-of-strings-in-java
===KEYWORDS===
contradicting mississippi code java objects 
===ANSWER===
185
<html><body><p><code>str</code> is not an object, it's a reference to an object. <code>"Hello"</code> and <code>"Help!"</code> are two distinct <code>String</code> objects. Thus, <code>str</code> <em>points to</em> a string. You can change what it <em>points to</em>, but not that which it <em>points at</em>.</p><p>Take this code, for example:</p><pre><code>String s1 = "Hello";
String s2 = s1;
// s1 and s2 now point at the same string - "Hello"
</code></pre><p>Now, there is nothing<sup>1</sup> we could do to <code>s1</code> that would affect the value of <code>s2</code>. They refer to the same object - the string <code>"Hello"</code> - but that object is immutable and thus cannot be altered. </p><p>If we do something like this:</p><pre><code>s1 = "Help!";
System.out.println(s2); // still prints "Hello"
</code></pre><p>Here we see the difference between mutating an object, and changing a reference. <code>s2</code> still points to the same object as we initially set <code>s1</code> to point to. Setting <code>s1</code> to <code>"Help!"</code> only changes the <em>reference</em>, while the <code>String</code> object it originally referred to remains unchanged. </p><p>If strings <em>were</em> mutable, we could do something like this: </p><pre><code>String s1 = "Hello";
String s2 = s1;
s1.setCharAt(1, 'a'); // Fictional method that sets character at a given pos in string
System.out.println(s2); // Prints "Hallo"
</code></pre><p><strong>Edit to respond to OP's edit:</strong></p><p>If you look at the <a href="http://www.docjar.com/html/api/java/lang/String.java.html#2041" rel="nofollow noreferrer">source code for String.replace(char,char)</a> (also available in src.zip in your JDK installation directory -- a pro tip is to look there whenever you wonder how something really works) you can see that what it does is the following:</p><p>So yes, <code>"Mississippi".replace('i', '!')</code> creates a new <code>String</code> object. Again, the following holds:</p><pre><code>String s1 = "Mississippi";
String s2 = s1;
s1 = s1.replace('i', '!');
System.out.println(s1); // Prints "M!ss!ss!pp!"
System.out.println(s2); // Prints "Mississippi"
System.out.println(s1 == s2); // Prints "false" as s1 and s2 are two different objects
</code></pre><p>Your homework for now is to see what the above code does if you change <code>s1 = s1.replace('i', '!');</code> to <code>s1 = s1.replace('Q', '!');</code> :)</p><p><sup>1</sup> Actually, it <em>is</em> possible to mutate strings (and other immutable objects). It requires reflection and is very, very dangerous and should never ever be used unless you're actually interested in destroying the program.</p></body></html>

===ID===
584cbfd63e2ca508e5f07230
===QUESTION===
Why is using a wild card with a Java import statement bad?
It is much more convenient and cleaner to use a single statement like than to import a bunch of individual classes What is wrong with using a wildcard in the  import  statement? 
===LINK===
http://stackoverflow.com/questions/147454/why-is-using-a-wild-card-with-a-java-import-statement-bad
===KEYWORDS===
cleaner convenient wrong wildcard import 
===ANSWER===
252
<html><body><p>The only problem with it is that it clutters your local namespace.  For example, let's say that you're writing a Swing app, and so need <code>java.awt.Event</code>, and are also interfacing with the company's calendaring system, which has <code>com.mycompany.calendar.Event</code>.  If you import both using the wildcard method, one of these three things happens:</p><p>The advantage of explicitly listing all imports is that I can tell at a glance which class you meant to use, which simply makes reading the code that much easier. If you're just doing a quick one-off thing, there's nothing explicitly <em>wrong</em>, but future maintainers will thank you for your clarity otherwise.</p></body></html>

===ID===
584cbfd63e2ca508e5f07231
===QUESTION===
Method Overloading for null argument
I have added three methods with parameters: When I am calling  doSomething(null)  , then compiler throws error as  ambiguous methods . So is the issue because  Integer  and  char[]  methods or  Integer  and  Object  methods? 
===LINK===
http://stackoverflow.com/questions/5229809/method-overloading-for-null-argument
===KEYWORDS===
added methods parameters char integer 
===ANSWER===
131
<html><body><p>Java will always try to use the most specific applicable version of a method that's available (see <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.12.2.5">JLS §15.12.2</a>).</p><p><code>null</code> is a valid value for the types <code>Object</code>, <code>char[]</code> and <code>Integer</code>. Therefore all 3 version are applicable, so Java will have to find the most specific one.</p><p>Since <code>Object</code> is the super-type of <code>char[]</code>, the array version is more specific than the <code>Object</code>-version. So if only those two methods exist, the <code>char[]</code> version will be chosen.</p><p>When both the <code>char[]</code> and <code>Integer</code> versions are available, then <strong>both</strong> of them are more specific than <code>Object</code> but none is more specific than the other, so Java can't decide which one to call. In this case you'll have to explicitly mention which one you want to call by casting the argument to the appropriate type.</p><p>Note that in practice this problem occurs far more seldom than one might think. The reason for this is that it only happens when you're explicitly calling a method with <code>null</code> or with a variable of a rather un-specific type (such as <code>Object</code>).</p><p>On the contrary, the following invocation would be perfectly unambiguous:</p><pre><code>char[] x = null;
doSomething(x);
</code></pre><p>Although you're still passing the value <code>null</code>, Java knows exactly which method to call, since it will take the type of the variable into account.</p></body></html>

===ID===
584cbfd73e2ca508e5f07232
===QUESTION===
How to parse a date?
I am trying to parse this date with  SimpleDateFormat  and it is not working: If I try this code with strDate= "2008-10-14" , I have a positive answer. What's the problem? How can I parse this format? PS. I got this date from a  jDatePicker  and there is no instruction on how modify the date format I get when the user chooses a date. 
===LINK===
http://stackoverflow.com/questions/999172/how-to-parse-a-date
===KEYWORDS===
code working format instruction modify 
===ANSWER===
169
<html><body><p>You cannot expect to parse a date with a SimpleDateFormat that is set up with a different format.  </p><p>To parse your "Thu Jun 18 20:56:02 EDT 2009" date string you need a SimpleDateFormat like this (roughly):</p><pre><code>SimpleDateFormat parser=new SimpleDateFormat("EEE MMM d HH:mm:ss zzz yyyy");
</code></pre><p>Use this to parse the string into a Date, and then your other SimpleDateFormat to turn that Date into the format you want.</p><pre><code>        String input = "Thu Jun 18 20:56:02 EDT 2009";
        SimpleDateFormat parser = new SimpleDateFormat("EEE MMM d HH:mm:ss zzz yyyy");
        Date date = parser.parse(input);
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = formatter.format(date);

        ...
</code></pre><p>JavaDoc: <a href="http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html" rel="nofollow noreferrer">http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html</a></p></body></html>

===ID===
584cbfd73e2ca508e5f07233
===QUESTION===
Why is subtracting these two times (in 1927) giving a strange result?
If I run the following program, which parses two date strings referencing times one second apart and compares them: The output is: Why is  ld4-ld3  not  1  (as I would expect from the one-second difference in the times), but  353 ? If I change the dates to times one second later: Then  ld4-ld3  will be  1 . Java version: 
===LINK===
http://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result
===KEYWORDS===
dates run giving parses times 
===ANSWER===
7945
<html><body><p>It's a time zone change on December 31st in Shanghai.</p><p>See <a href="http://www.timeanddate.com/worldclock/clockchange.html?n=237&amp;year=1927">this page</a> for details of 1927 in Shanghai. Basically at midnight at the end of 1927, the clocks went back 5 minutes and 52 seconds. So "1927-12-31 23:54:08" actually happened twice, and it looks like Java is parsing it as the <em>later</em> possible instant for that local date/time - hence the difference.</p><p>Just another episode in the often weird and wonderful world of time zones.</p><p><strong>EDIT:</strong> Stop the press! History changes...</p><p>The original question would no longer demonstrate quite the same behaviour, if rebuilt with  version 2013a of <a href="https://code.google.com/p/noda-time/source/browse/src/NodaTime.Demo/StackOverflowExamples.cs">TZDB</a>. In 2013a, the result would be 358 seconds, with a transition time of 23:54:03 instead of 23:54:08.</p><p>I only noticed this because I'm collecting questions like this in Noda Time, in the form of <a href="https://code.google.com/p/noda-time/source/browse/src/NodaTime.Demo/StackOverflowExamples.cs">unit tests</a>... The test has now been changed, but it just goes to show - not even historical data is safe.</p><p><strong>EDIT:</strong> History has changed again...</p><p>In TZDB 2014f, the time of the change has moved to 1900-12-31, and it's now a mere 343 second change (so the time between <code>t</code> and <code>t+1</code> is 344 seconds, if you see what I mean).</p><p><strong>EDIT:</strong> To answer <a href="http://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result/6841479#comment22684267_6841479">Ken Kin's question</a> around a transition at 1900... it looks like the Java timezone implementation treats <em>all</em> time zones as simply being in their standard time for any instant before the start of 1900 UTC:</p><pre><code>import java.util.TimeZone;

public class Test {
    public static void main(String[] args) throws Exception {
        long startOf1900Utc = -2208988800000L;
        for (String id : TimeZone.getAvailableIDs()) {
            TimeZone zone = TimeZone.getTimeZone(id);
            if (zone.getRawOffset() != zone.getOffset(startOf1900Utc - 1)) {
                System.out.println(id);
            }
        }
    }
}
</code></pre><p>The code above produces no output on my Windows machine. So any time zone which has any offset other than its standard one at the start of 1900 will count that as a transition. TZDB itself has some data going back earlier than that, and doesn't rely on any idea of a "fixed" standard time (which is what <code>getRawOffset</code> assumes to be a valid concept) so other libraries needn't introduce this artificial transition.</p></body></html>

===ID===
584cbfd83e2ca508e5f07234
===QUESTION===
How can I pad an integers with zeros on the left?
How do you left pad an int with zeros in java when converting to a string? I'm basically looking to pad out integers up to 9999 with the leading zeros (e.g. 1 = "0001"). 
===LINK===
http://stackoverflow.com/questions/473282/how-can-i-pad-an-integers-with-zeros-on-the-left
===KEYWORDS===
integers java string int pad 
===ANSWER===
1170
<html><body><p>Use <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#format-java.lang.String-java.lang.Object...-" rel="nofollow noreferrer"><code>java.lang.String.format(String,Object...)</code></a> like this:</p><pre><code>String.format("%05d", yournumber);
</code></pre><p>for zero-padding with a length of 5. For hexadecimal output replace the <code>d</code> with an <code>x</code> as in <code>"%05x"</code>.</p><p>The full formatting options are documented as part of <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html" rel="nofollow noreferrer"><code>java.util.Formatter</code></a>.</p></body></html>

===ID===
584cbfd83e2ca508e5f07235
===QUESTION===
How to get UTF-8 working in Java webapps?
I need to get UTF-8 working in my Java webapp (servlets + JSP, no framework used) to support  äöå  etc. for regular Finnish text and Cyrillic alphabets like  ЦжФ  for special cases. My setup is the following: Database used: MySQL 5.x Users mainly use Firefox2 but also Opera 9.x, FF3, IE7 and Google Chrome are used to access the site. How to achieve this? 
===LINK===
http://stackoverflow.com/questions/138948/how-to-get-utf-8-working-in-java-webapps
===KEYWORDS===
utf users database setup ff3 
===ANSWER===
490
<html><body><p><em>Answering myself as the FAQ of this site encourages it. This works for me: </em></p><p>Mostly characters äåö are not a problematic as the default character set used by browsers and tomcat/java for webapps is latin1 ie. ISO-8859-1 which "understands" those characters.</p><p>To get UTF-8 working under Java+Tomcat+Linux/Windows+Mysql requires the following:</p><p>It's necessary to configure that the connector uses UTF-8 to encode url (GET request) parameters:</p><pre><code>&lt;Connector port="8080" maxHttpHeaderSize="8192"
 maxThreads="150" minSpareThreads="25" maxSpareThreads="75"
 enableLookups="false" redirectPort="8443" acceptCount="100"
 connectionTimeout="20000" disableUploadTimeout="true" 
 compression="on" 
 compressionMinSize="128" 
 noCompressionUserAgents="gozilla, traviata" 
 compressableMimeType="text/html,text/xml,text/plain,text/css,text/ javascript,application/x-javascript,application/javascript"
 URIEncoding="UTF-8"
/&gt;
</code></pre><p>The key part being <b>URIEncoding="UTF-8"</b> in the above example. This quarantees that Tomcat handles all incoming GET parameters as UTF-8 encoded.
As a result, when the user writes the following to the address bar of the browser:</p><pre><code> https://localhost:8443/ID/Users?action=search&amp;name=*ж*
</code></pre><p>the character ж is handled as UTF-8 and is encoded to (usually by the browser before even getting to the server) as <b>%D0%B6</b>.</p><p><i>POST request are not affected by this.</i></p><p>Then it's time to force the java webapp to handle all requests and responses as UTF-8 encoded. This requires that we define a character set filter like the following:</p><pre><code>package fi.foo.filters;

import javax.servlet.*;
import java.io.IOException;

public class CharsetFilter implements Filter {

    private String encoding;

    public void init(FilterConfig config) throws ServletException {
        encoding = config.getInitParameter("requestEncoding");
        if (encoding == null) encoding = "UTF-8";
    }

    public void doFilter(ServletRequest request, ServletResponse response, FilterChain next)
            throws IOException, ServletException {
        // Respect the client-specified character encoding
        // (see HTTP specification section 3.4.1)
        if (null == request.getCharacterEncoding()) {
            request.setCharacterEncoding(encoding);
        }

        // Set the default response content type and encoding
        response.setContentType("text/html; charset=UTF-8");
        response.setCharacterEncoding("UTF-8");

        next.doFilter(request, response);
    }

    public void destroy() {
    }
}
</code></pre><p>This filter makes sure that if the browser hasn't set the encoding used in the request, that it's set to UTF-8. </p><p>The other thing done by this filter is to set the default response encoding ie. the encoding in which the returned html/whatever is. The alternative is to set the response encoding etc. in each controller of the application. </p><p>This filter has to be added to the <b>web.xml</b> or the deployment descriptor of the webapp:</p><pre><code> &lt;!--CharsetFilter start--&gt; 

  &lt;filter&gt;
    &lt;filter-name&gt;CharsetFilter&lt;/filter-name&gt;
    &lt;filter-class&gt;fi.foo.filters.CharsetFilter&lt;/filter-class&gt;
      &lt;init-param&gt;
        &lt;param-name&gt;requestEncoding&lt;/param-name&gt;
        &lt;param-value&gt;UTF-8&lt;/param-value&gt;
      &lt;/init-param&gt;
  &lt;/filter&gt;

  &lt;filter-mapping&gt;
    &lt;filter-name&gt;CharsetFilter&lt;/filter-name&gt;
    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;
  &lt;/filter-mapping&gt;
</code></pre><p>The instructions for making this filter are found at the <a href="http://wiki.apache.org/tomcat/Tomcat/UTF-8" rel="nofollow noreferrer">tomcat wiki (<a href="http://wiki.apache.org/tomcat/Tomcat/UTF-8" rel="nofollow noreferrer">http://wiki.apache.org/tomcat/Tomcat/UTF-8</a>)</a> </p><p>In your <strong>web.xml</strong>, add the following:</p><pre><code>&lt;jsp-config&gt;
    &lt;jsp-property-group&gt;
        &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;
        &lt;page-encoding&gt;UTF-8&lt;/page-encoding&gt;
    &lt;/jsp-property-group&gt;
&lt;/jsp-config&gt;
</code></pre><p>Alternatively, all JSP-pages of the webapp would need to have the following at the top of them:</p><pre><code> &lt;%@page pageEncoding="UTF-8" contentType="text/html; charset=UTF-8"%&gt;
</code></pre><p>If some kind of a layout with different JSP-fragments is used, then this is needed in <b>all</b> of them.</p><p>JSP page encoding tells the JVM to handle the characters in the JSP page in the correct encoding.
Then it's time to tell the vrowser in which encoding the html page is:</p><p>This is done with the following at the top of each xhtml page produced by the webapp:</p><pre><code>   &lt;?xml version="1.0" encoding="UTF-8"?&gt;
   &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;
   &lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fi"&gt;
   &lt;head&gt;
   &lt;meta http-equiv='Content-Type' content='text/html; charset=UTF-8' /&gt;
   ...
</code></pre><p>When using a db, it has to be defined that the connection uses UTF-8 encoding. This is done in <b>context.xml</b> or wherever the JDBC connection is defiend as follows: </p><pre><code>      &lt;Resource name="jdbc/AppDB" 
        auth="Container"
        type="javax.sql.DataSource"
        maxActive="20" maxIdle="10" maxWait="10000"
        username="foo"
        password="bar"
        driverClassName="com.mysql.jdbc.Driver" url="jdbc:mysql://localhost:3306/      ID_development?useEncoding=true&amp;amp;characterEncoding=UTF-8"
    /&gt;
</code></pre><p>The used database must use UTF-8 encoding. This is achieved by creating the database with the following:</p><pre><code>   CREATE DATABASE `ID_development` 
   /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_swedish_ci */;
</code></pre><p>Then, all of the tables need to be in UTF-8 also:</p><pre><code>   CREATE TABLE  `Users` (
    `id` int(10) unsigned NOT NULL auto_increment,
    `name` varchar(30) collate utf8_swedish_ci default NULL
    PRIMARY KEY  (`id`)
   ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_swedish_ci ROW_FORMAT=DYNAMIC;
</code></pre><p>The key part being <b>CHARSET=utf8</b>.</p><p>MySQL serveri has to be configured also. Typically this is done in Windows by modifying <b>my.ini</b> -file and in Linux by configuring <b>my.cnf</b> -file.
In those files it should be defined that all clients connected to the server use utf8 as the default character set and that the default charset used by the server is also utf8.</p><pre><code>   [client]
   port=3306
   default-character-set=utf8

   [mysql]
   default-character-set=utf8
</code></pre><p>These also need to have the character set defined. For example:</p><pre><code>   DELIMITER $$

   DROP FUNCTION IF EXISTS `pathToNode` $$
   CREATE FUNCTION `pathToNode` (ryhma_id INT) RETURNS TEXT CHARACTER SET utf8
   READS SQL DATA
   BEGIN

    DECLARE path VARCHAR(255) CHARACTER SET utf8;

   SET path = NULL;

   ...

   RETURN path;

   END $$

   DELIMITER ;
</code></pre><p>If and when it's defined in tomcat's server.xml that GET request parameters are encoded in UTF-8, the following GET requests are handled properly:</p><pre><code>   https://localhost:8443/ID/Users?action=search&amp;name=Petteri
   https://localhost:8443/ID/Users?action=search&amp;name=ж
</code></pre><p>Because ASCII-characters are encoded in the same way both with latin1 and UTF-8, the string "Petteri" is handled correctly.</p><p>The Cyrillic character ж is not understood at all in latin1. Because Tomcat is instructed to handle request parameters as UTF-8 it encodes that character correctly as <b>%D0%B6</b>. </p><p>If and when browsers are instructed to read the pages in UTF-8 encoding (with request headers and html meta-tag), at least Firefox 2/3 and other browsers from this period all encode the character themselves as <b>%D0%B6</b>. </p><p>The end result is that all users with name "Petteri" are found and also all users with the name "ж" are found.</p><p>HTTP-specification defines that by default URLs are encoded as latin1. This results in firefox2, firefox3 etc. encoding the following</p><pre><code>    https://localhost:8443/ID/Users?action=search&amp;name=*Päivi*
</code></pre><p>in to the encoded version</p><pre><code>    https://localhost:8443/ID/Users?action=search&amp;name=*P%E4ivi*
</code></pre><p>In latin1 the character <b>ä</b> is encoded as <b>%E4</b>. <em>Even though the page/request/everything is defined to use UTF-8</em>. The UTF-8 encoded version of ä is <b>%C3%A4</b></p><p>The result of this is that it's quite impossible for the webapp to correly handle the request parameters from GET requests as some characters are encoded in latin1 and others in UTF-8.
<b>Notice: POST requests do work as browsers encode all request parameters from forms completely in UTF-8 if the page is defined as being UTF-8</b></p><p>A very big thank you for the writers of the following for giving the answers for my problem:</p><p><a class="post-tag" href="/questions/tagged/mysql" rel="tag" title="show questions tagged 'mysql'">mysql</a> supports the <a href="http://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane" rel="nofollow noreferrer">Basic Multilingual Plane</a> using 3-byte UTF-8 characters. If you need to go outside of that (certain alphabets require more than 3-bytes of UTF-8), then you either need to use a flavor of <code>VARBINARY</code> column type or use the <a href="http://dev.mysql.com/doc/refman/5.5/en/charset-unicode-utf8mb4.html" rel="nofollow noreferrer"><code>utf8mb4</code> character set</a> (which requires MySQL 5.5.3 or later). Just be aware that using the <code>utf8</code> character set in MySQL won't work 100% of the time.</p><p>One more thing If you are using Apache + Tomcat + mod_JK connector then you also need to do following changes:</p></body></html>

===ID===
584cbfd93e2ca508e5f07236
===QUESTION===
Error java.lang.OutOfMemoryError: GC overhead limit exceeded
I get this error message as I execute my JUnit tests: I know what an  OutOfMemoryError  is, but what does GC overhead limit mean? How can I solve this? 
===LINK===
http://stackoverflow.com/questions/1393486/error-java-lang-outofmemoryerror-gc-overhead-limit-exceeded
===KEYWORDS===
outofmemoryerror lang execute solve 
===ANSWER===
420
<html><body><p>This message means that for some reason the garbage collector is taking an excessive amount of time (by default 98% of all CPU time of the process) and recovers very little memory in each run (by default 2% of the heap).</p><p>This effectively means that your program stops doing any progress and is busy running only the garbage collection at all time.</p><p>To prevent your application from soaking up CPU time without getting anything done, the JVM throws this <code>Error</code> so that you have a chance of diagnosing the problem.</p><p>The rare cases where I've seen this happen is where some code was creating tons of temporary objects and tons of weakly-referenced objects in an already very memory-constrained environment.</p><p>Check out <a href="http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html" rel="nofollow noreferrer">this article</a> for details (specifically <a href="http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html#par_gc.oom" rel="nofollow noreferrer">this part</a>).</p></body></html>

===ID===
584cbfd93e2ca508e5f07237
===QUESTION===
Why is super.super.method(); not allowed in Java?
I read  this question  and thought that would easily be solved (not that it isn't solvable without) if one could write:  I'm not sure if it is useful in many cases, but I wonder  why  it isn't and if something like this exists in other languages. What do you guys think? EDIT: 
To clarify: yes I know, that's impossible in Java and I don't really miss it. This is nothing I expected to work and was surprised getting a compiler error. I just had the idea and like to discuss it. 
===LINK===
http://stackoverflow.com/questions/586363/why-is-super-super-method-not-allowed-in-java
===KEYWORDS===
exists idea allowed impossible miss 
===ANSWER===
369
<html><body><p>It violates encapsulation. You shouldn't be able to bypass the parent class's behaviour. It makes sense to sometimes be able to bypass your <em>own</em> class's behaviour (particularly from within the same method) but not your parent's. For example, suppose we have a base "collection of items", a subclass representing "a collection of red items" and a subclass of that representing "a collection of big red items". It makes sense to have:</p><pre><code>public class Items
{
    public void add(Item item) { ... }
}

public class RedItems extends Items
{
    @Override
    public void add(Item item)
    {
        if (!item.isRed())
        {
            throw new NotRedItemException();
        }
        super.add(item);
    }
}

public class BigRedItems extends RedItems
{
    @Override
    public void add(Item item)
    {
        if (!item.isBig())
        {
            throw new NotBigItemException();
        }
        super.add(item);
    }
}
</code></pre><p>That's fine - RedItems can always be confident that the items it contains are all red. Now suppose we <em>were</em> able to call super.super.add():</p><pre><code>public class NaughtyItems extends RedItems
{
    @Override
    public void add(Item item)
    {
        // I don't care if it's red or not. Take that, RedItems!
        super.super.add(item);
    }
}
</code></pre><p>Now we could add whatever we like, and the invariant in <code>RedItems</code> is broken.</p><p>Does that make sense?</p></body></html>

===ID===
584cbfda3e2ca508e5f07238
===QUESTION===
How to read a single char from the console in Java (as the user types it)?
Is there an easy way to read a single char from the console as the user is typing it in Java? Is it possible? I've tried with these methods but they all wait for the user to press  enter  key: I'm starting to think that System.in is not aware of the user input until  enter  is pressed. 
===LINK===
http://stackoverflow.com/questions/1066318/how-to-read-a-single-char-from-the-console-in-java-as-the-user-types-it
===KEYWORDS===
java methods pressed read enter 
===ANSWER===
38
<html><body><p>What you want to do is put the console into "raw" mode (line editing bypassed and no enter key required) as opposed to "cooked" mode (line editing with enter key required.)  On UNIX systems, the 'stty' command can change modes.</p><p>Now, with respect to Java... see <a href="http://www.darkcoding.net/software/non-blocking-console-io-is-not-possible/" rel="nofollow noreferrer">Non blocking console input in Python and Java</a>.  Excerpt:</p><p>If your program must be console based,
  you have to switch your terminal out
  of line mode into character mode, and
  remember to restore it before your
  program quits. There is no portable
  way to do this across operating
  systems.</p><p>There's also an interesting discussion thread <a href="http://forums.sun.com/thread.jspa?threadID=570709" rel="nofollow noreferrer">here</a>.  One of the suggestions is to use JNI.  Again, that's not very portable.  Another suggestion at the end of the thread, and in common with the post above, is to look at using <a href="http://sourceforge.net/projects/javacurses/" rel="nofollow noreferrer">jCurses</a>.</p></body></html>

===ID===
584cbfda3e2ca508e5f07239
===QUESTION===
What causes and what are the differences between NoClassDefFoundError and ClassNotFoundException?
I want to know the difference between the specified error and the exception. What is the reason for getting each of them and any thought process on how to deal with such errors? While working on a project. If we are modifying the existing code to include the new jar file I get to face these exceptions.
Sometimes they will come in client side or server side for a java app distributed through webstart. Possible reasons I have come across: But as of now I am dealing with hit and trial method to get things working. Need more clarity and understanding regarding this. 
===LINK===
http://stackoverflow.com/questions/1457863/what-causes-and-what-are-the-differences-between-noclassdeffounderror-and-classn
===KEYWORDS===
exception errors hit working deal 
===ANSWER===
325
<html><body><p>The difference from the Java API Specifications is as follows.</p><p>For <a href="http://java.sun.com/javase/6/docs/api/java/lang/ClassNotFoundException.html" rel="nofollow noreferrer"><code>ClassNotFoundException</code></a>:</p><p>Thrown when an application tries to
  load in a class through its string
  name using:</p><p>but no definition for the class with
  the specified name could be found.</p><p>For <a href="http://java.sun.com/javase/6/docs/api/java/lang/NoClassDefFoundError.html" rel="nofollow noreferrer"><code>NoClassDefFoundError</code></a>:</p><p>Thrown if the Java Virtual Machine or
  a <code>ClassLoader</code> instance tries to load
  in the definition of a class (as part
  of a normal method call or as part of
  creating a new instance using the new
  expression) and no definition of the
  class could be found.</p><p>The searched-for class definition
  existed when the currently executing
  class was compiled, but the definition
  can no longer be found.</p><p>So, it appears that the <code>NoClassDefFoundError</code> occurs when the source was successfully compiled, but at runtime, the required <code>class</code> files were not found. This may be something that can happen in the distribution or production of JAR files, where not all the required <code>class</code> files were included.</p><p>As for <code>ClassNotFoundException</code>, it appears that it may stem from trying to make reflective calls to classes at runtime, but the classes the program is trying to call is does not exist.</p><p>The difference between the two is that one is an <code>Error</code> and the other is an <code>Exception</code>. With <code>NoClassDefFoundError</code> is an <code>Error</code> and it arises from the Java Virtual Machine having problems finding a class it expected to find. A program that was expected to work at compile-time can't run because of <code>class</code> files not being found, or is not the same as was produced or encountered at compile-time. This is a pretty critical error, as the program cannot be initiated by the JVM.</p><p>On the other hand, the <code>ClassNotFoundException</code> is an <code>Exception</code>, so it is somewhat expected, and is something that is recoverable. Using reflection is can be error-prone (as there is some expectations that things may not go as expected. There is no compile-time check to see that all the required classes exist, so any problems with finding the desired classes will appear at runtime.</p></body></html>

===ID===
584cbfdb3e2ca508e5f0723a
===QUESTION===
Update Eclipse with Android development tools v. 23
I updated Eclipse with the new SDK tools (rev 23) but now when Eclipse starts I receive the error: This Android SDK requires Android Developer Toolkit version 23.0.0 or above. Current version is 22.6.3.v201404151837-1123206. Please update ADT to the latest version. No updates were found with  "Check for updates" . If I try  "Install new software" , I can see the version 23, but I can't upgrade due to the following error: After download of the last ADT from the web site, it seems there's another problem.
With SDK Tools rev. 23 proguard is not installed, the folder SDK  dir/tools/proguard  is missing and other tools are missing. This version contains several bugs. 
===LINK===
http://stackoverflow.com/questions/24437564/update-eclipse-with-android-development-tools-v-23
===KEYWORDS===
adt missing receive bugs installed 
===ANSWER===
183
<html><body><p><strong>UPDATE</strong>: Google has released ADT v23.0.2. This solved many problems of previous ADT version 23.</p><p>Step-by-step:</p><p>Note: When I installed the new version of ADT, I didn't include the new version of "Android Native Development Tools" package. Instead, I installed the rest of packages first, and then installed "Android Native Development Tools". For a reason, if I try to install all the new packages including "Android Native Development Tools", the installation fails.</p><p>UPDATE: If there is no "Remediation page", <a href="http://stackoverflow.com/a/9097282/755804">the only way to remove the ADT plugin from Eclipse is to go to <code>Help &gt; About Eclipse &gt; Installation Details</code> and uninstall from there</a> But there is a risk of uninstalling eclipse itself.</p></body></html>

===ID===
584cbfdc3e2ca508e5f0723b
===QUESTION===
How to send HTTP request in java? [duplicate]
This question already has an answer here: In Java, How to compose a HTTP request message and send it to a HTTP WebServer? 
===LINK===
http://stackoverflow.com/questions/1359689/how-to-send-http-request-in-java
===KEYWORDS===
compose java question send duplicate 
===ANSWER===
204
<html><body><p>You can use <a href="http://download.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html" rel="nofollow noreferrer">java.net.HttpUrlConnection</a>.</p><p>Example (<a href="http://www.xyzws.com/Javafaq/how-to-use-httpurlconnection-post-data-to-web-server/139" rel="nofollow noreferrer">from here</a>), with improvements. Included in case of link rot:</p><pre><code>public static String executePost(String targetURL, String urlParameters) {
  HttpURLConnection connection = null;

  try {
    //Create connection
    URL url = new URL(targetURL);
    connection = (HttpURLConnection) url.openConnection();
    connection.setRequestMethod("POST");
    connection.setRequestProperty("Content-Type", 
        "application/x-www-form-urlencoded");

    connection.setRequestProperty("Content-Length", 
        Integer.toString(urlParameters.getBytes().length));
    connection.setRequestProperty("Content-Language", "en-US");  

    connection.setUseCaches(false);
    connection.setDoOutput(true);

    //Send request
    DataOutputStream wr = new DataOutputStream (
        connection.getOutputStream());
    wr.writeBytes(urlParameters);
    wr.close();

    //Get Response  
    InputStream is = connection.getInputStream();
    BufferedReader rd = new BufferedReader(new InputStreamReader(is));
    StringBuilder response = new StringBuilder(); // or StringBuffer if Java version 5+
    String line;
    while ((line = rd.readLine()) != null) {
      response.append(line);
      response.append('\r');
    }
    rd.close();
    return response.toString();
  } catch (Exception e) {
    e.printStackTrace();
    return null;
  } finally {
    if (connection != null) {
      connection.disconnect();
    }
  }
}
</code></pre></body></html>

===ID===
584cbfdc3e2ca508e5f0723c
===QUESTION===
Standard concise way to copy a file in Java?
It has always bothered me that the only way to copy a file in Java involves opening streams, declaring a buffer, reading in one file, looping through it, and writing it out to the other steam.  The web is littered with similar, yet still slightly different implementations of this type of solution. Is there a better way that stays within the bounds of the Java language (meaning does not involve exec-ing OS specific commands)?  Perhaps in some reliable open source utility package, that would at least obscure this underlying implementation and provide a one line solution? 
===LINK===
http://stackoverflow.com/questions/106770/standard-concise-way-to-copy-a-file-in-java
===KEYWORDS===
implementations bounds looping file web 
===ANSWER===
254
<html><body><p>As toolkit mentions above, Apache Commons IO is the way to go, specifically <a href="https://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/FileUtils.html" rel="nofollow noreferrer">FileUtils</a>.<a href="https://commons.apache.org/proper/commons-io/javadocs/api-release/org/apache/commons/io/FileUtils.html#copyFile(java.io.File,%20java.io.File)" rel="nofollow noreferrer">copyFile()</a>; it handles all the heavy lifting for you.</p><p>And as a postscript, note that recent versions of FileUtils (such as the 2.0.1 release) have added the use of NIO for copying files; <a href="http://www.javalobby.org/java/forums/t17036.html" rel="nofollow noreferrer">NIO can significantly increase file-copying performance</a>, in a large part because the NIO routines defer copying directly to the OS/filesystem rather than handle it by reading and writing bytes through the Java layer.  So if you're looking for performance, it might be worth checking that you are using a recent version of FileUtils.</p></body></html>

===ID===
584cbfdd3e2ca508e5f0723d
===QUESTION===
Why does 128==128 return false but 127==127 return true when converting to Integer wrappers?
Output: Output: Note: Numbers between -128 and 127 are true. 
===LINK===
http://stackoverflow.com/questions/1700081/why-does-128-128-return-false-but-127-127-return-true-when-converting-to-integ
===KEYWORDS===
note output true numbers converting 
===ANSWER===
142
<html><body><p>When you compile a number literal in Java and assign it to a Integer (capital <code>I</code>) the compiler emits:</p><pre><code>Integer b2 =Integer.valueOf(127)
</code></pre><p>This line of code is also generated when you use autoboxing.</p><p><code>valueOf</code> is implemented such that certain numbers are "pooled", and it returns the same instance for values smaller than 128.</p><p>From the java 1.6 source code, line 621:</p><pre><code>public static Integer valueOf(int i) {
    if(i &gt;= -128 &amp;&amp; i &lt;= IntegerCache.high)
        return IntegerCache.cache[i + 128];
    else
        return new Integer(i);
}
</code></pre><p>The value of <code>high</code> can be configured to another value, with the system property.</p><p>-Djava.lang.Integer.IntegerCache.high=999</p><p>If you run your program with that system property, it will output true!</p><p>The obvious conclusion: never rely on two references being identical, always compare them with <code>.equals()</code> method.</p><p>So <code>b2.equals(b3)</code> will print true for all logically equal values of b2,b3.</p><p>Note that Integer cache is not there for performance reasons, but rather to comform to the <a href="http://java.sun.com/docs/books/jls/third%5Fedition/html/conversions.html#5.1.7" rel="nofollow noreferrer">JLS, section 5.1.7</a>; object identity must be given for values -128 to 127 inclusive.</p><p><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Integer.html#valueOf%28int%29" rel="nofollow noreferrer">Integer#valueOf(int)</a> also documents this behavior:</p><p>this method is likely to yield significantly better space and time performance by caching frequently requested values. This method will always cache values in the range -128 to 127, inclusive, and may cache other values outside of this range.</p></body></html>

===ID===
584cbfdd3e2ca508e5f0723e
===QUESTION===
Iterate through a HashMap [duplicate]
Possible Duplicate: 
 How do I iterate over each Entry in a Collection Map?   What's the best way to iterate over the items in a  HashMap ? 
===LINK===
http://stackoverflow.com/questions/1066589/iterate-through-a-hashmap
===KEYWORDS===
iterate duplicate items hashmap entry 
===ANSWER===
2195
<html><body><p>Iterate through the <a href="http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm" rel="nofollow noreferrer"><code>entrySet</code></a> like so:</p><pre><code>public static void printMap(Map mp) {
    Iterator it = mp.entrySet().iterator();
    while (it.hasNext()) {
        Map.Entry pair = (Map.Entry)it.next();
        System.out.println(pair.getKey() + " = " + pair.getValue());
        it.remove(); // avoids a ConcurrentModificationException
    }
}
</code></pre><p>Read more on <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Map.html" rel="nofollow noreferrer"><code>Map</code></a></p></body></html>

===ID===
584cbfde3e2ca508e5f0723f
===QUESTION===
Access restriction on class due to restriction on required library rt.jar?
I'm attempting to compile Java 1.4 code that was created by IBM's WSDL2Java on Java5 without recreating the stubs and saw this error in Eclipse. I'm under the assumption that the stubs created should just compile as long as the runtime jars are available (they are). Access restriction: The type QName is not accessible due to restriction on required library C:\Program Files\Java\jdk1.5.0_16\jre\lib\rt.jar The full classname is  javax.xml.namespace.QName What exactly is going on here?  Is this a case where I am trying to refactor a pig from sausage? Am I better off recreating the stubs? 
===LINK===
http://stackoverflow.com/questions/860187/access-restriction-on-class-due-to-restriction-on-required-library-rt-jar
===KEYWORDS===
0_16\jre\lib\rt restriction namespace pig refactor 
===ANSWER===
1594
<html><body><p>There's another solution that also works. I found it on <a href="http://forums.dzone.com/eclipse/384-access-restriction-problems.html" rel="nofollow noreferrer">this forum</a>: </p><p>This works because you have multiple classes in different jar files. Removing and re-adding the JRE lib will make the right classes be first.
If you want a fundamental solution make sure you exclude the jar files with the same classes.</p><p>For me I have: <code>javax.xml.soap.SOAPPart</code> in three different jars: <code>axis-saaj-1.4.jar</code>, <code>saaj-api-1.3.jar</code> and the <code>rt.jar</code></p></body></html>

===ID===
584cbfde3e2ca508e5f07240
===QUESTION===
File to byte[] in Java
How do I convert a  java.io.File  to a  byte[] ? 
===LINK===
http://stackoverflow.com/questions/858980/file-to-byte-in-java
===KEYWORDS===
convert java byte file 
===ANSWER===
283
<html><body><p>It depends on what best means for you. Productivity wise, don't reinvent the wheel and use Apache Commons. Which is here <a href="https://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/IOUtils.html#toByteArray(java.io.InputStream)" rel="nofollow noreferrer"><code>IOUtils.toByteArray(InputStream input)</code></a>.</p></body></html>

===ID===
584cbfdf3e2ca508e5f07241
===QUESTION===
Why don't Java Generics support primitive types?
Why do Generics in Java work with objects but not with primitive types? For example   
===LINK===
http://stackoverflow.com/questions/2721546/why-dont-java-generics-support-primitive-types
===KEYWORDS===
objects don generics 
===ANSWER===
157
<html><body><p>Generics in Java are an entirely compile-time construct - the compiler turns all generic uses into casts to the right type. This is to maintain backwards compatibility with previous JVM runtimes.</p><p>This:</p><pre><code>List&lt;ClassA&gt; list = new ArrayList&lt;ClassA&gt;();
list.add(new ClassA());
ClassA a = list.get(0);
</code></pre><p>gets turned into (roughly):</p><pre><code>List list = new ArrayList();
list.add(new ClassA());
ClassA a = (ClassA)list.get(0);
</code></pre><p>So, anything that is used as generics has to be convertable to Object (in this example <code>get(0)</code> returns an <code>Object</code>), and the primitive types aren't. So they can't be used in generics.</p><p>C# is a separate matter - generics are implemented directly as part of the runtime, so primitive types <em>can</em> be used - the CLR generates new versions of generic classes for primitives and structs as they are used. The only disadvantage is (until .NET 4) no generic covariance or contravariance was allowed, unlike Java (see the <code>super</code> and <code>extends</code> keywords in generic definitions)</p></body></html>

===ID===
584cbfdf3e2ca508e5f07242
===QUESTION===
Difference between StringBuilder and StringBuffer
What is the main difference between  StringBuffer  and  StringBuilder ?
Is there any performance issues when deciding on any one of these? 
===LINK===
http://stackoverflow.com/questions/355089/difference-between-stringbuilder-and-stringbuffer
===KEYWORDS===
deciding stringbuffer difference stringbuilder 
===ANSWER===
1057
<html><body><p><a href="http://docs.oracle.com/javase/8/docs/api/java/lang/StringBuffer.html" rel="nofollow noreferrer"><code>StringBuffer</code></a> is synchronized, <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/StringBuilder.html" rel="nofollow noreferrer"><code>StringBuilder</code></a> is not. </p></body></html>

===ID===
584cbfe03e2ca508e5f07243
===QUESTION===
How do I time a method's execution in Java?
How do I get a method's execution time?  Is there a Timer utility class for things like timing how long a task takes, etc?   Most of the searches on Google return results for timers that schedule threads and tasks, which is not what I want. 
===LINK===
http://stackoverflow.com/questions/180158/how-do-i-time-a-methods-execution-in-java
===KEYWORDS===
searches tasks java things long 
===ANSWER===
693
<html><body><p>There is always the old-fashioned way:</p><pre><code>long startTime = System.nanoTime();
methodToTime();
long endTime = System.nanoTime();

long duration = (endTime - startTime);  //divide by 1000000 to get milliseconds.
</code></pre></body></html>

===ID===
584cbfe13e2ca508e5f07244
===QUESTION===
Java: splitting a comma-separated string but ignoring commas in quotes
I have a string vaguely like this: that I want to split by commas -- but I need to ignore commas in quotes. How can I do this? Seems like a regexp approach fails; I suppose I can manually scan and enter a different mode when I see a quote, but it would be nice to use preexisting libraries. ( edit : I guess I meant libraries that are already part of the JDK or already part of a commonly-used libraries like Apache Commons.) the above string should split into: note:  this is NOT a CSV file, it's a single string contained in a file with a larger overall structure 
===LINK===
http://stackoverflow.com/questions/1757065/java-splitting-a-comma-separated-string-but-ignoring-commas-in-quotes
===KEYWORDS===
note guess jdk commas edit 
===ANSWER===
290
<html><body><p>Try:</p><pre><code>public class Main { 
    public static void main(String[] args) {
        String line = "foo,bar,c;qual=\"baz,blurb\",d;junk=\"quux,syzygy\"";
        String[] tokens = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
        for(String t : tokens) {
            System.out.println("&gt; "+t);
        }
    }
}
</code></pre><p>Output:</p><pre><code>&gt; foo
&gt; bar
&gt; c;qual="baz,blurb"
&gt; d;junk="quux,syzygy"
</code></pre><p>In other words: <em>split on the comma only if that comma has zero, or an even number of quotes ahead of it</em>.</p><p>Or, a bit friendlier for the eyes:</p><pre><code>public class Main { 
    public static void main(String[] args) {
        String line = "foo,bar,c;qual=\"baz,blurb\",d;junk=\"quux,syzygy\"";

        String otherThanQuote = " [^\"] ";
        String quotedString = String.format(" \" %s* \" ", otherThanQuote);
        String regex = String.format("(?x) "+ // enable comments, ignore white spaces
                ",                         "+ // match a comma
                "(?=                       "+ // start positive look ahead
                "  (?:                     "+ //   start non-capturing group 1
                "    %s*                   "+ //     match 'otherThanQuote' zero or more times
                "    %s                    "+ //     match 'quotedString'
                "  )*                      "+ //   end group 1 and repeat it zero or more times
                "  %s*                     "+ //   match 'otherThanQuote'
                "  $                       "+ // match the end of the string
                ")                         ", // stop positive look ahead
                otherThanQuote, quotedString, otherThanQuote);

        String[] tokens = line.split(regex, -1);
        for(String t : tokens) {
            System.out.println("&gt; "+t);
        }
    }
}
</code></pre><p>which produces the same as the first example.</p><p>As mentioned by @MikeFHay in the comments:</p><p>I prefer using <a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Splitter.html" rel="nofollow noreferrer">Guava's Splitter</a>, as it has saner defaults (see discussion above about empty matches being trimmed by <code>String#split()</code>, so I did: </p><pre><code>Splitter.on(Pattern.compile(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)"))
</code></pre></body></html>

===ID===
584cbfe13e2ca508e5f07245
===QUESTION===
How do I set environment variables from Java?
How do I set environment variables from Java?  I see that I can do this for subprocesses using  ProcessBuilder .  I have several subprocesses to start, though, so I'd rather modify the current process's environment and let the subprocesses inherit it. There's a System.getenv(String) for getting a single environment variable.  I can also get a Map of the complete set of environment variables with System.getenv().  But calling put() on that Map throws an UnsupportedOperationException -- apparently they mean for the environment to be read only.  And there's no System.setenv(). So, is there any way to set environment variables in the currently running process?  If so, how?  If not, what's the rationale?  (Is it because this is Java and therefore I shouldn't be doing evil nonportable obsolete things like touching my environment?)  And if not, any good suggestions for managing the environment variable changes that I'm going to need to be feeding to several subprocesses? 
===LINK===
http://stackoverflow.com/questions/318239/how-do-i-set-environment-variables-from-java
===KEYWORDS===
subprocesses unsupportedoperationexception managing java string 
===ANSWER===
53
<html><body><p>(Is it because this is Java and therefore I shouldn't be doing evil nonportable obsolete things like touching my environment?)</p><p>I think you've hit the nail on the head.</p><p>A possible way to ease the burden would be to factor out a method</p><pre><code>void setUpEnvironment(ProcessBuilder builder) {
    Map&lt;String, String&gt; env = builder.environment();
    // blah blah
}
</code></pre><p>and pass any <code>ProcessBuilder</code>s through it before starting them.</p><p>Also, you probably already know this, but you can start more than one process with the same <code>ProcessBuilder</code>. So if your subprocesses are the same, you don't need to do this setup over and over.</p></body></html>

===ID===
584cbfe23e2ca508e5f07246
===QUESTION===
How to use the toString method in Java?
Can anybody explain to me the concept of the  toString()  method, defined in the  Object  class? How is it used, and what is its purpose? 
===LINK===
http://stackoverflow.com/questions/3615721/how-to-use-the-tostring-method-in-java
===KEYWORDS===
concept java defined explain tostring 
===ANSWER===
58
<html><body><p>From the <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Object.html#toString%28%29" rel="nofollow noreferrer">Object.toString()</a> docs:</p><p>Returns a string representation of the
  object. In general, the toString
  method returns a string that
  "textually represents" this object.
  The result should be a concise but
  informative representation that is
  easy for a person to read. It is
  recommended that all subclasses
  override this method. </p><p>The toString method for class Object
  returns a string consisting of the
  name of the class of which the object
  is an instance, the at-sign character
  `@', and the unsigned hexadecimal
  representation of the hash code of the
  object. In other words, this method
  returns a string equal to the value
  of:</p><pre><code>getClass().getName() + '@' + Integer.toHexString(hashCode())
</code></pre><p>Example:</p><pre><code>String[] mystr ={"a","b","c"};
System.out.println("mystr.toString: " + mystr.toString());

output:- mystr.toString: [Ljava.lang.String;@13aaa14a
</code></pre></body></html>

===ID===
584cbfe23e2ca508e5f07247
===QUESTION===
XSS prevention in JSP/Servlet web application
How can I prevent XSS attacks in a JSP/Servlet web application? 
===LINK===
http://stackoverflow.com/questions/2658922/xss-prevention-in-jsp-servlet-web-application
===KEYWORDS===

===ANSWER===
60
<html><body><p>XSS can be prevented in JSP by using <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/" rel="nofollow noreferrer">JSTL</a> <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/c/out.html" rel="nofollow noreferrer"><code>&lt;c:out&gt;</code></a> tag or <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/fn/escapeXml.fn.html" rel="nofollow noreferrer"><code>fn:escapeXml()</code></a> EL function when (re)displaying <strong>user-controlled input</strong>. This includes request headers, cookies, URL, body, parameters, etc, the whole request. Also the user-controlled input which is stored in a database needs to be escaped during redisplaying.</p><p>For example:</p><pre class="lang-html prettyprint-override"><code>&lt;p&gt;&lt;c:out value="${bean.userControlledValue}"&gt;&lt;/p&gt;
&lt;p&gt;&lt;input name="foo" value="${fn:escapeXml(param.foo)}"&gt;&lt;/p&gt;
</code></pre><p>This will escape characters which may malform the rendered HTML such as <code>&lt;</code>, <code>&gt;</code>, <code>"</code>, <code>'</code> and <code>&amp;</code> into <a href="http://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references" rel="nofollow noreferrer">HTML/XML entities</a> such as <code>&amp;lt;</code>, <code>&amp;gt;</code>, <code>&amp;quot;</code>, <code>&amp;apos;</code> and <code>&amp;amp;</code>.</p><p>Note that you don't need to escape them in the Java (Servlet) code, since they are harmless over there. Some may opt to escape them during <em>request</em> processing (as you do in Servlet) instead of <em>response</em> processing (as you do in JSP), but this way you may risk that the data unnecessarily get double-escaped or that the DB-stored data becomes unportable (e.g. when exporting data to CSV, XLS, PDF, etc which doesn't require HTML-escaping at all). </p><p>If you'd like to redisplay user-controlled input as HTML wherein you would like to allow only a specific subset of HTML tags like <code>&lt;b&gt;</code>, <code>&lt;i&gt;</code>, <code>&lt;u&gt;</code>, etc, then you need to sanitize the input by a whitelist. You can use a Markdown parser like Pegdown or a HTML parser like Jsoup for this. See also <a href="http://stackoverflow.com/questions/7505387/im-looking-for-a-java-html-encoder">I'm looking for a Java HTML encoder</a>.</p><p>The only concern in the server side with regard to databases is <a href="http://en.wikipedia.org/wiki/SQL_injection" rel="nofollow noreferrer">SQL injection</a> prevention. You need to make sure that you never string-concatenate user-controlled input straight in the SQL or JPQL query and that you're using parameterized queries all the way. In JDBC terms, this means that you should use <a href="http://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html" rel="nofollow noreferrer"><code>PreparedStatement</code></a> instead of <code>Statement</code>. In JPA terms, use <a href="http://docs.oracle.com/javaee/6/api/javax/persistence/Query.html#setParameter%28int,%20java.lang.Object%29" rel="nofollow noreferrer"><code>Query</code></a>.</p><p>An alternative would be to migrate from JSP/Servlet to Java EE's MVC framework <a href="http://stackoverflow.com/tags/jsf/info">JSF</a>. It has builtin XSS prevention over all place. See also <a href="http://stackoverflow.com/questions/7722159/csrf-xss-and-sql-injection-attack-prevention-in-jsf">CSRF, XSS and SQL Injection attack prevention in JSF</a>.</p></body></html>

===ID===
584cbfe23e2ca508e5f07248
===QUESTION===
How do getters and setters work?
I'm from the php world. Could you explain what getters and setters are and could give you some examples? 
===LINK===
http://stackoverflow.com/questions/2036970/how-do-getters-and-setters-work
===KEYWORDS===
explain getters give examples setters 
===ANSWER===
79
<html><body><p>Tutorial is not really required for this. Read up on <a href="http://en.wikipedia.org/wiki/Encapsulation_(object-oriented_programming)" rel="nofollow noreferrer">encapsulation</a></p><pre><code>private String myField; //"private" means access to this is restricted

public String getMyField()
{
     //include validation, logic, logging or whatever you like here
    return this.myField;
}
public void setMyField(String value)
{
     //include more logic
     this.myField = value;
}
</code></pre></body></html>

===ID===
584cbfe33e2ca508e5f07249
===QUESTION===
Creating a memory leak with Java
I just had an interview, and I was asked to create a memory leak with Java.
Needless to say I felt pretty dumb having no clue on how to even start creating one. What would an example be? 
===LINK===
http://stackoverflow.com/questions/6470651/creating-a-memory-leak-with-java
===KEYWORDS===
java creating needless create clue 
===ANSWER===
1428
<html><body><p>Here's a good way to create a true memory leak (objects inaccessible by running code but still stored in memory) in pure Java:</p><p>This works because the ThreadLocal keeps a reference to the object, which keeps a reference to its Class, which in turn keeps a reference to its ClassLoader.  The ClassLoader, in turn, keeps a reference to all the Classes it has loaded.  It gets worse because in many JVM implementations Classes and ClassLoaders are allocated straight into permgen and are never GC'd at all.</p><p>A variation on this pattern is why application containers (like Tomcat) can leak memory like a sieve if you frequently redeploy applications that happen to use ThreadLocals in any way.  (Since the application container uses Threads as described, and each time you redeploy the application a new ClassLoader is used.)</p><p><strong>Update</strong>: Since lots of people keep asking for it, <a href="https://gist.github.com/dpryden/b2bb29ee2d146901b4ae">here's some example code that shows this behavior in action</a>.</p></body></html>

===ID===
584cbfe43e2ca508e5f0724a
===QUESTION===
When would you use the Builder Pattern? [closed]
What are some  common ,  real world examples  of using the Builder Pattern?  What does it buy you?  Why not just use a Factory Pattern? 
===LINK===
http://stackoverflow.com/questions/328496/when-would-you-use-the-builder-pattern
===KEYWORDS===
buy common closed 
===ANSWER===
186
<html><body><p>The key difference between a builder and factory IMHO, is that a builder is useful when you need to do lots of things to build an object. For example imagine a DOM. You have to create plenty of nodes and attributes to get your final object. A factory is used when the factory can easily create the entire object within one method call.</p><p>One example of using a builder is a building an XML document, I've used this model when building HTML fragments for example I might have a Builder for building a specific type of table and it might have the following methods <strong>(parameters are not shown)</strong>:</p><pre><code>BuildOrderHeaderRow()
BuildLineItemSubHeaderRow()
BuildOrderRow()
BuildLineItemSubRow()
</code></pre><p>This builder would then spit out the HTML for me. This is much easier to read then walking through a large procedural method.</p><p>Check out <a href="http://en.wikipedia.org/wiki/Builder_pattern" rel="nofollow noreferrer">Builder Pattern on Wikipedia</a>.</p></body></html>

===ID===
584cbfe43e2ca508e5f0724b
===QUESTION===
What's the difference between “.equals” and “==”? [duplicate]
This question already has an answer here: I switched lecturers today and he stated using a weird code to me. (He said it's better to use  .equals  and when I asked why, he answered "because it is!") So here's an example: Instead of what I'm used to: What's the difference between the two. And why is his way (using  .equals ) better? Found this  on a quick search but I can't really make sense of that answer: 
===LINK===
http://stackoverflow.com/questions/1643067/whats-the-difference-between-equals-and
===KEYWORDS===
equals” stated question equals answered 
===ANSWER===
103
<html><body><p>In Java, <code>==</code> always just compares two references (for non-primitives, that is) - i.e. it tests whether the two operands refer to the same object.</p><p>However, the <code>equals</code> method can be overridden - so two distinct objects can still be equal.</p><p>For example:</p><pre><code>String x = "hello";
String y = new String(new char[] { 'h', 'e', 'l', 'l', 'o' });

System.out.println(x == y); // false
System.out.println(x.equals(y)); // true
</code></pre><p>Additionally, it's worth being aware that any two equal <em>string constants</em> (primarily string literals, but also combinations of string constants via concatenation) will end up referring to the same string. For example:</p><pre><code>String x = "hello";
String y = "he" + "llo";
System.out.println(x == y); // true!
</code></pre><p>Here <code>x</code> and <code>y</code> are references to the same string, because <code>y</code> is a compile-time constant equal to <code>"hello"</code>.</p></body></html>

===ID===
584cbfe53e2ca508e5f0724c
===QUESTION===
calling non-static method in static method in Java
I'm getting an error when I try to call a non-static method in a static class. Cannot make a static reference to the non-static method methodName() from the type playback I can't make the method static as this gives me an error too. This static method cannot hide the instance method from xInterface Is there any way to get round calling an non-static method in another static method? (The two methods are in seperate packages and seperate classes). 
===LINK===
http://stackoverflow.com/questions/2042813/calling-non-static-method-in-static-method-in-java
===KEYWORDS===
hide methods make calling xinterface 
===ANSWER===
84
<html><body><p>The only way to call a non-static method from a static method is to have an instance of the class containing the non-static method.  By definition, a non-static method is one that is called ON an instance of some class, whereas a static method belongs to the class itself.</p></body></html>

===ID===
584cbfe53e2ca508e5f0724d
===QUESTION===
How can I update a JFreeChart's appearance after it's been made visible?
How can I use  JFreeChart  to dynamically update a chart's appearance  after  it's been made visible? 
===LINK===
http://stackoverflow.com/questions/5522575/how-can-i-update-a-jfreecharts-appearance-after-its-been-made-visible
===KEYWORDS===
appearance chart jfreechart update 
===ANSWER===
24
<html><body><p>The class <a href="http://www.jfree.org/jfreechart/api/javadoc/org/jfree/chart/ChartPanel.html" rel="nofollow noreferrer"><code>ChartPanel</code></a> is convenient for this, as it has methods to control the chart's overall appearance, including properties and zoom state. In addition it's also possible to access the chart's components, as shown below.</p><p><img alt="ChartPanelDemo" src="https://i.stack.imgur.com/Q4B6C.png"/></p><pre><code>import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;
import javax.swing.AbstractAction;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.time.Year;
import org.jfree.data.xy.XYDataset;

/** @see http://stackoverflow.com/questions/5522575 */
public class ChartPanelDemo {

    private static final String title = "Return On Investment";
    private ChartPanel chartPanel = createChart();

    public ChartPanelDemo() {
        JFrame f = new JFrame(title);
        f.setTitle(title);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLayout(new BorderLayout(0, 5));
        f.add(chartPanel, BorderLayout.CENTER);
        chartPanel.setMouseWheelEnabled(true);
        chartPanel.setHorizontalAxisTrace(true);
        chartPanel.setVerticalAxisTrace(true);

        JPanel panel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        panel.add(createTrace());
        panel.add(createDate());
        panel.add(createZoom());
        f.add(panel, BorderLayout.SOUTH);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    private JComboBox createTrace() {
        final JComboBox trace = new JComboBox();
        final String[] traceCmds = {"Enable Trace", "Disable Trace"};
        trace.setModel(new DefaultComboBoxModel(traceCmds));
        trace.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (traceCmds[0].equals(trace.getSelectedItem())) {
                    chartPanel.setHorizontalAxisTrace(true);
                    chartPanel.setVerticalAxisTrace(true);
                    chartPanel.repaint();
                } else {
                    chartPanel.setHorizontalAxisTrace(false);
                    chartPanel.setVerticalAxisTrace(false);
                    chartPanel.repaint();
                }
            }
        });
        return trace;
    }

    private JComboBox createDate() {
        final JComboBox date = new JComboBox();
        final String[] dateCmds = {"Horizontal Dates", "Vertical Dates"};
        date.setModel(new DefaultComboBoxModel(dateCmds));
        date.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                JFreeChart chart = chartPanel.getChart();
                XYPlot plot = (XYPlot) chart.getPlot();
                DateAxis domain = (DateAxis) plot.getDomainAxis();
                if (dateCmds[0].equals(date.getSelectedItem())) {
                    domain.setVerticalTickLabels(false);
                } else {
                    domain.setVerticalTickLabels(true);
                }
            }
        });
        return date;
    }

    private JButton createZoom() {
        final JButton auto = new JButton(new AbstractAction("Auto Zoom") {

            @Override
            public void actionPerformed(ActionEvent e) {
                chartPanel.restoreAutoBounds();
            }
        });
        return auto;
    }

    private ChartPanel createChart() {
        XYDataset roiData = createDataset();
        JFreeChart chart = ChartFactory.createTimeSeriesChart(
            title, "Date", "Value", roiData, true, true, false);
        XYPlot plot = chart.getXYPlot();
        XYLineAndShapeRenderer renderer =
            (XYLineAndShapeRenderer) plot.getRenderer();
        renderer.setBaseShapesVisible(true);
        NumberFormat currency = NumberFormat.getCurrencyInstance();
        currency.setMaximumFractionDigits(0);
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setNumberFormatOverride(currency);
        return new ChartPanel(chart);
    }

    private XYDataset createDataset() {
        TimeSeriesCollection tsc = new TimeSeriesCollection();
        tsc.addSeries(createSeries("Projected", 200));
        tsc.addSeries(createSeries("Actual", 100));
        return tsc;
    }

    private TimeSeries createSeries(String name, double scale) {
        TimeSeries series = new TimeSeries(name);
        for (int i = 0; i &lt; 6; i++) {
            series.add(new Year(2005 + i), Math.pow(2, i) * scale);
        }
        return series;
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                ChartPanelDemo cpd = new ChartPanelDemo();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbfe63e2ca508e5f0724e
===QUESTION===
Efficiency of Java “Double Brace Initialization”?
In  Hidden Features of Java  the top answer mentions  Double Brace Initialization , with a  very  enticing syntax: This idiom creates an anonymous inner class with just an instance initializer in it, which "can use any [...] methods in the containing scope".   Main question: Is this as  inefficient  as it sounds?  Should its use be limited to one-off initializations?  (And of course showing off!) Second question: The new HashSet must be the "this" used in the instance initializer ... can anyone shed light on the mechanism?   Third question: Is this idiom too  obscure  to use in production code? Summary:  Very, very nice answers, thanks everyone. On question (3), people felt the syntax should be clear (though I'd recommend an occasional comment, especially if your code will pass on to developers who may not be familiar with it).   On question (1), the generated code should run quickly. The extra .class files do cause jar file clutter, and slow program startup slightly (thanks to @coobird for measuring that). @Thilo pointed out that garbage collection can be affected, and the memory cost for the extra loaded classes may be a factor in some cases.   Question (2) turned out to be most interesting to me. If I understand the answers, what's happening in DBI is that the anonymous inner class extends the class of the object being constructed by the new operator, and hence has a "this" value referencing the instance being constructed. Very neat. Overall, DBI strikes me as something of an intellectual curiousity.  Coobird and others point out you can achieve the same effect with Arrays.asList, varargs methods, Google Collections, and the proposed Java 7 Collection literals.  Newer JVM languages like Scala, JRuby, and Groovy also offer concise notations for list construction, and interoperate well with Java.  Given that DBI clutters up the classpath, slows down class loading a bit, and makes the code a tad more obscure, I'd probably shy away from it. However, I plan to spring this on a friend who's just gotten his SCJP and loves good natured jousts about Java semantics!  ;-)  Thanks everyone! 
===LINK===
http://stackoverflow.com/questions/924285/efficiency-of-java-double-brace-initialization
===KEYWORDS===
dbi limited code methods extra 
===ANSWER===
435
<html><body><p>Here's the problem when I get too carried away with anonymous inner classes:</p><pre><code>2009/05/27  16:35             1,602 DemoApp2$1.class
2009/05/27  16:35             1,976 DemoApp2$10.class
2009/05/27  16:35             1,919 DemoApp2$11.class
2009/05/27  16:35             2,404 DemoApp2$12.class
2009/05/27  16:35             1,197 DemoApp2$13.class

/* snip */

2009/05/27  16:35             1,953 DemoApp2$30.class
2009/05/27  16:35             1,910 DemoApp2$31.class
2009/05/27  16:35             2,007 DemoApp2$32.class
2009/05/27  16:35               926 DemoApp2$33$1$1.class
2009/05/27  16:35             4,104 DemoApp2$33$1.class
2009/05/27  16:35             2,849 DemoApp2$33.class
2009/05/27  16:35               926 DemoApp2$34$1$1.class
2009/05/27  16:35             4,234 DemoApp2$34$1.class
2009/05/27  16:35             2,849 DemoApp2$34.class

/* snip */

2009/05/27  16:35               614 DemoApp2$40.class
2009/05/27  16:35             2,344 DemoApp2$5.class
2009/05/27  16:35             1,551 DemoApp2$6.class
2009/05/27  16:35             1,604 DemoApp2$7.class
2009/05/27  16:35             1,809 DemoApp2$8.class
2009/05/27  16:35             2,022 DemoApp2$9.class
</code></pre><p>These are all classes which were generated when I was making a simple application, and used copious amounts of anonymous inner classes -- each class will be compiled into a separate <code>class</code> file.</p><p>The "double brace initialization", as already mentioned, is an anonymous inner class with a instance initialization block, which means that a new class is created for each "initialization", all for the purpose of usually making a single object.</p><p>Considering that the Java Virtual Machine will need to read all those classes when using them, that can lead to some time in the <a href="http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.html#88597" rel="nofollow noreferrer">bytecode verfication</a> process and such. Not to mention the increase in the needed disk space in order to store all those <code>class</code> files.</p><p>It seems as if there is a bit of overhead when utilizing double-brace initialization, so it's probably not such a good idea to go too overboard with it. But as Eddie has noted in the comments, it's not possible to be absolutely sure of the impact.</p><p>Just for reference, double brace initialization is the following:</p><pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;() {{
    add("Hello");
    add("World!");
}};
</code></pre><p>It looks like a "hidden" feature of Java, but it is just a rewrite of:</p><pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;() {

    // Instance initialization block
    {
        add("Hello");
        add("World!");
    }
};
</code></pre><p>So it's basically a <a href="http://java.sun.com/docs/books/tutorial/java/javaOO/initial.html" rel="nofollow noreferrer">instance initialization block</a> that is part of an <a href="http://java.sun.com/docs/books/tutorial/java/javaOO/innerclasses.html" rel="nofollow noreferrer">anonymous inner class</a>.</p><p>Joshua Bloch's <a href="http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html" rel="nofollow noreferrer">Collection Literals proposal</a> for <a href="http://openjdk.java.net/projects/coin/" rel="nofollow noreferrer">Project Coin</a> was along the lines of:</p><pre><code>List&lt;Integer&gt; intList = [1, 2, 3, 4];

Set&lt;String&gt; strSet = {"Apple", "Banana", "Cactus"};

Map&lt;String, Integer&gt; truthMap = { "answer" : 42 };
</code></pre><p>Sadly, it <a href="http://mail.openjdk.java.net/pipermail/lambda-dev/2014-March/011938.html" rel="nofollow noreferrer">didn't make its way</a> into neither Java 7 nor 8 and was shelved indefinitely.</p><p><strong>Experiment</strong></p><p>Here's the simple experiment I've tested -- make 1000 <code>ArrayList</code>s with the elements <code>"Hello"</code> and <code>"World!"</code> added to them via the <code>add</code> method, using the two methods:</p><p><em>Method 1: Double Brace Initialization</em></p><pre><code>List&lt;String&gt; l = new ArrayList&lt;String&gt;() {{
  add("Hello");
  add("World!");
}};
</code></pre><p><em>Method 2: Instantiate an <code>ArrayList</code> and <code>add</code></em></p><pre><code>List&lt;String&gt; l = new ArrayList&lt;String&gt;();
l.add("Hello");
l.add("World!");
</code></pre><p>I created a simple program to write out a Java source file to perform 1000 initializations using the two methods:</p><p><em>Test 1:</em></p><pre><code>class Test1 {
  public static void main(String[] s) {
    long st = System.currentTimeMillis();

    List&lt;String&gt; l0 = new ArrayList&lt;String&gt;() {{
      add("Hello");
      add("World!");
    }};

    List&lt;String&gt; l1 = new ArrayList&lt;String&gt;() {{
      add("Hello");
      add("World!");
    }};

    /* snip */

    List&lt;String&gt; l999 = new ArrayList&lt;String&gt;() {{
      add("Hello");
      add("World!");
    }};

    System.out.println(System.currentTimeMillis() - st);
  }
}
</code></pre><p><em>Test 2:</em></p><pre><code>class Test2 {
  public static void main(String[] s) {
    long st = System.currentTimeMillis();

    List&lt;String&gt; l0 = new ArrayList&lt;String&gt;();
    l0.add("Hello");
    l0.add("World!");

    List&lt;String&gt; l1 = new ArrayList&lt;String&gt;();
    l1.add("Hello");
    l1.add("World!");

    /* snip */

    List&lt;String&gt; l999 = new ArrayList&lt;String&gt;();
    l999.add("Hello");
    l999.add("World!");

    System.out.println(System.currentTimeMillis() - st);
  }
}
</code></pre><p>Please note, that the elapsed time to initialize the 1000 <code>ArrayList</code>s and the 1000 anonymous inner classes extending <code>ArrayList</code> is checked using the <code>System.currentTimeMillis</code>, so the timer does not have a very high resolution. On my Windows system, the resolution is around 15-16 milliseconds.</p><p>The results for 10 runs of the two tests were the following:</p><pre><code>Test1 Times (ms)           Test2 Times (ms)
----------------           ----------------
           187                          0
           203                          0
           203                          0
           188                          0
           188                          0
           187                          0
           203                          0
           188                          0
           188                          0
           203                          0
</code></pre><p>As can be seen, the double brace initialization has a noticeable execution time of around 190 ms.</p><p>Meanwhile, the <code>ArrayList</code> initialization execution time came out to be 0 ms. Of course, the timer resolution should be taken into account, but it is likely to be under 15 ms.</p><p>So, there seems to be a noticeable difference in the execution time of the two methods. It does appear that there is indeed some overhead in the two initialization methods.</p><p>And yes, there were 1000 <code>.class</code> files generated by compiling the <code>Test1</code> double brace initialization test program.</p></body></html>

===ID===
584cbfe63e2ca508e5f0724f
===QUESTION===
How do I read a private field in Java?
I have a poorly designed class in a 3rd-party  JAR  and I need to access one of its  private  fields. For example,
why should I need to choose private field is it necessary? How can I use reflection to get the value of  stuffIWant ? 
===LINK===
http://stackoverflow.com/questions/1196192/how-do-i-read-a-private-field-in-java
===KEYWORDS===
java reflection 3rd read stuffiwant 
===ANSWER===
400
<html><body><p>In order to access private fields, you need to get them from the class's <em>declared</em> fields and then make them accessible:</p><pre><code>Field f = obj.getClass().getDeclaredField("stuffIWant"); //NoSuchFieldException
f.setAccessible(true);
Hashtable iWantThis = (Hashtable) f.get(obj); //IllegalAccessException
</code></pre><p><strong>EDIT</strong>: as has been commented by <em>aperkins</em>, both accessing the field, setting it as accessible and retrieving the value will all throw <code>Exception</code>s, although the only <em>checked</em> exceptions you need to be mindful of are commented above.</p><p>The <code>NoSuchFieldException</code> would be thrown if you asked for a field by a name which did not correspond to a declared field. </p><pre><code>obj.getClass().getDeclaredField("misspelled"); //will throw NoSuchFieldException
</code></pre><p>The <code>IllegalAccessException</code> would be thrown if the field was not accessible (for example, if it is private and has not been made accessible via missing out the <code>f.setAccessible(true)</code> line.</p><p>The <code>RuntimeException</code>s which may be thrown are either <code>SecurityException</code>s (if the JVM's <code>SecurityManager</code> will not allow you to change a field's accessibility), or <code>IllegalArgumentException</code>s, if you try and access the field on an object not of the field's class's type:</p><pre><code>f.get("BOB"); //will throw IllegalArgumentException, as String is of the wrong type
</code></pre></body></html>

===ID===
584cbfe73e2ca508e5f07250
===QUESTION===
doGet and doPost in Servlets
I've developed an HTML page that sends information to a Servlet. In the Servlet, I am using the methods  doGet()  and  doPost() : In the html page code that calls the Servlet is: When I use  method = "get"  in the Servlet, I get the value of id and password, however when using  method = "post" , id and password are set to  null . Why don't I get the values in this case? Another thing I'd like to know is how to use the data generated or validated by the Servlet. For example, if the Servlet shown above authenticates the user, I'd like to print the user id in my HTML page. I should be able to send the string 'id' as a response and use this info in my HTML page. Is it possible? 
===LINK===
http://stackoverflow.com/questions/2349633/doget-and-dopost-in-servlets
===KEYWORDS===
case info set don string 
===ANSWER===
145
<html><body><p>You should use <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServlet.html#doGet%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29" rel="nofollow noreferrer"><code>doGet()</code></a> when you want to intercept on <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.3" rel="nofollow noreferrer">HTTP GET requests</a>. You should use <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29" rel="nofollow noreferrer"><code>doPost()</code></a> when you want to intercept on <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.5" rel="nofollow noreferrer">HTTP POST requests</a>. That's all. Do not port the one to the other or vice versa (such as in Netbeans' unfortunate auto-generated <code>processRequest()</code> method). This makes no utter sense.</p><p>Usually, HTTP GET requests are <a href="https://en.wikipedia.org/wiki/Idempotence" rel="nofollow noreferrer">idempotent</a>. I.e. you get exactly the same result everytime you execute the request (leaving authorization/authentication and the time-sensitive nature of the page —search results, last news, etc— outside consideration). We can talk about a bookmarkable request. Clicking a link, clicking a bookmark, entering raw URL in browser address bar, etcetera will all fire a HTTP GET request. If a Servlet is listening on the URL in question, then its <code>doGet()</code> method will be called. It's usually used to <strong>preprocess</strong> a request. I.e. doing some business stuff before presenting the HTML output from a JSP, such as gathering data for display in a table.</p><pre><code>@WebServlet("/products")
public class ProductsServlet extends HttpServlet {

    @EJB
    private ProductService productService;

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        List&lt;Product&gt; products = productService.list();
        request.setAttribute("products", products); // Will be available as ${products} in JSP
        request.getRequestDispatcher("/WEB-INF/products.jsp").forward(request, response);
    }

}
</code></pre><pre class="lang-html prettyprint-override"><code>&lt;table&gt;
    &lt;c:forEach items="${products}" var="product"&gt;
        &lt;tr&gt;
            &lt;td&gt;${product.name}&lt;/td&gt;
            &lt;td&gt;&lt;a href="product?id=${product.id}"&gt;detail&lt;/a&gt;&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/c:forEach&gt;
&lt;/table&gt;
</code></pre><p>Also view/edit detail links as shown in last column above are usually idempotent.</p><pre><code>@WebServlet("/product")
public class ProductServlet extends HttpServlet {

    @EJB
    private ProductService productService;

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        Product product = productService.find(request.getParameter("id"));
        request.setAttribute("product", product); // Will be available as ${product} in JSP
        request.getRequestDispatcher("/WEB-INF/product.jsp").forward(request, response);
    }

}
</code></pre><pre class="lang-html prettyprint-override"><code>&lt;dl&gt;
    &lt;dt&gt;ID&lt;/dt&gt;
    &lt;dd&gt;${product.id}&lt;/dd&gt;
    &lt;dt&gt;Name&lt;/dt&gt;
    &lt;dd&gt;${product.name}&lt;/dd&gt;
    &lt;dt&gt;Description&lt;/dt&gt;
    &lt;dd&gt;${product.description}&lt;/dd&gt;
    &lt;dt&gt;Price&lt;/dt&gt;
    &lt;dd&gt;${product.price}&lt;/dd&gt;
    &lt;dt&gt;Image&lt;/dt&gt;
    &lt;dd&gt;&lt;img src="productImage?id=${product.id}" /&gt;&lt;/dd&gt;
&lt;/dl&gt;
</code></pre><p>HTTP POST requests are not idempotent. If the enduser has submitted a POST form on an URL beforehand, which hasn't performed a redirect, then the URL is not necessarily bookmarkable. The submitted form data is not reflected in the URL. Copypasting the URL into a new browser window/tab may not necessarily yield exactly the same result as after the form submit. Such an URL is then not bookmarkable. If a Servlet is listening on the URL in question, then its <code>doPost()</code> will be called. It's usually used to <strong>postprocess</strong> a request. I.e. gathering data from a submitted HTML form and doing some business stuff with it (conversion, validation, saving in DB, etcetera). Finally usually the result is presented as HTML from the forwarded JSP page.</p><pre class="lang-html prettyprint-override"><code>&lt;form action="login" method="post"&gt;
    &lt;input type="text" name="username"&gt;
    &lt;input type="password" name="password"&gt;
    &lt;input type="submit" value="login"&gt;
    &lt;span class="error"&gt;${error}&lt;/span&gt;
&lt;/form&gt;
</code></pre><p>...which can be used in combination with this piece of Servlet:</p><pre><code>@WebServlet("/login")
public class LoginServlet extends HttpServlet {

    @EJB
    private UserService userService;

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String username = request.getParameter("username");
        String password = request.getParameter("password");
        User user = userService.find(username, password);

        if (user != null) {
            request.getSession().setAttribute("user", user);
            response.sendRedirect("home");
        }
        else {
            request.setAttribute("error", "Unknown user, please try again");
            request.getRequestDispatcher("/login.jsp").forward(request, response);
        }
    }

}
</code></pre><p>You see, if the <code>User</code> is found in DB (i.e. username and password are valid), then the <code>User</code> will be put in session scope (i.e. "logged in") and the servlet will redirect to some main page (this example goes to <code>http://example.com/contextname/home</code>), else it will set an error message and forward the request back to the same JSP page so that the message get displayed by <code>${error}</code>.</p><p>You can if necessary also "hide" the <code>login.jsp</code> in <code>/WEB-INF/login.jsp</code> so that the users can only access it by the servlet. This keeps the URL clean <code>http://example.com/contextname/login</code>. All you need to do is to add a <code>doGet()</code> to the servlet like this:</p><pre><code>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    request.getRequestDispatcher("/WEB-INF/login.jsp").forward(request, response);
}
</code></pre><p><em>(and update the same line in <code>doPost()</code> accordingly)</em></p><p>That said, I am not sure if it is just playing around and shooting in the dark, but the code which you posted doesn't look good (such as using <code>compareTo()</code> instead of <code>equals()</code> and digging in the parameternames instead of just using <code>getParameter()</code> and the <code>id</code> and <code>password</code> seems to be declared as servlet instance variables — which is NOT <a href="http://stackoverflow.com/questions/2183974/difference-between-each-instance-of-servlet-and-each-thread-of-servlet-in-servle/2184147#2184147">threadsafe</a>). So I would strongly recommend to learn a bit more about basic Java SE API using the <a href="http://docs.oracle.com/javase/tutorial/" rel="nofollow noreferrer">Oracle tutorials</a> (check the chapter "Trails Covering the Basics") and how to use JSP/Servlets the right way using <a href="http://courses.coreservlets.com/Course-Materials/csajsp2.html" rel="nofollow noreferrer">those tutorials</a>.</p><p><strong>Update</strong>: as per the update of your question (which is pretty major, you should not remove parts of your original question, this would make the answers worthless .. rather <em>add</em> the information in a new block) , it turns out that you're unnecessarily setting form's encoding type to <a href="http://www.faqs.org/rfcs/rfc2388.html" rel="nofollow noreferrer"><code>multipart/form-data</code></a>. This will send the request parameters in a different composition than the (default) <code>application/x-www-form-urlencoded</code> which sends the request parameters as a query string (e.g. <code>name1=value1&amp;name2=value2&amp;name3=value3</code>). You only need <code>multipart/form-data</code> whenever you have a <code>&lt;input type="file"&gt;</code> element in the form to upload files which may be non-character data (binary data). This is not the case in your case, so just remove it and it will work as expected. If you ever need to upload files, then you'll have to set the encoding type so and parse the request body yourself. Usually you use the <a href="http://commons.apache.org/fileupload" rel="nofollow noreferrer">Apache Commons FileUpload</a> there for, but if you're already on fresh new Servlet 3.0 API, then you can just use builtin facilities starting with <a href="http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getPart%28java.lang.String%29" rel="nofollow noreferrer"><code>HttpServletRequest#getPart()</code></a>. See also this answer for a concrete example: <a href="http://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet/2424824#2424824">How to upload files to server using JSP/Servlet?</a></p></body></html>

===ID===
584cbfe73e2ca508e5f07251
===QUESTION===
Official reasons for “Software caused connection abort: socket write error”
Given this stack trace snippet Caused by: java.net.SocketException:
  Software caused connection abort:
  socket write error   at
  java.net.SocketOutputStream.socketWrite0(Native
  Method) I tried to answer the following questions: Regarding #1:   Sun's JVM source doesn't contain this exact message, but I think the text  Software caused connection abort: socket write error  is from the native implementation of  SocketOutputStream : Regarding #2 My guess is that it is caused when the client has terminated the connection, before getting the full response (e.g. sent a request, but before getting the full response, it got closed / terminated / offline) Questions: I need to have a proof that this stack trace is the socket client's "fault", and there is nothing that the server could have done to avoid it. (except catching the exception, or using a non Sun JVM SocketOutputStream, though both don't really avoid the fact the client has terminated) 
===LINK===
http://stackoverflow.com/questions/2126607/official-reasons-for-software-caused-connection-abort-socket-write-error
===KEYWORDS===
socketoutputstream caused catching questions native 
===ANSWER===
42
<html><body><p>"This error can occur when the local network system aborts a connection, such as when WinSock closes an established connection after data retransmission fails (receiver never acknowledges data sent on a datastream socket).". See <a href="http://msdn.microsoft.com/en-us/library/ms832256.aspx">this MSDN article</a>. See also <a href="http://forums.oracle.com/forums/thread.jspa?threadID=1689330">Some information about 'Software caused connection abort'</a>.</p></body></html>

===ID===
584cbfe83e2ca508e5f07252
===QUESTION===
Reading a resource file from within jar
I have a problem with my game and I have search for many different things but just cannot find the answer I want. So here it is, I would like to read a resource from within my jar like so: and it works fine when running it in eclipse, but if I export it to a jar the run it there is an IllegalArgumentException:  and I really don't know why but with some testing I found if I change to then it works the opposite (it works in jar but not eclipse). Please help and BTW I'm using eclipse and the folder with my file in is a class folder. 
===LINK===
http://stackoverflow.com/questions/20389255/reading-a-resource-file-from-within-jar
===KEYWORDS===
btw testing export file find 
===ANSWER===
97
<html><body><p>Rather than trying to address the resource as a <a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html">File</a> just ask the <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/ClassLoader.html">ClassLoader</a> to return an <a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html">InputStream</a> for the resource instead via <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Class.html#getResourceAsStream%28java.lang.String%29">getResourceAsStream</a>:</p><pre class="lang-java prettyprint-override"><code>InputStream in = getClass().getResourceAsStream("/file.txt"); 
BufferedReader reader = new BufferedReader(new InputStreamReader(in));
</code></pre><p>As long as the <code>file.txt</code> resource is available on the classpath then this approach will work the same way regardless of whether the <code>file.txt</code> resource is in a <code>classes/</code> directory or inside a <code>jar</code>.</p><p>The <code>URI is not hierarchical</code> occurs because the URI for a resource within a jar file is most likely going to look like something like this: <code>file:/example.jar!/file.txt</code>. You cannot read the entries within a <code>jar</code> (a <code>zip</code> file) like it was a plain old <a href="http://docs.oracle.com/javase/7/docs/api/java/io/File.html">File</a>.</p><p>This is explained well by the answers to:</p></body></html>

===ID===
584cbfe83e2ca508e5f07253
===QUESTION===
How do I “decompile” Java class files? [closed]
What program can I use to decompile a class file? Will I actually get Java code, or is it just JVM assembly code? On Java performance questions on this site I often see responses from people who have "decompiled" the Java class file to see how the compiler optimizes certain things. 
===LINK===
http://stackoverflow.com/questions/272535/how-do-i-decompile-java-class-files
===KEYWORDS===
decompile responses people things site 
===ANSWER===
526
<html><body><p>Update February 2016:</p><p><a href="http://www.javadecompilers.com/" rel="nofollow noreferrer">www.javadecompilers.com</a> lists JAD as being:</p><p>the most popular Java decompiler, but primarily of this age only. Written in C++, so very fast.<br>
  Outdated, unsupported and does not decompile correctly Java 5 and later</br></p><p>So your mileage may vary with recent jdk (7, 8).</p><p>The same site list other tools.</p><p>Original answer: Oct. 2008</p><p><a href="http://jd.benow.ca/" rel="nofollow noreferrer">Java Decompiler</a> (Yet another Fast Java decompiler) has:</p><p><img alt="screenshot" src="https://i.stack.imgur.com/jH9Pd.png"/></p><p>It works with compilers from JDK 1.1.8 up to JDK 1.7.0, and others (<a href="https://en.wikipedia.org/wiki/Jikes" rel="nofollow noreferrer">Jikes</a>, <a href="https://en.wikipedia.org/wiki/JRockit" rel="nofollow noreferrer">JRockit</a>, etc.). </p><p>It features an online <a href="http://jd.benow.ca/#jd-online" rel="nofollow noreferrer">live demo version</a> that is actually fully functional! You can just drop a jar file on the page and see the decompiled source code without installing anything.</p></body></html>

===ID===
584cbfe93e2ca508e5f07254
===QUESTION===
Java Timer vs ExecutorService?
I have code where I schedule a task using  java.util.timer . I was looking around and saw  ExecutorService  can do the same. So this question here, have you used Timer and  ExecutorService  to schedule tasks, what is the benefit of one using over another? Also wanted to check if anyone had used the  Timer  class and ran into any issues which the  ExecutorService  solved for them. 
===LINK===
http://stackoverflow.com/questions/409932/java-timer-vs-executorservice
===KEYWORDS===
task java wanted schedule ran 
===ANSWER===
219
<html><body><p>According to <a href="http://jcip.net/" rel="nofollow noreferrer">Java Concurrency in Practice</a>:</p><p>If you can use <code>ScheduledThreadExecutor</code> instead of <code>Timer</code>, do so.</p><p>One more thing... while <code>ScheduledThreadExecutor</code> isn't available in Java 1.4 library, there is a <a href="http://backport-jsr166.sourceforge.net/" rel="nofollow noreferrer">Backport of JSR 166 (<code>java.util.concurrent</code>) to Java 1.2, 1.3, 1.4</a>, which has the <code>ScheduledThreadExecutor</code> class.</p></body></html>

===ID===
584cbfe93e2ca508e5f07255
===QUESTION===
How to clone ArrayList and also clone its contents?
How can I clone an  ArrayList  and also clone its items in Java? For example I have: And I would expect that objects in  clonedList  are not the same as in dogs list. 
===LINK===
http://stackoverflow.com/questions/715650/how-to-clone-arraylist-and-also-clone-its-contents
===KEYWORDS===
java items clone objects expect 
===ANSWER===
127
<html><body><p>You will need to iterate on the items, and clone them one by one, putting the clones in your result array as you go.</p><pre><code>public static List&lt;Dog&gt; cloneList(List&lt;Dog&gt; list) {
    List&lt;Dog&gt; clone = new ArrayList&lt;Dog&gt;(list.size());
    for (Dog item : list) clone.add(item.clone());
    return clone;
}
</code></pre><p>For that to work, obviously, you will have to get your Dog object to implement the Cloneable interface, and the clone() method.</p></body></html>

===ID===
584cbfea3e2ca508e5f07256
===QUESTION===
How to set java_home on Windows 7?
I went to the Environment Variables in 'System' in the control panel and made two new variables, one for user variables and one for system variables. Both were named JAVA_HOME and both pointing to C:\Sun\SDK\jdk\bin But for some reason, I still get the below error when running a Java command... How can I fix this problem? 
===LINK===
http://stackoverflow.com/questions/2619584/how-to-set-java-home-on-windows-7
===KEYWORDS===
\sun\sdk\jdk\bin made pointing variables system 
===ANSWER===
533
<html><body><p><strong>Find JDK Installation Directory</strong></p><p>First you need to know the installation path for the Java Development Kit.</p><p>Open the default installation path for the JDK:</p><pre><code>C:\Program Files\Java
</code></pre><p>There should be a subdirectory like:</p><pre><code>C:\Program Files\Java\jdk1.6.0_10
</code></pre><p><strong>Note:</strong> one has only to put the path to the jdk without /bin in the end (as suggested on a lot of places). e.g. C:\Java\jdk1.6.0_31 and NOT C:\Java\jdk1.6.0_31\bin !</p><p><strong>Set the JAVA_HOME Variable</strong></p><p>Once you have the JDK installation path:</p><p><strong>Note:</strong> You might need to restart Windows</p><p>The complete article is here, on my blog: <a href="http://www.robertsindall.co.uk/blog/setting-java-home-variable-in-windows/" rel="nofollow">Setting JAVA_HOME Variable in Windows</a>.</p><p>Get <a href="https://www.youtube.com/watch?v=GR1mUi5HSBU" rel="nofollow">Video Solution</a>.</p></body></html>

===ID===
584cbfea3e2ca508e5f07257
===QUESTION===
System.currentTimeMillis vs System.nanoTime
What I would like to know is whether I should use  System.currentTimeMillis()  or  System.nanoTime()  when updating my object's positions in my game?  Their change in movement is directly proportional to the elapsed time since the last call and I want to be as precise as possible. I've read that there are some serious time-resolution issues between different operating systems (namely that Mac / Linux have an almost 1 ms resolution while Windows has a  50ms resolution??).  I'm primarly running my apps on windows and 50ms resolution seems pretty inaccurate. Are there better options than the two I listed? Any suggestions / comments? 
===LINK===
http://stackoverflow.com/questions/351565/system-currenttimemillis-vs-system-nanotime
===KEYWORDS===
precise windows positions listed object 
===ANSWER===
213
<html><body><p>If you're just looking for extremely precise measurements of <strong>elapsed time</strong>, use <code>System.nanoTime()</code>. <code>System.currentTimeMillis()</code> will give you the most accurate possible elapsed time in milliseconds since the epoch, but <code>System.nanoTime()</code> gives you a nanosecond-precise time, relative to some arbitrary point.</p><p>From the Java Documentation:</p><pre><code>public static long nanoTime()
</code></pre><p>Returns the current value of the most precise available system timer, in nanoseconds.</p><p>This method can only be used to
  measure elapsed time and is not
  related to any  other notion of system
  or wall-clock time. The value returned
  represents nanoseconds since some
  fixed but arbitrary time (perhaps in
  the future, so values may be
  negative). This method provides
  nanosecond precision, but not
  necessarily nanosecond accuracy. No
  guarantees are made about how
  frequently values change. Differences
  in successive calls that span greater
  than approximately 292 years (2<sup>63</sup>
  nanoseconds) will not accurately
  compute elapsed time due to numerical
  overflow.</p><p>For example, to measure how long some code takes to execute:</p><pre><code>long startTime = System.nanoTime();    
// ... the code being measured ...    
long estimatedTime = System.nanoTime() - startTime;
</code></pre><p>See also: <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/System.html#nanoTime%28%29" rel="nofollow noreferrer">JavaDoc System.nanoTime()</a> and <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/System.html#currentTimeMillis%28%29" rel="nofollow noreferrer">JavaDoc System.currentTimeMillis()</a> for more info.</p></body></html>

===ID===
584cbfeb3e2ca508e5f07258
===QUESTION===
Static initializer in Java
My question is about one particular usage of static keyword. It is possible to use  static  keyword to cover a code block within a class which does not belong to any function. For example following code compiles: If you remove the  static  keyword it complains because the variable  a  is  final . However it is possible to remove both  final  and  static  keywords and make it compile.  It is confusing for me in both ways. How am I supposed to have a code section that does not belong to any method? How is it possible to invoke it? In general, what is the purpose of this usage? Or better, where can I find documentation about this? 
===LINK===
http://stackoverflow.com/questions/335311/static-initializer-in-java
===KEYWORDS===
function java complains invoke ways 
===ANSWER===
242
<html><body><p>The code block with the static modifier signifies a <em>class</em> initializer; without the static modifier the code block is an <em>instance</em> initializer.  </p><p>Class initializers are executed in the order they are defined (top down, just like simple variable initializers) when the class is loaded (actually, when it's resolved, but that's a technicality).</p><p>Instance initializers are executed in the order defined when the class is instantiated, immediately before the constructor code is executed, immediately after the invocation of the super constructor.</p><p>If you remove <code>static</code> from <code>int a</code>, it becomes an instance variable which is not initialized at construction.  If you also remove <code>static</code> from the initializer block, it then becomes an instance initializer and so <code>int a</code> is initialized at construction.</p></body></html>

===ID===
584cbfeb3e2ca508e5f07259
===QUESTION===
CSV API for Java [closed]
Can anyone recommend a simple API that will allow me to use read a CSV input file, do some simple transformations, and then write it. A quick google has found  http://flatpack.sourceforge.net/  which looks promising. I just wanted to check what others are using before I couple myself to this API. 
===LINK===
http://stackoverflow.com/questions/101100/csv-api-for-java
===KEYWORDS===
net/ wanted java read couple 
===ANSWER===
73
<html><body><p>I've used <a href="http://opencsv.sourceforge.net/" rel="nofollow noreferrer">OpenCSV</a> in the past. </p><pre><code>import au.com.bytecode.opencsv.CSVReader;</code></pre><p><pre>String fileName = "data.csv";
CSVReader reader = new CSVReader(new FileReader(fileName ));</pre></p><pre>String fileName = "data.csv";
CSVReader reader = new CSVReader(new FileReader(fileName ));</pre><p>// if the first line is the header
String[] header = reader.readNext();<br>
// iterate over reader.readNext until it returns null
String[] line = reader.readNext();
</br></p></body></html>

===ID===
584cbfec3e2ca508e5f0725a
===QUESTION===
What is the difference between a variable, object, and reference? [duplicate]
This question already has an answer here: Exactly what are the differences between  variables ,  objects , and  references ? For example: they all point to some type, and they must all hold values (unless of course you have the temporary null-able type), but precisely how are their functions and implementations different from each other? Example: They have the same concepts, but how are they different? 
===LINK===
http://stackoverflow.com/questions/32010172/what-is-the-difference-between-a-variable-object-and-reference
===KEYWORDS===
functions difference reference point variables 
===ANSWER===
129
<html><body><p>(Just to be clear, the explanation I'm giving here is specific to Java and C#. Don't assume it applies to other languages, although bits of it may.)</p><p>I like to use an analogy of telling someone where I live. I might write my address on a piece of paper:</p><p>Does that help?</p><p>The difference between a value type and a reference type is what gets written on the piece of paper. For example, here:</p><pre><code>int x = 12;
</code></pre><p>is like having a piece of paper with the number 12 written on it directly. Whereas:</p><pre><code>Dog myDog = new Dog();
</code></pre><p>doesn't write the Dog object contents itself on the piece of paper - it creates a new <code>Dog</code>, and then writes a reference to the dog on that paper.</p><p>In non-analogy terms:</p></body></html>

===ID===
584cbfec3e2ca508e5f0725b
===QUESTION===
Create ArrayList from array
I have an array that is initialized like: I would like to convert this array into an object of the ArrayList class. 
===LINK===
http://stackoverflow.com/questions/157944/create-arraylist-from-array
===KEYWORDS===
initialized array object convert 
===ANSWER===
2942
<html><body><pre><code>new ArrayList&lt;Element&gt;(Arrays.asList(array))
</code></pre></body></html>

===ID===
584cbfed3e2ca508e5f0725c
===QUESTION===
Difference between <? super T> and <? extends T> in Java
What is the difference between  List<? super T>  and  List<? extends T>  ? I used to use  List<? extends T> , but it does not allow me to add elements to it  list.add(e) , whereas the  List<? super T>  allows.  I want to know the difference. 
===LINK===
http://stackoverflow.com/questions/4343202/difference-between-super-t-and-extends-t-in-java
===KEYWORDS===
list< java list add extends 
===ANSWER===
534
<html><body><p>The wildcard declaration of <code>List&lt;? extends Number&gt; foo3</code> means that any of these are legal assignments:</p><pre><code>List&lt;? extends Number&gt; foo3 = new ArrayList&lt;Number&gt;();  // Number "extends" Number (in this context)
List&lt;? extends Number&gt; foo3 = new ArrayList&lt;Integer&gt;(); // Integer extends Number
List&lt;? extends Number&gt; foo3 = new ArrayList&lt;Double&gt;();  // Double extends Number
</code></pre><p><strong>Reading</strong> - Given the above possible assignments, what type of object are you guarenteed to read from <code>List foo3</code>:</p><p><strong>Writing</strong> - Given the above possible assignments, what type of object could you add to <code>List foo3</code> that would be legal for <strong>all</strong> the above possible <code>ArrayList</code> assignments:</p><p><em>You can't add any object to <code>List&lt;? extends T&gt;</code> because you can't guarantee what kind of <code>List</code> it is really pointing to, so you can't guarantee that the object is allowed in that <code>List</code>.  The only "guarantee" is that you can only read from it and you'll get a <code>T</code> or subclass of  <code>T</code>.</em></p><p>Now consider <code>List &lt;? super T &gt;</code>.</p><p>The wildcard declaration of <code>List&lt;? super Integer&gt; foo3</code> means that any of these are legal assignments:</p><pre><code>List&lt;? super Integer&gt; foo3 = new ArrayList&lt;Integer&gt;();  // Integer is a "superclass" of Integer (in this context)
List&lt;? super Integer&gt; foo3 = new ArrayList&lt;Number&gt;();   // Number is a superclass of Integer
List&lt;? super Integer&gt; foo3 = new ArrayList&lt;Object&gt;();   // Object is a superclass of Integer
</code></pre><p><strong>Reading</strong> - Given the above possible assignments, what type of object are you guaranteed to receive when you read from <code>List foo3</code>:</p><p><strong>Writing</strong> - Given the above possible assignments, what type of object could you add to <code>List foo3</code> that would be legal for <strong>all</strong> the above possible <code>ArrayList</code> assignments:</p><p>Remember <em>PECS</em>: <strong>"Producer Extends, Consumer Super"</strong>.</p><p><strong>"Producer Extends"</strong> - If you need a <code>List</code> to produce <code>T</code> values (you want to read <code>T</code>s from the list), you need to declare it with <code>? extends T</code>, e.g. <code>List&lt;? extends Integer&gt;</code>. But you cannot add to this list.</p><p><strong>"Consumer Super"</strong> - If you need a <code>List</code> to consume <code>T</code> values (you want to write <code>T</code>s into the list), you need to declare it with <code>? super T</code>, e.g. <code>List&lt;? super Integer&gt;</code>. But there are no guarantees what type of object you may read from this list.</p><p>If you need to both read from and write to a list, you need to declare it exactly with no wildcards, e.g. <code>List&lt;Integer&gt;</code>.</p><p>Note <a href="http://www.angelikalanger.com/GenericsFAQ/FAQSections/TypeArguments.html#FAQ103">this example from the Java Generics FAQ</a>. Note how the source list <code>src</code> (the producing list) uses <code>extends</code>, and the destination list <code>dest</code> (the consuming list) uses <code>super</code>:</p><pre><code>public class Collections { 
  public static &lt;T&gt; void copy(List&lt;? super T&gt; dest, List&lt;? extends T&gt; src) 
  {
      for (int i=0; i&lt;src.size(); i++) 
        dest.set(i,src.get(i)); 
  } 
}
</code></pre><p>Also see 
<a href="http://stackoverflow.com/questions/2776975/how-can-i-add-to-list-extends-number-data-structures/2777297#2777297">How can I add to List&lt;? extends Number&gt; data structures?</a></p></body></html>

===ID===
584cbfed3e2ca508e5f0725d
===QUESTION===
Causes of getting a java.lang.VerifyError
I'm investigating the following  java.lang.VerifyError It occurs when the jboss server in which the servlet is deployed is started.
It is compiled with jdk-1.5.0_11 and I tried to recompile it with jdk-1.5.0_15 without succes. That is the compilation runs fine but when deployed, the java.lang.VerifyError occurs. When I changed the method name and got the following error: You can see that more of the method signature is shown. The actual method signature is I already tried looking at it with  javap  and that gives the method signature as it should be. When my other colleagues check out the code, compile it and deploy it, they have the same problem. When the build server picks up the code and deploys it on development or testing environments (HPUX), the same error occurs. Also an automated testing machine running Ubuntu shows the same error during server startup. The rest of the application runs okay, only that one servlet is out of order.
Any ideas where to look would be helpful. 
===LINK===
http://stackoverflow.com/questions/100107/causes-of-getting-a-java-lang-verifyerror
===KEYWORDS===
succes code rest javap shown 
===ANSWER===
156
<html><body><p><code>java.lang.VerifyError</code> can be the result when you have compiled against a different library than you are using at runtime.</p><p>For example, this happened to me when trying to run a program that was compiled against Xerces 1, but Xerces 2 was found on the classpath.  The required classes (in <code>org.apache.*</code> namespace) were found at runtime, so <code>ClassNotFoundException</code> was <strong><em>not</em></strong> the result.  There had been changes to the classes and methods, so that the method signatures found at runtime did not match what was there at compile-time.</p><p>Normally, the compiler will flag problems where method signatures do not match.  The JVM will verify the bytecode again when the class is loaded, and throws <code>VerifyError</code> when the bytecode is trying to do something that should not be allowed -- e.g. calling a method that returns <code>String</code> and then stores that return value in a field that holds a <code>List</code>.</p></body></html>

===ID===
584cbfee3e2ca508e5f0725e
===QUESTION===
Draw a line in a JPanel with button click in Java
I want to draw a line in a JPanel.
This is my GUI and I want a line in the JPanel in white. I find many examples but the problem is the how to use it. In many exmples, always they draw in a JFrame that extends from a JPanel. I want to add the Panel to the Frame and add some buttons to draw lines in many directions and use the X button in center to clean the JPanel. This is the code of the interface: This is the code to draw a line So how to use this lines .... Thanks in advance. Best regards, Ali 
===LINK===
http://stackoverflow.com/questions/5797862/draw-a-line-in-a-jpanel-with-button-click-in-java
===KEYWORDS===
code frame directions examples find 
===ANSWER===
21
<html><body><p>It may be easier to draw lines using the following approach:</p><p>This related <a href="http://sites.google.com/site/drjohnbmatthews/graphpanel">example</a> may offer some additional guidance.</p><pre><code>import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/**
 * @see http://stackoverflow.com/questions/6991648
 * @see http://stackoverflow.com/questions/6887296
 * @see http://stackoverflow.com/questions/5797965
 */
public class LinePanel extends JPanel {

    private MouseHandler mouseHandler = new MouseHandler();
    private Point p1 = new Point(100, 100);
    private Point p2 = new Point(540, 380);
    private boolean drawing;

    public LinePanel() {
        this.setPreferredSize(new Dimension(640, 480));
        this.addMouseListener(mouseHandler);
        this.addMouseMotionListener(mouseHandler);
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setColor(Color.blue);
        g2d.setRenderingHint(
            RenderingHints.KEY_ANTIALIASING,
            RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setStroke(new BasicStroke(8,
            BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));
        g.drawLine(p1.x, p1.y, p2.x, p2.y);
    }

    private class MouseHandler extends MouseAdapter {

        @Override
        public void mousePressed(MouseEvent e) {
            drawing = true;
            p1 = e.getPoint();
            p2 = p1;
            repaint();
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            drawing = false;
            p2 = e.getPoint();
            repaint();
        }

        @Override
        public void mouseDragged(MouseEvent e) {
            if (drawing) {
                p2 = e.getPoint();
                repaint();
            }
        }
    }

    private class ControlPanel extends JPanel {

        private static final int DELTA = 10;

        public ControlPanel() {
            this.add(new MoveButton("\u2190", KeyEvent.VK_LEFT, -DELTA, 0));
            this.add(new MoveButton("\u2191", KeyEvent.VK_UP, 0, -DELTA));
            this.add(new MoveButton("\u2192", KeyEvent.VK_RIGHT, DELTA, 0));
            this.add(new MoveButton("\u2193", KeyEvent.VK_DOWN, 0, DELTA));
        }

        private class MoveButton extends JButton {

            KeyStroke k;
            int dx, dy;

            public MoveButton(String name, int code,
                    final int dx, final int dy) {
                super(name);
                this.k = KeyStroke.getKeyStroke(code, 0);
                this.dx = dx;
                this.dy = dy;
                this.setAction(new AbstractAction(this.getText()) {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        LinePanel.this.p1.translate(dx, dy);
                        LinePanel.this.p2.translate(dx, dy);
                        LinePanel.this.repaint();
                    }
                });
                ControlPanel.this.getInputMap(WHEN_IN_FOCUSED_WINDOW)
                    .put(k, k.toString());
                ControlPanel.this.getActionMap()
                    .put(k.toString(), new AbstractAction() {

                    @Override
                    public void actionPerformed(ActionEvent e) {
                        MoveButton.this.doClick();
                    }
                });
            }
        }
    }

    private void display() {
        JFrame f = new JFrame("LinePanel");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(this);
        f.add(new ControlPanel(), BorderLayout.SOUTH);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new LinePanel().display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cbfee3e2ca508e5f0725f
===QUESTION===
How to add an image to a JPanel?
I have a  JPanel  to which I'd like to add JPEG and PNG images that I generate on the fly. All the examples I've seen so far in the  Swing Tutorials , specially in the  Swing examples  use  ImageIcon s. I'm generating these images as byte arrays, and they are usually larger than the common icon they use in the examples, at 640x480. Edit : A more careful examination of the tutorials and the API shows that you cannot add an ImageIcon directly to a JPanel. Instead, they achieve the same effect by setting the image as an icon of a JLabel. This just doesn't feel right... 
===LINK===
http://stackoverflow.com/questions/299495/how-to-add-an-image-to-a-jpanel
===KEYWORDS===
fly imageicon generating feel specially 
===ANSWER===
212
<html><body><p>Here's how I do it (with a little more info on how to load an image):</p><pre><code>import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JPanel;

public class ImagePanel extends JPanel{

    private BufferedImage image;

    public ImagePanel() {
       try {                
          image = ImageIO.read(new File("image name and path"));
       } catch (IOException ex) {
            // handle exception...
       }
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, this); // see javadoc for more info on the parameters            
    }

}
</code></pre></body></html>

===ID===
584cbfef3e2ca508e5f07260
===QUESTION===
How to nicely format floating numbers to String without unnecessary decimal 0?
An 64-bit double can represent integer +/- 2 53  exactly Given this fact I choose to use a double type as a single type for all my types, since my largest integer is unsigned 32-bit. But now I have to print these pseudo integers, but the problem is they are also mixed in with actual doubles. So how do I print these doubles nicely in Java? I have tried  String.format("%f", value) , which is close, except I get a lot of trailing zeros for small values. Here's an example output of of  %f What I want is: Sure I can write a function to trim those zeros, but that's lot of performance loss due to String manipulation.  Can I do better with another format code? EDIT The answers by Tom E. and Jeremy S. are unacceptable as they both arbitrarily rounds to 2 decimal places.  Please understand the problem before answering. EDIT 2 Please note that  String.format(format, args...)  is  locale-dependent  (see answers below). 
===LINK===
http://stackoverflow.com/questions/703396/how-to-nicely-format-floating-numbers-to-string-without-unnecessary-decimal-0
===KEYWORDS===
trim locale unacceptable close note 
===ANSWER===
246
<html><body><p>If the idea is to print integers stored as doubles as if they are integers, and otherwise print the doubles with the minimum necessary precision:</p><pre><code>public static String fmt(double d)
{
    if(d == (long) d)
        return String.format("%d",(long)d);
    else
        return String.format("%s",d);
}
</code></pre><p>Produces:</p><pre><code>232
0.18
1237875192
4.58
0
1.2345
</code></pre><p>And does not rely on string manipulation.</p></body></html>

===ID===
584cbfef3e2ca508e5f07261
===QUESTION===
When is the finalize() method called in Java?
I need to know when the  finalize()  method is called in the  JVM . I created a test class which writes into a file when the  finalize()  method is called by overriding it. It is not executed. Can anybody tell me the reason why it is not executing? 
===LINK===
http://stackoverflow.com/questions/2506488/when-is-the-finalize-method-called-in-java
===KEYWORDS===
overriding java file finalize created 
===ANSWER===
165
<html><body><p>In general it's best not to rely on <code>finalize()</code> to do any cleaning up etc.</p><p>According to the <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#finalize%28%29" rel="nofollow noreferrer">Javadoc</a> (which it would be worth reading), it is:</p><p>Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.</p><p>As Joachim pointed out, this may never happen in the life of a program if the object is always accessible.</p><p>Also, the garbage collector is not guaranteed to run at any specific time. In general, what I'm trying to say is <code>finalize()</code> is probably not the best method to use in general unless there's something specific you need it for.</p></body></html>

===ID===
584cbff03e2ca508e5f07262
===QUESTION===
Generating Unique Random Numbers in Java
I'm trying to get random numbers between 0 and 100. But I want them to be unique, not repeated in a sequence. For example if I got 5 numbers, they should be 82,12,53,64,32 and not 82,12,53,12,32
I used this, but it generates same numbers in a sequence. 
===LINK===
http://stackoverflow.com/questions/8115722/generating-unique-random-numbers-in-java
===KEYWORDS===
java generates sequence repeated numbers 
===ANSWER===
66
<html><body><p>Here is a simple implementation.  This will print 3 unique random numbers from the range 1-10.</p><pre><code>import java.util.ArrayList;
import java.util.Collections;

public class UniqueRandomNumbers {

    public static void main(String[] args) {
        ArrayList&lt;Integer&gt; list = new ArrayList&lt;Integer&gt;();
        for (int i=1; i&lt;11; i++) {
            list.add(new Integer(i));
        }
        Collections.shuffle(list);
        for (int i=0; i&lt;3; i++) {
            System.out.println(list.get(i));
        }
    }
}
</code></pre><p>The first part of the fix with the original approach, as Mark Byers pointed out in an answer now deleted, is to use only a single <code>Random</code> instance.  </p><p>That is what is causing the numbers to be identical.  A <code>Random</code> instance is seeded by the current time in milliseconds.  For a particular <strong>seed value,</strong> the 'random' instance will return the exact same <strong>sequence of <em>pseudo random</em> numbers.</strong></p></body></html>

===ID===
584cbff03e2ca508e5f07263
===QUESTION===
How can an app use files inside the JAR for read and write?
I need to store data into files inside .jar file and read it again. I know that I can use  Class.getResourceAsStream()  method but it returns an  InputStream  that I can  read  from.  But I look for a way to  write. 
===LINK===
http://stackoverflow.com/questions/5052311/how-can-an-app-use-files-inside-the-jar-for-read-and-write
===KEYWORDS===
getresourceasstream read app jar inputstream 
===ANSWER===
80
<html><body><p>I need to store data into files inside .jar file and read it again </p><p>No you don't.</p><p>Instead store the 'default' file inside the Jar.  If it is changed, store the altered file in another place.  One common place is a sub-directory of <code>user.home</code>.  When checking for the file, first check the existence of an altered file on the file system, and if it does not exist, load the default file.</p><p>Note that it is generally better to describe the goal, rather than the strategy.  <em>'Store changed file in Jar'</em> is a strategy, whereas <em>'Save preferences between runs'</em> might be the goal.</p></body></html>

===ID===
584cbff13e2ca508e5f07264
===QUESTION===
Implementing back/forward buttons in Swing
I have a quick question.  I'm getting a little bit of experience with Swing and the easiest way to do this was to draw up a reasonably big GUI. As part of the GUI, I want to have Forward and Back Buttons. The Approach I'm trying to take is to implement methods that will push the current JPanel to a stack and retrieve the previous value (Be that in a forwards or reverse direction (hence 2 stacks)). I can't get it to work though. Perhaps I'm going about it completely the wrong way or maybe a stack can't be used int the way I'm using it. In either case, it's really bugging me. I imagine there are probably easier ways like a card layout but I think this approach should work and that's what's so annoying. It may be worth noting that I'm using a JFrame "base class" and changing the central JPanel depending on the screen. The nav bar is constant as a part of the "base class" however The code of this "base class": 
===LINK===
http://stackoverflow.com/questions/5654926/implementing-back-forward-buttons-in-swing
===KEYWORDS===
code retrieve forwards int constant 
===ANSWER===
13
<html><body><p>Here's an example using <a href="http://download.oracle.com/javase/6/docs/api/java/awt/CardLayout.html" rel="nofollow noreferrer"><code>CardLayout</code></a>.</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/L55ql.png"/></p><pre><code>import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.util.Random;
import javax.swing.AbstractAction;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/** @see http://stackoverflow.com/questions/5654926 */
public class CardPanel extends JPanel {

    private static final Random random = new Random();
    private static final JPanel cards = new JPanel(new CardLayout());
    private final String name;

    public CardPanel(String name) {
        this.name = name;
        this.setPreferredSize(new Dimension(320, 240));
        this.setBackground(new Color(random.nextInt()));
        this.add(new JLabel(name));
    }

    @Override
    public String toString() {
        return name;
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                create();
            }
        });
    }

    private static void create() {
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        for (int i = 1; i &lt; 9; i++) {
            CardPanel p = new CardPanel("Panel " + String.valueOf(i));
            cards.add(p, p.toString());
        }
        JPanel control = new JPanel();
        control.add(new JButton(new AbstractAction("\u22b2Prev") {

            @Override
            public void actionPerformed(ActionEvent e) {
                CardLayout cl = (CardLayout) cards.getLayout();
                cl.previous(cards);
            }
        }));
        control.add(new JButton(new AbstractAction("Next\u22b3") {

            @Override
            public void actionPerformed(ActionEvent e) {
                CardLayout cl = (CardLayout) cards.getLayout();
                cl.next(cards);
            }
        }));
        f.add(cards, BorderLayout.CENTER);
        f.add(control, BorderLayout.SOUTH);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }
}
</code></pre></body></html>

===ID===
584cbff13e2ca508e5f07265
===QUESTION===
Difference between applicationContext.xml and spring-servlet.xml in Spring Framework

===LINK===
http://stackoverflow.com/questions/3652090/difference-between-applicationcontext-xml-and-spring-servlet-xml-in-spring-frame
===KEYWORDS===
xml applicationcontext difference servlet spring 
===ANSWER===
328
<html><body><p>Spring lets you define multiple contexts in a parent-child hierarchy.</p><p>The <code>applicationContext.xml</code> defines the beans for the "root webapp context", i.e. the context associated with the webapp.</p><p>The <code>spring-servlet.xml</code> (or whatever else you call it) defines the beans for one servlet's app context.  There can be many of these in a webapp, one per Spring servlet (e.g. <code>spring1-servlet.xml</code> for servlet <code>spring1</code>, <code>spring2-servlet.xml</code> for servlet <code>spring2</code>).</p><p>Beans in <code>spring-servlet.xml</code> can reference beans in <code>applicationContext.xml</code>, but not vice versa.</p><p>All Spring MVC controllers must go in the <code>spring-servlet.xml</code> context.</p><p>In most simple cases, the <code>applicationContext.xml</code> context is unnecessary. It is generally used to contain beans that are shared between all servlets in a webapp. If you only have one servlet, then there's not really much point, unless you have a specific use for it.</p></body></html>

===ID===
584cbff23e2ca508e5f07266
===QUESTION===
What is Daemon thread in Java?
Can anybody tell me what daemon threads are in Java? 
===LINK===
http://stackoverflow.com/questions/2213340/what-is-daemon-thread-in-java
===KEYWORDS===
java 
===ANSWER===
385
<html><body><p>A daemon thread is a thread that does not prevent the JVM from exiting when the program finishes but the thread is still running. An example for a daemon thread is the garbage collection.</p><p>You can use the <code>setDaemon(boolean)</code> method to change the <code>Thread</code> daemon properties before the thread starts.</p></body></html>

===ID===
584cbff23e2ca508e5f07267
===QUESTION===
Maven: add a dependency to a jar by relative path
I have a proprietary jar that I want to add to my pom as a dependency. But I don't want to add it to a repository. The reason is that I want my usual maven commands such as  mvn compile , etc, to work out of the box. (Without demanding from the developers a to add it to some repository by themselves). I want the jar to be in a 3rdparty lib in source control, and link to it by relative path from the pom.xml file. Can this be done? How? 
===LINK===
http://stackoverflow.com/questions/2229757/maven-add-a-dependency-to-a-jar-by-relative-path
===KEYWORDS===
box don repository work jar 
===ANSWER===
249
<html><body><p>I want the jar to be in a 3rdparty lib in source control, and link to it by relative path from the pom.xml file.</p><p>If you really want this (understand, if you can't use a corporate repository), then my advice would be to use a "file repository" local to the project and to <strong>not use</strong> a <code>system</code> scoped dependency. The <code>system</code> scoped  should be avoided, such dependencies don't work well in many situation (e.g. in assembly), they cause more troubles than benefits. </p><p>So, instead, declare a repository local to the project:</p><pre><code>&lt;repositories&gt;
  &lt;repository&gt;
    &lt;id&gt;my-local-repo&lt;/id&gt;
    &lt;url&gt;file://${basedir}/my-repo&lt;/url&gt;
  &lt;/repository&gt;
&lt;/repositories&gt;
</code></pre><p>Install your third party lib in there using <code>install:install-file</code> with the <a href="http://maven.apache.org/plugins/maven-install-plugin/install-file-mojo.html#localRepositoryPath" rel="nofollow noreferrer"><code>localRepositoryPath</code></a> parameter:</p><p><strike></strike></p><pre><code>mvn install:install-file -Dfile=&lt;path-to-file&gt; -DgroupId=&lt;myGroup&gt; \ 
                         -DartifactId=&lt;myArtifactId&gt; -Dversion=&lt;myVersion&gt; \
                         -Dpackaging=&lt;myPackaging&gt; -DlocalRepositoryPath=&lt;path&gt;
</code></pre><p></p></body></html>

===ID===
584cbff33e2ca508e5f07268
===QUESTION===
What is null in Java?
What is  null ?  Is  null  an instance of anything?  What set does  null  belong to? How is it represented in the memory? 
===LINK===
http://stackoverflow.com/questions/2707322/what-is-null-in-java
===KEYWORDS===
set java instance memory represented 
===ANSWER===
242
<html><body><p>Is null an instance of anything? </p><p>No, there is no type which <code>null</code> is an <code>instanceof</code>.</p><pre><code>RelationalExpression:
    RelationalExpression instanceof ReferenceType
</code></pre><p>At run time, the result of the <code>instanceof</code> operator is <code>true</code> if the value of the <em>RelationalExpression</em> is not <code>null</code> and the reference could be cast to the <em>ReferenceType</em> without raising a <code>ClassCastException</code>. Otherwise the result is <code>false</code>.</p><p>This means that for any type <code>E</code> and <code>R</code>, for any <code>E o</code>, where <code>o == null</code>, <code>o instanceof R</code> is always <code>false</code>.</p><p>What set does 'null' belong to?</p><p>There is also a special <em>null</em> type, the type of the expression <code>null</code>, which has no name. Because the <em>null</em> type has no name, it is impossible to declare a variable of the <em>null</em> type or to cast to the <em>null</em> type. The <code>null</code> reference is the only possible value of an expression of <em>null</em> type. The <code>null</code> reference can always be cast to any reference type. In practice, the programmer can ignore the <em>null</em> type and just pretend that <code>null</code> is merely a special literal that can be of any reference type.</p><p>What is null?</p><p>As the JLS quote above says, in practice you can simply pretend that it's "merely a special literal that can be of any reference type".</p><p>In Java, <code>null == null</code> (this isn't always the case in other languages). Note also that by contract, it also has this special property (from <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html#equals%28java.lang.Object%29" rel="nofollow noreferrer"><code>java.lang.Object</code></a>):</p><p><code>public boolean equals(Object obj)</code></p><p>For any non-<code>null</code> reference value <code>x</code>, <code>x.equals(null)</code> should <code>return false</code>. </p><p>It is also the <em>default value</em> (for variables that have them) for all reference types:</p><p>How this is used varies. You can use it to enable what is called <em>lazy initialization</em> of fields, where a field would have its initial value of <code>null</code> until it's actually used, where it's replaced by the "real" value (which may be expensive to compute).</p><p>There are also other uses. Let's take a real example from <a href="http://java.sun.com/javase/6/docs/api/java/lang/System.html#console%28%29" rel="nofollow noreferrer"><code>java.lang.System</code></a>:</p><p><code>public static Console console()</code></p><p><strong>Returns</strong>: The system console, if any, otherwise <code>null</code>.</p><p>This is a very common use pattern: <code>null</code> is used to denote non-existence of an object.</p><p>Here's another usage example, this time from <a href="http://java.sun.com/javase/6/docs/api/java/io/BufferedReader.html#readLine%28%29" rel="nofollow noreferrer"><code>java.io.BufferedReader</code></a>:</p><p><code>public String readLine() throws IOException</code></p><p><strong>Returns</strong>: A <code>String</code> containing the contents of the line, not including any line-termination characters, or <code>null</code> if the end of the stream has been reached.</p><p>So here, <code>readLine()</code> would return <code>instanceof String</code> for each line, until it finally returns a <code>null</code> to signify the end. This allows you to process each line as follows:</p><pre><code>String line;
while ((line = reader.readLine()) != null) {
   process(line);
}
</code></pre><p>One can design the API so that the termination condition doesn't depend on <code>readLine()</code> returning <code>null</code>, but one can see that this design has the benefit of making things concise. Note that there is no problem with empty lines, because an empty line <code>"" != null</code>.</p><p>Let's take another example, this time from <a href="http://java.sun.com/javase/6/docs/api/java/util/Map.html#get%28java.lang.Object%29" rel="nofollow noreferrer"><code>java.util.Map&lt;K,V&gt;</code></a>:</p><p><code>V get(Object key)</code></p><p>Returns the value to which the specified key is mapped, or <code>null</code> if this map contains no mapping for the key.</p><p>If this map permits <code>null</code> values, then a return value of <code>null</code> does not necessarily indicate that the map contains no mapping for the key; it's also possible that the map explicitly maps the key to <code>null</code>. The <code>containsKey</code> operation may be used to distinguish these two cases. </p><p>Here we start to see how using <code>null</code> can complicate things. The first statement says that if the key isn't mapped, <code>null</code> is returned. The second statement says that even if the key is mapped, <code>null</code> can <em>also</em> be returned.</p><p>In contrast, <a href="http://java.sun.com/javase/6/docs/api/java/util/Hashtable.html" rel="nofollow noreferrer"><code>java.util.Hashtable</code></a> keeps things simpler by not permitting <code>null</code> keys and values; its <code>V get(Object key)</code>, if returns <code>null</code>, unambiguously means that the key isn't mapped.</p><p>You can read through the rest of the APIs and find where and how <code>null</code> is used. Do keep in mind that they aren't always the <em>best practice</em> examples.</p><p>Generally speaking, <code>null</code> are used as a special value to signify:</p><p>How is it represented in the memory?</p><p>In Java? None of your concern. And it's best kept that way.</p><p>This is now borderline subjective. Some people say that <code>null</code> causes many programmer errors that could've been avoided. Some say that in a language that catches <code>NullPointerException</code> like Java, it's good to use it because you will fail-fast on programmer errors. Some people avoid <code>null</code> by using <a href="http://en.wikipedia.org/wiki/Null_Object_pattern" rel="nofollow noreferrer">Null object pattern</a>, etc.</p><p>This is a huge topic on its own, so it's best discussed as answer to another question.</p><p>I will end this with a quote from the inventor of <code>null</code> himself, <a href="http://en.wikipedia.org/wiki/C._A._R._Hoare" rel="nofollow noreferrer">C.A.R Hoare</a> (of quicksort fame):</p><p><strong>I call it my billion-dollar mistake.</strong> It was the invention of the <code>null</code> reference in 1965. At that time, I was designing the first comprehensive type system for references in an object oriented language (ALGOL W). My goal was to ensure that all use of references should be absolutely safe, with checking performed automatically by the compiler. But I couldn't resist the temptation to put in a <code>null</code> reference, simply because it was so easy to implement. This has led to innumerable errors, vulnerabilities, and system crashes, which have probably caused a billion dollars of pain and damage in the last forty years.</p><p>The <a href="http://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare" rel="nofollow noreferrer">video of this presentation</a> goes deeper; it's a recommended watch.</p></body></html>

===ID===
584cbff33e2ca508e5f07269
===QUESTION===
Something seems wrong with the layout, JButton showing unexpected behaviour at resize of the window
JRE Version 1.7 Update 3 EXPECTED BEHAVIOUR As I run the program, it works as expected, everything works smoothly. As when I click on  STOP   JButton  the animation stops and the text on the same  JButton  changes to  START . Now when i click on  BALL COLOUR   JButton , the colour of the  BALL  changes, as well as the colour of the  BALL COLOUR   JBUTTON , also changes, to that of the  BALL . This whole behaviour works if I run my application as is without resizing. UNEXPECTED BEHAVIOUR But when i  RESIZE  my  JFrame , by pulling the  Right Side , that's when unexpected behaviour of my Application is shown, in the sense that if I press  STOP   JButton  and then click on  BALL COLOUR  button, the text on the  JButton  clicked earlier whose text changed to  START  will change to  STOP  again when it should not be, as well as the colour of the  BALL COLOUR   JButton  will remain unchanged or will turn to  BLUE , when it should be changed to the colour of the ball. I am attaching the pics for more info. But if you will try to resize it back to it's original size or closer to that, then things will come back to normal. Why is this happening ? Any idea or clue will be much appreciated. As My Application Runs with  EXPECTED BEHAVIOUR  as described above :  And here the  UNEXPECTED BEHAVIOUR BOTTOM-LINE :   Why the Application runs as usual as it should be, at the  BEGINNING  , but not when  RESIZED  by dragging it's  RIGHT SIDE , but again if you bring it to it's original size or closer to it, things come back to normal, it works as expected ? So considering the scenario, am I doing something wrong, in the program. Or is this exactly the situation, where I should be using the  SwingWorker , Or Is this an issue with the  Layout , or something hidden related to  Content Pane . Please do put some light :-) here is the code I am using, I had brought it down to the minimum, as I think to demonstrate my problem :  **LATEST EDIT : ** 
===LINK===
http://stackoverflow.com/questions/9849950/something-seems-wrong-with-the-layout-jbutton-showing-unexpected-behaviour-at-r
===KEYWORDS===
resized text back brought bring 
===ANSWER===
11
<html><body><p>The problem with your very nice example may be platform dependent, but I can offer a few observations:</p><p>You're not adding or removing components, so you don't need <code>revalidate()</code>.</p><p>Because the background color is a bound property of the buttons, you don't need the subsequent calls to <code>repaint()</code>.</p><p>You <em>do</em> need <code>repaint()</code> in your custom <code>DrawingArea</code>, but you may want to experiment with adding property change support, as suggested <a href="http://stackoverflow.com/a/5533581/230513">here</a>.</p><p><code>Color.white</code> can't be <code>brighter()</code> and <code>Color.black</code> can't be <code>darker()</code>; <code>Color.darkGray.darker()</code> is <code>Color.black()</code>.</p><p>The variation below uses a <code>Queue&lt;Color&gt;</code> to simplify changing colors.</p><p><img alt="screen capture" src="https://i.stack.imgur.com/8cCn3.png"/></p><pre><code>import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.Timer;

/** @see http://stackoverflow.com/q/9849950/230513 */
public class BallAnimation {

    private int x;
    private int y;
    private boolean positiveX;
    private boolean positiveY;
    private boolean isTimerRunning;
    private int speedValue;
    private int diameter;
    private DrawingArea drawingArea;
    private Timer timer;
    private Queue&lt;Color&gt; clut = new LinkedList&lt;Color&gt;(Arrays.asList(
        Color.BLUE.darker(),
        Color.MAGENTA.darker(),
        Color.BLACK,
        Color.RED.darker(),
        Color.PINK,
        Color.CYAN.darker(),
        Color.DARK_GRAY,
        Color.YELLOW.darker(),
        Color.GREEN.darker()));
    private Color backgroundColour;
    private Color foregroundColour;
    private ActionListener timerAction = new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent ae) {
            x = getX();
            y = getY();
            drawingArea.setXYColourValues(x, y, backgroundColour, foregroundColour);
        }
    };
    private JPanel buttonPanel;
    private JButton startStopButton;
    private JButton speedIncButton;
    private JButton speedDecButton;
    private JButton resetButton;
    private JButton colourButton;
    private JButton exitButton;
    private ComponentAdapter componentAdapter = new ComponentAdapter() {

        @Override
        public void componentResized(ComponentEvent ce) {
            timer.restart();
            startStopButton.setText("Stop");
            isTimerRunning = true;
        }
    };

    public BallAnimation() {
        x = y = 0;
        positiveX = positiveY = true;
        speedValue = 1;
        isTimerRunning = false;
        diameter = 50;
        backgroundColour = Color.white;
        foregroundColour = clut.peek();
        timer = new Timer(10, timerAction);
    }

    private void createAndDisplayGUI() {
        JFrame frame = new JFrame("Ball Animation");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLocationByPlatform(true);

        drawingArea = new DrawingArea(x, y, backgroundColour, foregroundColour, diameter);
        drawingArea.addComponentListener(componentAdapter);

        frame.add(makeButtonPanel(), BorderLayout.LINE_END);
        frame.add(drawingArea, BorderLayout.CENTER);
        frame.pack();
        frame.setVisible(true);
    }

    private JPanel makeButtonPanel() {
        buttonPanel = new JPanel(new GridLayout(0, 1));
        buttonPanel.setBorder(BorderFactory.createLineBorder(Color.darkGray, 5));

        startStopButton = new JButton("Start");
        startStopButton.setOpaque(true);
        startStopButton.setForeground(Color.white);
        startStopButton.setBackground(Color.green.darker());
        startStopButton.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                if (!isTimerRunning) {
                    startStopButton.setText("Stop");
                    timer.start();
                    isTimerRunning = true;
                } else if (isTimerRunning) {
                    startStopButton.setText("Start");
                    timer.stop();
                    isTimerRunning = false;
                }
            }
        });
        startStopButton.setBorder(BorderFactory.createLineBorder(Color.gray, 4));
        buttonPanel.add(startStopButton);

        colourButton = new JButton("Change Color");
        colourButton.setOpaque(true);
        colourButton.setForeground(Color.white);
        colourButton.setBackground(clut.peek());
        colourButton.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                //timer.restart();
                clut.add(clut.remove());
                foregroundColour = clut.peek();
                drawingArea.setXYColourValues(x, y, backgroundColour, foregroundColour);
                colourButton.setBackground(foregroundColour);
            }
        });
        colourButton.setBorder(BorderFactory.createLineBorder(Color.gray, 4));
        buttonPanel.add(colourButton);

        exitButton = new JButton("Exit");
        exitButton.setBackground(Color.red);
        exitButton.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                timer.stop();
                System.exit(0);
            }
        });
        exitButton.setBorder(BorderFactory.createLineBorder(Color.red.darker(), 4));
        buttonPanel.add(exitButton);

        return buttonPanel;
    }

    private int getX() {
        if (x &lt; 0) {
            positiveX = true;
        } else if (x &gt;= drawingArea.getWidth() - diameter) {
            positiveX = false;
        }
        return (calculateX());
    }

    private int calculateX() {
        if (positiveX) {
            return (x += speedValue);
        } else {
            return (x -= speedValue);
        }
    }

    private int getY() {
        if (y &lt; 0) {
            positiveY = true;
        } else if (y &gt;= drawingArea.getHeight() - diameter) {
            positiveY = false;
        }
        return (calculateY());
    }

    private int calculateY() {
        if (positiveY) {
            return (y += speedValue);
        } else {
            return (y -= speedValue);
        }
    }

    public static void main(String... args) {
        Runnable runnable = new Runnable() {

            @Override
            public void run() {
                new BallAnimation().createAndDisplayGUI();
            }
        };
        SwingUtilities.invokeLater(runnable);
    }
}

class DrawingArea extends JComponent {

    private int x;
    private int y;
    private int ballDiameter;
    private Color backgroundColor;
    private Color foregroundColor;

    public DrawingArea(int x, int y, Color bColor, Color fColor, int dia) {
        this.x = x;
        this.y = y;
        ballDiameter = dia;
        backgroundColor = bColor;
        foregroundColor = fColor;
        setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 5));
    }

    public void setXYColourValues(int x, int y, Color bColor, Color fColor) {
        this.x = x;
        this.y = y;
        backgroundColor = bColor;
        foregroundColor = fColor;
        repaint();
    }

    @Override
    public Dimension getPreferredSize() {
        return (new Dimension(500, 400));
    }

    @Override
    public void paintComponent(Graphics g) {
        g.setColor(backgroundColor);
        g.fillRect(0, 0, getWidth(), getHeight());
        g.setColor(foregroundColor);
        g.fillOval(x, y, ballDiameter, ballDiameter);
    }
}
</code></pre></body></html>

===ID===
584cbff43e2ca508e5f0726a
===QUESTION===
Java and SQLite [closed]
I'm attracted to the neatness that a single file database provides. What driver/connector library is out there to connect and use SQLite with Java. I've discovered a wrapper library,  http://www.ch-werner.de/javasqlite , but are there other more prominent projects available? 
===LINK===
http://stackoverflow.com/questions/41233/java-and-sqlite
===KEYWORDS===
sqlite http de/javasqlite neatness attracted 
===ANSWER===
181
<html><body><p>The <a href="http://www.sqlite.org/cvstrac/wiki?p=SqliteWrappers" rel="nofollow noreferrer">wiki</a> lists some more wrappers:</p></body></html>

===ID===
584cbff43e2ca508e5f0726b
===QUESTION===
Getting a File's MD5 Checksum in Java
I am looking to use Java to get the MD5 checksum of a file.  I was really surprised but I haven't been able to find anything that shows how to get the MD5 checksum of a file. How is it done? 
===LINK===
http://stackoverflow.com/questions/304268/getting-a-files-md5-checksum-in-java
===KEYWORDS===
java haven file find surprised 
===ANSWER===
393
<html><body><p>There's an input stream decorator, <code>java.security.DigestInputStream</code>, so that you can compute the digest while using the input stream as you normally would, instead of having to make an extra pass over the data.</p><pre><code>MessageDigest md = MessageDigest.getInstance("MD5");
try (InputStream is = Files.newInputStream(Paths.get("file.txt"));
     DigestInputStream dis = new DigestInputStream(is, md)) 
{
  /* Read decorated stream (dis) to EOF as normal... */
}
byte[] digest = md.digest();
</code></pre></body></html>

===ID===
584cbff53e2ca508e5f0726c
===QUESTION===
How can I get the current date and time in UTC or GMT in Java?
When I create a new  Date  object, it is initialized to the current time but in the local timezone. How can I get the current date and time in GMT? 
===LINK===
http://stackoverflow.com/questions/308683/how-can-i-get-the-current-date-and-time-in-utc-or-gmt-in-java
===KEYWORDS===
utc java create time initialized 
===ANSWER===
281
<html><body><p><code>java.util.Date</code> has no specific time zone, although its value is most commonly thought of in relation to UTC. What makes you think it's in local time?</p><p>To be precise: the value within a <code>java.util.Date</code> is the number of milliseconds since the Unix epoch, which occurred at midnight January 1st 1970, UTC. The same epoch could also be described in other time zones, but the traditional description is in terms of UTC. As it's a number of milliseconds since a fixed epoch, the value within <code>java.util.Date</code> is the same around the world at any particular instant, regardless of local time zone.</p><p>I suspect the problem is that you're displaying it via an instance of Calendar which uses the local timezone, or possibly using <code>Date.toString()</code> which also uses the local timezone, or a <code>SimpleDateFormat</code> instance, which, by default, also uses local timezone.</p><p>If this isn't the problem, please post some sample code.</p><p>I would, however, recommend that you use <a href="http://www.joda.org/joda-time/" rel="nofollow noreferrer">Joda-Time</a> anyway, which offers a much clearer API.</p></body></html>

===ID===
584cbff63e2ca508e5f0726d
===QUESTION===
Read all files in a folder
I want to read all the files in a folder through Java. Can anyone help me? 
===LINK===
http://stackoverflow.com/questions/1844688/read-all-files-in-a-folder
===KEYWORDS===
read files folder java 
===ANSWER===
552
<html><body><pre><code>public void listFilesForFolder(final File folder) {
    for (final File fileEntry : folder.listFiles()) {
        if (fileEntry.isDirectory()) {
            listFilesForFolder(fileEntry);
        } else {
            System.out.println(fileEntry.getName());
        }
    }
}

final File folder = new File("/home/you/Desktop");
listFilesForFolder(folder);
</code></pre><p><a href="http://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#walk-java.nio.file.Path-java.nio.file.FileVisitOption...-" rel="nofollow noreferrer">Files.walk</a> API is available from Java 8.</p><pre><code>try(Stream&lt;Path&gt; paths = Files.walk(Paths.get("/home/you/Desktop"))) {
    paths.forEach(filePath -&gt; {
        if (Files.isRegularFile(filePath)) {
            System.out.println(filePath);
        }
    });
} 
</code></pre><p>The example uses <a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html" rel="nofollow noreferrer">try-with-resources</a> pattern recommended in API guide. It ensures that no matter circumstances the stream will be closed.</p></body></html>

===ID===
584cbff63e2ca508e5f0726e
===QUESTION===
How to properly stop the Thread in Java?
I need a solution to properly stop the thread in Java. I have  IndexProcessor class which implements the Runnable interface: And I have  ServletContextListener  class which starts and stops the thread: But when I shutdown tomcat, I get the exception in my IndexProcessor class: I am using JDK 1.6. So the question is: How can I stop the thread and not throw any exceptions?  P.S.  I do not want to use  .stop();  method because it is deprecated. 
===LINK===
http://stackoverflow.com/questions/10961714/how-to-properly-stop-the-thread-in-java
===KEYWORDS===
implements exception java thread starts 
===ANSWER===
100
<html><body><p>In the <code>IndexProcessor</code> class you need a way of setting a flag which informs the thread that it will need to terminate, similar to the variable <code>run</code> that you have used just in the class scope.</p><p>When you wish to stop the thread, you set this flag and call <code>join()</code> on the thread and wait for it to finish.</p><p>Make sure that the flag is thread safe by using a volatile variable or by using getter and setter methods which are synchronised with the variable being used as the flag.</p><pre><code>public class IndexProcessor implements Runnable {

    private static final Logger LOGGER = LoggerFactory.getLogger(IndexProcessor.class);
    private volatile boolean running = true;

    public void terminate() {
        running = false;
    }

    @Override
    public void run() {
        while (running) {
            try {
                LOGGER.debug("Sleeping...");
                Thread.sleep((long) 15000);

                LOGGER.debug("Processing");
            } catch (InterruptedException e) {
                LOGGER.error("Exception", e);
                running = false;
            }
        }

    }
}
</code></pre><p>Then in <code>SearchEngineContextListener</code>:</p><pre><code>public class SearchEngineContextListener implements ServletContextListener {

    private static final Logger LOGGER = LoggerFactory.getLogger(SearchEngineContextListener.class);

    private Thread thread = null;
    private IndexProcessor runnable = null;

    @Override
    public void contextInitialized(ServletContextEvent event) {
        runnable = new IndexProcessor();
        thread = new Thread(runnable);
        LOGGER.debug("Starting thread: " + thread);
        thread.start();
        LOGGER.debug("Background process successfully started.");
    }

    @Override
    public void contextDestroyed(ServletContextEvent event) {
        LOGGER.debug("Stopping thread: " + thread);
        if (thread != null) {
            runnable.terminate();
            thread.join();
            LOGGER.debug("Thread successfully stopped.");
        }
    }
}
</code></pre></body></html>

===ID===
584cbff73e2ca508e5f0726f
===QUESTION===
How to import a jar in Eclipse
How do I import a jar in Eclipse? 
===LINK===
http://stackoverflow.com/questions/3280353/how-to-import-a-jar-in-eclipse
===KEYWORDS===
import jar eclipse 
===ANSWER===
251
<html><body><p>You can add a jar in Eclipse by right-clicking on the Project → Build Path → Configure Build Path. Under Libraries tab, click Add Jars or Add External JARs and give the Jar. A quick demo <a href="http://tech.bragboy.com/2016/01/quick-way-to-import-jar-in-eclipse.html" rel="nofollow noreferrer">here</a>.</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/A6xgq.png"/></p></body></html>

===ID===
584cbff73e2ca508e5f07270
===QUESTION===
Creating random numbers with no duplicates
In this case, the MAX is only 5, so I could check the duplicates one by one, but how could I do this in a simpler way? For example, what if the MAX has a value of 20?
Thanks. 
===LINK===
http://stackoverflow.com/questions/4040001/creating-random-numbers-with-no-duplicates
===KEYWORDS===
case max check duplicates simpler 
===ANSWER===
112
<html><body><p>The simplest way would be to create a list of the possible numbers (1..20 or whatever) and then shuffle them with <code>Collections.shuffle</code>. Then just take however many elements you want. This is great if your range is equal to the number of elements you need in the end (e.g. for shuffling a deck of cards).</p><p>That doesn't work so well if you want (say) 10 random elements in the range 1..10,000 - you'd end up doing a lot of work unnecessarily. At that point, it's probably better to keep a set of values you've generated so far, and just keep generating numbers in a loop until the next one isn't already present:</p><pre><code>Random rng = new Random(); // Ideally just create one instance globally
// Note: use LinkedHashSet to maintain insertion order
Set&lt;Integer&gt; generated = new LinkedHashSet&lt;Integer&gt;();
while (generated.size() &lt; numbersNeeded)
{
    Integer next = rng.nextInt(max) + 1;
    // As we're adding to a set, this will automatically do a containment check
    generated.add(next);
}
</code></pre><p>Be careful with the set choice though - I've very deliberately used <code>LinkedHashSet</code> as it maintains insertion order, which we care about here.</p><p>Yet another option is to <em>always</em> make progress, by reducing the range each time and compensating for existing values. So for example, suppose you wanted 3 values in the range 0..9. On the first iteration you'd generate any number in the range 0..9 - let's say you generate a 4.</p><p>On the second iteration you'd then generate a number in the range 0..8. If the generated number is less than 4, you'd keep it as is... otherwise you add one to it. That gets you a result range of 0..9 without 4. Suppose we get 7 that way.</p><p>On the third iteration you'd generate a number in the range 0..7. If the generated number is less than 4, you'd keep it as is. If it's 4 or 5, you'd add one. If it's 6 or 7, you'd add two. That way the result range is 0..9 without 4 or 6.</p></body></html>

===ID===
584cbff83e2ca508e5f07271
===QUESTION===
How can I read input from the console using the Scanner class in Java?
How could I read input from the console using the  Scanner  class? Something like this: Basically, all I want to do is have the scanner read an input for the username, and assign the input to a  String  variable. 
===LINK===
http://stackoverflow.com/questions/11871520/how-can-i-read-input-from-the-console-using-the-scanner-class-in-java
===KEYWORDS===
username console java basically input 
===ANSWER===
144
<html><body><p>A simple example to illustrate how <code>java.util.Scanner</code> works would be reading a single integer from <code>System.in</code>. It's really quite simple.</p><pre><code>Scanner sc = new Scanner(System.in);
int i = sc.nextInt();
</code></pre><p>To retrieve a username I would probably use <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#nextLine%28%29"><code>sc.nextLine()</code></a>.</p><pre><code>System.out.println("Enter your username: ");
Scanner scanner = new Scanner(System.in);
String username = scanner.nextLine();
System.out.println("Your username is " + username);
</code></pre><p>You could also use <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html#next%28java.lang.String%29"><code>next(String pattern)</code></a> if you want more control over the input, or just validate the <code>username</code> variable.</p><p>You'll find more information on their implementation in the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html">API Documentation for <code>java.util.Scanner</code></a></p></body></html>

===ID===
584cbff83e2ca508e5f07272
===QUESTION===
Can't get ArrayIndexOutOfBoundsException from Future<?> and SwingWorker if thread starts Executor
I play with multitreading for SwingWorker by using Executor, and I'm there by mistake identified wrong elements from the Vector, looks like as this code pretty ignores that element in Vector doesn't exist my question -> how to/is possible to catch this exception(s) some way simple output  by uncomment  everything is correct, I get ArrayIndexOutOfBoundsException and output is  from code    EDIT: added re-thrown from Future#get() in done() method (by @takteek excellent suggestion)  but output is still and only  Got exception , would be so hard to get any exception(s) from this BlackBox  
===LINK===
http://stackoverflow.com/questions/7053865/cant-get-arrayindexoutofboundsexception-from-future-and-swingworker-if-threa
===KEYWORDS===
arrayindexoutofboundsexception thrown play swingworker blackbox 
===ANSWER===
14
<html><body><p>I'm not sure it adds much, but I got the expected <code>Caused by</code> using the variation of takteek's <a href="http://stackoverflow.com/questions/7053865/cant-get-arrayindexoutofboundsexception-from-future-and-swingworker-if-thread/7053961#7053961">answer</a> shown below. I ran it from the command line to be sure the IDE wasn't "helping".</p><pre>
$ java -cp build/classes TableWithExecutor
StartShedule: PENDING -&gt; STARTED
java.util.concurrent.ExecutionException: java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 2
    at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)
    at java.util.concurrent.FutureTask.get(FutureTask.java:83)
    at javax.swing.SwingWorker.get(SwingWorker.java:582)
    at TableWithExecutor$MyTask.done(TableWithExecutor.java:103)
    at javax.swing.SwingWorker$5.run(SwingWorker.java:717)
    at javax.swing.SwingWorker$DoSubmitAccumulativeRunnable.run(SwingWorker.java:814)
    at sun.swing.AccumulativeRunnable.run(AccumulativeRunnable.java:95)
    at javax.swing.SwingWorker$DoSubmitAccumulativeRunnable.actionPerformed(SwingWorker.java:824)
    at javax.swing.Timer.fireActionPerformed(Timer.java:291)
    at javax.swing.Timer$DoPostEvent.run(Timer.java:221)
    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)
    at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:677)
    at java.awt.EventQueue.access$000(EventQueue.java:85)
    at java.awt.EventQueue$1.run(EventQueue.java:638)
    at java.awt.EventQueue$1.run(EventQueue.java:636)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.security.AccessControlContext$1.doIntersectionPrivilege(AccessControlContext.java:87)
    at java.awt.EventQueue.dispatchEvent(EventQueue.java:647)
    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:296)
    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:211)
    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:201)
    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:196)
    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:188)
    at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)
Caused by: java.lang.ArrayIndexOutOfBoundsException: Array index out of range: 2
    at java.util.Vector.get(Vector.java:694)
    at TableWithExecutor.changeTableValues(TableWithExecutor.java:64)
    at TableWithExecutor.access$100(TableWithExecutor.java:14)
    at TableWithExecutor$MyTask.doInBackground(TableWithExecutor.java:92)
    at TableWithExecutor$MyTask.doInBackground(TableWithExecutor.java:80)
    at javax.swing.SwingWorker$1.call(SwingWorker.java:277)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at javax.swing.SwingWorker.run(SwingWorker.java:316)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:680)
StartShedule: STARTED -&gt; DONE
</pre><p>Full code:</p><pre><code>import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.DateFormat;
import java.util.Date;
import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import javax.swing.*;
import javax.swing.table.*;

/** @see http://stackoverflow.com/questions/7054627 */
public class TableWithExecutor extends JFrame {

    private static final int delay = 1000;
    private static final DateFormat df = DateFormat.getTimeInstance();
    private String[] columnNames = {"Product", "Availability"};
    private Object[][] data = {columnNames, columnNames, columnNames};
    private DefaultTableModel model;
    private JTable table;
    private Executor executor = Executors.newCachedThreadPool();
    private Timer timer;

    public TableWithExecutor() {
        model = new DefaultTableModel(data, columnNames);
        table = new JTable(model) {

            @Override
            public Class getColumnClass(int column) {
                return getValueAt(0, column).getClass();
            }
        };
        table.setDefaultRenderer(Date.class, new DefaultTableCellRenderer() {

            @Override
            protected void setValue(Object value) {
                setText((value == null) ? "" : df.format(value));
            }
        });
        table.setPreferredScrollableViewportSize(new Dimension(200, 100));
        JScrollPane scrollPane = new JScrollPane(table);
        add(scrollPane, BorderLayout.CENTER);
        timer = new Timer(delay, startCycle());
        timer.setRepeats(true);
        timer.start();
    }

    private Action startCycle() {
        return new AbstractAction(MyTask.STARTSCHEDULE) {

            @Override
            public void actionPerformed(ActionEvent e) {
                executor.execute(new MyTask(MyTask.STARTSCHEDULE));
            }
        };
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                TableWithExecutor frame = new TableWithExecutor();
                frame.setDefaultCloseOperation(EXIT_ON_CLOSE);
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    private class MyTask extends SwingWorker&lt;List&lt;DateRecord&gt;, DateRecord&gt; {

        private static final String STARTSCHEDULE = "StartSchedule";
        private String name = STARTSCHEDULE;

        MyTask(String name) {
            this.name = name;
            addPropertyChangeListener(new TaskListener(name));
        }

        @Override
        protected List&lt;DateRecord&gt; doInBackground() throws Exception {
            for (int row = 0; row &lt; model.getRowCount(); row++) {
                Date date = new Date();
                date.setTime(date.getTime() + row * 1000);
                publish(new DateRecord(row, date));
            }
            return null;
        }

        @Override
        protected void process(List&lt;DateRecord&gt; chunks) {
            for (DateRecord dr : chunks) {
                model.setValueAt(dr.date, dr.rowNumber, 1);
            }
        }

        @Override
        protected void done() {
            try {
                get();
            } catch (Exception e) {
                e.printStackTrace(System.err);
            }
        }
    }

    private static class DateRecord {

        private int rowNumber;
        private Date date;

        public DateRecord(int recordNumber, Date date) {
            this.rowNumber = recordNumber;
            this.date = date;
        }
    }

    private static class TaskListener implements PropertyChangeListener {

        private String name;

        TaskListener(String name) {
            this.name = name;
        }

        @Override
        public void propertyChange(PropertyChangeEvent e) {
            System.out.println(name + ": "
                + e.getOldValue() + " -&gt; " + e.getNewValue());
        }
    }
}
</code></pre></body></html>

===ID===
584cbff83e2ca508e5f07273
===QUESTION===
Variable might not have been initialized error
When i try to compile this:  I get these errors:  it seems to me that i initialized them at the top of the method. Whats going wrong?  
===LINK===
http://stackoverflow.com/questions/2448843/variable-might-not-have-been-initialized-error
===KEYWORDS===
errors whats top compile wrong 
===ANSWER===
40
<html><body><p>You <em>declared</em> them, but you didn't initialize them. Initializing them is setting them equal to a value:</p><pre><code>int a;        // This is a declaration
a = 0;        // This is an initialization
int b = 1;    // This is a declaration and initialization
</code></pre><p>You get the error because you haven't initialized the variables, but you increment them (e.g., <code>a++</code>) in the <code>for</code> loop.</p></body></html>

===ID===
584cbff93e2ca508e5f07274
===QUESTION===
Lookup enum by string value
Say I have an enum which is just and I would like to find the enum value of a string, for example  "A"  which would be  Blah.A . How would it be possible to do this? Is the  Enum.valueOf()  the method I need? If so, how would I use this? 
===LINK===
http://stackoverflow.com/questions/604424/lookup-enum-by-string-value
===KEYWORDS===
valueof string enum find blah 
===ANSWER===
1447
<html><body><p>Yes, <code>Blah.valueOf("A")</code> will give you <code>Blah.A</code>.</p><p>The static methods <code>valueOf()</code> and <code>values()</code> are created at compile time and do not appear in source code. They do appear in Javadoc, though; for example, <a href="http://docs.oracle.com/javase/7/docs/api/java/awt/Dialog.ModalityType.html" rel="nofollow noreferrer"><code>Dialog.ModalityType</code></a> shows both methods.</p></body></html>

===ID===
584cbffa3e2ca508e5f07275
===QUESTION===
Get current stack trace in Java
How do I get the current stack trace in Java, like how in  .NET  you can do  Environment.StackTrace ? BTW,  Thread.dumpStack()  is not what I want - I want to get the  stack trace  back, not print it out. 
===LINK===
http://stackoverflow.com/questions/1069066/get-current-stack-trace-in-java
===KEYWORDS===
stacktrace btw java thread dumpstack 
===ANSWER===
819
<html><body><p>You can use <code><a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html" rel="nofollow noreferrer">Thread</a>.currentThread().getStackTrace()</code>.</p><p>That returns an array of <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/StackTraceElement.html" rel="nofollow noreferrer"><code>StackTraceElement</code></a>s that represent the current stack trace of a program.</p></body></html>

===ID===
584cbffa3e2ca508e5f07276
===QUESTION===
What's the best way to share data between activities?
I have one activity which is the main activity used throughout the app and it has a number of variables. I have two other activities which I would like to be able to use the data from the first activity.
Now I know I can do something like this: However I want to share a lot of variables and some might be rather large so I don't want to be creating copies of them like above. Is there a way to directly get and change the variables without using get and set methods? I remember reading an article on the Google dev site saying this is not recommended for performance on Android. 
===LINK===
http://stackoverflow.com/questions/4878159/whats-the-best-way-to-share-data-between-activities
===KEYWORDS===
activities don directly variables share 
===ANSWER===
332
<html><body><p>Here a compilation of <a href="http://developer.android.com/guide/faq/framework.html#3">most common ways to achieve this</a>:</p><p><strong>TL;DR</strong>: there are two ways of sharing data: passing data in the intent's extras or saving it somewhere else. If data is primitives, Strings or user-defined objects: send it as part of the intent extras (user-defined objects must implement <code>Parcelable</code>). If passing complex objects save an instance in a singleton somewhere else and access them from the launched activity.</p><p>Some examples of how and why to implement each approach:</p><pre><code>Intent intent = new Intent(FirstActivity.this, SecondActivity.class);
intent.putExtra("some_key", value);
intent.putExtra("some_other_key", "a value");
startActivity(intent);
</code></pre><p>On the second activity:</p><pre><code>Bundle bundle = getIntent().getExtras();
int value = bundle.getInt("some_key");
String value2 = bundle.getString("some_other_key");
</code></pre><p>Use this method <strong>if you are passing primitive data or Strings</strong>. You can also pass objects that implements <code>Serializable</code>.</p><p>Although tempting, you should think twice before using <code>Serializable</code>: it's error prone and horribly slow. So in general: <strong>stay away from <code>Serializable</code></strong> if possible. If you want to pass complex user-defined objects, <strong>take a look at the <code>Parcelable</code> interface</strong>. It's harder to implement, but it has considerable speed gains compared to <code>Serializable</code>.</p><p>It is possible to share data between activities by saving it in memory given that, in most cases, both activities run in the same process.</p><p><strong>Note:</strong> sometimes, when the user leaves your activity (without quitting it), Android may decide to kill your application. In such scenario, I have experienced cases in which android attempts to launch the last activity using the intent provided before the app was killed. In this cases, data stored in a singleton (either yours or <code>Application</code>) will be gone and bad things could happen. To avoid such cases, you either persist objects to disk or check data before using it to make sure its valid.</p><p>Have a class to whole the data:</p><pre><code>public class DataHolder {
  private String data;
  public String getData() {return data;}
  public void setData(String data) {this.data = data;}

  private static final DataHolder holder = new DataHolder();
  public static DataHolder getInstance() {return holder;}
}
</code></pre><p>From the launched activity:</p><pre><code>String data = DataHolder.getInstance().getData();
</code></pre><p>The application singleton is an instance of <code>android.app.Application</code> which is created when the app is launched. You can provide a custom one by extending <code>Application</code>:</p><pre><code>import android.app.Application;
public class MyApplication extends Application {
  private String data;
  public String getData() {return data;}
  public void setData(String data) {this.data = data;}
}
</code></pre><p>Before launching the activity:</p><pre><code>MyApplication app = (MyApplication) getApplicationContext();
app.setData(someData);
</code></pre><p>Then, from the launched activity:</p><pre><code>MyApplication app = (MyApplication) getApplicationContext();
String data = app.getData();
</code></pre><p>The idea is basically the same than the singleton, but in this case you provide static access to the data:</p><pre><code>public class DataHolder {
  private static String data;
  public static String getData() {return data;}
  public static String setData(String data) {DataHolder.data = data;}
}
</code></pre><p>From the launched activity:</p><pre><code>String data = DataHolder.getData();
</code></pre><p>Same idea, but allowing the garbage collector to removed unreferenced objects (e.g. when the user quits the activity):</p><pre><code>public class DataHolder {
  Map&lt;String, WeakReference&lt;Object&gt;&gt; data = new HashMap&lt;String, WeakReference&lt;Object&gt;&gt;();

  void save(String id, Object object) {
    data.put(id, new WeakReference&lt;Object&gt;(object));
  }

  Object retrieve(String id) {
    WeakReference&lt;Object&gt; objectWeakReference = data.get(id);
    return objectWeakReference.get();
  }
}
</code></pre><p>Before launching the activity:</p><pre><code>DataHolder.getInstance().save(someId, someObject);
</code></pre><p>From the launched activity:</p><pre><code>DataHolder.getInstance().retrieve(someId);
</code></pre><p>You may or may not have to pass the object id using the intent’s extras. It all depends on your specific problem.</p><p>The idea is to save the data in disk before launching the other activity.</p><p><strong>Advantages:</strong> you can launch the activity from other places and, if the data is already persisted, it should work just fine.</p><p><strong>Disadvantages:</strong> it’s cumbersome and takes more time to implement. Requires more code and thus more chance of introducing bugs. It will also be much slower.</p><p>Some of the ways to persist objects include:</p></body></html>

===ID===
584cbffb3e2ca508e5f07277
===QUESTION===
Java, 3 dots in parameters
What do the 3 dots in the following method mean? 
===LINK===
http://stackoverflow.com/questions/3158730/java-3-dots-in-parameters
===KEYWORDS===
java method parameters 
===ANSWER===
587
<html><body><p>It means that zero or more String objects (or an array of them) may be passed as the parameter(s) for that function.</p><p>See the "Arbitrary Number of Arguments" section here: <a href="http://java.sun.com/docs/books/tutorial/java/javaOO/arguments.html#varargs" rel="nofollow noreferrer">http://java.sun.com/docs/books/tutorial/java/javaOO/arguments.html#varargs</a></p><p>In your example, you could call it as any of the following:</p><pre><code>myMethod(); // Likely useless, but possible
myMethod("one", "two", "three");
myMethod("solo");
myMethod(new String[]{"a", "b", "c"});
</code></pre><p><strong>Important Note:</strong> The parameter(s) passed in this way is always an array - even if there's just one. Make sure you treat it that way in the method body.</p><p><strong>Important Note 2:</strong> The parameter that gets the <code>...</code> must be the last in the method signature. So, <code>myMethod(int i, String... strings)</code> is okay, but <code>myMethod(String... strings, int i)</code> is not okay.</p><p>Thanks to Vash for the clarifications in his comment.</p></body></html>

===ID===
584cbffb3e2ca508e5f07278
===QUESTION===
Convert InputStream to byte array in Java
How do I read an entire  InputStream  into a byte array? 
===LINK===
http://stackoverflow.com/questions/1264709/convert-inputstream-to-byte-array-in-java
===KEYWORDS===
read java 
===ANSWER===
704
<html><body><p>You can use Apache <a href="http://commons.apache.org/io/" rel="nofollow noreferrer">Commons IO</a> to handle this and similar tasks.</p><p>The <code>IOUtils</code> type has a static method to read an <code>InputStream</code> and return a <code>byte[]</code>.</p><pre><code>InputStream is;
byte[] bytes = IOUtils.toByteArray(is);
</code></pre><p>Internally this creates a <code>ByteArrayOutputStream</code> and copies the bytes to the output, then calls <code>toByteArray()</code>. It handles large files by copying the bytes in blocks of 4KiB.</p></body></html>

===ID===
584cbffb3e2ca508e5f07279
===QUESTION===
How can I use different certificates on specific connections?
A module I'm adding to our large Java application has to converse with another company's SSL-secured website.  The problem is that the site uses a self-signed certificate.  I have a copy of the certificate to verify that I'm not encountering a man-in-the-middle attack, and I need to incorporate this certificate into our code in such a way that the connection to the server will be successful. Here's the basic code: Without any additional handling in place for the self-signed certificate, this dies at conn.getOutputStream() with the following exception: Ideally, my code needs to teach Java to accept this one self-signed certificate, for this one spot in the application, and nowhere else. I know that I can import the certificate into the JRE's certificate authority store, and that will allow Java to accept it.  That's not an approach I want to take if I can help; it seems very invasive to do on all of our customer's machines for one module they may not use; it would affect all other Java applications using the same JRE, and I don't like that even though the odds of any other Java application ever accessing this site are nil.  It's also not a trivial operation: on UNIX I have to obtain access rights to modify the JRE in this way. I've also seen that I can create a TrustManager instance that does some custom checking.  It looks like I might even be able to create a TrustManager that delegates to the real TrustManager in all instances except this one certificate.  But it looks like that TrustManager gets installed globally, and I presume would affect all other connections from our application, and that doesn't smell quite right to me, either. What is the preferred, standard, or best way to set up a Java application to accept a self-signed certificate?  Can I accomplish all of the goals I have in mind above, or am I going to have to compromise?  Is there an option involving files and directories and configuration settings, and little-to-no code? 
===LINK===
http://stackoverflow.com/questions/859111/how-can-i-use-different-certificates-on-specific-connections
===KEYWORDS===
incorporate jre code invasive mind 
===ANSWER===
143
<html><body><p>Create an <code>SSLSocket</code> factory yourself, and set it on the <code>HttpsURLConnection</code> before connecting.</p><pre><code>...
HttpsURLConnection conn = (HttpsURLConnection)url.openConnection();
conn.setSSLSocketFactory(sslFactory);
conn.setMethod("POST");
...
</code></pre><p>You'll want to create one <code>SSLSocketFactory</code> and keep it around. Here's a sketch of how to initialize it:</p><pre><code>/* Load the keyStore that includes self-signed cert as a "trusted" entry. */
KeyStore keyStore = ... 
TrustManagerFactory tmf = 
  TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
tmf.init(keyStore);
SSLContext ctx = SSLContext.getInstance("TLS");
ctx.init(null, tmf.getTrustManagers(), null);
sslFactory = ctx.getSocketFactory();
</code></pre><p>If you need help creating the key store, please comment.</p><p>Here's an example of loading the key store:</p><pre><code>KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
keyStore.load(trustStore, trustStorePassword);
trustStore.close();
</code></pre><p>To create the key store with a PEM format certificate, you can write your own code using <code>CertificateFactory</code>, or just import it with <code>keytool</code> from the JDK (keytool <em>won't</em> work for a "key entry", but is just fine for a "trusted entry").</p><pre><code>keytool -import -file selfsigned.pem -alias server -keystore server.jks
</code></pre></body></html>

===ID===
584cbffc3e2ca508e5f0727a
===QUESTION===
How do I remove repeated elements from ArrayList?
I have an  ArrayList  of  Strings , and I want to remove repeated strings from it. How can I do this? 
===LINK===
http://stackoverflow.com/questions/203984/how-do-i-remove-repeated-elements-from-arraylist
===KEYWORDS===
arraylist strings 
===ANSWER===
585
<html><body><p>If you don't want duplicates in a <code>Collection</code>, you should consider why you're using a <code>Collection</code> that allows duplicates. The easiest way to remove repeated elements is to add the contents to a <code>Set</code> (which will not allow duplicates) and then add the <code>Set</code> back to the <code>ArrayList</code>:</p><pre><code>List&lt;String&gt; al = new ArrayList&lt;&gt;();
// add elements to al, including duplicates
Set&lt;String&gt; hs = new HashSet&lt;&gt;();
hs.addAll(al);
al.clear();
al.addAll(hs);
</code></pre><p>Of course, this destroys the ordering of the elements in the <code>ArrayList</code>.</p></body></html>

===ID===
584cbffd3e2ca508e5f0727b
===QUESTION===
How do I run a batch file from my Java Application?
In my Java application I want to run a batch file that calls " scons -Q implicit-deps-changed build\file_load_type export\file_load_type " It seems that I can't even get my batch file to execute. I'm out of ideas.  This is what I have in Java: Previously I had a python Sconscript file that I wanted to run but since that didn't work I decided I would call the script via a batch file but that method has not been successful as of yet.  
===LINK===
http://stackoverflow.com/questions/615948/how-do-i-run-a-batch-file-from-my-java-application
===KEYWORDS===
successful execute work run calls 
===ANSWER===
132
<html><body><pre><code>Runtime.getRuntime().exec("cmd /c start build.bat");
</code></pre></body></html>

===ID===
584cbffd3e2ca508e5f0727c
===QUESTION===
JComponents not showing up with picture background?
My components are not showing up. How do I fix this? Code: Result: 
===LINK===
http://stackoverflow.com/questions/11369171/jcomponents-not-showing-up-with-picture-background
===KEYWORDS===
code showing jcomponents components fix 
===ANSWER===
7
<html><body><p>Here first watch this small example, do let me know if you understood what is going on in here. Then only we will go a step further, slowly slowly. Try to go through this example, in which I am showing you how to draw on a <code>JPanel</code></p><pre><code>import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.*;

public class PaintingExample {

    private CustomPanel contentPane;

    private void displayGUI() {
        JFrame frame = new JFrame("Painting Example");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        contentPane = new CustomPanel();        

        frame.setContentPane(contentPane);
        frame.pack();
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }

    public static void main(String... args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PaintingExample().displayGUI();
            }
        });
    }
}

class CustomPanel extends JPanel {

    private BufferedImage image;

    public CustomPanel() {
        setOpaque(true);
        setBorder(BorderFactory.createLineBorder(Color.BLACK, 5));
        try {
            /*
             * Since Images are Application Resources,
             * it's always best to access them in the
             * form of a URL, instead of File, as you are doing.
             * Uncomment this below line and watch this answer
             * of mine, as to HOW TO ADD IMAGES TO THE PROJECT
             * http://stackoverflow.com/a/9866659/1057230
             * In order to access images with getClass().getResource(path)
             * here your Directory structure has to be like this
             *                 Project
             *                    |
             *         ------------------------
             *         |                      |
             *        bin                    src
             *         |                      |
             *     ---------             .java files             
             *     |       |                   
             *  package   image(folder)
             *  ( or              |
             *   .class        404error.jpg
             *   files, if
             *   no package
             *   exists.)
             */
            //image = ImageIO.read(
            //      getClass().getResource(
            //              "/image/404error.jpg"));
            image = ImageIO.read(new URL(
                        "http://i.imgur.com/8zgHpH8.jpg"));
        } catch(IOException ioe) {
            System.out.println("Unable to fetch image.");
            ioe.printStackTrace();
        }
    }

    /*
     * Make this one customary habbit,
     * of overriding this method, when
     * you extends a JPanel/JComponent,
     * to define it's Preferred Size.
     * Now in this case we want it to be 
     * as big as the Image itself.
     */
    @Override
    public Dimension getPreferredSize() {
        return (new Dimension(image.getWidth(), image.getHeight()));
    }

    /*
     * This is where the actual Painting
     * Code for the JPanel/JComponent
     * goes. Here we will draw the image.
     * Here the first line super.paintComponent(...),
     * means we want the JPanel to be drawn the usual 
     * Java way first (this usually depends on the opaque
     * property of the said JComponent, if it's true, then
     * it becomes the responsibility on the part of the
     * programmer to fill the content area with a fully
     * opaque color. If it is false, then the programmer
     * is free to leave it untouched. So in order to 
     * overcome the hassle assoicated with this contract,
     * super.paintComponent(g) is used, since it adheres
     * to the rules, and performs the same task, depending
     * upon whether the opaque property is true or false),
     * then later on we will add our image to it, by 
     * writing the other line, g.drawImage(...).
     */
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, this);
    }
}
</code></pre><p>Now compile the code by using:</p><p>Now move to <strong>bin</strong> folder, by issuing command:</p><p>Once inside <strong>bin</strong> folder, issue the following command to run:</p><p>Here is the code when using <code>JLabel</code> as the base for the image :</p><pre><code>import java.awt.*;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.*;

public class LabelExample {

    private JPanel contentPane;
    private JLabel imageLabel;

    private void displayGUI() {
        JFrame frame = new JFrame("Label Example");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        contentPane = new JPanel();
        contentPane.setOpaque(true);
        contentPane.setBorder(
                BorderFactory.createLineBorder(Color.BLACK, 5));
        //imageLabel = new JLabel(
        //          new ImageIcon(
        //              getClass().getResource(
        //                  "/image/404error.jpg")));
        try {
            imageLabel = new JLabel(new ImageIcon(
                    new URL("http://i.imgur.com/8zgHpH8.jpg")));
        } catch(MalformedURLException mue) {
            System.out.println(
                    "Unable to get Image from"
                        + "the Resource specified.");
            mue.printStackTrace();
        }
        contentPane.add(imageLabel);
        frame.setContentPane(contentPane);  
        frame.pack();
        frame.setLocationByPlatform(true);
        frame.setVisible(true);
    }

    public static void main(String... args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new LabelExample().displayGUI();
            }
        });
    }
}
</code></pre><p>Here is the output of both the above codes : </p><p><img alt="404Error" src="https://i.stack.imgur.com/q9MpF.jpg"/></p></body></html>

===ID===
584cbffe3e2ca508e5f0727d
===QUESTION===
How do I split a string with any whitespace chars as delimiters?
What regex pattern would need I to pass to the  java.lang.String.split()  method to split a String into an Array of substrings using all whitespace characters (' ', '\t', '\n', etc.) as delimiters? 
===LINK===
http://stackoverflow.com/questions/225337/how-do-i-split-a-string-with-any-whitespace-chars-as-delimiters
===KEYWORDS===
lang java string delimiters substrings 
===ANSWER===
755
<html><body><p>Something in the lines of</p><pre><code>myString.split("\\s+");
</code></pre><p>This groups all white spaces as a delimiter. </p><p>So if I have the string:</p><p><code>"Hello[space][tab]World"</code></p><p>This should yield the strings <code>"Hello"</code> and <code>"World"</code> and omit the empty space between the <code>[space]</code> and the <code>[tab]</code>.</p><p>As VonC pointed out, the backslash should be escaped, because Java would first try to escape the string to a special character, and send <em>that</em> to be parsed. What you want, is the literal <code>"\s"</code>, which means, you need to pass <code>"\\s"</code>. It can get a bit confusing.</p><p>The <code>\\s</code> is equivalent to <code>[ \\t\\n\\x0B\\f\\r]</code></p></body></html>

===ID===
584cbffe3e2ca508e5f0727e
===QUESTION===
Java: recommended solution for deep cloning/copying an instance
I'm wondering if there is a recommended way of doing deep clone/copy of instance in java. I have 3 solutions in mind, but I can have miss some,  and I'd like to have your opinion edit: include Bohzo propositon and refine question: it's more about deep cloning than shallow cloning. code the clone by hand properties after properties and check that mutable instances are cloned too. 
 pro: 
- control of what will be performed 
- quick execution 
 cons: 
- tedious to write and maintain 
- bug prone (copy/paste failure, missing property, reassigned mutable property)  With your own reflection tools or with an external helper (like jakarta common-beans) it is easy to write a generic copy method that will do the job in one line. 
 pro: 
- easy to write 
- no maintenance 
 cons: 
- less control of what happens 
- bug prone with mutable object if the reflection tool does not clone sub objects too 
- slower execution Use a framework that do it for you, like : 
 commons-lang SerializationUtils 
 Java Deep Cloning Library 
 Dozer 
 Kryo pro: 
- same as reflection 
- more control over what will be exactly be cloned. 
 cons: 
- every mutable instance is fully cloned, even at the end of the hierarchy 
- could be very slow to execute javassit ,  BCEL  or  cglib  might be use to generate a dedicated cloner as fast as one hand writed. Someone knows a lib using one of these tools for this purpose ? What I have missed here ? 
Which one would you recommend ? Thanks. 
===LINK===
http://stackoverflow.com/questions/2156120/java-recommended-solution-for-deep-cloning-copying-an-instance
===KEYWORDS===
control code hierarchy pro mind 
===ANSWER===
105
<html><body><p><a href="http://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/SerializationUtils.html" rel="nofollow noreferrer">commons-lang SerializationUtils</a> - using serialization - if all classes are in your control and you can force implementing <code>Serializable</code>.</p><p><a href="https://github.com/kostaskougios/cloning/" rel="nofollow noreferrer">Java Deep Cloning Library</a> - using reflection - in cases when the classes or the objects you want to clone are out of your control (a 3rd party library) and you can't make them implement <code>Serializable</code>, or in cases you don't want to implement <code>Serializable</code>.</p><p><a href="https://commons.apache.org/proper/commons-beanutils/javadocs/v1.8.3/apidocs/org/apache/commons/beanutils/BeanUtils.html#cloneBean(java.lang.Object)" rel="nofollow noreferrer">commons-beanutils BeanUtils</a> - in most cases.</p><p><a href="http://static.springsource.org/spring/docs/2.5.6/api/org/springframework/beans/BeanUtils.html" rel="nofollow noreferrer">Spring BeanUtils</a> - if you are already using spring and hence have this utility on the classpath.</p><p>I deliberately omitted the "do-it-yourself" option - the API's above provide a good control over what to and what not to clone (for example using <code>transient</code>, or <code>String[] ignoreProperties</code>), so reinventing the wheel isn't preferred.</p></body></html>

===ID===
584cbfff3e2ca508e5f0727f
===QUESTION===
Getting the Current Working Directory in Java
I want to access my current working directory using  OutPut:   My output is not correct because C drive is not my current directory.
Need help in this regard. 
===LINK===
http://stackoverflow.com/questions/4871051/getting-the-current-working-directory-in-java
===KEYWORDS===
java regard drive access output 
===ANSWER===
646
<html><body><pre><code>public class JavaApplication1 {
  public static void main(String[] args) {
       System.out.println("Working Directory = " +
              System.getProperty("user.dir"));
  }
}
</code></pre><p>This will print a <strong>complete absolute path from where your application was initialized.</strong></p></body></html>

===ID===
584cbfff3e2ca508e5f07280
===QUESTION===
Solving a “communications link failure” with JDBC and MySQL [duplicate]
This question already has an answer here: I'm trying to connect to the local MySQL server but I keep getting an error. Here is the code. and the errors : I've set the classpath, made sure my.cnf had the skip network option commented out.  java version is 1.2.0_26 (64 bit)
mysql 5.5.14
mysql connector 5.1.17 I made sure that the user had access to my database. 
===LINK===
http://stackoverflow.com/questions/6865538/solving-a-communications-link-failure-with-jdbc-and-mysql
===KEYWORDS===
access errors database mysql classpath 
===ANSWER===
204
<html><body><p>I have had the same problem in two of my programs. My error was this:</p><pre><code>com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
</code></pre><p>I spend some days to solve this problem. I have tested many approaches that have been mentioned in different web sites, but non of them worked. Finally I changed my code and found out what was the problem. I'll try to tell you about different approaches and <strong>sum them up here</strong>.</p><p>While I was seeking the internet to find the solution for this error, I figured out that <strong>there are many solutions that worked for at least one person, but others say that it doesn't work for them!</strong> <em>why there are many approaches to this error?</em>
It seems <strong>this error can occur <em>generally</em> when there is a problem in connecting to the server</strong>. Maybe the problem is because of the wrong query string or too many connections to the database.</p><p>So I suggest you to try all the solutions one by one and don't give up!</p><p>Here are the solutions that I found on the internet and for each of them, there is at least on person who his problem has been solved with that solution.</p><p>point: For the solutions that you need to change the MySQL settings, you can refer to the following files:</p><p>Linux: /etc/mysql/my.cnf or /etc/my.cnf (depending on the Linux distribution and MySQL package used)</p><p>Windows: C:**ProgramData**\MySQL\MySQL Server 5.6\my.ini (Notice it's ProgramData, not Program Files)</p><p>Uncomment "bind-address" attribute or change it to one of the following IPs:</p><p>bind-address="127.0.0.1"</p><p>or</p><p>bind-address="0.0.0.0"</p><p>If there is a "skip-networking" line in your MySQL config file, make it comment by adding "#" sign at the beginning of that line.</p><p>Add these lines to the MySQL config file:</p><p><a href="http://dev.mysql.com/doc/refman/5.0/en/server-system-variables.html#sysvar_wait_timeout">wait_timeout</a> = <em>number</em></p><p>interactive_timeout = <em>number</em></p><p>connect_timeout = <em>number</em></p><p>Since MySQL recognizes 127.0.0.1 (IPv4) but not :::1 (IPv6)</p><p>This could be avoided by using one of two approaches:</p><p>Option #1: In the connection string use <strong>127.0.0.1</strong> instead of <strong>localhost</strong> to avoid localhost being translated to :::1</p><p>Option #2: Run java with the option -Djava.net.preferIPv4Stack=true to force java to use IPv4 instead of IPv6. On Linux, this could also be achieved by running (or placing it inside /etc/profile:</p><pre><code>export _JAVA_OPTIONS="-Djava.net.preferIPv4Stack=true"
</code></pre><p>Make sure the Firewall, or Anti-virus software isn't blocking MySQL service.</p><p>Stop iptables temporarily on linux:</p><pre><code># Redhat enterprise and CentOS
systemctl stop iptables.service
# Other linux distros
service iptables stop
</code></pre><p>Stop anti-virus software on Windows.</p><p>Check your query string. your connection string should be some thing like this:</p><pre><code>dbName = "my_database";
dbUserName = "root";
dbPassword = "";
String connectionString = "jdbc:mysql://localhost/" + dbName + "?user=" + dbUserName + "&amp;password=" + dbPassword + "&amp;useUnicode=true&amp;characterEncoding=UTF-8";
</code></pre><p>Make sure you don't have spaces in your string. All the connection string should be continues without any space characters.</p><p>Try to replace "localhost" with the loopback address 127.0.0.1.
Also try to add port number to your connection string, like:</p><pre><code>String connectionString = "jdbc:mysql://localhost:3306/my_database?user=root&amp;password=Pass&amp;useUnicode=true&amp;characterEncoding=UTF-8";
</code></pre><p>Usually default port for MySQL is 3306.</p><p>Don't forget to change username and password to the username and password of your MySQL server.</p><p>"<a href="http://dev.mysql.com/doc/refman/5.0/en/server-system-variables.html#sysvar_max_allowed_packet">max_allowed_packet</a>" is a variable in MySQL config file that indicates the maximum packet size, not the maximum number of packets. So it will not help to solve this error.</p><p>change TOMCAT6_SECURITY=yes to TOMCAT6_SECURITY=no</p><p>use validationQuery="select now()" to make sure each query has responses</p><p>Add this code to your connection string:</p><pre><code>&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;maxReconnects=10
</code></pre><p>Although non of these solutions worked for me, I suggest you to try them. Because there are some people who solved their problem with following these steps.</p><p><strong>But what solved my problem?</strong></p><p>My problem was that I had many SELECTs on database. Each time I was creating a connection and then closing it. Although I was closing the connection every time, but the system faced with many connections and gave me that error. <strong>What I did was that I defined my connection variable as a public (or private) variable for whole class and initialized it in the constructor.</strong> Then every time I just used that connection. It solved my problem and also increased my speed dramatically.</p><p>There is no simple and unique way to solve this problem. I suggest you to think about your own situation and choose above solutions. If you take this error at the beginning of the program and you are not able to connect to the database at all, you might have problem in your connection string. But If you take this error after several successful interaction to the database, the problem might be with number of connections and you may think about changing "wait_timeout" and other MySQL settings or rewrite your code how that reduce number of connections.</p></body></html>

===ID===
584cc0003e2ca508e5f07281
===QUESTION===
Java: How do I count the number of occurrences of a char in a String?
I have the string  I want to count the occurrences of '.' in an idiomatic way, preferably a one-liner. (Previously I had expressed this constraint as "without a loop", in case you're wondering why everyone's trying to answer without using a loop). 
===LINK===
http://stackoverflow.com/questions/275944/java-how-do-i-count-the-number-of-occurrences-of-a-char-in-a-string
===KEYWORDS===
count preferably java string constraint 
===ANSWER===
465
<html><body><p>My 'idiomatic one-liner' for this is:</p><pre><code>int count = StringUtils.countMatches("a.b.c.d", ".");
</code></pre><p>Why write it yourself when it's already in <a href="http://commons.apache.org/lang/" rel="nofollow noreferrer">commons lang</a>?</p><p>Spring Framework's oneliner for this is:</p><pre><code>int occurance = StringUtils.countOccurrencesOf("a.b.c.d", ".");
</code></pre></body></html>

===ID===
584cc0013e2ca508e5f07282
===QUESTION===
How to split a string, but also keep the delimiters?
I have a multiline string which is delimited by a set of different delimiters: I can split this string into its parts, using  String.split , but it seems that I can't get the actual string, which matched the delimiter regex. In other words, this is what I get: This is what I want Is there any JDK way to split the string using a delimiter regex but also keep the delimiters? 
===LINK===
http://stackoverflow.com/questions/2206378/how-to-split-a-string-but-also-keep-the-delimiters
===KEYWORDS===
set delimited string jdk delimiters 
===ANSWER===
181
<html><body><p>You can use Lookahead and Lookbehind. Like this:</p><pre><code>System.out.println(Arrays.toString("a;b;c;d".split("(?&lt;=;)")));
System.out.println(Arrays.toString("a;b;c;d".split("(?=;)")));
System.out.println(Arrays.toString("a;b;c;d".split("((?&lt;=;)|(?=;))")));</code></pre><p>And you will get:</p><pre><code>[a;, b;, c;, d]
[a, ;b, ;c, ;d]
[a, ;, b, ;, c, ;, d]</code></pre><p>The last one is what you want.</p><p><code>((?&lt;=;)|(?=;))</code> equals to select an empty character before <code>;</code> or after <code>;</code>.</p><p>Hope this helps.</p><p><b>EDIT</b> Fabian Steeg comments on Readability is valid. Readability is always the problem for RegEx. One thing, I do to help easing this is to create a variable whose name represent what the regex does and use Java String format to help that. Like this:</p><pre><code>static public final String <b>WITH_DELIMITER = "((?&lt;=%1$s)|(?=%1$s))"</b>;
...
public void someMethod() {
...
final String[] aEach = "a;b;c;d".<b>split(String.format(WITH_DELIMITER, ";"))</b>;
...
}
...
</code></pre><p>This helps a little bit. :-D</p></body></html>

===ID===
584cc0013e2ca508e5f07283
===QUESTION===
Convert a JSON string to object in Java ME?
Is there a way in Java/J2ME to convert a string, such as: to an internal Object representation of the same, in one line of code?  Because the current method is too tedious: Maybe a JSON library? 
===LINK===
http://stackoverflow.com/questions/1395551/convert-a-json-string-to-object-in-java-me
===KEYWORDS===
tedious convert code java/j2me string 
===ANSWER===
105
<html><body><p>I used a few of them and my favorite is,</p><p><a href="http://code.google.com/p/json-simple/" rel="nofollow noreferrer">http://code.google.com/p/json-simple/</a></p><p>The library is very small so it's perfect for J2ME. </p><p>You can parse JSON into Java object in one line like this,</p><pre><code>JSONObject json = (JSONObject)new JSONParser().parse("{\"name\":\"MyNode\", \"width\":200, \"height\":100}");
System.out.println("name=" + json.get("name"));
System.out.println("width=" + json.get("width"));
</code></pre></body></html>

===ID===
584cc0023e2ca508e5f07284
===QUESTION===
How do I reverse an int array in Java?
I am trying to reverse an int array in Java. This method does not reverse the array.   What is wrong with it? 
===LINK===
http://stackoverflow.com/questions/2137755/how-do-i-reverse-an-int-array-in-java
===KEYWORDS===
wrong array java reverse method 
===ANSWER===
168
<html><body><p>To reverse an int array, you swap items up until you reach the midpoint, like this:</p><pre><code>for(int i = 0; i &lt; validData.length / 2; i++)
{
    int temp = validData[i];
    validData[i] = validData[validData.length - i - 1];
    validData[validData.length - i - 1] = temp;
}
</code></pre><p>The way you are doing it, you swap each element twice, so the result is the same as the initial list.</p></body></html>

===ID===
584cc0023e2ca508e5f07285
===QUESTION===
Type List vs type ArrayList in Java
I understand that with (1), implementations of the List interface can be swapped.  It seems that (1) is typically used in an application regardless of need (myself I always use this).  I am wondering if anyone uses (2)?  Also, how often (and can I please get an example) does the situation actually require using (1) over (2) (i.e. where (2) wouldn't suffice..aside 'coding to interfaces' and best practices etc.) Thanks 
===LINK===
http://stackoverflow.com/questions/2279030/type-list-vs-type-arraylist-in-java
===KEYWORDS===
wouldn java swapped require coding 
===ANSWER===
265
<html><body><p>Almost always the first one is preferred over the second one. The first has the advantage that the implementation of the <code>List</code> can change (to a <a href="http://java.sun.com/javase/7/docs/api/java/util/LinkedList.html" rel="nofollow noreferrer"><code>LinkedList</code></a> for example), without affecting the rest of the code. This will be a difficult task to do with an <code>ArrayList</code>, not only because you will need to change <code>ArrayList</code> to <code>LinkedList</code> everywhere, but also because you may have used <code>ArrayList</code> specific methods.</p><p>You can read about <code>List</code> implementations <a href="http://java.sun.com/docs/books/tutorial/collections/implementations/list.html" rel="nofollow noreferrer">here</a>. You may start with an <code>ArrayList</code>, but soon afterwards discover that another implementation is more appropriate.</p></body></html>

===ID===
584cc0033e2ca508e5f07286
===QUESTION===
String concatenation: concat() vs + operator
I'm curious and wasn't sure, so I thought I'd ask: Assuming String a and b. Under the hood, are they the same thing? Edit: Here is concat decompiled as reference. I'd like to be able to decompile the  +  operator as well to see what that does, not sure how to do that yet. 
===LINK===
http://stackoverflow.com/questions/47605/string-concatenation-concat-vs-operator
===KEYWORDS===
decompile reference edit thought thing 
===ANSWER===
351
<html><body><p>No, not quite.</p><p>Firstly, there's a slight difference in semantics. If <code>a</code> is <code>null</code>, then <code>a.concat(b)</code> throws a <code>NullPointerException</code> but <code>a+=b</code> will treat the original value of <code>a</code> as if it were <code>null</code>. Furthermore, the <code>concat()</code> method only accepts <code>String</code> values while the <code>+</code> operator will silently convert the argument to a String (using the <code>toString()</code> method for objects). So the <code>concat()</code> method is more strict in what it accepts.</p><p>To look under the hood, write a simple class with <code>a += b;</code></p><pre><code>public class Concat {
    String cat(String a, String b) {
        a += b;
        return a;
    }
}
</code></pre><p>Now disassemble with <code>javap -c</code> (included in the Sun JDK). You should see a listing including:</p><pre><code>java.lang.String cat(java.lang.String, java.lang.String);
  Code:
   0:   new     #2; //class java/lang/StringBuilder
   3:   dup
   4:   invokespecial   #3; //Method java/lang/StringBuilder."&lt;init&gt;":()V
   7:   aload_1
   8:   invokevirtual   #4; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   11:  aload_2
   12:  invokevirtual   #4; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   15:  invokevirtual   #5; //Method java/lang/StringBuilder.toString:()Ljava/lang/    String;
   18:  astore_1
   19:  aload_1
   20:  areturn
</code></pre><p>So, <code>a += b</code> is the equivalent of</p><pre><code>a = new StringBuilder()
    .append(a)
    .append(b)
    .toString();
</code></pre><p>The <code>concat</code> method should be faster. However, with more strings the <code>StringBuilder</code> method wins, at least in terms of performance.</p><p>The source code of <code>String</code> and <code>StringBuilder</code> (and its package-private base class) is available in src.zip of the Sun JDK. You can see that you are building up a char array (resizing as necessary) and then throwing it away when you create the final <code>String</code>. In practice memory allocation is surprisingly fast.</p></body></html>

===ID===
584cc0033e2ca508e5f07287
===QUESTION===
Initialize class fields in constructor or at declaration?
I've been programming in C# and Java recently and I am curious where the best place is to initialize my class fields. Should I do it at declaration?: or in a constructor?: I'm really curious what some of you veterans think is the best practice. I want to be consistent and stick to one approach. 
===LINK===
http://stackoverflow.com/questions/24551/initialize-class-fields-in-constructor-or-at-declaration
===KEYWORDS===
practice approach consistent declaration programming 
===ANSWER===
187
<html><body><p>My rules:</p></body></html>

===ID===
584cc0043e2ca508e5f07288
===QUESTION===
Netbeans GUI editor generating its own incomprehensible code
When creating a new project in netbeans, if i select JAVA Desktop application, it creates some code which I DO NOT RECOGNISE AT ALL as what i had learnt in swing. It imports packages such as : also, the declaration for main() looks like this : This really does not make any sense to my knowledge of JFrame, JPanel etc.. If i try to code a  netbeans application from scratch, i can write my own swing app BUT I CANNOT FIND THE GUI EDITOR. Please help. This is really frustrating. 
===LINK===
http://stackoverflow.com/questions/2561480/netbeans-gui-editor-generating-its-own-incomprehensible-code
===KEYWORDS===
creates write code learnt creating 
===ANSWER===
23
<html><body><p>You may have inadvertently selected <code>Java Desktop Application</code></p><p>Creates a skeleton of a desktop application based on the <a href="http://en.wikipedia.org/wiki/Swing_Application_Framework" rel="nofollow noreferrer">Swing Application Framework (JSR 296)</a>. This template provides basic application infrastructure such as a menu bar, persisting of window state, and status bar. With this template, you can also generate code to create a GUI interface for a database table.</p><p>Rather than <code>Java Application</code></p><p>Creates a new Java SE application in a standard IDE project. You can also generate a main class in the project. Standard projects use an IDE-generated Ant build script to build, run, and debug your project.</p><p>Addendum: Use <code>File &gt; New File &gt; Java GUI Forms</code> to add high-level containers, e.g. an enclosing <code>JPanel</code>, that can be instantiated from <code>main()</code>'s <code>run()</code> method.</p><p>For example, <code>Main.main()</code>:</p><pre><code>package temp;
import java.awt.EventQueue;
import javax.swing.JFrame;

public class Main {
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JFrame f = new JFrame();
                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                f.add(new NewJPanel());
                f.pack();
                f.setVisible(true);
            }
        });
    }
}
</code></pre><p>And a <code>NewJPanel</code> built in the GUI editor (note "Generated Code"):</p><pre><code>package temp;
public class NewJPanel extends javax.swing.JPanel {

    /** Creates new form NewJPanel */
    public NewJPanel() {
        initComponents();
    }

    @SuppressWarnings("unchecked")
    // &lt;editor-fold defaultstate="collapsed" desc="Generated Code"&gt;
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        jLabel1.setText("Hello, world!");

        org.jdesktop.layout.GroupLayout layout =
            new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(163, 163, 163)
                .add(jLabel1)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(113, 113, 113)
                .add(jLabel1)
                .addContainerGap(171, Short.MAX_VALUE))
        );
    }// &lt;/editor-fold&gt;

    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    // End of variables declaration
 }
</code></pre></body></html>

===ID===
584cc0043e2ca508e5f07289
===QUESTION===
Do you ever use the volatile keyword in Java?
In work today, I came across the  volatile  keyword in Java. Not being very familiar with it, I found this explaination:  Java theory and practice: Managing volatility Given the detail in which that article explains the keyword in question, do you ever use it or could you ever see a case in which you could use this keyword in the correct manner? 
===LINK===
http://stackoverflow.com/questions/106591/do-you-ever-use-the-volatile-keyword-in-java
===KEYWORDS===
case java keyword familiar practice 
===ANSWER===
437
<html><body><p><code>volatile</code> has semantics for memory visibility. Basically, the value of a <code>volatile</code> field becomes visible to all readers (other threads in particular) after a write operation completes on it. Without <code>volatile</code>, readers could see some non-updated value.</p><p>To answer your question: Yes, I use a <code>volatile</code> variable to control whether some code continues a loop. The loop tests the <code>volatile</code> value and continues if it is <code>true</code>. The condition can be set to <code>false</code> by calling a "stop" method. The loop sees <code>false</code> and terminates when it tests the value after the stop method completes execution.</p><p>The book "<a href="http://jcip.net" rel="nofollow noreferrer">Java Concurrency in Practice</a>," which I highly recommend, gives a good explanation of <code>volatile</code>. This book is written by the same person who wrote the IBM article that is referenced in the question (in fact, he cites his book at the bottom of that article). My use of <code>volatile</code> is what his article calls the "pattern 1 status flag."</p><p>If you want to learn more about how <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.3.1.4" rel="nofollow noreferrer"><code>volatile</code></a> works under the hood, read up on <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html" rel="nofollow noreferrer">the Java memory model</a>. If you want to go beyond that level, check out a good computer architecture book like <a href="http://mkp.com/news/computer-architecture-5th-edition-a-quantitative-approach-by-john-l-hennessy-david-a-patterson" rel="nofollow noreferrer">Hennessy &amp; Patterson</a> and read about cache coherence and cache consistency.</p></body></html>

===ID===
584cc0053e2ca508e5f0728a
===QUESTION===
What are the Xms and Xmx parameters when starting JVMs? [duplicate]
This question already has an answer here: Please explain the use of  Xms  and  Xmx  parameters in JVMs. What are the default values for them? 
===LINK===
http://stackoverflow.com/questions/14763079/what-are-the-xms-and-xmx-parameters-when-starting-jvms
===KEYWORDS===
jvms explain question duplicate answer 
===ANSWER===
603
<html><body><p>The flag <code>Xmx</code> specifies the maximum memory allocation pool for a Java Virtual Machine (JVM), while <code>Xms</code> specifies the initial memory allocation pool.</p><p>This means that your JVM will be started with <code>Xms</code> amount of memory and will be able to use a maximum of <code>Xmx</code> amount of memory. For example, starting a JVM like below will start it with 256MB of memory, and will allow the process to use up to 2048MB of memory:</p><pre><code>java -Xmx2048m -Xms256m
</code></pre><p>The memory flag can also be specified in multiple sizes, such as kilobytes, megabytes, and so on.</p><pre><code>-Xmx1024k
-Xmx512m
-Xmx8g
</code></pre><p>The <code>Xms</code> flag has no default value, and <code>Xmx</code> typically has a default value of 256MB. A common use for these flags is when you encounter a <code>java.lang.OutOfMemoryError</code>.</p><p>When using these settings, keep in mind that these settings are for the JVM's <em>heap</em>, and that the JVM can/will use more memory than just the size allocated to the heap. From <a href="http://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/garbage_collect.html">Oracle's Documentation</a>:</p><p>Note that the JVM uses more memory than just the heap. For example Java methods, thread stacks and native handles are allocated in memory separate from the heap, as well as JVM internal data structures.</p></body></html>

===ID===
584cc0053e2ca508e5f0728b
===QUESTION===
Sending POST data in Android
I'm experienced with  PHP ,  JavaScript  and a lot of other scripting languages, but I don't have a lot of experience with  Java  or  Android . I'm looking for a way to send  POST  data to a  PHP  script and display the result.                 
===LINK===
http://stackoverflow.com/questions/2938502/sending-post-data-in-android
===KEYWORDS===
experienced don javascript experience result 
===ANSWER===
254
<html><body><p><strong><em>Updated Answer which works on Android 6.0</em></strong></p><pre><code>    public class CallAPI extends AsyncTask&lt;String, String, String&gt; {

        public CallAPI(){
            //set context variables if required
        }

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
        }


         @Override
         protected String doInBackground(String... params) {

            String urlString = params[0]; // URL to call

            String resultToDisplay = "";

            InputStream in = null;
            try {

                URL url = new URL(urlString);

                HttpURLConnection urlConnection = (HttpURLConnection) url.openConnection();

                in = new BufferedInputStream(urlConnection.getInputStream());


            } catch (Exception e) {

                System.out.println(e.getMessage());

                return e.getMessage();

            }

            try {
                resultToDisplay = IOUtils.toString(in, "UTF-8");
                //to [convert][1] byte stream to a string 
            } 
            catch (IOException e) {
                e.printStackTrace();
            }
            return resultToDisplay;
        }


         @Override
        protected void onPostExecute(String result) {
            //Update the UI
        }
</code></pre><p><strong><em>Older Answer</em></strong></p><p><strong><em>Note: This solution is outdated. It only works on Android devices up to 5.1. Android 6.0 and above do not include the Apache http client used in this answer.</em></strong></p><p>Http Client from Apache Commons is the way to go. It is already included in android. Here's a simple example of how to do HTTP Post using it.</p><pre><code>public void postData() {
    // Create a new HttpClient and Post Header
    HttpClient httpclient = new DefaultHttpClient();
    HttpPost httppost = new HttpPost("http://www.yoursite.com/script.php");

    try {
        // Add your data
        List&lt;NameValuePair&gt; nameValuePairs = new ArrayList&lt;NameValuePair&gt;(2);
        nameValuePairs.add(new BasicNameValuePair("id", "12345"));
        nameValuePairs.add(new BasicNameValuePair("stringdata", "Hi"));
        httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));

        // Execute HTTP Post Request
        HttpResponse response = httpclient.execute(httppost);

    } catch (ClientProtocolException e) {
        // TODO Auto-generated catch block
    } catch (IOException e) {
        // TODO Auto-generated catch block
    }
} 
</code></pre></body></html>

===ID===
584cc0063e2ca508e5f0728c
===QUESTION===
What causes java.lang.IncompatibleClassChangeError?
I'm packaging a Java library as a JAR, and it's throwing many  java.lang.IncompatibleClassChangeError s when I try to invoke methods from it. These errors seem to appear at random. What kinds of problems could be causing this error? 
===LINK===
http://stackoverflow.com/questions/1980452/what-causes-java-lang-incompatibleclasschangeerror
===KEYWORDS===
lang errors java throwing problems 
===ANSWER===
116
<html><body><p>This means that you have made some incompatible binary changes to the library without recompiling the client code.  <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-13.html" rel="nofollow noreferrer">Java Language Specification §13</a> details all such changes, most prominently, changing non-<code>static</code> non-private fields/methods to be <code>static</code> or vice versa.</p><p>Recompile the client code against the new library, and you should be good to go.</p><p>UPDATE: If you publish a public library, you should avoid making incompatible binary changes as much as possible to preserve what's known as "binary backward compatibility".  Updating dependency jars alone ideally shouldn't break the application or the build.</p></body></html>

===ID===
584cc0063e2ca508e5f0728d
===QUESTION===
Questions about Java's String pool
Consider this code: When using the  new  keyword, Java will create the  abc   String  again right?
Will this be stored on the regular heap or the  String  pool?
How many  String s will end in the  String  pool? 
===LINK===
http://stackoverflow.com/questions/1881922/questions-about-javas-string-pool
===KEYWORDS===
code java string keyword create 
===ANSWER===
86
<html><body><p>If you use the <code>new</code> keyword, a new <code>String</code> object will be created. Note that objects are always on the heap - the string pool is not a separate memory area that is separate from the heap.</p><p>The string pool is like a cache. If you do this:</p><pre><code>String s = "abc";
String p = "abc";
</code></pre><p>then the Java compiler is smart enough to make just one <code>String</code> object, and <code>s</code> and <code>p</code> will both be referring to that same String object. If you do this:</p><pre><code>String s = new String("abc");
</code></pre><p>then there will be one <code>String</code> object in the pool, the one that represents the literal <code>"abc"</code>, and there will be a separate <code>String</code> object, not in the pool, that contains a copy of the content of the pooled object. Since <code>String</code> is immutable in Java, you're not gaining anything by doing this; calling <code>new String("literal")</code> never makes sense in Java and is unnecessarily inefficient.</p><p>Note that you can call <code>intern()</code> on a <code>String</code> object. This will put the <code>String</code> object in the pool if it is not already there, and return the reference to the pooled string. (If it was already in the pool, it just returns a reference to the object that was already there). See the API documentation for that method for more info.</p><p>See also <a href="http://en.wikipedia.org/wiki/String_interning" rel="nofollow noreferrer">String interning</a> (Wikipedia).</p></body></html>

===ID===
584cc0073e2ca508e5f0728e
===QUESTION===
How to Solve java.lang.NoClassDefFoundError?
I'm pretty new to Java, and I've just started learning about packages in Java. I've tried both the example in Oracle's  Java Tutorials . They both compile fine, but at run-time, both come up with this error: I think I might have the  Main.java  file in the wrong folder. Here is the directory hierarchy: And here is  Main.java : What am I doing wrong here? Any help would be appreciated. Thanks. UPDATE Thanks for the answers. They really helped. After I put put the  Main  class into the  graphics  package (I added  package graphics;  to it), set the classpath to "_test" (folder containing graphics), compiled it, and ran it using  java graphics.Main  (from the command line), it worked. Really late UPDATE #2 I wasn't using Eclipse (just Notepad++ and the JDK), and the above update solved my problem. However, it seems that many of these answers are for Eclipse and IntelliJ, but they have similar concepts. Thanks a lot for the answers! 
===LINK===
http://stackoverflow.com/questions/17973970/how-to-solve-java-lang-noclassdeffounderror
===KEYWORDS===
set intellij ran _test helped 
===ANSWER===
88
<html><body><p>After you compile your code, you end up with <code>.class</code> files for each class in your program. These binary files are the bytecode that Java interprets to execute your program. The <code>NoClassDefFoundError</code> indicates that the classloader (in this case <code>java.net.URLClassLoader</code>), which is responsible for dynamically loading classes, cannot find the <code>.class</code> file for the class that you're trying to use. </p><p>Your code wouldn't compile if the required classes weren't present (unless classes are loaded with reflection), so usually this exception means that your classpath doesn't include the required classes. Remember that the classloader (specifically <code>java.net.URLClassLoader</code>) will look for classes in package a.b.c in folder a/b/c/ in each entry in your classpath. <code>NoClassDefFoundError</code> can also indicate that you're missing a transitive dependency of a .jar file that you've compiled against and you're trying to use.</p><p>For example, if you had a class <code>com.example.Foo</code>, after compiling you would have a class file <code>Foo.class</code>. Say for example your working directory is <code>.../project/</code>. That class file must be placed in <code>.../project/com/example</code>, and you would set your classpath to <code>.../project/</code>.</p><p>Side note: I would recommend taking advantage of the amazing tooling that exists for Java and JVM languages. Modern IDE's like Eclipse and IDEA and build management tools like Maven or Gradle will help you not have to worry about classpaths (as much) and focus on the code! That said, <a href="http://en.wikipedia.org/wiki/Classpath_%28Java%29">this link</a> explains how to set the classpath when you execute on the command line.</p><p>If the class that's missing is not something from your project, I created <a href="http://snacktrace.com/">this tool</a> for looking through open source artifacts for a given class. Paste the classname in the search box, and it'll find it if it's open source.</p></body></html>

===ID===
584cc0073e2ca508e5f0728f
===QUESTION===
StreamCorruptedException: invalid type code: AC
My problem is when it tries to read the object the second time, it throws the exception:  The first time I send the exact same object message; however, when I try doing the same thing the second time, it throws the error above. Do I need to re-intialize the readObject() method? I even printed out the message object that is being received by the line below and its exact the same as the first instance where it works ok.  I'm assuming there's some problem with appending, but I really have no use for appending. I just want to read a fresh line everytime.
I'd really appreciate some help in fixing this bug. Thank you. ================================== Before that one line, I'm just creating the input and output objects for the socket in the run() method. The object declaration is outside the run() method in the class:- You're right; I don't close the object. I'm not sure how to do that. 
===LINK===
http://stackoverflow.com/questions/2393179/streamcorruptedexception-invalid-type-code-ac
===KEYWORDS===
close fixing readobject send class 
===ANSWER===
49
<html><body><p>The underlying problem is that you are using a new <code>ObjectOutputStream</code> to write to an existing <code>ObjectInputStream</code> that you have already used a prior <code>ObjectOutputStream</code> to write to. These streams have headers which are written and read by the respective constructors, so if you create another <code>ObjectOutputStream</code> you will write a new header, which starts with - guess what? - <code>0xAC,</code> and the existing <code>ObjectInputStream</code> isn't expecting another header at this point so it barfs.</p><p>In the Java Forums thread cited by @trashgod, I should have left out the part about 'anew for each object at both ends': that's just wasteful. Use a single OOS and OIS for the life of the socket, and don't use any other streams on the socket.</p><p>If you want to forget what you've written, use <code>ObjectOutputStream.reset().</code></p><p>And don't use any other streams or <code>Readers</code> or <code>Writers</code> on the same socket. The object stream APIs can handle all Java primitive datatypes and all <code>Serializable</code> classes.</p></body></html>

===ID===
584cc0083e2ca508e5f07290
===QUESTION===
“Non-static method cannot be referenced from a static context” error [duplicate]
This question already has an answer here: I have a class named  Media  which has a method named  setLoanItem : I am trying to call this method from a class named  GUI  in the following way: But I am getting the error  non-static method setLoanItem(java.lang.String) cannot be referenced from a static context I am simply trying to change the variable  onloan  in the  Media  class to "Yes" from the  GUI  class. I have looked at other topics with the same error message but nothing is clicking! 
===LINK===
http://stackoverflow.com/questions/4922145/non-static-method-cannot-be-referenced-from-a-static-context-error
===KEYWORDS===
lang referenced java string clicking 
===ANSWER===
60
<html><body><p>Instance methods need to be called from an instance. Your <code>setLoanItem</code> method is an instance method (it doesn't have the modifier <code>static</code>), which it needs to be in order to function (because it is setting a value on the instance that it's called on (<code>this</code>)). You need to create an instance of the class before you can call the method on it:</p><pre><code>Media media = new Media();
media.setLoanItem("Yes");
</code></pre><p>(Btw it would be better to use a boolean instead of a string containing "Yes".)</p></body></html>

===ID===
584cc0083e2ca508e5f07291
===QUESTION===
Swing: link toggle buttons together with a button group, along with corresponding menu items
For a school project, I need to make a simple paint application that can draw lines, ovals, and rectangles. The assignment specifies that I need toolbar buttons  and  menu items for each type of shape. I would like to go a little above and beyond, by making the buttons  JToggleButtons  in the toolbar and the menu items  JRadioButtonMenuItems . Furthermore, I want it so that when you select one of the toolbar buttons, it deselects the other ones, selects the appropriate menu item, and deselects the other menu items. Same for selecting one of the menu items. I know I can group any  AbstractButton  with a  ButtonGroup , but I am not sure if this is the right way to go, because though it handles one "group" of buttons just fine, I am not sure it can handle two parallel groups. Doing it without  ButtonGroup  would mean in each of the 6 event listeners I would have to manually deselect the other buttons, and each pair would call the same code to set the shape type. I could also make two  ButtonGroup s, one for the menu, one for the toolbar, but then I also have to duplicate shape type setting code. In either situation, I also run the risk of the menu setting a button which sets a menu item which sets a button, ad infintum. What is the best way to tackle this problem? (Bonus points for being able to solve the problem with the Netbeans GUI designer; It's just easier) 
===LINK===
http://stackoverflow.com/questions/4038605/swing-link-toggle-buttons-together-with-a-button-group-along-with-correspondin
===KEYWORDS===
code tackle shape set run 
===ANSWER===
18
<html><body><p>The <a href="http://download.oracle.com/javase/6/docs/api/javax/swing/Action.html"><code>Action</code></a> interface is an effective approach "if you have two or more components that perform the same function," as discussed in <a href="http://download.oracle.com/javase/tutorial/uiswing/misc/action.html"><em>How to Use Actions</em></a>. In particular, an <a href="http://download.oracle.com/javase/6/docs/api/javax/swing/Action.html"><code>Action</code></a> would allow your buttons and menu items to use the same code.</p><p>Addendum: The example below shows how a <code>JMenu</code> and a <code>JToolBar</code> can share the same <a href="http://download.oracle.com/javase/6/docs/api/javax/swing/Action.html"><code>Action</code></a> for each of several files.</p><pre><code>import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JToolBar;

/** @see http://stackoverflow.com/questions/4038605 */
public class FileMenu {

    public static void main(String[] args) {

        EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FileMenu().create();
            }
        });
    }

    void create() {
        File userDir = new File(System.getProperty("user.dir"));
        File[] files = userDir.listFiles();

        JMenu menu = new JMenu("Recent Files");
        JToolBar toolBar = new JToolBar(JToolBar.VERTICAL);
        JLabel label = new JLabel(" ", JLabel.CENTER);
        for (File f : files) {
            if (f.isFile() &amp;&amp; !f.isHidden()) {
                RecentFile rf = new RecentFile(f, label);
                menu.add(new JMenuItem(rf.getAction()));
                toolBar.add(rf.getAction());
            }
        }
        JMenuBar menuBar = new JMenuBar();
        menuBar.add(menu);

        JFrame f = new JFrame("FileMenu");
        f.setJMenuBar(menuBar);
        f.add(toolBar, BorderLayout.CENTER);
        f.add(label, BorderLayout.SOUTH);
        f.pack();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }
}

class RecentFile extends AbstractAction {

    private final File file;
    private final JLabel label;

    public RecentFile(final File file, final JLabel label) {
        this.file = file;
        this.label = label;
        this.putValue(Action.NAME, file.getName());
        this.putValue(Action.SHORT_DESCRIPTION, file.getAbsolutePath());
    }

    public void actionPerformed(ActionEvent e) {
        label.setText(file.getName());

    }

    public Action getAction() {
        return this;
    }
}
</code></pre></body></html>

===ID===
584cc0093e2ca508e5f07292
===QUESTION===
Can I add jars to maven 2 build classpath without installing them?
Maven2 is driving me crazy during the experimentation / quick and dirty mock-up phase of development.   I have a  pom.xml  file that defines the dependencies for the web-app framework I want to use, and I can quickly generate starter projects from that file. However, sometimes I want to link to a 3rd party library that doesn't already have a  pom.xml  file defined, so rather than create the  pom.xml  file for the 3rd party lib by hand and install it, and add the dependency to my  pom.xml , I would just like to tell Maven: "In addition to my defined dependencies, include any jars that are in  /lib  too."   It seems like this ought to be simple, but if it is, I am missing something. Any pointers on how to do this are greatly appreciated. Short of that, if there is a simple way to point maven to a  /lib  directory and easily create a  pom.xml  with all the enclosed jars mapped to a single dependency which I could then name / install and link to in one fell swoop would also suffice. 
===LINK===
http://stackoverflow.com/questions/364114/can-i-add-jars-to-maven-2-build-classpath-without-installing-them
===KEYWORDS===
crazy simple maven2 doesn pom 
===ANSWER===
500
<html><body><p>Most of the answers you'll find around the internet will suggest you to either install the dependency to your local repository or specify a "system" scope in the <code>pom</code> and distribute the dependency with the source of your project. But both of these solutions are actually flawed.</p><p>When you install a dependency to your local repository it remains there. Your distribution artifact will do fine as long as it has access to this repository. The problem is in most cases this repository will reside on your local machine, so there'll be no way to resolve this dependency on any other machine. Clearly making your artifact depend on a specific machine is not a way to handle things. Otherwise this dependency will have to be locally installed on every machine working with that project which is not any better.</p><p>The jars you depend on with the "System Scope" approach neither get installed to any repository or attached to your target packages. That's why your distribution package won't have a way to resolve that dependency when used. That I believe was the reason why the use of system scope even got deprecated. Anyway you don't want to rely on a deprecated feature.</p><p>After putting this in your <code>pom</code>:</p><pre class="lang-xml prettyprint-override"><code>&lt;repository&gt;
    &lt;id&gt;repo&lt;/id&gt;
    &lt;releases&gt;
        &lt;enabled&gt;true&lt;/enabled&gt;
        &lt;checksumPolicy&gt;ignore&lt;/checksumPolicy&gt;
    &lt;/releases&gt;
    &lt;snapshots&gt;
        &lt;enabled&gt;false&lt;/enabled&gt;
    &lt;/snapshots&gt;
    &lt;url&gt;file://${project.basedir}/repo&lt;/url&gt;
&lt;/repository&gt;
</code></pre><p>for each artifact with a group id of form <code>x.y.z</code> Maven will include the following location inside your project dir in its search for artifacts:</p><pre><code>repo/
| - x/
|   | - y/
|   |   | - z/
|   |   |   | - ${artifactId}/
|   |   |   |   | - ${version}/
|   |   |   |   |   | - ${artifactId}-${version}.jar
</code></pre><p>To elaborate more on this you can read <a href="http://blog.dub.podval.org/2010/01/maven-in-project-repository.html">this blog post</a>.</p><p>Instead of creating this structure by hand I recommend to use a Maven plugin to install your jars as artifacts. So, to install an artifact to an in-project repository under <code>repo</code> folder execute:</p><pre><code>mvn install:install-file -DlocalRepositoryPath=repo -DcreateChecksum=true -Dpackaging=jar -Dfile=[your-jar] -DgroupId=[...] -DartifactId=[...] -Dversion=[...]
</code></pre><p>If you'll choose this approach you'll be able to simplify the repository declaration in <code>pom</code> to:</p><pre class="lang-xml prettyprint-override"><code>&lt;repository&gt;
    &lt;id&gt;repo&lt;/id&gt;
    &lt;url&gt;file://${project.basedir}/repo&lt;/url&gt;
&lt;/repository&gt;
</code></pre><p>Since executing installation command for each lib is kinda annoying and definitely error prone, I've created a <a href="https://github.com/nikita-volkov/install-to-project-repo">utility script</a> which automatically installs all the jars from a <code>lib</code> folder to a project repository, while automatically resolving all metadata (groupId, artifactId and etc.) from names of files. The script also prints out the dependencies xml for you to copy-paste in your <code>pom</code>.</p><p>When you'll have your in-project repository created you'll have solved a problem of distributing the dependencies of the project with its source, but since then your project's target artifact will depend on non-published jars, so when you'll install it to a repository it will have unresolvable dependencies. </p><p>To beat this problem I suggest to include these dependencies in your target package. This you can do with either the <a href="http://stackoverflow.com/a/1729094/485115">Assembly Plugin</a> or better with the <a href="http://code.google.com/p/onejar-maven-plugin/">OneJar Plugin</a>. The official documentaion on OneJar is easy to grasp.</p></body></html>

===ID===
584cc0093e2ca508e5f07293
===QUESTION===
Breaking out of nested loops in Java
I've got a nested loop construct like this: Now how can I break out of both loops. I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos. I don't want to put the inner loop in a different method. Update: I don't want to rerun the loops, when breaking I'm finished with the execution of the loop block. 
===LINK===
http://stackoverflow.com/questions/886955/breaking-out-of-nested-loops-in-java
===KEYWORDS===
don couldn java breaking update 
===ANSWER===
1640
<html><body><p>(EDIT: Like other answerers, I'd definitely <em>prefer</em> to put the inner loop in a different method. This answer just shows how the requirements in the question can be met.)</p><p>You can use <code>break</code> with a label for the outer loop. For example:</p><pre><code>public class Test {
  public static void main(String[] args) {
    outerloop:
    for (int i=0; i &lt; 5; i++) {
      for (int j=0; j &lt; 5; j++) {
        if (i * j &gt; 6) {
          System.out.println("Breaking");
          break outerloop;
        }
        System.out.println(i + " " + j);
      }
    }
    System.out.println("Done");
  }
}
</code></pre><p>This prints:</p><pre><code>0 0
0 1
0 2
0 3
0 4
1 0
1 1
1 2
1 3
1 4
2 0
2 1
2 2
2 3
Breaking
Done
</code></pre></body></html>

===ID===
584cc00a3e2ca508e5f07294
===QUESTION===
HTTP URL Address Encoding in Java
My Java standalone application gets a URL (which points to a file) from the user and I need to hit it and download it. The problem I am facing is that I am not able to encode the HTTP URL address properly... Example:  returns me: But, what I want is (space replaced by %20) I guess  URLEncoder  is not designed to encode HTTP URLs... The JavaDoc says "Utility class for HTML form encoding"... Is there any other way to do this? 
===LINK===
http://stackoverflow.com/questions/724043/http-url-address-encoding-in-java
===KEYWORDS===
hit url javadoc facing encode 
===ANSWER===
244
<html><body><p>The <a href="http://java.sun.com/javase/6/docs/api/java/net/URI.html" rel="nofollow noreferrer">java.net.URI</a> class can help; in the documentation of URL you find</p><p>Note, the URI class does perform escaping of its component fields in certain circumstances. The recommended way to manage the encoding and decoding of URLs is to use an URI</p><p>Use one of the constructors with more than one argument, like:</p><pre><code>URI uri = new URI(
    "http", 
    "search.barnesandnoble.com", 
    "/booksearch/first book.pdf",
    null);
URL url = uri.toURL();
//or String request = uri.toString();
</code></pre><p><em>(the single-argument constructor of URI does NOT escape illegal characters)</em> </p><p>EDIT: added fully qualified class name to avoid confusion with other <code>URI</code> classes (like apaches httpclient)</p><p>EDIT 2:<br>
Only illegal characters get escaped by above code - it does NOT escape non-ASCII characters (see fatih's comment).<br>
The <code>toASCIIString</code> method can be used to get a String only with US-ASCII characters:  </br></br></p><pre><code>URI uri = new URI(
    "http", 
    "search.barnesandnoble.com", 
    "/booksearch/é",
    null);
String request = uri.toASCIIString();
</code></pre><p>EDIT 3:<br>
For an URL with a query like <code>http://www.google.com/ig/api?weather=São Paulo</code>, use the 5-parameter version of the constructor:  </br></p><pre><code>URI uri = new URI(
        "http", 
        "www.google.com", 
        "/ig/api",
        "weather=São Paulo",
        null);
String request = uri.toASCIIString();
</code></pre></body></html>

===ID===
584cc00a3e2ca508e5f07295
===QUESTION===
Difference between string object and string literal [duplicate]
This question already has an answer here: What is the difference between  and  
===LINK===
http://stackoverflow.com/questions/3297867/difference-between-string-object-and-string-literal
===KEYWORDS===
answer duplicate difference question 
===ANSWER===
149
<html><body><p>When you use a string literal the string can be <a href="http://en.wikipedia.org/wiki/String_interning" rel="nofollow noreferrer"><em>interned</em></a>, but when you use <code>new String("...")</code> you get a new string object.</p><p>In this example both string literals refer the same object:</p><pre><code>String a = "abc"; 
String b = "abc";
System.out.println(a == b);  // true
</code></pre><p>Here, 2 different objects are created and they have different references:</p><pre><code>String c = new String("abc");
String d = new String("abc");
System.out.println(c == d);  // false
</code></pre><p>In general, you should use the string literal notation when possible. It is easier to read and it gives the compiler a chance to <em>optimize</em> your code.</p></body></html>

===ID===
584cc00b3e2ca508e5f07296
===QUESTION===
How can I get the user input in Java?
I attempted to create a calculator, but I can not get it to work because I don't know  how to get user input . How can I get the user input in Java? 
===LINK===
http://stackoverflow.com/questions/5287538/how-can-i-get-the-user-input-in-java
===KEYWORDS===
don attempted create work java 
===ANSWER===
199
<html><body><p>One of the simplest ways is to use a <code>Scanner</code> object as follows:</p><pre><code>Scanner reader = new Scanner(System.in);  // Reading from System.in
System.out.println("Enter a number: ");
int n = reader.nextInt(); // Scans the next token of the input as an int.
</code></pre></body></html>

===ID===
584cc00b3e2ca508e5f07297
===QUESTION===
Unloading classes in java?
I have a custom class loader so that a desktop application can dynamically start loading classes from an AppServer I need to talk to. We did this since the amount of jars that are required to do this are ridiculous (if we wanted to ship them). We also have version problems if we don't load the classes dynamically at run time from the AppServer library. Now, I just hit a problem where I need to talk to two different AppServers and found that depending on whose classes I load first I might break badly... Is there any way to force the unloading of the class without actually killing the JVM? Hope this makes sense 
===LINK===
http://stackoverflow.com/questions/148681/unloading-classes-in-java
===KEYWORDS===
load force ship java depending 
===ANSWER===
142
<html><body><p>The only way that a Class can be unloaded is if the Classloader used is garbage collected.  This means, references to every single class and to the classloader itself need to go the way of the dodo.</p><p>One possible solution to your problem is to have a Classloader for every jar file, and a Classloader for each of the AppServers that delegates the actual loading of classes to specific Jar classloaders.  That way, you can point to different versions of the jar file for every App server.</p><p>This is not trivial, though.  The OSGi platform strives to do just this, as each bundle has a different classloader and dependencies are resolved by the platform.  Maybe  a good solution would be to take a look at it.</p><p>If you don't want to use OSGI, one possible implementation could be to use one instance of <a href="https://docs.oracle.com/javase/tutorial/deployment/jar/jarclassloader.html" rel="nofollow noreferrer">JarClassloader</a> class for every JAR file.</p><p>And create a new, MultiClassloader class that extends Classloader.  This class internally would have an array (or List) of JarClassloaders, and in the defineClass() method would iterate through all the internal classloaders until a definition can be found, or a NoClassDefFoundException is thrown.  A couple of accessor methods can be provided to add new JarClassloaders to the class. There is several possible implementations on the net for a MultiClassLoader, so you might not even need to write your own.</p><p>If you instanciate a MultiClassloader for every connection to the server, in principle it is possible that every server uses a different version of the same class.</p><p>I've used the MultiClassloader idea in a project, where classes that contained user-defined scripts had to be loaded and unloaded from memory and it worked quite well.</p></body></html>

===ID===
584cc00c3e2ca508e5f07298
===QUESTION===
What exactly is Java EE?
I have been doing Java SE for some years now and moving on to Java EE. However I have some trouble understanding some aspects of Java EE. Is Java EE just a specification? What I mean is: Is EJB Java EE?   Are EJB/Spring different implementations of Java EE? I am sorry to ask but I have some difficulties to understand what Java EE is. Could someone explain what Java EE is? And EJB? 
===LINK===
http://stackoverflow.com/questions/7295096/what-exactly-is-java-ee
===KEYWORDS===
aspects specification implementations years explain 
===ANSWER===
83
<html><body><p><em>Is Java EE just a specification? What I mean is: Is EJB Java EE?</em></p><p>Java EE is indeed an <strong>abstract</strong> specification. Anybody is open to develop and provide a working implementation of the specification. The <em>concrete</em> implementations are the so-called application servers, like <a href="http://wildfly.org">WildFly</a>, <a href="http://tomee.apache.org">TomEE</a>, <a href="http://glassfish.org">GlassFish</a>, <a href="http://www-03.ibm.com/software/products/en/appserv-was-liberty-core">Liberty</a>, <a href="http://www.oracle.com/technetwork/middleware/weblogic/overview/index.html">WebLogic</a>, etc. There are also servlet containers which implement only the JSP/Servlet part of the huge Java EE API, such as <a href="http://tomcat.apache.org">Tomcat</a>, <a href="http://www.eclipse.org/jetty/">Jetty</a>, etc.</p><p>We, Java EE developers, should write code utilizing the specification (i.e. import <em>only</em> <code>javax.*</code> classes in our code instead of implementation specific classes such as <code>org.jboss.wildfly.*</code>, <code>com.sun.glassfish.*</code>, etc) and then we'll be able to run our code on any implementation (thus, on any application server). If you're familiar with JDBC, it's basically the same concept as how JDBC drivers work. See also a.o. <a href="http://stackoverflow.com/questions/7550612/in-simplest-terms-what-is-a-factory">In simplest terms, what is a factory?</a></p><p>The <a href="http://www.oracle.com/technetwork/java/javaee/downloads/index.html">Java EE SDK download</a> from Oracle.com contains basically the GlassFish server along a bunch of documentation and examples and optionally also the NetBeans IDE. You don't need it if you want a different server and/or IDE.</p><p>EJB is part of the Java EE specification. Look, <a href="http://download.oracle.com/javaee/6/api/javax/ejb/package-summary.html">it's in the Java EE API</a>. Full-fledged Java EE application servers support it out the box, but simple JSP/Servlet containers don't.</p><p><em>Are EJB/Spring different implementations of Java EE?</em></p><p>No, as said, EJB is part of Java EE. Spring is a standalone framework which substitutes and improves many parts of Java EE. Spring doesn't necessarily require Java EE to run. A barebones servletcontainer like Tomcat is already sufficient. Simply put, Spring is a competitor of Java EE. E.g. "Spring" (standalone) competes EJB/JTA, Spring MVC competes JSF/JAX-RS, Spring DI/IoC/AOP competes CDI, Spring Security competes JAAS/JASPIC, etc.</p><p>Back during the old J2EE/EJB2 times, the EJB2 API was terrible to implement and maintain. Spring was then a much better alternative to EJB2. But since EJB3 (Java EE 5), the EJB API was much improved based on lessons learnt from Spring. Since CDI (Java EE 6), there's not really a reason to look at again <em>another</em> framework like Spring to make the developers more easy as to developing among others the service layer.</p><p>Only when you're using a barebones servletcontainer such as Tomcat and can't move on to a Java EE server, then Spring is more attractive as it's easier to install Spring on Tomcat. It isn't possible to install e.g. an EJB container om Tomcat without modifying the server itself, you would basically be reinventing TomEE.</p></body></html>

===ID===
584cc00c3e2ca508e5f07299
===QUESTION===
Recursively list files in Java
How do I recursively list all files under a directory in Java? Does the framework provide any utility?    I saw a lot of hacky implementations. But none from the framework or  nio   
===LINK===
http://stackoverflow.com/questions/2056221/recursively-list-files-in-java
===KEYWORDS===
files java framework lot directory 
===ANSWER===
126
<html><body><p><a href="https://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/FileUtils.html" rel="nofollow noreferrer">FileUtils</a> have <a href="https://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/FileUtils.html#iterateFiles(java.io.File,%20org.apache.commons.io.filefilter.IOFileFilter,%20org.apache.commons.io.filefilter.IOFileFilter)" rel="nofollow noreferrer"><code>iterateFiles</code></a> and <a href="https://commons.apache.org/proper/commons-io/javadocs/api-2.5/org/apache/commons/io/FileUtils.html#listFiles(java.io.File,%20org.apache.commons.io.filefilter.IOFileFilter,%20org.apache.commons.io.filefilter.IOFileFilter)" rel="nofollow noreferrer"><code>listFiles</code></a> methods. Give them a try. (from <a href="http://commons.apache.org/proper/commons-io/" rel="nofollow noreferrer">commons-io</a>)</p><p>Edit: You can <a href="https://github.com/brettryan/io-recurse-tests" rel="nofollow noreferrer">check here</a> for a benchmark of different approaches. It seems that the commons-io approach is slow, so pick some of the faster ones <a href="https://github.com/brettryan/io-recurse-tests/blob/master/src/test/java/com/drunkendev/io/recurse/tests/RecursionTest.java" rel="nofollow noreferrer">from here</a> (if it matters)</p></body></html>

===ID===
584cc00d3e2ca508e5f0729a
===QUESTION===
Weird Integer boxing in Java
I just saw code similar to this: When ran, this block of code will print out: I understand why the first is  false : because the two objects are separate objects, so the  ==  compares the references. But I can't figure out, why is the second statement returning  true ? Is there some strange autoboxing rule that kicks in when an Integer's value is in a certain range? What's going on here? 
===LINK===
http://stackoverflow.com/questions/3130311/weird-integer-boxing-in-java
===KEYWORDS===
code false figure java ran 
===ANSWER===
69
<html><body><p>The <code>true</code> line is actually guaranteed by the language specification. From <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-5.html#jls-5.1.7" rel="nofollow noreferrer">section 5.1.7</a>:</p><p>If the value p being boxed is true,
  false, a byte, a char in the range
  \u0000 to \u007f, or an int or short
  number between -128 and 127, then let
  r1 and r2 be the results of any two
  boxing conversions of p. It is always
  the case that r1 == r2.</p><p>The discussion goes on, suggesting that although your second line of output is guaranteed, the first isn't (see the last paragraph quoted below):</p><p>Ideally, boxing a given primitive
  value p, would always yield an
  identical reference. In practice, this
  may not be feasible using existing
  implementation techniques. The rules
  above are a pragmatic compromise. The
  final clause above requires that
  certain common values always be boxed
  into indistinguishable objects. The
  implementation may cache these, lazily
  or eagerly.</p><p>For other values, this formulation
  disallows any assumptions about the
  identity of the boxed values on the
  programmer's part. This would allow
  (but not require) sharing of some or
  all of these references.</p><p>This ensures that in most common
  cases, the behavior will be the
  desired one, without imposing an undue
  performance penalty, especially on
  small devices. Less memory-limited
  implementations might, for example,
  cache all characters and shorts, as
  well as integers and longs in the
  range of -32K - +32K.</p></body></html>

===ID===
584cc00d3e2ca508e5f0729b
===QUESTION===
String not replacing characters
I have a sentence that is passed in as a string and I am doing a replace on the word "and" and I want to replace it with " ".  And it's not replacing the word "and" with white space.  Below is an example of my logic.  And when I debug this the logic does fall into the sentence.replace. Is there something I am missing here. 
===LINK===
http://stackoverflow.com/questions/12734721/string-not-replacing-characters
===KEYWORDS===
word string sentence replacing fall 
===ANSWER===
139
<html><body><p>And when I debug this the logic does fall into the sentence.replace.</p><p>Yes, and then you discard the return value.</p><p>Strings in Java are immutable - when you call <code>replace</code>, it doesn't change the contents of the <em>existing</em> string - it returns a <em>new</em> string with the modifications. So you want:</p><pre><code>sentence = sentence.replace("and", " ");
</code></pre><p>This applies to <em>all</em> the methods in String (<code>substring</code>, <code>toLowerCase</code> etc). <em>None</em> of them change the contents of the string.</p><p>Note that you don't really need to do this in a condition - after all, if the sentence <em>doesn't</em> contain <code>"and"</code>, it does no harm to perform the replacement:</p><pre><code>String sentence = "Define, Measure, Analyze, Design and Verify";
sentence = sentence.replace("and", " ");
</code></pre></body></html>

===ID===
584cc00e3e2ca508e5f0729c
===QUESTION===
How do the post increment (i++) and pre increment (++i) operators work in Java?
Can you explain to me the output of this Java code? The output is 20 in both cases 
===LINK===
http://stackoverflow.com/questions/2371118/how-do-the-post-increment-i-and-pre-increment-i-operators-work-in-java
===KEYWORDS===
output explain java cases 
===ANSWER===
63
<html><body><p>Does this help?</p><pre><code>a = 5;
i=++a + ++a + a++; =&gt;
i=6 + 7 + 7; (a=8)

a = 5;
i=a++ + ++a + ++a; =&gt;
i=5 + 7 + 8; (a=8)
</code></pre></body></html>

===ID===
584cc00e3e2ca508e5f0729d
===QUESTION===
Making a robust, resizable Swing Chess GUI [closed]
How would I go about making this resizable Chess GUI? Our company has been tasked with making a Chess game.  It needs to work on Windows, OS X and Linux/Unix machines, and we have chosen Java to achieve this, while maintaining a common code-base (handy for both maintenance, and keeping costs down).   My task is to create the GUI.  The User Design Team has cleared the following spec. with the client.   The chess game (Chess Champ) will be robust to resizing and straightforward, it includes: On the left hand side of the game, we need an area which will be reserved for future use, it might include things like: The details of this are are still being settled with the client and the Logic Team. So for the moment, simply mark it with a label containing  ?  as text.  The rest of the GUI will consist of the chess board itself.  It will have:  
===LINK===
http://stackoverflow.com/questions/21142686/making-a-robust-resizable-swing-chess-gui
===KEYWORDS===
reserved text rest robust area 
===ANSWER===
9
<html><body><p>The chess board complete with columns on the left and above it is provided by a 9x9 <code>GridLayout</code>.  The first cell of the grid layout is a label with no text.</p><p>To simplify the game logic though, we maintain a separate 8x8 array of buttons.</p><p>To allow keyboard functionality we use buttons for the chess board places.  This also provides inbuilt focus indication.  The margin of the button is removed to allow them to shrink to the size of the icon.  We can add an <code>ActionListener</code> to the button and it will respond to both keyboard and mouse events.</p><p>To maintain a square board, we employ a little trickery.  The chess board is added to a <code>GridBagLayout</code> as the only component with no <code>GridBagContraints</code> specified.  That way it is always centered.  To get the resizing behavior required, the chess board queries the actual size of the <strong>parent component,</strong> and returns a preferred size that is the maximum it can, while still square and not exceeding the smaller size of the width or height of the parent.</p><p>The chess piece image was obtained from <a href="http://stackoverflow.com/q/19209650/418556">Example images for code and mark-up Q&amp;As</a>, which was in turn developed out of <a href="http://stackoverflow.com/q/18686199/418556">'Fill' Unicode characters in labels</a>.<br><br>
Using images is simpler, whereas filling Unicode characters is more versatile as well as being 'lighter'.  I.E. to support 4 different colors in 3 separate sizes of 3 different chess piece styles would require 36 separate sprite sheets!</br></br></p><pre><code>import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import javax.swing.*;
import javax.swing.border.*;
import java.net.URL;
import javax.imageio.ImageIO;

public class ChessGUI {

    private final JPanel gui = new JPanel(new BorderLayout(3, 3));
    private JButton[][] chessBoardSquares = new JButton[8][8];
    private Image[][] chessPieceImages = new Image[2][6];
    private JPanel chessBoard;
    private final JLabel message = new JLabel(
            "Chess Champ is ready to play!");
    private static final String COLS = "ABCDEFGH";
    public static final int QUEEN = 0, KING = 1,
            ROOK = 2, KNIGHT = 3, BISHOP = 4, PAWN = 5;
    public static final int[] STARTING_ROW = {
        ROOK, KNIGHT, BISHOP, KING, QUEEN, BISHOP, KNIGHT, ROOK
    };
    public static final int BLACK = 0, WHITE = 1;

    ChessGUI() {
        initializeGui();
    }

    public final void initializeGui() {
        // create the images for the chess pieces
        createImages();

        // set up the main GUI
        gui.setBorder(new EmptyBorder(5, 5, 5, 5));
        JToolBar tools = new JToolBar();
        tools.setFloatable(false);
        gui.add(tools, BorderLayout.PAGE_START);
        Action newGameAction = new AbstractAction("New") {

            @Override
            public void actionPerformed(ActionEvent e) {
                setupNewGame();
            }
        };
        tools.add(newGameAction);
        tools.add(new JButton("Save")); // TODO - add functionality!
        tools.add(new JButton("Restore")); // TODO - add functionality!
        tools.addSeparator();
        tools.add(new JButton("Resign")); // TODO - add functionality!
        tools.addSeparator();
        tools.add(message);

        gui.add(new JLabel("?"), BorderLayout.LINE_START);

        chessBoard = new JPanel(new GridLayout(0, 9)) {

            /**
             * Override the preferred size to return the largest it can, in
             * a square shape.  Must (must, must) be added to a GridBagLayout
             * as the only component (it uses the parent as a guide to size)
             * with no GridBagConstaint (so it is centered).
             */
            @Override
            public final Dimension getPreferredSize() {
                Dimension d = super.getPreferredSize();
                Dimension prefSize = null;
                Component c = getParent();
                if (c == null) {
                    prefSize = new Dimension(
                            (int)d.getWidth(),(int)d.getHeight());
                } else if (c!=null &amp;&amp;
                        c.getWidth()&gt;d.getWidth() &amp;&amp;
                        c.getHeight()&gt;d.getHeight()) {
                    prefSize = c.getSize();
                } else {
                    prefSize = d;
                }
                int w = (int) prefSize.getWidth();
                int h = (int) prefSize.getHeight();
                // the smaller of the two sizes
                int s = (w&gt;h ? h : w);
                return new Dimension(s,s);
            }
        };
        chessBoard.setBorder(new CompoundBorder(
                new EmptyBorder(8,8,8,8),
                new LineBorder(Color.BLACK)
                ));
        // Set the BG to be ochre
        Color ochre = new Color(204,119,34);
        chessBoard.setBackground(ochre);
        JPanel boardConstrain = new JPanel(new GridBagLayout());
        boardConstrain.setBackground(ochre);
        boardConstrain.add(chessBoard);
        gui.add(boardConstrain);

        // create the chess board squares
        Insets buttonMargin = new Insets(0, 0, 0, 0);
        for (int ii = 0; ii &lt; chessBoardSquares.length; ii++) {
            for (int jj = 0; jj &lt; chessBoardSquares[ii].length; jj++) {
                JButton b = new JButton();
                b.setMargin(buttonMargin);
                // our chess pieces are 64x64 px in size, so we'll
                // 'fill this in' using a transparent icon..
                ImageIcon icon = new ImageIcon(
                        new BufferedImage(64, 64, BufferedImage.TYPE_INT_ARGB));
                b.setIcon(icon);
                if ((jj % 2 == 1 &amp;&amp; ii % 2 == 1)
                        //) {
                        || (jj % 2 == 0 &amp;&amp; ii % 2 == 0)) {
                    b.setBackground(Color.WHITE);
                } else {
                    b.setBackground(Color.BLACK);
                }
                chessBoardSquares[jj][ii] = b;
            }
        }

        /*
         * fill the chess board
         */
        chessBoard.add(new JLabel(""));
        // fill the top row
        for (int ii = 0; ii &lt; 8; ii++) {
            chessBoard.add(
                    new JLabel(COLS.substring(ii, ii + 1),
                    SwingConstants.CENTER));
        }
        // fill the black non-pawn piece row
        for (int ii = 0; ii &lt; 8; ii++) {
            for (int jj = 0; jj &lt; 8; jj++) {
                switch (jj) {
                    case 0:
                        chessBoard.add(new JLabel("" + (9-(ii + 1)),
                                SwingConstants.CENTER));
                    default:
                        chessBoard.add(chessBoardSquares[jj][ii]);
                }
            }
        }
    }

    public final JComponent getGui() {
        return gui;
    }

    private final void createImages() {
        try {
            URL url = new URL("http://i.stack.imgur.com/memI0.png");
            BufferedImage bi = ImageIO.read(url);
            for (int ii = 0; ii &lt; 2; ii++) {
                for (int jj = 0; jj &lt; 6; jj++) {
                    chessPieceImages[ii][jj] = bi.getSubimage(
                            jj * 64, ii * 64, 64, 64);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }

    /**
     * Initializes the icons of the initial chess board piece places
     */
    private final void setupNewGame() {
        message.setText("Make your move!");
        // set up the black pieces
        for (int ii = 0; ii &lt; STARTING_ROW.length; ii++) {
            chessBoardSquares[ii][0].setIcon(new ImageIcon(
                    chessPieceImages[BLACK][STARTING_ROW[ii]]));
        }
        for (int ii = 0; ii &lt; STARTING_ROW.length; ii++) {
            chessBoardSquares[ii][1].setIcon(new ImageIcon(
                    chessPieceImages[BLACK][PAWN]));
        }
        // set up the white pieces
        for (int ii = 0; ii &lt; STARTING_ROW.length; ii++) {
            chessBoardSquares[ii][6].setIcon(new ImageIcon(
                    chessPieceImages[WHITE][PAWN]));
        }
        for (int ii = 0; ii &lt; STARTING_ROW.length; ii++) {
            chessBoardSquares[ii][7].setIcon(new ImageIcon(
                    chessPieceImages[WHITE][STARTING_ROW[ii]]));
        }
    }

    public static void main(String[] args) {
        Runnable r = new Runnable() {

            @Override
            public void run() {
                ChessGUI cg = new ChessGUI();

                JFrame f = new JFrame("ChessChamp");
                f.add(cg.getGui());
                // Ensures JVM closes after frame(s) closed and
                // all non-daemon threads are finished
                f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                // See http://stackoverflow.com/a/7143398/418556 for demo.
                f.setLocationByPlatform(true);

                // ensures the frame is the minimum size it needs to be
                // in order display the components within it
                f.pack();
                // ensures the minimum size is enforced.
                f.setMinimumSize(f.getSize());
                f.setVisible(true);
            }
        };
        // Swing GUIs should be created and updated on the EDT
        // http://docs.oracle.com/javase/tutorial/uiswing/concurrency
        SwingUtilities.invokeLater(r);
    }
}
</code></pre></body></html>

===ID===
584cc00f3e2ca508e5f0729e
===QUESTION===
Java tree data-structure?
Is there a good available (standard Java) data structure to represent a tree in Java? Specifically I need to represent the following: Is there an available structure for this or do I need to create my own (if so implementation suggestions would be great). 
===LINK===
http://stackoverflow.com/questions/3522454/java-tree-data-structure
===KEYWORDS===
represent great good java create 
===ANSWER===
193
<html><body><p>Here: </p><pre><code>public class Tree&lt;T&gt; {
    private Node&lt;T&gt; root;

    public Tree(T rootData) {
        root = new Node&lt;T&gt;();
        root.data = rootData;
        root.children = new ArrayList&lt;Node&lt;T&gt;&gt;();
    }

    public static class Node&lt;T&gt; {
        private T data;
        private Node&lt;T&gt; parent;
        private List&lt;Node&lt;T&gt;&gt; children;
    }
}
</code></pre><p>That is a basic tree structure that can be used for <code>String</code> or any other object.  It is fairly easy to implement simple trees to do what you need.</p><p>All you need to add are methods for add to, removing from, traversing, and constructors.  The <code>Node</code> is the basic building block of the <code>Tree</code>.</p></body></html>

===ID===
584cc00f3e2ca508e5f0729f
===QUESTION===
get OS-level system information
I'm currently building a Java app that could end up being run on many different platforms, but primarily variants of Solaris, Linux and Windows. Has anyone been able to successfully extract information such as the current disk space used, CPU utilisation and memory used in the underlying OS? What about just what the Java app itself is consuming? Preferrably I'd like to get this information without using JNI. 
===LINK===
http://stackoverflow.com/questions/25552/get-os-level-system-information
===KEYWORDS===
building information consuming run windows 
===ANSWER===
183
<html><body><p>You can get some limited memory information from the Runtime class. It really isn't exactly what you are looking for, but I thought I would provide it for the sake of completeness. Here is a small example. Edit: You can also get disk usage information from the java.io.File class. The disk space usage stuff requires Java 1.6 or higher.</p><pre><code>public class Main {
  public static void main(String[] args) {
    /* Total number of processors or cores available to the JVM */
    System.out.println("Available processors (cores): " + 
        Runtime.getRuntime().availableProcessors());

    /* Total amount of free memory available to the JVM */
    System.out.println("Free memory (bytes): " + 
        Runtime.getRuntime().freeMemory());

    /* This will return Long.MAX_VALUE if there is no preset limit */
    long maxMemory = Runtime.getRuntime().maxMemory();
    /* Maximum amount of memory the JVM will attempt to use */
    System.out.println("Maximum memory (bytes): " + 
        (maxMemory == Long.MAX_VALUE ? "no limit" : maxMemory));

    /* Total memory currently available to the JVM */
    System.out.println("Total memory available to JVM (bytes): " + 
        Runtime.getRuntime().totalMemory());

    /* Get a list of all filesystem roots on this system */
    File[] roots = File.listRoots();

    /* For each filesystem root, print some info */
    for (File root : roots) {
      System.out.println("File system root: " + root.getAbsolutePath());
      System.out.println("Total space (bytes): " + root.getTotalSpace());
      System.out.println("Free space (bytes): " + root.getFreeSpace());
      System.out.println("Usable space (bytes): " + root.getUsableSpace());
    }
  }
}
</code></pre></body></html>

===ID===
584cc0103e2ca508e5f072a0
===QUESTION===
getWidth() and getHeight() of View returns 0
I am creating all of the elements in my android project dynamically. I am trying to get the width and height of a button so that I can rotate that button around. I am just trying to learn how to work with the android language. However, it returns 0.  I did some research and I saw that it needs to be done somewhere other than in the  onCreate()  method. If someone can give me an example of how to do it, that would be great.  Here is my current code: Any help is appreciated. 
===LINK===
http://stackoverflow.com/questions/3591784/getwidth-and-getheight-of-view-returns-0
===KEYWORDS===
great elements creating appreciated give 
===ANSWER===
94
<html><body><p>You are calling <code>getWidth()</code> too early. The UI has not been sized and laid out on the screen yet.</p><p>I doubt you want to be doing what you are doing, anyway -- widgets being animated do not change their clickable areas, and so the button will still respond to clicks in the original orientation regardless of how it has rotated.</p><p>That being said, you can use a <a href="http://developer.android.com/guide/topics/resources/more-resources.html#Dimension" rel="nofollow noreferrer">dimension resource</a> to define the button size, then reference that dimension resource from your layout file and your source code, to avoid this problem.</p></body></html>

===ID===
584cc0103e2ca508e5f072a1
===QUESTION===
Simple way to repeat a String in java
I'm looking for a simple commons method or operator that allows me to repeat some String  n  times. I know I could write this using a for loop, but I wish to avoid for loops whenever necessary and a simple direct method should exist somewhere. Related to: repeat string javascript 
 Create NSString by repeating another string a given number of times Edited I try to avoid for loops when they are not completely necessary because: They add to the number of lines of code even if they are tucked away in another function. Someone reading my code has to figure out what I am doing in that for loop. Even if it is commented and has meaningful variables names, they still have to make sure it is not doing anything "clever". Programmers love to put clever things in for loops, even if I write it to "only do what it is intended to do", that does not preclude someone coming along and adding some additional clever "fix". They are very often easy to get wrong. For loops involving indexes tend to generate off by one bugs. For loops often reuse the same variables, increasing the chance of really hard to find scoping bugs. For loops increase the number of places a bug hunter has to look. 
===LINK===
http://stackoverflow.com/questions/1235179/simple-way-to-repeat-a-string-in-java
===KEYWORDS===
code figure simple variables coming 
===ANSWER===
588
<html><body><p>Here is the shortest version (Java 1.5+ required):</p><pre><code>repeated = new String(new char[n]).replace("\0", s);
</code></pre><p>Where <code>n</code> is the number of times you want to repeat the string and <code>s</code> is the string to repeat.</p><p>No imports or libraries needed.</p></body></html>

===ID===
584cc0113e2ca508e5f072a2
===QUESTION===
Sorting an ArrayList of Contacts based on name?
Possible Duplicate: 
 Sorting a collection of objects   Ok so I have a been making an addressbook application and have pretty much finished all the key features but I am looking to implement a sort feature in the program. I want to sort an Arraylist which is of a type called Contact (contactArray) which is a separate class which contains four fields; name, home number, mobile number and address.
So I was looking into using the collection sort yet am not sure how i'd implement this. Is this the right sort I should be using / is it possible to use or should I look into making a custom sort? 
===LINK===
http://stackoverflow.com/questions/1814095/sorting-an-arraylist-of-contacts-based-on-name
===KEYWORDS===
sort program sorting fields arraylist 
===ANSWER===
197
<html><body><p>Here's a tutorial about ordering objects:</p><p>Although I will give some examples, I would recommend to read it anyway.</p><p>There are various way to sort an <code>ArrayList</code>. If you want to define a <strong>natural</strong> (default) <strong>ordering</strong>, then you need to let <code>Contact</code> implement <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html" rel="nofollow noreferrer"><code>Comparable</code></a>. Assuming that you want to sort by default on <code>name</code>, then do (nullchecks omitted for simplicity):</p><pre><code>public class Contact implements Comparable&lt;Contact&gt; {

    private String name;
    private String phone;
    private Address address;

    public int compareTo(Contact other) {
        return name.compareTo(other.name);
    }

    // Add/generate getters/setters and other boilerplate.
}
</code></pre><p>so that you can just do</p><pre><code>List&lt;Contact&gt; contacts = new ArrayList&lt;Contact&gt;();
// Fill it.

Collections.sort(contacts);
</code></pre><p>If you want to define an <strong>external controllable ordering</strong> (which overrides the natural ordering), then you need to create a <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html" rel="nofollow noreferrer"><code>Comparator</code></a>:</p><pre><code>List&lt;Contact&gt; contacts = new ArrayList&lt;Contact&gt;();
// Fill it.

// Now sort by address instead of name (default).
Collections.sort(contacts, new Comparator&lt;Contact&gt;() {
    public int compare(Contact one, Contact other) {
        return one.getAddress().compareTo(other.getAddress());
    }
}); 
</code></pre><p>You can even define the <code>Comparator</code>s in the <code>Contact</code> itself so that you can reuse them instead of recreating them everytime:</p><pre><code>public class Contact {

    private String name;
    private String phone;
    private Address address;

    // ...

    public static Comparator&lt;Contact&gt; COMPARE_BY_PHONE = new Comparator&lt;Contact&gt;() {
        public int compare(Contact one, Contact other) {
            return one.phone.compareTo(other.phone);
        }
    };

    public static Comparator&lt;Contact&gt; COMPARE_BY_ADDRESS = new Comparator&lt;Contact&gt;() {
        public int compare(Contact one, Contact other) {
            return one.address.compareTo(other.address);
        }
    };

}
</code></pre><p>which can be used as follows:</p><pre><code>List&lt;Contact&gt; contacts = new ArrayList&lt;Contact&gt;();
// Fill it.

// Sort by address.
Collections.sort(contacts, Contact.COMPARE_BY_ADDRESS);

// Sort later by phone.
Collections.sort(contacts, Contact.COMPARE_BY_PHONE);
</code></pre><p>And to cream the top off, you could consider to use a <strong>generic javabean comparator</strong>:</p><pre><code>public class BeanComparator implements Comparator&lt;Object&gt; {

    private String getter;

    public BeanComparator(String field) {
        this.getter = "get" + field.substring(0, 1).toUpperCase() + field.substring(1);
    }

    public int compare(Object o1, Object o2) {
        try {
            if (o1 != null &amp;&amp; o2 != null) {
                o1 = o1.getClass().getMethod(getter, new Class[0]).invoke(o1, new Object[0]);
                o2 = o2.getClass().getMethod(getter, new Class[0]).invoke(o2, new Object[0]);
            }
        } catch (Exception e) {
            // If this exception occurs, then it is usually a fault of the developer.
            throw new RuntimeException("Cannot compare " + o1 + " with " + o2 + " on " + getter, e);
        }

        return (o1 == null) ? -1 : ((o2 == null) ? 1 : ((Comparable&lt;Object&gt;) o1).compareTo(o2));
    }

}
</code></pre><p>which you can use as follows:</p><pre><code>// Sort on "phone" field of the Contact bean.
Collections.sort(contacts, new BeanComparator("phone"));
</code></pre><p><em>(as you see in the code, possibly null fields are already covered to avoid NPE's during sort)</em></p></body></html>

===ID===
584cc0113e2ca508e5f072a3
===QUESTION===
Java Process with Input/Output Stream
I have the following code example below. Whereby you can enter a command to the bash shell i.e.  echo test  and have the result echo'd back. However, after the first read. Other output streams don't work? Why is this or am I doing something wrong? My end goal is to created a Threaded scheduled task that executes a command periodically to /bash so the  OutputStream  and  InputStream  would have to work in tandem and not stop working. I have also been experiencing the error  java.io.IOException: Broken pipe  any ideas? Thanks. 
===LINK===
http://stackoverflow.com/questions/3643939/java-process-with-input-output-stream
===KEYWORDS===
code ioexception created read experiencing 
===ANSWER===
117
<html><body><p>Firstly, I would recommend replacing the line</p><pre><code>Process process = Runtime.getRuntime ().exec ("/bin/bash");
</code></pre><p>with the lines</p><pre><code>ProcessBuilder builder = new ProcessBuilder("/bin/bash");
builder.redirectErrorStream(true);
Process process = builder.start();
</code></pre><p>ProcessBuilder is new in Java 5 and makes running external processes easier.  In my opinion, its most significant improvement over <code>Runtime.getRuntime().exec()</code> is that it allows you to redirect the standard error of the child process into its standard output.  This means you only have one <code>InputStream</code> to read from.  Before this, you needed to have two separate Threads, one reading from <code>stdout</code> and one reading from <code>stderr</code>, to avoid the standard error buffer filling while the standard output buffer was empty (causing the child process to hang), or vice versa.</p><p>Next, the loops (of which you have two)</p><pre><code>while ((line = reader.readLine ()) != null) {
    System.out.println ("Stdout: " + line);
}
</code></pre><p>only exit when the <code>reader</code>, which reads from the process's standard output, returns end-of-file.  This only happens when the process exits.  It will not return end-of-file if there happens at present to be no more output from the process.  Instead, it will wait for the next line of output from the process and not return until it has this next line.</p><p>Since you're sending two lines of input to the process before reaching this loop, the first of these two loops will hang if the process hasn't exited after these two lines of input.  It will sit there waiting for another line to be read, but there will never be another line for it to read.</p><p>I compiled your source code (I'm on Windows at the moment, so I replaced <code>/bin/bash</code> with <code>cmd.exe</code>, but the principles should be the same), and I found that:</p><p>I have seen a trick that does something similar to what you seem to want, in a program I used to work on.  This program kept around a number of shells, ran commands in them and read the output from these commands.  The trick used was to always write out a 'magic' line that marks the end of the shell command's output, and use that to determine when the output from the command sent to the shell had finished.</p><p>I took your code and I replaced everything after the line that assigns to <code>writer</code> with the following loop:</p><pre><code>while (scan.hasNext()) {
    String input = scan.nextLine();
    if (input.trim().equals("exit")) {
        // Putting 'exit' amongst the echo --EOF--s below doesn't work.
        writer.write("exit\n");
    } else {
        writer.write("((" + input + ") &amp;&amp; echo --EOF--) || echo --EOF--\n");
    }
    writer.flush();

    line = reader.readLine();
    while (line != null &amp;&amp; ! line.trim().equals("--EOF--")) {
        System.out.println ("Stdout: " + line);
        line = reader.readLine();
    }
    if (line == null) {
        break;
    }
}
</code></pre><p>After doing this, I could reliably run a few commands and have the output from each come back to me individually.</p><p>The two <code>echo --EOF--</code> commands in the line sent to the shell are there to ensure that output from the command is terminated with <code>--EOF--</code> even in the result of an error from the command.</p><p>Of course, this approach has its limitations.  These limitations include:</p><p>These points might not matter to you if whatever it is you're thinking of running as a scheduled task is going to be restricted to a command or a small set of commands which will never behave in such pathological ways.</p><p><strong>EDIT</strong>: improve exit handling and other minor changes following running this on Linux.</p></body></html>

===ID===
584cc0123e2ca508e5f072a4
===QUESTION===
How to run Unix shell script from Java code?
It is quite simple to run a Unix command from Java.  But is it possible to run a Unix shell script from Java code? If yes, would it be a good practice to run a shell script from within Java code? 
===LINK===
http://stackoverflow.com/questions/525212/how-to-run-unix-shell-script-from-java-code
===KEYWORDS===
simple java run 
===ANSWER===
128
<html><body><p>You should really look at <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/ProcessBuilder.html" rel="nofollow noreferrer">Process Builder</a>.  It is really built for this kind of thing.</p><pre><code>ProcessBuilder pb = new ProcessBuilder("myshellScript.sh", "myArg1", "myArg2");
 Map&lt;String, String&gt; env = pb.environment();
 env.put("VAR1", "myValue");
 env.remove("OTHERVAR");
 env.put("VAR2", env.get("VAR1") + "suffix");
 pb.directory(new File("myDir"));
 Process p = pb.start();
</code></pre></body></html>

===ID===
584cc0123e2ca508e5f072a5
===QUESTION===
Unsupported major.minor version 52.0 [duplicate]
This question already has an answer here: Pictures: 
 Command Prompt showing versions 
 Picture of error Does anyone know what the problem may be? 
===LINK===
http://stackoverflow.com/questions/22489398/unsupported-major-minor-version-52-0
===KEYWORDS===
picture pictures question duplicate error 
===ANSWER===
92
<html><body><p>The issue is because of Java version mismatch. Referring to the <a href="https://en.wikipedia.org/wiki/Java_class_file">Wikipedia Java Class Reference</a> :</p><p>These are the reported major numbers. The error regarding the unsupported major.minor version is because <strong>during compile time you are using a higher JDK and a lower JDK during runtime</strong>.</p><p>Thus, the 'major.minor version 52.0' error is possibly because the jar is compiled in jdk 1.8, but you are trying to run it in jdk 1.7 environment. To solve this, it's always better to have the jdk and jre pointed to the same version.</p><p>In Intellij, </p><p>Restart Intellij</p><p>Another approach which might help is by instructing IDEA which JDK version to start up with.</p><p>Go to : <strong>/Applications/IntelliJ\ IDEA\ 15\ CE.app/Contents/Info.plist</strong>
and replace the JVM version with :</p><pre><code>&lt;key&gt;JVMVersion&lt;/key&gt;
&lt;string&gt;1.8*&lt;/string&gt;
</code></pre></body></html>

===ID===
584cc0133e2ca508e5f072a6
===QUESTION===
How does Java handle integer underflows and overflows and how would you check for it?
How does Java handle integer underflows and overflows? Leading on from that, how would you check/test that this is occurring? 
===LINK===
http://stackoverflow.com/questions/3001836/how-does-java-handle-integer-underflows-and-overflows-and-how-would-you-check-fo
===KEYWORDS===
check leading overflows check/test occurring 
===ANSWER===
125
<html><body><p>If it overflows, it goes back to the <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Integer.html#MIN_VALUE" rel="nofollow noreferrer">minimum value</a> and continues from there. If it underflows, it goes back to the <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Integer.html#MAX_VALUE" rel="nofollow noreferrer">maximum value</a> and continues from there.</p><p>You can check that beforehand as follows:</p><pre><code>public static boolean willAdditionOverflow(int left, int right) {
    if (right &lt; 0 &amp;&amp; right != Integer.MIN_VALUE) {
        return willSubtractionOverflow(left, -right);
    } else {
        return (~(left ^ right) &amp; (left ^ (left + right))) &lt; 0;
    }
}

public static boolean willSubtractionOverflow(int left, int right) {
    if (right &lt; 0) {
        return willAdditionOverflow(left, -right);
    } else {
        return ((left ^ right) &amp; (left ^ (left - right))) &lt; 0;
    }
}
</code></pre><p><em>(you can substitute <code>int</code> by <code>long</code> to perform the same checks for <code>long</code>)</em></p><p>If you think that this may occur more than often, then consider using a datatype or object which can store larger values, e.g. <code>long</code> or maybe <a href="http://docs.oracle.com/javase/6/docs/api/java/math/BigInteger.html" rel="nofollow noreferrer"><code>java.math.BigInteger</code></a>. The last one doesn't overflow, practically, the available JVM memory is the limit.</p><p>If you happen to be on Java8 already, then you can make use of the new <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#addExact-int-int-" rel="nofollow noreferrer"><code>Math#addExact()</code></a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#subtractExact-int-int-" rel="nofollow noreferrer"><code>Math#subtractExact()</code></a> methods which will throw an <code>ArithmeticException</code> on overflow.</p><pre><code>public static boolean willAdditionOverflow(int left, int right) {
    try {
        Math.addExact(left, right);
        return false;
    } catch (ArithmeticException e) {
        return true;
    }
}

public static boolean willSubtractionOverflow(int left, int right) {
    try {
        Math.subtractExact(left, right);
        return false;
    } catch (ArithmeticException e) {
        return true;
    }
}
</code></pre><p>The source code can be found <a href="http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/lang/Math.java#Math.addExact%28int%2Cint%29" rel="nofollow noreferrer">here</a> and <a href="http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/lang/Math.java#Math.subtractExact%28int%2Cint%29" rel="nofollow noreferrer">here</a> respectively.</p><p>Of course, you could also just use them right away instead of hiding them in a <code>boolean</code> utility method.</p></body></html>

===ID===
584cc0143e2ca508e5f072a7
===QUESTION===
Running JAR file on Windows
I have a JAR file named  helloworld.jar .
In order to run it, I'm executing the following command in a command-line window: This works fine, but how do I execute it with double-click instead?
Do I need to install any software? 
===LINK===
http://stackoverflow.com/questions/394616/running-jar-file-on-windows
===KEYWORDS===
execute run windows double jar 
===ANSWER===
76
<html><body><p>Easiest route is probably upgrading or re-installing the Java Runtime Environment (JRE).</p><p>Or this:</p><p>Which was stolen from here: <a href="http://windowstipoftheday.blogspot.com/2005/10/setting-jar-file-association.html" rel="nofollow noreferrer">http://windowstipoftheday.blogspot.com/2005/10/setting-jar-file-association.html</a></p></body></html>

===ID===
584cc0143e2ca508e5f072a8
===QUESTION===
What is the meaning of “this” in Java?
Normally, I use  this  in constructors only.  I understand that it is used to identify the parameter variable (by using  this.something ), if it have a same name with a global variable.  However, I don't know that what the real meaning of  this  is in Java and what will happen if I use  this  without dot ( . ). 
===LINK===
http://stackoverflow.com/questions/3728062/what-is-the-meaning-of-this-in-java
===KEYWORDS===
don java constructors meaning identify 
===ANSWER===
98
<html><body><p><code>this</code> refers to the current object.</p><p>Each non-static method runs in the context of an object. So if you have a class like this:</p><pre><code>public class MyThisTest {
  private int a;

  public MyThisTest() {
    this(42); // calls the other constructor
  }

  public MyThisTest(int a) {
    this.a = a; // assigns the value of the parameter a to the field of the same name
  }

  public void frobnicate() {
    int a = 1;

    System.out.println(a); // refers to the local variable a
    System.out.println(this.a); // refers to the field a
    System.out.println(this); // refers to this entire object
  }

  public String toString() {
    return "MyThisTest a=" + a; // refers to the field a
  }
}
</code></pre><p>Then calling <code>frobnicate()</code> on <code>new MyThisTest()</code> will print </p><pre>
1
42
MyThisTest a=42
</pre><p>So effectively you use it for multiple things:</p></body></html>

===ID===
584cc0143e2ca508e5f072a9
===QUESTION===
Do Java arrays have a maximum size?
Is there a limit to the number of elements a Java array can contain? If so, what is it? 
===LINK===
http://stackoverflow.com/questions/3038392/do-java-arrays-have-a-maximum-size
===KEYWORDS===
elements limit number 
===ANSWER===
127
<html><body><p>Haven't seen the right answer, even though it's very easy to test.</p><p>In a recent HotSpot VM, the correct answer is <code>Integer.MAX_VALUE - 5</code>.  Once you go beyond that:</p><pre><code>public class Foo {
  public static void main(String[] args) {
    Object[] array = new Object[Integer.MAX_VALUE - 4];
  }
}
</code></pre><p>You get:</p><pre><code>Exception in thread "main" java.lang.OutOfMemoryError:
  Requested array size exceeds VM limit
</code></pre></body></html>

===ID===
584cc0153e2ca508e5f072aa
===QUESTION===
How do I list the files inside a JAR file?
I have this code which reads all the files from a directory. It works great. It fills the array with all the files that end with ".txt" from directory "text_directory". How can I read the contents of a directory in a similar fashion  within  a JAR file?  So what I really want to do is, to list  all the images inside my JAR file, so I can load them with:  (That one works because the "CompanyLogo" is "hardcoded" but the number of images inside the JAR file could be from 10 to 200 variable length.)  EDIT So I guess my main problem would be: How to know the  name of the JAR file  where my main class lives? Granted I could read it using  java.util.Zip . My Structure is like this: They are like: Right now I'm able to load for instance "images/image01.png" using:  But only because I know the file name, for the rest I have to load them dynamically. 
===LINK===
http://stackoverflow.com/questions/1429172/how-do-i-list-the-files-inside-a-jar-file
===KEYWORDS===
load code text_directory dynamically number 
===ANSWER===
63
<html><body><pre><code>CodeSource src = MyClass.class.getProtectionDomain().getCodeSource();
if (src != null) {
  URL jar = src.getLocation();
  ZipInputStream zip = new ZipInputStream(jar.openStream());
  while(true) {
    ZipEntry e = zip.getNextEntry();
    if (e == null)
      break;
    String name = e.getName();
    if (name.startsWith("path/to/your/dir/")) {
      /* Do something with this entry. */
      ...
    }
  }
} 
else {
  /* Fail... */
}
</code></pre><p>Note that in Java 7, you can create a <code>FileSystem</code> from the JAR (zip) file, and then use NIO's directory walking and filtering mechanisms to search through it. This would make it easier to write code that handles JARs and "exploded" directories.</p></body></html>

===ID===
584cc0163e2ca508e5f072ab
===QUESTION===
Classpath including JAR within a JAR
Is it possible to specify a Java  classpath  that includes a JAR file contained within another JAR file? 
===LINK===
http://stackoverflow.com/questions/183292/classpath-including-jar-within-a-jar
===KEYWORDS===
jar includes 
===ANSWER===
77
<html><body><p>If you're trying to create a single jar that contains your application and it's required libraries, there are two ways (that I know of) to do that.  The first is <a href="http://one-jar.sourceforge.net/" rel="nofollow noreferrer">One-Jar</a>, which uses a special classloader to allow the nesting of jars.  The second is <a href="http://classworlds.codehaus.org/uberjar.html" rel="nofollow noreferrer">UberJar</a>, (or <a href="http://maven.apache.org/plugins/maven-shade-plugin/" rel="nofollow noreferrer">Shade</a>), which explodes the included libraries and puts all the classes in the top-level jar.</p><p>I should also mention that UberJar and Shade are plugins for Maven1 and Maven2 respectively.  As mentioned below, you can also use the assembly plugin (which in reality is much more powerful, but much harder to properly configure).</p></body></html>

===ID===
584cc0163e2ca508e5f072ac
===QUESTION===
Java: How to unescape HTML character entities in Java?
Basically I would like to decode a given Html document, and replace all special chars, such as  "&nbsp"  ->  " " ,  "&gt;"  ->  ">" . In .NET we can make use of  HttpUtility.HtmlDecode .  What's the equivalent function in Java? 
===LINK===
http://stackoverflow.com/questions/994331/java-how-to-unescape-html-character-entities-in-java
===KEYWORDS===
java &nbsp &gt make replace 
===ANSWER===
124
<html><body><p>I have used the Apache Commons <a href="http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/StringEscapeUtils.html#unescapeHtml4(java.lang.String)" rel="nofollow noreferrer">StringEscapeUtils.unescapeHtml4()</a> for this:</p><p>Unescapes a string containing entity
  escapes to a string containing the
  actual Unicode characters
  corresponding to the escapes. Supports
  HTML 4.0 entities.</p></body></html>

===ID===
584cc0173e2ca508e5f072ad
===QUESTION===
How to find a button source in AWT (calculator homework)
We were asked to make a simple GUI calculator, I used getSource() to detect the buttons, cause that's what they taught us. It works by typing the 1st and 2nd value then choosing the operation, it worked. But I made a mistake, because what they want us to do is that the numbers should also be buttons, just like a real calculator. so how do i get the value of each button using getSource()? like when I press button 1 and 2 is equal to 3. heres what ive done 
===LINK===
http://stackoverflow.com/questions/7441625/how-to-find-a-button-source-in-awt-calculator-homework
===KEYWORDS===
ive 2nd taught numbers choosing 
===ANSWER===
15
<html><body><p>I would tend to have each button for the numbers, as well as each button for operands, add text to a text field that is the 'Input/Output'.  </p><p>Also have a button <code>=</code>.  When the <code>=</code> button is activated, call the <a href="http://docs.oracle.com/javase/8/docs/api/javax/script/ScriptEngine.html" rel="nofollow noreferrer"><code>javax.script.ScriptEngine</code></a> to evaluate the content of the I/O text field and write the result back to it.</p><p><img alt="Calculet input" src="https://i.stack.imgur.com/DVoux.png"> = <img alt="Calculet output" src="https://i.stack.imgur.com/KcbFU.png"/></img></p><pre><code>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.util.ArrayList;

// script package introduced in Java 1.6
import javax.script.ScriptEngineManager;
import javax.script.ScriptEngine;
import javax.script.ScriptException;

class ScriptEngineCalculator implements ActionListener, KeyListener {

    private JTextField io;
    private ScriptEngine engine;
    private ArrayList&lt;JButton&gt; controls;
    private JPanel ui;

    ScriptEngineCalculator() {
        initUI();
    }

    public final void initUI() {
        // obtain a reference to the JS engine
        engine = new ScriptEngineManager().
                getEngineByExtension("js");

        ui = new JPanel(new BorderLayout(2, 2));
        controls = new ArrayList&lt;JButton&gt;();

        JPanel text = new JPanel(new GridLayout(0, 1, 3, 3));
        ui.add(text, BorderLayout.PAGE_START);
        io = new JTextField(15);
        Font font = io.getFont();
        font = font.deriveFont(font.getSize() * 1.8f);
        io.setFont(font);
        io.setHorizontalAlignment(SwingConstants.TRAILING);
        io.setFocusable(false);
        text.add(io);

        JPanel buttons = new JPanel(new GridLayout(4, 4, 2, 2));
        ui.add(buttons, BorderLayout.CENTER);
        String[] keyValues = {
            "7", "8", "9", "/",
            "4", "5", "6", "*",
            "1", "2", "3", "-",
            "0", ".", "C", "+"
        };

        for (String keyValue : keyValues) {
            addButton(buttons, keyValue);
        }

        JButton equals = new JButton("=");
        configureButton(equals);
        ui.add(equals, BorderLayout.LINE_END);

        ui.setBorder(new EmptyBorder(5, 5, 5, 5));
    }

    public JComponent getUI() {
        return ui;
    }

    public void addButton(Container c, String text) {
        JButton b = new JButton(text);
        configureButton(b);
        c.add(b);
    }

    public void configureButton(JButton b) {
        Font f = b.getFont();
        b.setFont(f.deriveFont(f.getSize() * 1.5f));
        b.addActionListener(this);
        b.addKeyListener(this);
        controls.add(b);
    }

    public void calculateResult() {
        try {
            Object result = engine.eval(io.getText());
            if (result == null) {
                io.setText("Output was 'null'");
            } else {
                io.setText(result.toString());
            }
        } catch (ScriptException se) {
            io.setText(se.getMessage());
        }
    }

    @Override
    public void actionPerformed(ActionEvent ae) {
        String command = ae.getActionCommand();
        if (command.equals("C")) {
            io.setText("");
        } else if (command.equals("=")) {
            calculateResult();
        } else {
            io.setText(io.getText() + command);
        }
    }

    private JButton getButton(String text) {
        for (JButton button : controls) {
            String s = button.getText();
            if (text.endsWith(s)
                    || (s.equals("=")
                    &amp;&amp; (text.equals("Equals") || text.equals("Enter")))) {

                return button;
            }
        }
        return null;
    }

    /* START - Because I hate mice. */
    @Override
    public void keyPressed(KeyEvent ke) {
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        String s = KeyEvent.getKeyText(ke.getKeyCode());
        JButton b = getButton(s);
        if (b != null) {
            b.requestFocusInWindow();
            b.doClick();
        }
    }

    @Override
    public void keyTyped(KeyEvent ke) {
    }
    /* END - Because I hate mice. */

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                ScriptEngineCalculator sc = new ScriptEngineCalculator();
                JFrame f = new JFrame("Calculet");
                f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                f.setContentPane(sc.getUI());
                f.pack();
                f.setMinimumSize(f.getSize());
                f.setLocationByPlatform(true);
                f.setVisible(true);
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc0173e2ca508e5f072ae
===QUESTION===
Inner class can access but not update values - AsyncTask
I am trying to unzip a folder using Android's  AsyncTask . The class (called Decompress) is an inner class of  Unzip  where Unzip itself is a non-Activity class. The pseudo-code is:   Problems I am facing: 
1. The value of  unzipDest  and  index , updated in  doInBackground , remain null to  Unzip  and all its objects. How can I ensure that the values remain updated? 
2. I know that doInBackground occurs in a thread separate from the main UI thread. Does that mean that any values updated in the new thread will be lost once that thread returns?   
===LINK===
http://stackoverflow.com/questions/18517400/inner-class-can-access-but-not-update-values-asynctask
===KEYWORDS===
index updated unzip thread objects 
===ANSWER===
14
<html><body><p>How can I ensure that the values remain updated?</p><p>They will be updated since they are member variables. However, since <code>AsyncTask</code> is asynchrounous, they might not be updated yet when you check them. You can use an <code>interface</code> to create a callback when these values are updated. <a href="http://stackoverflow.com/questions/12575068/how-to-get-the-result-of-onpostexecute-to-main-activity-because-asynctask-is-a">This SO answer covers how to do this</a></p><p>Does that mean that any values updated in the new thread will be lost once that thread returns?</p><p>No they shouldn't be "lost". They probably just haven't been changed in the <code>AsyncTask</code> when you check them.</p><p>Since this isn't your actual code I can't see when you are trying to access them but you can use the <code>interface</code> method or call the functions that need these values in <code>onPostExecute()</code>. You also can do a <code>null</code> check before trying to access them. It just depends on the functionality and flow that you need as to which is the best way. Hope that helps.</p><p><strong>Edit</strong></p><p>In the answer I linked to, you tell the <code>Activity</code> that you will use that <code>interface</code> and override its method(s) with <code>implements AsyncResponse</code> in your <code>Activity</code> declaration after creating the separate <code>interface class</code></p><pre><code>public class MainActivity implements AsyncResponse{
</code></pre><p>then, in your <code>Activity</code> still, you override the method you declared in that class (<code>void processFinish(String output);</code>)</p><pre><code>@Override
 void processFinish(String output){  // using same params as onPostExecute()
 //this you will received result fired from async class of onPostExecute(result) method.
   }
</code></pre><p>then this is called in <code>onPostExecute()</code> when the listener sees that it is done with <code>delegate.processFinish(result);</code> <code>delegate</code> is an instance of <code>AsyncResponse</code> (your interface class)</p><pre><code>    public class AasyncTask extends AsyncTask{
public AsyncResponse delegate=null;

   @Override
   protected void onPostExecute(String result) {
      delegate.processFinish(result);
   }
</code></pre><p><code>Interface</code> example taken from linked answer above and adjusted/commented for clarity. So be sure to upvote that answer if it helps anyone.</p></body></html>

===ID===
584cc0183e2ca508e5f072af
===QUESTION===
Fastest way to determine if an integer's square root is an integer
I'm looking for the fastest way to determine if a  long  value is a perfect square (i.e. its square root is another integer).  I've done it the easy way, by using the built-in Math.sqrt() function, but I'm wondering if there is a way to do it faster by restricting yourself to integer-only domain.  Maintaining a lookup table is impratical (since there are about 2 31.5  integers whose square is less than 2 63 ). Here is the very simple and straightforward way I'm doing it now: Notes: I'm using this function in many  Project Euler  problems.  So no one else will ever have to maintain this code.  And this kind of micro-optimization could actually make a difference, since part of the challenge is to do every algorithm in less than a minute, and this function will need to be called millions of times in some problems. Update 2 :  A new solution posted by  A. Rex  has proven to be even faster.  In a run over the first 1 billion integers, the solution only required 34% of the time that the original solution used.  While the John Carmack hack is a little better for small values of  n , the benefit compared to this solution is pretty small. Here is the A. Rex solution, converted to Java: Update :  I've tried the different solutions presented below. The one suggestion which did show improvements was made by  John D. Cook .  You can observe that the last hex digit (i.e. the last 4 bits) of a perfect square must be 0, 1, 4, or 9.  This means that 75% of numbers can be immediately eliminated as possible squares.  Implementing this solution resulted in about a 50% reduction in runtime. Working from John's suggestion, I investigated properties of the last  n  bits of a perfect square.  By analyzing the last 6 bits, I found that only 12 out of 64 values are possible for the last 6 bits.  This means 81% of values can be eliminated without using any math.  Implementing this solution gave an additional 8% reduction in runtime (compared to my original algorithm).  Analyzing more than 6 bits results in a list of possible ending bits which is too large to be practical. Here is the code that I have used, which runs in 42% of the time required by the original algorithm (based on a run over the first 100 million integers).  For values of  n  less than 410881, it runs in only 29% of the time required by the original algorithm. Notes : 
===LINK===
http://stackoverflow.com/questions/295579/fastest-way-to-determine-if-an-integers-square-root-is-an-integer
===KEYWORDS===
domain code simple proven square 
===ANSWER===
443
<html><body><p>I figured out a method that works ~35% faster than your 6bits+Carmack+sqrt code, at least with my CPU (x86) and programming language (C/C++).  Your results may vary, especially because I don't know how the Java factor will play out.</p><p>My approach is threefold:</p><pre><code>if( x &lt; 0 || (x&amp;2) || ((x &amp; 7) == 5) || ((x &amp; 11) == 8) )
    return false;
if( x == 0 )
    return true;</code></pre><pre><code>int64 y = x;
y = (y &amp; 4294967295LL) + (y &gt;&gt; 32); 
y = (y &amp; 65535) + (y &gt;&gt; 16);
y = (y &amp; 255) + ((y &gt;&gt; 8) &amp; 255) + (y &gt;&gt; 16);
// At this point, y is between 0 and 511.  More code can reduce it farther.
</code></pre></body></html>

===ID===
584cc0183e2ca508e5f072b0
===QUESTION===
Singletons vs. Application Context in Android?
Recalling this  post enumerating several problems of using singletons 
and having seen several examples of Android applications using singleton pattern, I wonder if it's a good idea to use Singletons instead of single instances shared through global application state (subclassing android.os.Application and obtaining it through context.getApplication()). What advantages/drawbacks would both mechanisms have? To be honest, I expect the same answer in this post  Singleton pattern with Web application, Not a good idea!  but applied to Android. Am I correct? What's different in DalvikVM otherwise? EDIT: I would like to have opinions on several aspects involved: 
===LINK===
http://stackoverflow.com/questions/3826905/singletons-vs-application-context-in-android
===KEYWORDS===
applied correct getapplication answer mechanisms 
===ANSWER===
255
<html><body><p>I very much disagree with Dianne Hackborn's response. We are bit by bit removing all singletons from our project in favor of lightweight, task scoped objects which can easiliy be re-created when you actually need them.</p><p>Singletons are a nightmare for testing and, if lazily initialized, will introduce "state indeterminism" with subtle side effects (which may suddenly surface when moving calls to getInstance() from one scope to another). Visibility has been mentioned as another problem, and since singletons imply "global" (= random) access to shared state, subtle bugs may arise when not properly synchronized in concurrent applications.</p><p>I consider it an anti-pattern, it's a bad object-oriented style that essentially amounts to maintaining global state.</p><p>To come back to your question:
Although the app context can be considered a singleton itself, it is framework-managed and has a well defined life-cycle, scope, and access path. Hence I believe that if you do need to manage app-global state, it should go here, nowhere else. For anything else, rethink if you <em>really</em> need a singleton object, or if it would also be possible to rewrite your singleton class to instead instantiate small, short-lived objects that perform the task at hand.</p></body></html>

===ID===
584cc0193e2ca508e5f072b1
===QUESTION===
How to pretty print XML from Java?
I have a Java String that contains XML, with no line feeds or indentations. I would like to turn it into a String with nicely formatted XML. How do I do this? Note: My input is a  String . My output is a  String . 
===LINK===
http://stackoverflow.com/questions/139076/how-to-pretty-print-xml-from-java
===KEYWORDS===
xml java string indentations note 
===ANSWER===
171
<html><body><pre><code>Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");
transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "2");
//initialize StreamResult with File object to save to file
StreamResult result = new StreamResult(new StringWriter());
DOMSource source = new DOMSource(doc);
transformer.transform(source, result);
String xmlString = result.getWriter().toString();
System.out.println(xmlString);
</code></pre><p>Note: Results may vary depending on the Java version. Search for workarounds specific to your platform.</p></body></html>

===ID===
584cc01a3e2ca508e5f072b2
===QUESTION===
Can't start Eclipse - Java was started but returned exit code=13
I am trying to get my first taste of Android development using Eclipse. I ran into this problem when trying to run Eclipse, having installed version 4.2 only minutes ago. After first trying to start Eclipse without any parameters to specify the Java VM, I got an error message saying it couldn't find a Java VM called javaw.exe inside the Eclipse folder, so I found where Java was installed and specified that location as the parameter in the shortcut's target. Now I get a different error, "Java was started but returned exit code=13". Similar questions seem to indicate that it's a 32-bit/64-bit conflict, but I'm 99% positive that I downloaded 64-bit versions of both Eclipse and Java (RE 7u5), which I chose because I have 64-bit Windows 7.  Shortcut Target: "C:\Program Files\Eclipse-SDK-4.2-win32-x86_64\eclipse\eclipse.exe" -vm "C:\Program Files (x86)\Java\jre7\bin\javaw.exe" Full error code...: 
===LINK===
http://stackoverflow.com/questions/11461607/cant-start-eclipse-java-was-started-but-returned-exit-code-13
===KEYWORDS===
\java\jre7\bin\javaw x86_64\eclipse\eclipse eclipse java taste 
===ANSWER===
504
<html><body><p>Your version of Eclipse is 64-bit, based on the paths and filenames.
However, the version of Java that it's picking up is 32-bit, as indicated by where it is coming from, indicated on this line:</p><pre><code>-vm C:\Program Files (x86)\Java\jre7\bin\javaw.exe
</code></pre><p><code>Program Files (x86)</code> is the folder where 64-bit Windows places <strong>32-bit</strong> programs.</p><p><code>Program Files</code> is the folder where 64-bit Windows places <strong>64-bit</strong> programs.</p><p>This can happen when a system has more than one JVM installed, as is often the case on Windows 64-bit (for example, the JRE download page uses the bit-ness of the browser to determine what bit-ness download to offer you, and many people use(d) 32-bit browsers even though they run 64-bit Windows).</p><p>The best way to fix this, assuming you do in fact have 64-bit JRE or JDK on your system, is to specify in <code>eclipse.ini</code> exactly which JVM you want it to use. The instructions are detailed in <a href="https://wiki.eclipse.org/Eclipse.ini">the Eclipse wiki page</a>, but basically you have to specify the <code>-vm</code> option in the ini file - make sure to read the wiki page carefully as the format is very specific.</p><p>Specifying the JVM path in <code>eclipse.ini</code> is strongly recommended because doing so isolates Eclipse from any potential changes to your system <code>PATH</code> that some program installers might make (I'm talking to you, Oracle!).</p><p>Another option would be to download and use 32-bit Eclipse instead of 64-bit, but it's still strongly recommended to specify the path to the JVM in <code>eclipse.ini</code>.</p><p><em>Left for historical reference</em>:</p><p>To check your version of Java, run </p><pre>
  java -version 
</pre><p>in a console (command prompt). On Windows 7 with 64-bit Java 6 I get:</p><pre>
  java version "1.6.0_27"
  Java(TM) SE Runtime Environment (build 1.6.0_27-b07)
  Java HotSpot(TM) 64-Bit Server VM (build 20.2-b06, mixed mode)
</pre><p>Note the 3rd line, which shows that this is a 64-bit version. </p><p>On a 32-bit version you'll get something like:</p><pre>
  Java HotSpot(TM) Client VM (build 20.1-b02, mixed mode, sharing) 
</pre></body></html>

===ID===
584cc01a3e2ca508e5f072b3
===QUESTION===
Java : How to determine the correct charset encoding of a stream
With reference to the following thread:
 Java App : Unable to read iso-8859-1 encoded file correctly What is the best way to programatically determine the correct charset encoding of an inputstream/file ? I have tried using the following: But on a file which I know to be encoded with ISO8859_1 the above code yields ASCII, which is not correct, and does not allow me to correctly render the content of the file back to the console. 
===LINK===
http://stackoverflow.com/questions/499010/java-how-to-determine-the-correct-charset-encoding-of-a-stream
===KEYWORDS===
console reference thread java stream 
===ANSWER===
56
<html><body><p>I have used this library, similar to jchardet for detecting encoding in Java:
<a href="http://code.google.com/p/juniversalchardet/">http://code.google.com/p/juniversalchardet/</a></p></body></html>

===ID===
584cc01b3e2ca508e5f072b4
===QUESTION===
Base64 Encoding in Java
I'm using Eclipse, I have the following line of code: Eclipse marks this line as an error. I imported the required libraries: But again, both of them are shown as errors. I found a similar post here:  import sun.misc.BASE64Encoder results in error compiled in Eclipse I used Apache Commons as the solution suggested by including: and importing the JAR files downloaded from:  http://commons.apache.org/codec/ But the problem still exists, Eclipse still shows the errors previously mentioned; please advise.  
===LINK===
http://stackoverflow.com/questions/13109588/base64-encoding-in-java
===KEYWORDS===
shown code imported exists java 
===ANSWER===
267
<html><body><p>You need to change the import of your Class.</p><p>probably somthing like this:</p><pre><code>import org.apache.commons.codec.binary.Base64;
</code></pre><p>And then change your Class to use the BASE64 class.</p><p>here some example code:</p><pre><code>byte[] encodedBytes = Base64.encodeBase64("Test".getBytes());
System.out.println("encodedBytes " + new String(encodedBytes));
byte[] decodedBytes = Base64.decodeBase64(encodedBytes);
System.out.println("decodedBytes " + new String(decodedBytes));
</code></pre><p>Then read <a href="http://www.oracle.com/technetwork/java/faq-sun-packages-142232.html">why you shouldn't use sun.* packages</a>.</p></body></html>

===ID===
584cc01b3e2ca508e5f072b5
===QUESTION===
Java Swing revalidate() vs repaint()
I'm putting together a Swing application where I often want to replace the contents of a JPanel. To do this, I'm calling  removeAll() , then adding my new content, then calling  revalidate() . However I'm finding that the old content is still actually visible (though obscured by the the new content). If I add a call to  repaint()  in addition to  revalidate() , it works as expected. I'm sure on other occasions I've experienced that just calling  revalidate()  is enough. So basically my question is - should I need to call both functions and if not, when should I call each of them? 
===LINK===
http://stackoverflow.com/questions/1097366/java-swing-revalidate-vs-repaint
===KEYWORDS===
adding repaint works revalidate addition 
===ANSWER===
122
<html><body><p>You need to call <code>repaint()</code> and <code>revalidate()</code>. The former tells Swing that an area of the window is dirty (which is necessary to erase the image of the old children removed by <code>removeAll()</code>); the latter tells the layout manager to recalculate the layout (which is necessary when adding components). This should cause <em>children</em> of the panel to repaint, but may not cause the panel itself to do so (see <a href="http://www.oracle.com/technetwork/java/painting-140037.html#triggers" rel="nofollow noreferrer">this</a> for the list of repaint triggers).</p><p>On a more general note: rather than reusing the original panel, I'd recommend building a new panel and swapping them at the parent.</p></body></html>

===ID===
584cc01c3e2ca508e5f072b6
===QUESTION===
How do Mockito matchers work?
Mockito argument matchers (such as  any ,  argThat ,  eq ,  same , and  ArgumentCaptor.capture() ) behave very differently from Hamcrest matchers. Mockito matchers frequently cause InvalidUseOfMatchersException, even in code that executes long after any matchers were used. Mockito matchers are beholden to weird rules, such as only requiring the use of Mockito matchers for all arguments if one argument in a given method uses a matcher. Mockito matchers can cause NullPointerException when overriding  Answer s or when using  (Integer) any()  etc. Refactoring code with Mockito matchers in certain ways can produce exceptions and unexpected behavior, and may fail entirely. Why are Mockito matchers designed like this, and how are they implemented? 
===LINK===
http://stackoverflow.com/questions/22822512/how-do-mockito-matchers-work
===KEYWORDS===
argthat argumentcaptor code capture ways 
===ANSWER===
111
<html><body><p><a href="http://site.mockito.org/mockito/docs/current/org/mockito/Matchers.html">Mockito matchers</a> are static methods and calls to those methods, which <em>stand in for arguments</em> during calls to <code>when</code> and <code>verify</code>.</p><p><a href="https://code.google.com/p/hamcrest/wiki/Tutorial">Hamcrest matchers</a> (or Hamcrest-style matchers) are stateless, general-purpose object instances that implement <code>Matcher&lt;T&gt;</code> and expose a method <code>matches(T)</code> that returns true if the object matches the Matcher's criteria. They are intended to be free of side effects, and are generally used in assertions such as the one below. </p><pre><code>/* Mockito */  verify(foo).setPowerLevel(gt(9000));
/* Hamcrest */ assertThat(foo.getPowerLevel(), is(greaterThan(9000)));
</code></pre><p>Mockito matchers exist, separate from Hamcrest-style matchers, <em>so that descriptions of matching expressions fit directly into method invocations</em>: <a href="http://stackoverflow.com/a/8351055/1426891">Mockito matchers return <code>T</code> where Hamcrest matcher methods return Matcher objects (of type <code>Matcher&lt;T&gt;</code>).</a></p><p>Mockito matchers are invoked through static methods such as <code>eq</code>, <code>any</code>, <code>gt</code>, and <code>startsWith</code> on <code>org.mockito.Matchers</code> and <code>org.mockito.AdditionalMatchers</code>. There are also adapters, which have changed across Mockito versions:</p><p>Regardless of whether the matchers are Hamcrest or simply Hamcrest-style, they can be adapted like so:</p><pre><code>/* Mockito matcher intThat adapting Hamcrest-style matcher is(greaterThan(...)) */
verify(foo).setPowerLevel(intThat(is(greaterThan(9000))));
</code></pre><p>In the above statement: <code>foo.setPowerLevel</code> is a method that accepts an <code>int</code>. <code>is(greaterThan(9000))</code> returns a <code>Matcher&lt;Integer&gt;</code>, which wouldn't work as a <code>setPowerLevel</code> argument. The Mockito matcher <code>intThat</code> wraps that Hamcrest-style Matcher and returns an <code>int</code> so it <em>can</em> appear as an argument; Mockito matchers like <code>gt(9000)</code> would wrap that entire expression into a single call, as in the first line of example code.</p><pre><code>when(foo.quux(3, 5)).thenReturn(true);
</code></pre><p>When not using argument matchers, Mockito records your argument values and compares them with their <code>equals</code> methods.</p><pre><code>when(foo.quux(eq(3), eq(5))).thenReturn(true);    // same as above
when(foo.quux(anyInt(), gt(5))).thenReturn(true); // this one's different
</code></pre><p>When you call a matcher like <code>any</code> or <code>gt</code> (greater than), Mockito stores a matcher object that causes Mockito to skip that equality check and apply your match of choice. In the case of <code>argumentCaptor.capture()</code> it stores a matcher that saves its argument instead for later inspection.</p><p>Matchers return <a href="http://site.mockito.org/mockito/docs/current/org/mockito/internal/progress/HandyReturnValues.html">dummy values</a> such as zero, empty collections, or <code>null</code>. Mockito tries to return a safe, appropriate dummy value, like 0 for <code>anyInt()</code> or <code>any(Integer.class)</code> or an empty <code>List&lt;String&gt;</code> for <code>anyListOf(String.class)</code>. Because of type erasure, though, Mockito lacks type information to return any value but <code>null</code> for <code>any()</code> or <code>argThat(...)</code>, which can cause a NullPointerException if trying to "auto-unbox" a <code>null</code> primitive value.</p><p>Matchers like <code>eq</code> and <code>gt</code> take parameter values; ideally, these values should be computed before the stubbing/verification starts. Calling a mock in the middle of mocking another call can interfere with stubbing.</p><p>Matcher methods can't be used as return values; there is no way to phrase <code>thenReturn(anyInt())</code> or <code>thenReturn(any(Foo.class))</code> in Mockito, for instance. Mockito needs to know exactly which instance to return in stubbing calls, and will not choose an arbitrary return value for you.</p><p>Matchers are stored (as Hamcrest-style object matchers) in a stack contained in a class called <a href="https://github.com/mockito/mockito/blob/master/src/org/mockito/internal/progress/ArgumentMatcherStorage.java">ArgumentMatcherStorage</a>. MockitoCore and Matchers each own a <a href="https://github.com/mockito/mockito/blob/master/src/org/mockito/internal/progress/ThreadSafeMockingProgress.java">ThreadSafeMockingProgress</a> instance, which <em>statically</em> contains a ThreadLocal holding MockingProgress instances. It's this <a href="https://github.com/mockito/mockito/blob/master/src/org/mockito/internal/progress/MockingProgressImpl.java">MockingProgressImpl</a> that holds a concrete <a href="https://github.com/mockito/mockito/blob/master/src/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java">ArgumentMatcherStorageImpl</a>. Consequently, mock and matcher state is static but thread-scoped consistently between the Mockito and Matchers classes.</p><p>Most matcher calls only add to this stack, with an exception for matchers like <a href="http://site.mockito.org/mockito/docs/current/org/mockito/AdditionalMatchers.html"><code>and</code>, <code>or</code>, and <code>not</code></a>. This perfectly corresponds to (and relies on) the <a href="http://stackoverflow.com/q/6800590/1426891">evaluation order of Java</a>, which evaluates arguments left-to-right before invoking a method:</p><pre><code>when(foo.quux(anyInt(), and(gt(10), lt(20)))).thenReturn(true);
[6]      [5]  [1]       [4] [2]     [3]
</code></pre><p>This will:</p><p>This demonstrates a few rules:</p><p>Mockito can't tell the difference between <code>quux(anyInt(), 0)</code> and <code>quux(0, anyInt())</code>. They both look like a call to <code>quux(0, 0)</code> with one int matcher on the stack. Consequently, if you use one matcher, you have to match all arguments.</p><p>Call order isn't just important, it's <em>what makes this all work</em>. Extracting matchers to variables generally doesn't work, because it usually changes the call order. Extracting matchers to methods, however, works great.</p><pre><code>int between10And20 = and(gt(10), lt(20));
/* BAD */ when(foo.quux(anyInt(), between10And20)).thenReturn(true);
// Mockito sees the stack as the opposite: and(gt(10), lt(20)), anyInt().

public static int anyIntBetween10And20() { return and(gt(10), lt(20)); }
/* OK */  when(foo.quux(anyInt(), anyIntBetween10And20())).thenReturn(true);
// The helper method calls the matcher methods in the right order.
</code></pre><p>The stack changes often enough that Mockito can't police it very carefully. It can only check the stack when you interact with Mockito or a mock, and has to accept matchers without knowing whether they're used immediately or abandoned accidentally. In theory, the stack should always be empty outside of a call to <code>when</code> or <code>verify</code>, but Mockito can't check that automatically.
You can check manually with <code>Mockito.validateMockitoUsage()</code>.</p><p>In a call to <code>when</code>, Mockito actually calls the method in question, which will throw an exception if you've stubbed the method to throw an exception (or require non-zero or non-null values).
<code>doReturn</code> and <code>doAnswer</code> (etc) do <em>not</em> invoke the actual method and are often a useful alternative.</p><p>If you had called a mock method in the middle of stubbing (e.g. to calculate an answer for an <code>eq</code> matcher), Mockito would check the stack length against <em>that</em> call instead, and likely fail.</p><p>If you try to do something bad, like <a href="https://github.com/mockito/mockito/wiki/FAQ#what-are-the-limitations-of-mockito">stubbing/verifying a final method</a>, Mockito will call the real method <em>and also leave extra matchers on the stack</em>. The <code>final</code> method call may not throw an exception, but you may get an <a href="https://github.com/mockito/mockito/blob/master/src/org/mockito/exceptions/Reporter.java#L233">InvalidUseOfMatchersException</a> from the stray matchers when you next interact with a mock.</p><p><strong><a href="https://github.com/mockito/mockito/blob/master/src/org/mockito/exceptions/Reporter.java#L233">InvalidUseOfMatchersException</a></strong>:</p><p>Check that every single argument has exactly one matcher call, if you use matchers at all, and that you haven't used a matcher outside of a <code>when</code> or <code>verify</code> call. Matchers should never be used as stubbed return values or fields/variables.</p><p>Check that you're not calling a mock as a part of providing a matcher argument.</p><p>Check that you're not trying to stub/verify a final method with a matcher. It's a great way to leave a matcher on the stack, and unless your final method throws an exception, this might be the only time you realize the method you're mocking is final.</p><p><strong>NullPointerException with primitive arguments:</strong> <code>(Integer) any()</code> returns null while <code>any(Integer.class)</code> returns 0; this can cause a <code>NullPointerException</code> if you're expecting an <code>int</code> instead of an Integer. In any case, prefer <code>anyInt()</code>, which will return zero and also skip the auto-boxing step.</p><p><strong>NullPointerException or other exceptions:</strong> Calls to <code>when(foo.bar(any())).thenReturn(baz)</code> will actually <em>call</em> <code>foo.bar(null)</code>, which you might have stubbed to throw an exception when receiving a null argument. Switching to <code>doReturn(baz).when(foo).bar(any())</code> <a href="http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html#12">skips the stubbed behavior</a>.</p><p>Use <a href="http://site.mockito.org/mockito/docs/current/org/mockito/runners/MockitoJUnitRunner.html">MockitoJUnitRunner</a>, or explicitly call <a href="http://site.mockito.org/mockito/docs/current/org/mockito/Mockito.html#validateMockitoUsage()"><code>validateMockitoUsage</code></a> in your <code>tearDown</code> or <code>@After</code> method (which the runner would do for you automatically). This will help determine whether you've misused matchers.</p><p>For debugging purposes, add calls to <code>validateMockitoUsage</code> in your code directly. This will throw if you have anything on the stack, which is a good warning of a bad symptom.</p></body></html>

===ID===
584cc01c3e2ca508e5f072b7
===QUESTION===
How can I lock a file using java (if possible)
I have a Java process that opens a file using a FileReader. How can I prevent another (Java) process from opening this file, or at least notify that second process that the file is already opened? Does this automatically make the second process get an exception if the file is open (which solves my problem) or do I have to explicitly open it in the first process with some sort of flag or argument? I have a Java app that lists a folder and opens each file in the listing for processing it. It processes each file after the other. The processing of each file consists of reading it and doing some calculations based on the contents and it takes about 2 minutes. I also have another Java app that does the same thing but instead writes on the file. What I want is to be able to run these apps at the same time so the scenario goes like this. ReadApp lists the folder and finds files A, B, C. It opens file A and starts the reading. WriteApp lists the folder and finds files A, B, C. It opens file A, sees that is is open (by an exception or whatever way) and goes to file B. ReadApp finishes file A and continues to B. It sees that it is open and continues to C. It is crucial that WriteApp doesn't write while ReadApp is reading the same file or vice versa. They are different processes. 
===LINK===
http://stackoverflow.com/questions/128038/how-can-i-lock-a-file-using-java-if-possible
===KEYWORDS===
prevent sees process crucial readapp 
===ANSWER===
72
<html><body><p>FileChannel.lock is probably what you want.</p><pre><code>FileInputStream in = new FileInputStream(file);
try {
    java.nio.channels.FileLock lock = in.getChannel().lock();
    try {
        Reader reader = new InputStreamReader(in, charset);
        ...
    } finally {
        lock.release();
    }
} finally {
    in.close();
}
</code></pre><p>(Disclaimer: Code not compiled and certainly not tested.)</p><p>Note the section entitled "platform dependencies" in the <a href="https://docs.oracle.com/javase/8/docs/api/java/nio/channels/FileLock.html#pdep" rel="nofollow noreferrer">API doc for FileLock</a>.</p></body></html>

===ID===
584cc01d3e2ca508e5f072b8
===QUESTION===
Quality of Image after resize very low — Java
In the script it is going from around the 300x300 mark down to 60x60.  Need to improve the overall image quality as it is coming out very poorly at the moment. Really just need to know if their is something I can plug in that will bump up the quality or if I need to look at something else entirely. EDIT: Picture comparison. Source, just picked a random washing machine from google.
 http://www.essexappliances.co.uk/images/categories/washing-machine.jpg The same picture converted in Photoshop to what I need it to be.
 http://imgur.com/78B1p What it looks like being converted like this.
 http://imgur.com/8WlXD 
===LINK===
http://stackoverflow.com/questions/14115950/quality-of-image-after-resize-very-low-java
===KEYWORDS===
photoshop google bump image jpg 
===ANSWER===
12
<html><body><p>The issue you are seeing is actually related to the resampling filter used for downscaling. Obviously, the one used by your library is a bad one for the situation. Nearest neighbor, bilinear and bicubic are typical bad examples to be used when downscaling. I don't know the exact resampling filter Photoshop uses, but I used 3-lobed lanczos and got the following result:</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/Ois0x.png"/></p><p>So, to solve your problem, you need to use a smarter resampling filter.</p></body></html>

===ID===
584cc01d3e2ca508e5f072b9
===QUESTION===
Resizing issue with canvas within jscrollpane within jsplitpane
I'm creating an application using the NetBeans GUI Editor, in which I want to have a  JSplitPane , the top component of which will be a  Canvas  within a  JScrollPane  and the bottom component will be a  JTextArea , or something like that. When I pull the divider downwards, and thus increasing the size of the top component everything seem to resize just fine. The problem appears when I'm trying to push the divider upwards:
The divider seems to go beneath the  Canvas  (and maybe beneath the  JScrollPane  too). I have tried various combinations of the preferred/minimum/maximum sizes of the  JScrollPane  and  Canvas  but nothing seems to work. This is the part of the code that Netbeans generated that may have something to do with the problem at hand: Since this is my first question, I'm not allowed to embed an image in the question, so I will just post the link: The red arrows indicate the position of the divider. Thanks in advance for your time. 
===LINK===
http://stackoverflow.com/questions/11942961/resizing-issue-with-canvas-within-jscrollpane-within-jsplitpane
===KEYWORDS===
code image allowed fine post 
===ANSWER===
8
<html><body><p>Instead of <a href="http://stackoverflow.com/q/7229226/230513"><code>setPreferredSize()</code></a>, let your components calculate their own preferred size and <code>pack()</code> the enclosing <code>Window</code> to accommodate. The example below adds an instance of <a href="https://sites.google.com/site/drjohnbmatthews/graphpanel" rel="nofollow noreferrer"><code>draw.GraphPanel</code></a> to the top and a corresponding control panel to the bottom.</p><p><img alt="image" src="https://i.stack.imgur.com/1yvPP.png"/></p><pre><code>import draw.GraphPanel;
import java.awt.EventQueue;
import java.awt.GridLayout;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;

/**
 * @see http://stackoverflow.com/q/11942961/230513
 */
public class SplitGraph extends JPanel {

    public SplitGraph() {
        super(new GridLayout());
        JSplitPane split = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
        GraphPanel graphPanel = new GraphPanel();
        split.setTopComponent(new JScrollPane(graphPanel));
        split.setBottomComponent(graphPanel.getControlPanel());
        this.add(split);
    }

    private void display() {
        JFrame f = new JFrame("SplitGraph");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(this);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new SplitGraph().display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc01e3e2ca508e5f072ba
===QUESTION===
How slow are Java exceptions?
Question:  Is exception handling in Java actually slow? Conventional wisdom, as well as a lot of Google results, says that exceptional logic shouldn't be used for normal program flow in Java.  Two reasons are usually given, and  This question is about #1. As an example,  this page  describes Java exception handling as "very slow" and relates the slowness to the creation of the exception message string - "this string is then used in creating the exception object that is thrown. This is not fast."  The article  Effective Exception Handling in Java  says that "the reason for this is due to the object creation aspect of exception handling, which thereby makes throwing exceptions inherently slow".  Another reason out there is that the stack trace generation is what slows it down. My testing (using Java 1.6.0_07, Java HotSpot 10.0, on 32 bit Linux), indicates that exception handling is no slower than regular code.  I tried running a method in a loop that executes some code.  At the end of the method, I use a boolean to indicate whether to  return  or  throw .  This way the actual processing is the same. I tried running the methods in different orders and averaging my test times, thinking it may have been the JVM warming up.  In all my tests, the throw was at least as fast as the return, if not faster (up to 3.1% faster).  I am completely open to the possibility that my tests were wrong, but I haven't seen anything out there in the way of code sample, test comparisons, or results in the last year or two that show exception handling in Java to actually be slow. What lead me down this path was an API I needed to use that threw exceptions as part of normal control logic.  I wanted to correct them in their usage, but now I may not be able to.  Will I instead have to praise them on their forward thinking? In the paper  Efficient Java exception handling in just-in-time compilation , the authors suggest that the presence of exception handlers alone, even if no exceptions are thrown, is enough to prevent the JIT compiler from optimizing the code properly, thus slowing it down.  I haven't tested this theory yet. 
===LINK===
http://stackoverflow.com/questions/299068/how-slow-are-java-exceptions
===KEYWORDS===
prevent code slower methods presence 
===ANSWER===
252
<html><body><p>It depends how exceptions are implemented. The simplest way is using setjmp and longjmp. That means all registers of the CPU are written to the stack (which already takes some time) and possibly some other data needs to be created... all this already happens in the try statement. The throw statement needs to unwind the stack and restore the values of all registers (and possible other values in the VM). So try and throw are equally slow, and that is pretty slow, however if no exception is thrown, exiting the try block takes no time whatsoever in most cases (as everything is put on the stack which cleans up automatically if the method exists).</p><p>Sun and others recognized, that this is possibly suboptimal and of course VMs get faster and faster over the time. There is another way to implement exceptions, which makes try itself lightning fast (actually nothing happens for try at all in general - everything that needs to happen is already done when the class is loaded by the VM) and it makes throw not quite as slow. I don't know which JVM uses this new, better technique... </p><p>...but are you writing in Java so your code later on only runs on one JVM on one specific system? Since if it may ever run on any other platform or any other JVM version (possibly of any other vendor), who says they also use the fast implementation? The fast one is more complicated than the slow one and not easily possible on all systems. You want to stay portable? Then don't rely on exceptions being fast.</p><p>It also makes a big difference what you do within a try block. If you open a try block and never call any method from within this try block, the try block will be ultra fast, as the JIT can then actually treat a throw like a simple goto. It neither needs to save stack-state nor does it need to unwind the stack if an exception is thrown (it only needs to jump to the catch handlers). However, this is not what you usually do. Usually you open a try block and then call a method that might throw an exception, right? And even if you just use the try block within your method, what kind of method will this be, that does not call any other method? Will it just calculate a number? Then what for do you need exceptions? There are much more elegant ways to regulate program flow. For pretty much anything else but simple math, you will have to call an external method and this already destroys the advantage of a local try block.</p><p>See the following test code:</p><pre><code>public class Test {
    int value;


    public int getValue() {
        return value;
    }

    public void reset() {
        value = 0;
    }

    // Calculates without exception
    public void method1(int i) {
        value = ((value + i) / i) &lt;&lt; 1;
        // Will never be true
        if ((i &amp; 0xFFFFFFF) == 1000000000) {
            System.out.println("You'll never see this!");
        }
    }

    // Could in theory throw one, but never will
    public void method2(int i) throws Exception {
        value = ((value + i) / i) &lt;&lt; 1;
        // Will never be true
        if ((i &amp; 0xFFFFFFF) == 1000000000) {
            throw new Exception();
        }
    }

    // This one will regularly throw one
    public void method3(int i) throws Exception {
        value = ((value + i) / i) &lt;&lt; 1;
        // i &amp; 1 is equally fast to calculate as i &amp; 0xFFFFFFF; it is both
        // an AND operation between two integers. The size of the number plays
        // no role. AND on 32 BIT always ANDs all 32 bits
        if ((i &amp; 0x1) == 1) {
            throw new Exception();
        }
    }

    public static void main(String[] args) {
        int i;
        long l;
        Test t = new Test();

        l = System.currentTimeMillis();
        t.reset();
        for (i = 1; i &lt; 100000000; i++) {
            t.method1(i);
        }
        l = System.currentTimeMillis() - l;
        System.out.println(
            "method1 took " + l + " ms, result was " + t.getValue()
        );

        l = System.currentTimeMillis();
        t.reset();
        for (i = 1; i &lt; 100000000; i++) {
            try {
                t.method2(i);
            } catch (Exception e) {
                System.out.println("You'll never see this!");
            }
        }
        l = System.currentTimeMillis() - l;
        System.out.println(
            "method2 took " + l + " ms, result was " + t.getValue()
        );

        l = System.currentTimeMillis();
        t.reset();
        for (i = 1; i &lt; 100000000; i++) {
            try {
                t.method3(i);
            } catch (Exception e) {
                // Do nothing here, as we will get here
            }
        }
        l = System.currentTimeMillis() - l;
        System.out.println(
            "method3 took " + l + " ms, result was " + t.getValue()
        );
    }
}
</code></pre><p>Result:</p><pre><code>method1 took 972 ms, result was 2
method2 took 1003 ms, result was 2
method3 took 66716 ms, result was 2
</code></pre><p>The slowdown from the try block is too small to rule out confounding factors such as background processes. But the catch block killed everything and made it 66 times slower!</p><p>As I said, the result will not be that bad if you put try/catch and throw all within the same method (method3), but this is a special JIT optimization I would not rely upon. And even when using this optimization, the throw is still pretty slow. So I don't know what you are trying to do here, but there is definitely a better way of doing it than using try/catch/throw.</p></body></html>

===ID===
584cc01e3e2ca508e5f072bb
===QUESTION===
What is the equivalent of the C++ Pair<L,R> in Java?
Is there a good reason why there is no Pair in Java? What would be the equivalent of this C++ construct? I would rather avoid reimplementing my own. It seems that 1.6 is providing something similar (AbstractMap.SimpleEntry), but this looks quite convoluted. 
===LINK===
http://stackoverflow.com/questions/156275/what-is-the-equivalent-of-the-c-pairl-r-in-java
===KEYWORDS===
abstractmap java equivalent convoluted pair 
===ANSWER===
303
<html><body><p>In <a href="http://groups.google.com/group/comp.lang.java.help/browse_thread/thread/f8b63fc645c1b487/1d94be050cfc249b" rel="nofollow noreferrer">a thread on <code>comp.lang.java.help</code></a>, Hunter Gratzner gives some arguments against the presence of a <code>Pair</code> construct in Java. The main argument is that a class <code>Pair</code> doesn't convey any semantics about the relationship between the two values (how do you know what "first" and "second" mean ?).</p><p>A better practice is to write a very simple class, like the one Mike proposed, for each application you would have made of the <code>Pair</code> class. <code>Map.Entry</code> is an example of a pair that carry its meaning in its name.</p><p>To sum up, in my opinion it is better to have a class <code>Position(x,y)</code>, a class <code>Range(begin,end)</code> and a class <code>Entry(key,value)</code> rather than a generic <code>Pair(first,second)</code> that doesn't tell me anything about what it's supposed to do.</p></body></html>

===ID===
584cc01f3e2ca508e5f072bc
===QUESTION===
How can I pad a String in Java?
Is there some easy way to pad Strings in Java? Seems like something that should be in some StringUtil-like API, but I can't find anything that does this. 
===LINK===
http://stackoverflow.com/questions/388461/how-can-i-pad-a-string-in-java
===KEYWORDS===
java string find api pad 
===ANSWER===
105
<html><body><p>Apache <a href="https://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/StringUtils.html" rel="nofollow noreferrer">StringUtils</a> has several methods: leftPad, rightPad, center and repeat. </p><p><strong>Edit:</strong> As others have mentioned and demonstrated in <a href="http://stackoverflow.com/a/391978/1725096">this answer</a>, <code>String.format()</code> and the <code>Formatter</code> classes in the JDK are better options. Use them over the commons code.</p></body></html>

===ID===
584cc0203e2ca508e5f072bd
===QUESTION===
Sending HTTP POST Request In Java
lets assume this URL... (Here id needs to be sent in a POST request) I want to send the  id = 10  to the server's  page.php , which accepts it in a POST method. How can i do this from within Java? I tried this : But I still can't figure out how to send it via POST 
===LINK===
http://stackoverflow.com/questions/3324717/sending-http-post-request-in-java
===KEYWORDS===
java figure url accepts send 
===ANSWER===
192
<html><body><p>Since some of the classes, in the original answer, are deprecated in the newer version of Apache HTTP Components, I'm posting this update.</p><p>By the way, you can access the full documentation for more examples <a href="http://hc.apache.org/httpcomponents-client-ga/tutorial/html/fundamentals.html#d5e37" rel="nofollow noreferrer">here</a>.</p><pre><code>HttpClient httpclient = HttpClients.createDefault();
HttpPost httppost = new HttpPost("http://www.a-domain.com/foo/");

// Request parameters and other properties.
List&lt;NameValuePair&gt; params = new ArrayList&lt;NameValuePair&gt;(2);
params.add(new BasicNameValuePair("param-1", "12345"));
params.add(new BasicNameValuePair("param-2", "Hello!"));
httppost.setEntity(new UrlEncodedFormEntity(params, "UTF-8"));

//Execute and get the response.
HttpResponse response = httpclient.execute(httppost);
HttpEntity entity = response.getEntity();

if (entity != null) {
    InputStream instream = entity.getContent();
    try {
        // do something useful
    } finally {
        instream.close();
    }
}
</code></pre><p>I recommend to use Apache HttpClient. its faster and easier to implement.</p><pre><code>PostMethod post = new PostMethod("http://jakarata.apache.org/");
NameValuePair[] data = {
    new NameValuePair("user", "joe"),
    new NameValuePair("password", "bloggs")
};
post.setRequestBody(data);
// execute method and handle any error responses.
...
InputStream in = post.getResponseBodyAsStream();
// handle response.
</code></pre><p>for more information check this url: <a href="http://hc.apache.org/" rel="nofollow noreferrer">http://hc.apache.org/</a></p></body></html>

===ID===
584cc0203e2ca508e5f072be
===QUESTION===
How to access java-classes in the default-package?
I'm working now together with others in a grails project. I have to write some Java-classes. But I need access to an searchable object created with groovy. It seems, that this object has to be placed in the default-package.  My question is:  Is there a way to access this object in the default-package from a Java-class in a named package? 
===LINK===
http://stackoverflow.com/questions/283816/how-to-access-java-classes-in-the-default-package
===KEYWORDS===
groovy access java working package 
===ANSWER===
105
<html><body><p><a href="http://mindprod.com/jgloss/import.html" rel="nofollow noreferrer">You can’t use</a> classes in the default package from a named package.<br>
(<em>Technically</em> you can, as shown in Sharique Abdullah's <a href="http://stackoverflow.com/a/561183/6309">answer</a> through reflection API, <em>but</em> classes from the unnamed namespace are <strong>not in scope</strong> in an <strong>import declaration</strong>)</br></p><p>Prior to J2SE 1.4 you could import classes from the default package using a syntax like this:</p><pre><code>import Unfinished;
</code></pre><p>That's <a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4989710" rel="nofollow noreferrer">no longer allowed</a>. So to access a default package class from within a packaged class requires moving the default package class into a package of its own.</p><p>If you have access to the source generated by groovy, some post-processing is needed to move the file into a dedicated package and add this "package" directive at its beginning.</p><p>Update 2014: <a href="https://bugs.openjdk.java.net/browse/JDK-6975015" rel="nofollow noreferrer">bug 6975015</a>, for JDK7 and JDK8, describe an even <em>stricter</em> prohibition against import from unnamed package.</p><p>The <code>TypeName</code> must be the canonical name of a class type, interface type, enum type, or annotation type.<br>
  The type must be either a member of a <strong>named package</strong>, or a member of a type whose outermost lexically enclosing type is a member of a <strong>named package</strong>, <strong>or a compile-time error occurs</strong>.</br></p></body></html>

===ID===
584cc0203e2ca508e5f072bf
===QUESTION===
java.util.NoSuchElementException - Scanner reading user input
I'm new to using Java, but I have some previous experience with C#. The issue I'm having comes with reading user input from console. I'm running into the "java.util.NoSuchElementException" error with this portion of code: I have two functions that get user input: If I don't call PromptCustomerQty then I don't get this error, which leads me to believe I am doing something wrong with scanner. Below is my full code sample. I appreciate any help.  
===LINK===
http://stackoverflow.com/questions/13042008/java-util-nosuchelementexception-scanner-reading-user-input
===KEYWORDS===
portion functions code java scanner 
===ANSWER===
69
<html><body><p><strong>This has really puzzled me for a while but this is what I found in the end.</strong></p><p>When you call, <code>sc.close()</code> in first method, it not only closes your scanner but closes your <code>System.in</code> input stream as well. You can verify it by printing its status at very top of the second method as :</p><pre><code>    System.out.println(System.in.available());
</code></pre><p>So, now when you re-instantiate, <code>Scanner</code> in second method, it doesn't find any open <code>System.in</code> stream and hence the exception.</p><p>I doubt if there is any way out to reopen <code>System.in</code> because:</p><p><code>public void close() throws IOException --&gt; Closes this input stream and releases any system resources associated with this stream. The general contract of close is that it closes the input stream. A closed stream cannot perform input operations and **cannot be reopened.**</code></p><p>The only good solution for your problem is to initiate the <code>Scanner</code> in your main method, pass that as argument in your two methods, and close it again in your main method e.g.:</p><p><code>main</code> method related code block:</p><pre><code>Scanner scanner = new Scanner(System.in);  

// Ask users for quantities 
PromptCustomerQty(customer, ProductList, scanner );

// Ask user for payment method
PromptCustomerPayment(customer, scanner );

//close the scanner 
scanner.close();
</code></pre><p>Your Methods:</p><pre><code> public static void PromptCustomerQty(Customer customer, 
                             ArrayList&lt;Product&gt; ProductList, Scanner scanner) {

    // no more scanner instantiation
    ...
    // no more scanner close
 }


 public static void PromptCustomerPayment (Customer customer, Scanner sc) {

    // no more scanner instantiation
    ...
    // no more scanner close
 }
</code></pre><p>Hope this gives you some insight about the failure and possible resolution.</p></body></html>

===ID===
584cc0213e2ca508e5f072c0
===QUESTION===
Android update 17 seems incompatible with external Jars
I just allowed my Mac to do an update on its Java installation and now some of my old jars (like  javax.mail  and  apache.commons.httpclient ) are throwing  "class not found"  exceptions at run time! Meaning, they compile fine, but then crash at run time with exceptions that look like this: Do I need to get more recent versions of the jars that have those classes? Or do I need to revert to my previous version of Java? Or is this some totally unrelated problem that I'm just assuming has to do with the Java update  (would be quite a coincidence, all of this worked perfectly prior to the update) ? 
===LINK===
http://stackoverflow.com/questions/10046298/android-update-17-seems-incompatible-with-external-jars
===KEYWORDS===
meaning java crash found throwing 
===ANSWER===
74
<html><body><p>crash at run time with exceptions that look like this:
  <code>Could not find class 'javax.mail.internet.InternetAddress', referenced from method com.my.project.Main.isValidEmailAddress</code></p><p>If you have problems with external jars, then:</p><p>It will automatically be included, as explained on this page: <a href="http://tools.android.com/recent/dealingwithdependenciesinandroidprojects" rel="nofollow">Dealing with dependencies in Android projects</a></p></body></html>

===ID===
584cc0213e2ca508e5f072c1
===QUESTION===
How to get X and Y index of element inside GridLayout?
I am studying a java tutorial and saw that the way to find the x/y indexes of a JButton inside a GridLayout is to traverse a bidimensional array of buttons b which is associated to the layout and checking if b[i][j] == buttonReference . Is there an easier way to get the X/Y indexes of a button? Something like: this  being a GameWindow instance and  ev  the ActionEvent triggered when the user presses the button. In this case it should get: x == 2, y == 1 @GameWindow.java: @JavaSwingApplication.java: 
===LINK===
http://stackoverflow.com/questions/7702697/how-to-get-x-and-y-index-of-element-inside-gridlayout
===KEYWORDS===
case index traverse layout checking 
===ANSWER===
17
<html><body><p>This example shows how to create a grid button that knows its location on the grid. The method <code>getGridButton()</code> shows how to obtain a button reference efficiently based on its grid coordinates, and the action listener shows that the clicked and found buttons are identical.</p><p><img alt="GridButtonPanel" src="https://i.stack.imgur.com/Cm9MP.png"/></p><pre><code>package gui;

import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 * @see http://stackoverflow.com/questions/7702697
 */
public class GridButtonPanel {

    private static final int N = 5;
    private final List&lt;JButton&gt; list = new ArrayList&lt;JButton&gt;();

    private JButton getGridButton(int r, int c) {
        int index = r * N + c;
        return list.get(index);
    }

    private JButton createGridButton(final int row, final int col) {
        final JButton b = new JButton("r" + row + ",c" + col);
        b.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                JButton gb = GridButtonPanel.this.getGridButton(row, col);
                System.out.println("r" + row + ",c" + col
                    + " " + (b == gb)
                    + " " + (b.equals(gb)));
            }
        });
        return b;
    }

    private JPanel createGridPanel() {
        JPanel p = new JPanel(new GridLayout(N, N));
        for (int i = 0; i &lt; N * N; i++) {
            int row = i / N;
            int col = i % N;
            JButton gb = createGridButton(row, col);
            list.add(gb);
            p.add(gb);
        }
        return p;
    }

    private void display() {
        JFrame f = new JFrame("GridButton");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(createGridPanel());
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new GridButtonPanel().display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc0223e2ca508e5f072c2
===QUESTION===
How to add local jar files in maven project?
How do I add local jar files (not yet part of the Maven repository) directly in my project's library sources? 
===LINK===
http://stackoverflow.com/questions/4955635/how-to-add-local-jar-files-in-maven-project
===KEYWORDS===
project part directly 
===ANSWER===
240
<html><body><p>Install the JAR into your local Maven repository as follows:</p><pre><code>mvn install:install-file
   -Dfile=&lt;path-to-file&gt;
   -DgroupId=&lt;group-id&gt;
   -DartifactId=&lt;artifact-id&gt;
   -Dversion=&lt;version&gt;
   -Dpackaging=&lt;packaging&gt;
   -DgeneratePom=true

Where: &lt;path-to-file&gt;  the path to the file to load
   &lt;group-id&gt;      the group that the file should be registered under
   &lt;artifact-id&gt;   the artifact name for the file
   &lt;version&gt;       the version of the file
   &lt;packaging&gt;     the packaging of the file e.g. jar
</code></pre><p><a href="http://maven.apache.org/general.html#importing-jars">Reference</a></p></body></html>

===ID===
584cc0223e2ca508e5f072c3
===QUESTION===
How do I measure time elapsed in Java?
Possible Duplicate: 
 How do I calculate the elapsed time of an event in java?   I want to have something like this: Which types to use in order to accomplish this in Java? 
(Also it is important that for example if the startTime it's 23:00 and endTime 1:00 to get a duration of 2:00.) 
===LINK===
http://stackoverflow.com/questions/1770010/how-do-i-measure-time-elapsed-in-java
===KEYWORDS===
accomplish java calculate event duplicate 
===ANSWER===
419
<html><body><p>Unfortunately, none of the ten answers posted so far are quite right.</p><p>If you are measuring elapsed time, and you want it to be <em>correct</em>, you must use <code>System.nanoTime()</code>.  You cannot use <code>System.currentTimeMillis()</code>, unless you don't mind your result being wrong.</p><p>The purpose of <code>nanoTime</code> is to measure <em>elapsed</em> time, and the purpose of <code>currentTimeMillis</code> is to measure <em>wall-clock</em> time. You can't use the one for the other purpose. The reason is that no computer's clock is perfect; it always drifts and occasionally needs to be corrected.  This correction might either happen manually, or in the case of most machines, there's a process that runs and continually issues small corrections to the system clock ("wall clock"). These tend to happen often. Another such correction happens whenever there is a leap second.</p><p>Since <code>nanoTime</code>'s purpose is to measure elapsed time, it is unaffected by any of these small corrections. It is what you want to use. Any timings currently underway with <code>currentTimeMillis</code> will be off -- possibly even negative.</p><p>You may say, "this doesn't sound like it would ever really matter that much," to which I say, maybe not, but overall, isn't correct code just better than incorrect code?  Besides, <code>nanoTime</code> is shorter to type anyway.</p><p>Previously posted disclaimers about <code>nanoTime</code> usually having only microsecond precision are valid. Also it can take more than a whole microsecond to invoke, depending on circumstances (as can the other one), so don't expect to time very very small intervals correctly.</p></body></html>

===ID===
584cc0233e2ca508e5f072c4
===QUESTION===
What is Double Brace initialization in Java?
What is Double Brace initialization syntax ( {{ ... }} ) in Java? 
===LINK===
http://stackoverflow.com/questions/1958636/what-is-double-brace-initialization-in-java
===KEYWORDS===
java 
===ANSWER===
103
<html><body><p>Double brace initialisation creates an anonymous class derived from the specified class (the <em>outer</em> braces), and provides an initialiser block within that class (the <em>inner</em> braces). e.g.</p><pre><code>new ArrayList&lt;Integer&gt;() {{
   add(1);
   add(2);
}};
</code></pre><p>Note that an effect of using this double brace initialisation is that you're creating anonymous inner classes. The created class has an implicit <code>this</code> pointer to the surrounding outer class. Whilst not normally a problem, it can cause grief in some circumstances e.g. when serialising or garbage collecting, and it's worth being aware of this.</p></body></html>

===ID===
584cc0243e2ca508e5f072c5
===QUESTION===
Is there any way to accept only numeric values in a JTextField?
Is there any way to accept only numeric values in a  JTextField ?  Is there any special method for this? 
===LINK===
http://stackoverflow.com/questions/1313390/is-there-any-way-to-accept-only-numeric-values-in-a-jtextfield
===KEYWORDS===
accept jtextfield 
===ANSWER===
46
<html><body><p>As this question re-appears quite often, I put some more effort in this answer then I would usually do.</p><p>My vote goes to the <code>JFormattedTextField</code>. IMO each Swing developer should have an improved version of that class in his/her toolkit as it allows to validate almost anything you can think of by the correct choice of <code>Format</code>. Examples for which I already used it:</p><p>It also allows for visual feedback when the input is invalid which is for example not the case with the <code>InputVerifier</code>. It still allows to user to input anything, but that value is simply not accepted when not valid and that value never leaves the UI. I think (but again, that is my opinion) that it is better to allow the user to type invalid input that just removing that automatically with e.g. a <code>DocumentFilter</code>. I would suspect a bug when a type a character in a text field and it does not appear.</p><p>Let me illustrate this with some code (quite some code actually). First the small demo application. This application just shows a <code>JFormattedTextField</code> for numbers. Just using another format allows to reuse that component for completely different validations.</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/TL8jA.png"/></p><pre><code>import be.pcl.swing.ImprovedFormattedTextField;

import javax.swing.*;
import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.NumberFormat;

/**
 * See http://stackoverflow.com/q/1313390/1076463
 */
public class FormattedTextFieldDemo {
  public static void main( String[] args ) {
    EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        JFrame testFrame = new JFrame( "FormattedTextFieldDemo" );

        NumberFormat integerNumberInstance = NumberFormat.getIntegerInstance();
        ImprovedFormattedTextField integerFormattedTextField = new ImprovedFormattedTextField( integerNumberInstance, 100 );
        integerFormattedTextField.setColumns( 20 );

        testFrame.add( createButtonPanel( integerFormattedTextField ), BorderLayout.NORTH );

        final JTextArea textArea = new JTextArea(50, 50);
        PropertyChangeListener updateTextAreaListener = new PropertyChangeListener() {
          @Override
          public void propertyChange( PropertyChangeEvent evt ) {
            textArea.append( "New value: " + evt.getNewValue() + "\n" );
          }
        };
        integerFormattedTextField.addPropertyChangeListener( "value", updateTextAreaListener );

        testFrame.add( new JScrollPane( textArea ), BorderLayout.CENTER );

        testFrame.setDefaultCloseOperation( WindowConstants.DISPOSE_ON_CLOSE );
        testFrame.pack();
        testFrame.setVisible( true );
      }
    } );

  }

  private static JPanel createButtonPanel( final JFormattedTextField aTextField ){
    JPanel panel = new JPanel( new BorderLayout(  ) );
    panel.add( aTextField, BorderLayout.WEST );

    Action action = new AbstractAction() {
      {
        aTextField.addPropertyChangeListener( "editValid", new PropertyChangeListener() {
          @Override
          public void propertyChange( PropertyChangeEvent evt ) {
            setEnabled( ( ( Boolean ) evt.getNewValue() ) );
          }
        } );
        putValue( Action.NAME, "Show current value" );
      }
      @Override
      public void actionPerformed( ActionEvent e ) {
        JOptionPane.showMessageDialog( null, "The current value is [" + aTextField.getValue() + "] of class [" + aTextField.getValue().getClass() + "]" );
      }
    };
    panel.add( new JButton( action ), BorderLayout.EAST );
    return panel;
  }
}
</code></pre><p>which just shows an <code>ImprovedFormattedTextField</code> and a <code>JButton</code> which is only enabled when the input is valid (aha, eat that <code>DocumentFilter</code> solution). It also shows a <code>JTextArea</code> in which the value is printed each time a new valid value is encountered. Pressing the button shows the value.</p><p>The code for the <code>ImprovedFormattedTextField</code> can be found below, together with the <code>ParseAllFormat</code> on which it depends</p><pre><code>package be.pcl.swing;

import javax.swing.JFormattedTextField;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyEvent;
import java.text.Format;
import java.text.ParseException;

/**
 * &lt;p&gt;Extension of {@code JFormattedTextField} which solves some of the usability issues&lt;/p&gt;
 */
public class ImprovedFormattedTextField extends JFormattedTextField {

  private static final Color ERROR_BACKGROUND_COLOR = new Color( 255, 215, 215 );
  private static final Color ERROR_FOREGROUND_COLOR = null;

  private Color fBackground, fForeground;

  /**
   * Create a new {@code ImprovedFormattedTextField} instance which will use {@code aFormat} for the
   * validation of the user input.
   *
   * @param aFormat The format. May not be {@code null}
   */
  public ImprovedFormattedTextField( Format aFormat ) {
    //use a ParseAllFormat as we do not want to accept user input which is partially valid
    super( new ParseAllFormat( aFormat ) );
    setFocusLostBehavior( JFormattedTextField.COMMIT_OR_REVERT );
    updateBackgroundOnEachUpdate();
    //improve the caret behavior
    //see also http://tips4java.wordpress.com/2010/02/21/formatted-text-field-tips/
    addFocusListener( new MousePositionCorrectorListener() );
  }

  /**
   * Create a new {@code ImprovedFormattedTextField} instance which will use {@code aFormat} for the
   * validation of the user input. The field will be initialized with {@code aValue}.
   *
   * @param aFormat The format. May not be {@code null}
   * @param aValue  The initial value
   */
  public ImprovedFormattedTextField( Format aFormat, Object aValue ) {
    this( aFormat );
    setValue( aValue );
  }

  private void updateBackgroundOnEachUpdate() {
    getDocument().addDocumentListener( new DocumentListener() {
      @Override
      public void insertUpdate( DocumentEvent e ) {
        updateBackground();
      }

      @Override
      public void removeUpdate( DocumentEvent e ) {
        updateBackground();
      }

      @Override
      public void changedUpdate( DocumentEvent e ) {
        updateBackground();
      }
    } );
  }

  /**
   * Update the background color depending on the valid state of the current input. This provides
   * visual feedback to the user
   */
  private void updateBackground() {
    boolean valid = validContent();
    if ( ERROR_BACKGROUND_COLOR != null ) {
      setBackground( valid ? fBackground : ERROR_BACKGROUND_COLOR );
    }
    if ( ERROR_FOREGROUND_COLOR != null ) {
      setForeground( valid ? fForeground : ERROR_FOREGROUND_COLOR );
    }
  }

  @Override
  public void updateUI() {
    super.updateUI();
    fBackground = getBackground();
    fForeground = getForeground();
  }

  private boolean validContent() {
    AbstractFormatter formatter = getFormatter();
    if ( formatter != null ) {
      try {
        formatter.stringToValue( getText() );
        return true;
      } catch ( ParseException e ) {
        return false;
      }
    }
    return true;
  }

  @Override
  public void setValue( Object value ) {
    boolean validValue = true;
    //before setting the value, parse it by using the format
    try {
      AbstractFormatter formatter = getFormatter();
      if ( formatter != null ) {
        formatter.valueToString( value );
      }
    } catch ( ParseException e ) {
      validValue = false;
      updateBackground();
    }
    //only set the value when valid
    if ( validValue ) {
      int old_caret_position = getCaretPosition();
      super.setValue( value );
      setCaretPosition( Math.min( old_caret_position, getText().length() ) );
    }
  }

  @Override
  protected boolean processKeyBinding( KeyStroke ks, KeyEvent e, int condition, boolean pressed ) {
    //do not let the formatted text field consume the enters. This allows to trigger an OK button by
    //pressing enter from within the formatted text field
    if ( validContent() ) {
      return super.processKeyBinding( ks, e,
                                      condition, pressed ) &amp;&amp; ks != KeyStroke.getKeyStroke( KeyEvent.VK_ENTER, 0 );
    }
    else {
      return super.processKeyBinding( ks, e,
                                      condition, pressed );
    }
  }

  private static class MousePositionCorrectorListener extends FocusAdapter {
    @Override
    public void focusGained( FocusEvent e ) {
      /* After a formatted text field gains focus, it replaces its text with its
       * current value, formatted appropriately of course. It does this after
       * any focus listeners are notified. We want to make sure that the caret
       * is placed in the correct position rather than the dumb default that is
        * before the 1st character ! */
      final JTextField field = ( JTextField ) e.getSource();
      final int dot = field.getCaret().getDot();
      final int mark = field.getCaret().getMark();
      if ( field.isEnabled() &amp;&amp; field.isEditable() ) {
        SwingUtilities.invokeLater( new Runnable() {
          @Override
          public void run() {
            // Only set the caret if the textfield hasn't got a selection on it
            if ( dot == mark ) {
              field.getCaret().setDot( dot );
            }
          }
        } );
      }
    }
  }
}
</code></pre><p>The <code>ParseAllFormat</code> class:</p><pre><code>package be.pcl.swing;

import java.text.AttributedCharacterIterator;
import java.text.FieldPosition;
import java.text.Format;
import java.text.ParseException;
import java.text.ParsePosition;

/**
 * &lt;p&gt;Decorator for a {@link Format Format} which only accepts values which can be completely parsed
 * by the delegate format. If the value can only be partially parsed, the decorator will refuse to
 * parse the value.&lt;/p&gt;
 */
public class ParseAllFormat extends Format {
  private final Format fDelegate;

  /**
   * Decorate &lt;code&gt;aDelegate&lt;/code&gt; to make sure if parser everything or nothing
   *
   * @param aDelegate The delegate format
   */
  public ParseAllFormat( Format aDelegate ) {
    fDelegate = aDelegate;
  }

  @Override
  public StringBuffer format( Object obj, StringBuffer toAppendTo, FieldPosition pos ) {
    return fDelegate.format( obj, toAppendTo, pos );
  }

  @Override
  public AttributedCharacterIterator formatToCharacterIterator( Object obj ) {
    return fDelegate.formatToCharacterIterator( obj );
  }

  @Override
  public Object parseObject( String source, ParsePosition pos ) {
    int initialIndex = pos.getIndex();
    Object result = fDelegate.parseObject( source, pos );
    if ( result != null &amp;&amp; pos.getIndex() &lt; source.length() ) {
      int errorIndex = pos.getIndex();
      pos.setIndex( initialIndex );
      pos.setErrorIndex( errorIndex );
      return null;
    }
    return result;
  }

  @Override
  public Object parseObject( String source ) throws ParseException {
    //no need to delegate the call, super will call the parseObject( source, pos ) method
    return super.parseObject( source );
  }
}
</code></pre><p>Possible improvements:</p></body></html>

===ID===
584cc0243e2ca508e5f072c6
===QUESTION===
Bringing JFileChooser on top of all windows
I seem to have a problem with my very simple implementation of a file chooser dialogue that requires me to minimize Netbeans each time in order to get to it, and it gets pretty frustrating specially now with testing. I have seen a few solutions online including  SO  yet none seem to do the trick, while some other seem very lengthy and complicated for my current level.   Some of my try's include using; Is there a particular attribute/method I can set in order to solve the problem? 
===LINK===
http://stackoverflow.com/questions/5129294/bringing-jfilechooser-on-top-of-all-windows
===KEYWORDS===
lengthy set windows top testing 
===ANSWER===
9
<html><body><p>The API for <a href="http://download.oracle.com/javase/6/docs/api/javax/swing/JFileChooser.html#showOpenDialog%28java.awt.Component%29"><code>showOpenDialog()</code></a> refers to <a href="http://download.oracle.com/javase/6/docs/api/javax/swing/JFileChooser.html#showDialog%28java.awt.Component,%20java.lang.String%29"><code>showDialog()</code></a>, which says, "If the parent is <code>null</code>, then the dialog depends on no visible window, and it's placed in a look-and-feel-dependent position such as the center of the screen."</p><p>The example below positions the chooser in the center of the screen on my L&amp;F. You might see how it compares to yours.</p><p>package gui;</p><pre><code>import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.KeyStroke;

/**
 * @see http://stackoverflow.com/questions/8507521
 * @see http://stackoverflow.com/questions/5129294
 */
public class ImageApp extends JPanel {

    private static final int MASK =
        Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();
    private JFileChooser chooser = new JFileChooser();
    private Action openAction = new ImageOpenAction("Open");
    private Action clearAction = new ClearAction("Clear");
    private JPopupMenu popup = new JPopupMenu();
    private BufferedImage image;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new ImageApp().create();
            }
        });
    }

    public void create() {
        JFrame f = new JFrame();
        f.setTitle("Title");
        f.add(new JScrollPane(this), BorderLayout.CENTER);
        JMenuBar menuBar = new JMenuBar();
        JMenu menu = new JMenu("File");
        menu.setMnemonic('F');
        menu.add(new JMenuItem(openAction));
        menu.add(new JMenuItem(clearAction));
        menuBar.add(menu);
        f.setJMenuBar(menuBar);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.pack();
        f.setSize(new Dimension(640, 480));
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public ImageApp() {
        this.setComponentPopupMenu(popup);
        popup.add("Popup Menu");
        popup.add(new JMenuItem(openAction));
        popup.add(new JMenuItem(clearAction));
    }

    @Override
    public Dimension getPreferredSize() {
        if (image == null) {
            return new Dimension();
        } else {
            return new Dimension(image.getWidth(), image.getHeight());
        }
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        g.drawImage(image, 0, 0, null);
    }

    private class ClearAction extends AbstractAction {

        public ClearAction(String name) {
            super(name);
            this.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_C);
            this.putValue(Action.ACCELERATOR_KEY,
                KeyStroke.getKeyStroke(KeyEvent.VK_C, MASK));
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            image = null;
            revalidate();
            repaint();
        }
    }

    private class ImageOpenAction extends AbstractAction {

        public ImageOpenAction(String name) {
            super(name);
            this.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_O);
            this.putValue(Action.ACCELERATOR_KEY,
                KeyStroke.getKeyStroke(KeyEvent.VK_O, MASK));
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            int returnVal = chooser.showOpenDialog(chooser);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File f = chooser.getSelectedFile();
                try {
                    image = ImageIO.read(f);
                    revalidate();
                    repaint();
                } catch (IOException ex) {
                    ex.printStackTrace(System.err);
                }
            }
        }
    }
}
</code></pre></body></html>

===ID===
584cc0243e2ca508e5f072c7
===QUESTION===
How do I get the CellRow when there is an ItemEvent in the JComboBox within the cell
I have a JTable with a column containing a JComboBox. I have an ItemListener attached to the JComboBox which acts upon any changes. However, ItemListener does not have a method for obtaining the Row that the changed ComboBox is within. I need to Row number in order to act upon another column in the same row when the ComboBox has a change. Any help would be appreciated. This is my Short and Concise code. What I am trying to accomplish, is obtaining the Table Row of the ComboBox when a the itemlistener picks up a change. 
===LINK===
http://stackoverflow.com/questions/7350445/how-do-i-get-the-cellrow-when-there-is-an-itemevent-in-the-jcombobox-within-the
===KEYWORDS===
cell short itemevent appreciated column 
===ANSWER===
9
<html><body><p>It sounds like you are <a href="http://download.oracle.com/javase/tutorial/uiswing/components/table.html#combobox" rel="nofollow noreferrer"><em>Using a Combo Box as an Editor</em></a>. If so, the <code>TableCellEditor</code> method, <a href="http://download.oracle.com/javase/6/docs/api/javax/swing/table/TableCellEditor.html#getTableCellEditorComponent%28javax.swing.JTable,%20java.lang.Object,%20boolean,%20int,%20int%29" rel="nofollow noreferrer"><code>getTableCellEditorComponent()</code></a>, includes the <code>row</code> as a parameter. There's a related example <a href="https://sites.google.com/site/drjohnbmatthews/table" rel="nofollow noreferrer">here</a>.</p><p>Addendum: To change a value in the same row you've edited, just have the model return the correct value for the "other column" based on the related values in that row. Alternatively, update the related value in your model's <code>setValueAt()</code> method before firing the update, as shown in the <a href="https://sites.google.com/site/drjohnbmatthews/table" rel="nofollow noreferrer">example</a>.</p><p>Addendum: Based on your example, the code below overrides the model's <code>getValueAt()</code> method to keep the dependent column synchronized with the item column.</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/t1zSI.png"/></p><pre><code>import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.IOException;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/** @see http://stackoverflow.com/questions/7350445 */
public class DependentColumn extends JFrame {

    private static final int DEPENDENT_COL = 1;
    private static final int ITEM_COL = 2;
    private static final String[] columnNames = {"Col 1", "Col 2", "Col 3"};

    public static void main(String args[]) throws IOException {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                DependentColumn dc = new DependentColumn();
            }
        });
    }

    public DependentColumn() {
        this.setTitle("Example");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        //Create Model &amp; Table
        DefaultTableModel model = new DefaultTableModel(columnNames, 0) {

            @Override
            public Object getValueAt(int row, int col) {
                if (col == DEPENDENT_COL) {
                    return "C2:" + this.getValueAt(row, ITEM_COL);
                } else {
                    return super.getValueAt(row, col);
                }
            }
        };
        for (int i = 0; i &lt; 16; i++) {
            model.addRow(new Object[]{"C1", "C2", "Item1"});
        }
        JTable table = new JTable(model);
        table.setPreferredScrollableViewportSize(new Dimension(320, 120));

        //Create ComboBox
        String[] items = {"Item1", "Item2", "Item3"};
        JComboBox combo = new JComboBox(items);
        TableColumn col = table.getColumnModel().getColumn(ITEM_COL);
        col.setCellEditor(new DefaultCellEditor(combo));
        combo.addItemListener(new ItemListener() {

            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    System.out.println(e.getItem() + " selected");
                }
            }
        });

        this.add(new JScrollPane(table));
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
}
</code></pre></body></html>

===ID===
584cc0253e2ca508e5f072c8
===QUESTION===
Difference between wait() and sleep()
What is the difference between a  wait()  and  sleep()  in Threads? Is my understanding that a  wait() -ing Thread is still in running mode and uses CPU cycles but a  sleep() -ing does not consume any CPU cycles correct? Why do we have  both   wait()  and  sleep() : how does their implementation vary at a lower level? 
===LINK===
http://stackoverflow.com/questions/1036754/difference-between-wait-and-sleep
===KEYWORDS===
difference consume understanding threads sleep 
===ANSWER===
542
<html><body><p>A <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#wait%28%29" rel="nofollow noreferrer"><code>wait</code></a> can be "woken up" by another thread calling <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notify%28%29" rel="nofollow noreferrer"><code>notify</code></a> on the monitor which is being waited on whereas a <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html#sleep%28long%29" rel="nofollow noreferrer"><code>sleep</code></a> cannot. Also a <code>wait</code> (and <code>notify</code>) must happen in a block <code>synchronized</code> on the monitor object whereas <code>sleep</code> does not:</p><pre><code>Object mon = ...;
synchronized (mon) {
    mon.wait();
} 
</code></pre><p>At this point the currently executing thread waits <em>and releases the monitor</em>. Another thread may do</p><pre><code>synchronized (mon) { mon.notify(); }
</code></pre><p>(On the same <code>mon</code> object) and the first thread (assuming it is the only thread waiting on the monitor) will wake up. </p><p>You can also call <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html#notifyAll%28%29" rel="nofollow noreferrer"><code>notifyAll</code></a> if more than one thread is waiting on the monitor - this will wake <em>all of them up</em>. However, only one of the threads will be able to grab the monitor (remember that the <code>wait</code> is in a <code>synchronized</code> block) and carry on - the others will then be blocked until they can acquire the monitor's lock.</p><p>Another point is that you call <code>wait</code> on <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Object.html" rel="nofollow noreferrer"><code>Object</code></a> itself (i.e. you wait on an object's monitor) whereas you call <code>sleep</code> on <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/Thread.html" rel="nofollow noreferrer"><code>Thread</code></a>.</p><p>Yet another point is that you can get <em>spurious wakeups</em> from <code>wait</code> (i.e. the thread which is waiting resumes for no apparent reason). You should <strong>always <code>wait</code> whilst spinning on some condition</strong> as follows:  </p><pre><code>synchronized {
    while (!condition) { mon.wait(); }
}
</code></pre></body></html>

===ID===
584cc0263e2ca508e5f072c9
===QUESTION===
Why is the Java main method static?
The method signature of a Java  main()  method is: Is there a reason for this method to be static? 
===LINK===
http://stackoverflow.com/questions/146576/why-is-the-java-main-method-static
===KEYWORDS===
reason static method 
===ANSWER===
243
<html><body><p>The method is static because otherwise there would be ambiguity: which constructor should be called?  Especially if your class looks like this:</p><pre><code>public class JavaClass{
  protected JavaClass(int x){}
  public void main(String[] args){
  }
}
</code></pre><p>Should the JVM call <strong><em>new JavaClass</em></strong>(int)?  What should it pass for x?</p><p>If not, should the JVM instantiate <strong><em>JavaClass</em></strong> without running any constructor method?  I think it shouldn't, because that will special-case your entire class - sometimes you have an instance that hasn't been initialized, and you have to check for it in every method that could be called.</p><p>There are just too many edge cases and ambiguities for it to make sense for the JVM to have to instantiate a class before the entry point is called.  That's why <strong>main</strong> is static.</p><p>I have no idea why <strong>main</strong> is always marked <strong>public</strong> though.</p></body></html>

===ID===
584cc0263e2ca508e5f072ca
===QUESTION===
:: (double colon) operator in Java 8
I was exploring the Java 8 source and found this particular part of code very surprising: Is  Math::max  something like a method pointer? How does a normal  static  method get converted to  IntBinaryOperator ? 
===LINK===
http://stackoverflow.com/questions/20001427/double-colon-operator-in-java-8
===KEYWORDS===
exploring code surprising intbinaryoperator max 
===ANSWER===
498
<html><body><p>Usually, one would call the <code>reduce</code> method using <code>Math.max(int, int)</code> as follows:</p><pre><code>reduce(new IntBinaryOperator() {
    int applyAsInt(int left, int right) {
        return Math.max(left, right);
    }
});
</code></pre><p>That requires a lot of syntax for just calling <code>Math.max</code>. That's where lambda expressions come into play. Since Java 8 it is allowed to do the same thing in a much shorter way:</p><pre><code>reduce( (int left, int right) -&gt; Math.max(left, right) );
</code></pre><p>How does this work? The java compiler "detects", that you want to implement a method that accepts two <code>int</code>s and returns one <code>int</code>. This is equivalent to the formal parameters of the one and only method of interface <code>IntBinaryOperator</code> (the parameter of method <code>reduce</code> you want to call). So the compiler does the rest for you - it just assumes you want to implement <code>IntBinaryOperator</code>.</p><p>But as <code>Math.max(int, int)</code> itself fulfills the formal requirements of <code>IntBinaryOperator</code>, it can be used directly. Because Java 7 does not have any syntax that allows a method itself to be passed as an argument (you can only pass method results, but never method references), the <code>::</code> syntax was introduced in Java 8 to reference methods:</p><pre><code>reduce(Math::max);
</code></pre><p>Note that this will be interpreted by the compiler, not by the JVM at runtime! Although it produces different bytecodes for all three code snippets, they are semantically equal, so the last two can be considered to be short (and probably more efficient) versions of the <code>IntBinaryOperator</code> implementation above!</p><p>(See also <a href="http://cr.openjdk.java.net/~briangoetz/lambda/lambda-translation.html">Translation of Lambda Expressions</a>)</p></body></html>

===ID===
584cc0273e2ca508e5f072cb
===QUESTION===
Resolving javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed Error?
I am getting this error detailed message sun.security.validator.ValidatorException: PKIX path
  building failed: 
  sun.security.provider.certpath.SunCertPathBuilderException: unable to
  find valid certification path  to requested target cause javax.net.ssl.SSLHandshakeException:
  sun.security.validator.ValidatorException: PKIX path   building
  failed: sun.security.provider.certpath.SunCertPathBuilderException:
  unable to find valid certification path to requested target i am using tomcat 6 as webserver. i have two https webbapplication installed on different tomcat on differte port but on same machine. Say  App1(port 8443)  and 
  App2(port 443) .  App1  connects to  App2  .When  App1  connects to  App2 i  get above error. I know this is very common error so came across many solutions on different
 forums and sites. I have below entry in  server.xml  of both tomcat i.e Every site says the same reason that certificate given by app2 is not in the trusted store of app1 jvm. This seems to be true also when i tired to hit the same
URL in IE browser, it works(with warming, There is a problem with this web site's security certificate. here i say continue to this website) But when same url
is hit by java client(in my case). So i get the above error. So to put it in trustore i tried  these tree options i.e Option1 Option2 
Setting below in environment variable Option3 
Setting below in environment variable But nothing worked  . What at last worked    is executing the java approach suggested in  How to handle invalid SSL certificates with Apache HttpClient?  by Pascal Thivent i.e 
executing the program InstallCert.  But this approach is fine for devbox setup but i can not use it at production environment.   I am wondering
why three approaches mentioned above did not work when  i have mentioned same values in  server.xml  of  app2  server and same values in truststore by setting System.setProperty("javax.net.ssl.trustStore", "C:/.keystore") and System.setProperty("javax.net.ssl.trustStorePassword", "changeit"); in  app1  program. For more information this is how i am making the connection 
===LINK===
http://stackoverflow.com/questions/9619030/resolving-javax-net-ssl-sslhandshakeexception-sun-security-validator-validatore
===KEYWORDS===
tired truststorepassword site system executing 
===ANSWER===
203
<html><body><p>You need to add the certificate for <strong>App2</strong> to the keystore file of the used JVM located at <code>%JAVA_HOME%\lib\security\cacerts</code>.</p><p>First you can check if your certificate is already in the keystore by running the following command:
<code>keytool -list -keystore "%JAVA_HOME%/jre/lib/security/cacerts"</code> (you don't need to provide a password)</p><p>If your certificate is missing you can get it by downloading it with your browser and add it to the keystore with the following command:</p><p><code>keytool -import -noprompt -trustcacerts -alias &lt;AliasName&gt; -file   &lt;certificate&gt; -keystore &lt;KeystoreFile&gt; -storepass &lt;Password&gt;</code></p><p>Afer import you can run the first command again to check if your certificate was added.</p><p>Sun/Oracle information can be found <a href="http://docs.oracle.com/javase/tutorial/security/toolsign/rstep2.html">here</a>.</p><p>Hope this helped! Have Fun!</p></body></html>

===ID===
584cc0273e2ca508e5f072cc
===QUESTION===
How do I get a platform-dependent new line character?
How do I get a platform-dependent newline in Java? I can’t use  "\n"  everywhere. 
===LINK===
http://stackoverflow.com/questions/207947/how-do-i-get-a-platform-dependent-new-line-character
===KEYWORDS===
dependent platform java 
===ANSWER===
297
<html><body><p>In addition to the line.separator property, if you are using java 1.5 or later and the <strong>String.format</strong> (or other <strong>formatting</strong> methods) you can use <code>%n</code> as in</p><pre><code>Calendar c = ...;
String s = String.format("Duke's Birthday: %1$tm %1$te,%1$tY%n", c); 
//Note `%n` at end of line                                  ^^

String s2 = String.format("Use %%n as a platform independent newline.%n"); 
//         %% becomes %        ^^
//                                        and `%n` becomes newline   ^^
</code></pre><p>See the <a href="http://docs.oracle.com/javase/8/docs/api/java/util/Formatter.html" rel="nofollow noreferrer">Java 1.8 API for Formatter</a> for more details.</p></body></html>

===ID===
584cc0283e2ca508e5f072cd
===QUESTION===
What's the difference between Thread start() and Runnable run()
Say we have these two Runnables: Then what's the difference between this: And this: 
===LINK===
http://stackoverflow.com/questions/8579657/whats-the-difference-between-thread-start-and-runnable-run
===KEYWORDS===
difference runnables 
===ANSWER===
171
<html><body><p><strong>First example:</strong> No multiple threads. Both execute in single (existing) thread. No thread creation.</p><pre><code>R1 r1 = new R1();
R2 r2 = new R2();
</code></pre><p><code>r1</code> and <code>r2</code> are just two different objects of the class that implements the <code>Runnable</code> interfaces which have that <code>run()</code> method.  When you call <code>r1.run()</code> you are executing it in the current thread.</p><p><strong>Second example:</strong> Two separate threads.</p><pre><code>Thread t1 = new Thread(r1);
Thread t2 = new Thread(r2);
</code></pre><p><code>t1</code> and <code>t2</code> are the objects of the class <code>Thread</code>.  When you call <code>t1.start()</code>, it starts a new thread and calls the <code>run()</code> method of <code>r1</code> internally to execute it within that new thread.</p></body></html>

===ID===
584cc0283e2ca508e5f072ce
===QUESTION===
How to unescape a Java string literal in Java?
I'm processing some Java source code using Java. I'm extracting the string literals and feeding them to a function taking a String. The problem is that I need to pass the unescaped version of the String to the function (ie. this means converting  \n  to a newline, and  \\  to a single  \ , etc). Is there a function inside the Java API that does this? If not, can I obtain such functionality from some library? Obviously the Java compiler has to do this conversion. PS - In case anyone wants to know: I'm trying to unobfuscate string literals in decompiled obfuscated Java files 
===LINK===
http://stackoverflow.com/questions/3537706/how-to-unescape-a-java-string-literal-in-java
===KEYWORDS===
function case conversion feeding java 
===ANSWER===
71
<html><body><p><strong>EDIT:</strong> You can <strong><a href="http://training.perl.com/scripts/tchrist-unicode-charclasses__alpha.java">download the full source</a></strong> for the function I discuss below. I also discuss it in more detail in <a href="http://stackoverflow.com/questions/4304928/unicode-equivalents-for-w-and-b-in-java-regular-expressions/4307261#4307261">this answer</a>.</p><p>The <code>org.apache.commons.lang.StringEscapeUtils.unescapeJava()</code> given here as “the answer” is really very little help at all.</p><p>Like many of the other points, their embarrassing ignorance about the names of code points  <code>U+2F</code> and <code>U+5C</code> instills no confidence in them whatsoever. For the record:</p><pre><code>  /  47    002F  SOLIDUS
        = slash, virgule
        x (latin letter dental click - 01C0)
        x (combining long solidus overlay - 0338)
        x (fraction slash - 2044)
        x (division slash - 2215)
 \  92    005C  REVERSE SOLIDUS
        = backslash
        x (combining reverse solidus overlay - 20E5)
        x (set minus - 2216)
</code></pre><p>So this morning I <em>finally</em> got fed up with not being able to read in strings with embedded escapes in them.  I needed it for writing the test suite for a larger and more intersting project: transparently converting Java’s <strong>indefensibly Unicode-ignorant regular expressions</strong> into versions where you can use all of <code>\w</code>, <code>\W</code>, <code>\s</code>, <code>\S</code>, <code>\v</code>, <code>\V</code>, <code>\h</code>, <code>\H</code>, <code>\d</code>, <code>\D</code>, <code>\b</code>, <code>\B</code>, <code>\X</code>, and <code>\R</code> in your patterns and have them actually work properly with Unicode. All I do is rewrite the pattern string; it still compiles with the standard <code>java.util.regex.Pattern.compile()</code>  function, so everything works as expected. The string unescaper intentionally passes any <code>\b</code>’s through untouched, in case you call it before you call the converter function to make Java regexes Unicode-aware, since that has to deal with <code>\b</code> in the boundary sense.</p><p>Anyway, here's the string unescaper, which although the less interesting of the pair, does solve the OP’s question without all the irritations of the Apache code. It could handle a bit of tightening in a couple places, but I quickly hacked it out over a few hours before lunch just to get it up and running to help drive the test suite.  The other function is a lot more work: <em>that</em> one took me all day yesterday, darn it.</p><pre><code>/*
 *
 * unescape_perl_string()
 *
 *      Tom Christiansen &lt;tchrist@perl.com&gt;
 *      Sun Nov 28 12:55:24 MST 2010
 *
 * It's completely ridiculous that there's no standard
 * unescape_java_string function.  Since I have to do the
 * damn thing myself, I might as well make it halfway useful
 * by supporting things Java was too stupid to consider in
 * strings:
 * 
 *   =&gt; "?" items  are additions to Java string escapes
 *                 but normal in Java regexes
 *
 *   =&gt; "!" items  are also additions to Java regex escapes
 *   
 * Standard singletons: ?\a ?\e \f \n \r \t
 * 
 *      NB: \b is unsupported as backspace so it can pass-through
 *          to the regex translator untouched; I refuse to make anyone
 *          doublebackslash it as doublebackslashing is a Java idiocy
 *          I desperately wish would die out.  There are plenty of
 *          other ways to write it:
 *
 *              \cH, \12, \012, \x08 \x{8}, \u0008, \U00000008
 *
 * Octal escapes: \0 \0N \0NN \N \NN \NNN
 *    Can range up to !\777 not \377
 *    
 *      TODO: add !\o{NNNNN}
 *          last Unicode is 4177777
 *          maxint is 37777777777
 *
 * Control chars: ?\cX
 *      Means: ord(X) ^ ord('@')
 *
 * Old hex escapes: \xXX
 *      unbraced must be 2 xdigits
 *
 * Perl hex escapes: !\x{XXX} braced may be 1-8 xdigits
 *       NB: proper Unicode never needs more than 6, as highest
 *           valid codepoint is 0x10FFFF, not maxint 0xFFFFFFFF
 *
 * Lame Java escape: \[IDIOT JAVA PREPROCESSOR]uXXXX must be
 *                   exactly 4 xdigits;
 *
 *       I can't write XXXX in this comment where it belongs
 *       because the damned Java Preprocessor can't mind its
 *       own business.  Idiots!
 *
 * Lame Python escape: !\UXXXXXXXX must be exactly 8 xdigits
 * 
 * TODO: Perl translation escapes: \Q \U \L \E \[IDIOT JAVA PREPROCESSOR]u \l
 *       These are not so important to cover if you're passing the
 *       result to Pattern.compile(), since it handles them for you
 *       further downstream.  Hm, what about \[IDIOT JAVA PREPROCESSOR]u?
 *
 */

public final static
String unescape_perl_string(String oldstr) {

    /*
     * In contrast to fixing Java's broken regex charclasses,
     * this one need be no bigger, as unescaping shrinks the string
     * here, where in the other one, it grows it.
     */

    StringBuffer newstr = new StringBuffer(oldstr.length());

    boolean saw_backslash = false;

    for (int i = 0; i &lt; oldstr.length(); i++) {
        int cp = oldstr.codePointAt(i);
        if (oldstr.codePointAt(i) &gt; Character.MAX_VALUE) {
            i++; /****WE HATES UTF-16! WE HATES IT FOREVERSES!!!****/
        }

        if (!saw_backslash) {
            if (cp == '\\') {
                saw_backslash = true;
            } else {
                newstr.append(Character.toChars(cp));
            }
            continue; /* switch */
        }

        if (cp == '\\') {
            saw_backslash = false;
            newstr.append('\\');
            newstr.append('\\');
            continue; /* switch */
        }

        switch (cp) {

            case 'r':  newstr.append('\r');
                       break; /* switch */

            case 'n':  newstr.append('\n');
                       break; /* switch */

            case 'f':  newstr.append('\f');
                       break; /* switch */

            /* PASS a \b THROUGH!! */
            case 'b':  newstr.append("\\b");
                       break; /* switch */

            case 't':  newstr.append('\t');
                       break; /* switch */

            case 'a':  newstr.append('\007');
                       break; /* switch */

            case 'e':  newstr.append('\033');
                       break; /* switch */

            /*
             * A "control" character is what you get when you xor its
             * codepoint with '@'==64.  This only makes sense for ASCII,
             * and may not yield a "control" character after all.
             *
             * Strange but true: "\c{" is ";", "\c}" is "=", etc.
             */
            case 'c':   {
                if (++i == oldstr.length()) { die("trailing \\c"); }
                cp = oldstr.codePointAt(i);
                /*
                 * don't need to grok surrogates, as next line blows them up
                 */
                if (cp &gt; 0x7f) { die("expected ASCII after \\c"); }
                newstr.append(Character.toChars(cp ^ 64));
                break; /* switch */
            }

            case '8':
            case '9': die("illegal octal digit");
                      /* NOTREACHED */

    /*
     * may be 0 to 2 octal digits following this one
     * so back up one for fallthrough to next case;
     * unread this digit and fall through to next case.
     */
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7': --i;
                      /* FALLTHROUGH */

            /*
             * Can have 0, 1, or 2 octal digits following a 0
             * this permits larger values than octal 377, up to
             * octal 777.
             */
            case '0': {
                if (i+1 == oldstr.length()) {
                    /* found \0 at end of string */
                    newstr.append(Character.toChars(0));
                    break; /* switch */
                }
                i++;
                int digits = 0;
                int j;
                for (j = 0; j &lt;= 2; j++) {
                    if (i+j == oldstr.length()) {
                        break; /* for */
                    }
                    /* safe because will unread surrogate */
                    int ch = oldstr.charAt(i+j);
                    if (ch &lt; '0' || ch &gt; '7') {
                        break; /* for */
                    }
                    digits++;
                }
                if (digits == 0) {
                    --i;
                    newstr.append('\0');
                    break; /* switch */
                }
                int value = 0;
                try {
                    value = Integer.parseInt(
                                oldstr.substring(i, i+digits), 8);
                } catch (NumberFormatException nfe) {
                    die("invalid octal value for \\0 escape");
                }
                newstr.append(Character.toChars(value));
                i += digits-1;
                break; /* switch */
            } /* end case '0' */

            case 'x':  {
                if (i+2 &gt; oldstr.length()) {
                    die("string too short for \\x escape");
                }
                i++;
                boolean saw_brace = false;
                if (oldstr.charAt(i) == '{') {
                        /* ^^^^^^ ok to ignore surrogates here */
                    i++;
                    saw_brace = true;
                }
                int j;
                for (j = 0; j &lt; 8; j++) {

                    if (!saw_brace &amp;&amp; j == 2) {
                        break;  /* for */
                    }

                    /*
                     * ASCII test also catches surrogates
                     */
                    int ch = oldstr.charAt(i+j);
                    if (ch &gt; 127) {
                        die("illegal non-ASCII hex digit in \\x escape");
                    }

                    if (saw_brace &amp;&amp; ch == '}') { break; /* for */ }

                    if (! ( (ch &gt;= '0' &amp;&amp; ch &lt;= '9')
                                ||
                            (ch &gt;= 'a' &amp;&amp; ch &lt;= 'f')
                                ||
                            (ch &gt;= 'A' &amp;&amp; ch &lt;= 'F')
                          )
                       )
                    {
                        die(String.format(
                            "illegal hex digit #%d '%c' in \\x", ch, ch));
                    }

                }
                if (j == 0) { die("empty braces in \\x{} escape"); }
                int value = 0;
                try {
                    value = Integer.parseInt(oldstr.substring(i, i+j), 16);
                } catch (NumberFormatException nfe) {
                    die("invalid hex value for \\x escape");
                }
                newstr.append(Character.toChars(value));
                if (saw_brace) { j++; }
                i += j-1;
                break; /* switch */
            }

            case 'u': {
                if (i+4 &gt; oldstr.length()) {
                    die("string too short for \\u escape");
                }
                i++;
                int j;
                for (j = 0; j &lt; 4; j++) {
                    /* this also handles the surrogate issue */
                    if (oldstr.charAt(i+j) &gt; 127) {
                        die("illegal non-ASCII hex digit in \\u escape");
                    }
                }
                int value = 0;
                try {
                    value = Integer.parseInt( oldstr.substring(i, i+j), 16);
                } catch (NumberFormatException nfe) {
                    die("invalid hex value for \\u escape");
                }
                newstr.append(Character.toChars(value));
                i += j-1;
                break; /* switch */
            }

            case 'U': {
                if (i+8 &gt; oldstr.length()) {
                    die("string too short for \\U escape");
                }
                i++;
                int j;
                for (j = 0; j &lt; 8; j++) {
                    /* this also handles the surrogate issue */
                    if (oldstr.charAt(i+j) &gt; 127) {
                        die("illegal non-ASCII hex digit in \\U escape");
                    }
                }
                int value = 0;
                try {
                    value = Integer.parseInt(oldstr.substring(i, i+j), 16);
                } catch (NumberFormatException nfe) {
                    die("invalid hex value for \\U escape");
                }
                newstr.append(Character.toChars(value));
                i += j-1;
                break; /* switch */
            }

            default:   newstr.append('\\');
                       newstr.append(Character.toChars(cp));
           /*
            * say(String.format(
            *       "DEFAULT unrecognized escape %c passed through",
            *       cp));
            */
                       break; /* switch */

        }
        saw_backslash = false;
    }

    /* weird to leave one at the end */
    if (saw_backslash) {
        newstr.append('\\');
    }

    return newstr.toString();
}

/*
 * Return a string "U+XX.XXX.XXXX" etc, where each XX set is the
 * xdigits of the logical Unicode code point. No bloody brain-damaged
 * UTF-16 surrogate crap, just true logical characters.
 */
 public final static
 String uniplus(String s) {
     if (s.length() == 0) {
         return "";
     }
     /* This is just the minimum; sb will grow as needed. */
     StringBuffer sb = new StringBuffer(2 + 3 * s.length());
     sb.append("U+");
     for (int i = 0; i &lt; s.length(); i++) {
         sb.append(String.format("%X", s.codePointAt(i)));
         if (s.codePointAt(i) &gt; Character.MAX_VALUE) {
             i++; /****WE HATES UTF-16! WE HATES IT FOREVERSES!!!****/
         }
         if (i+1 &lt; s.length()) {
             sb.append(".");
         }
     }
     return sb.toString();
 }

private static final
void die(String foa) {
    throw new IllegalArgumentException(foa);
}

private static final
void say(String what) {
    System.out.println(what);
}
</code></pre><p>As anybody can plainly see from the Java code above, I'm really a C programmer — Java is <em>anything</em> but my favorite language. I’m afraid that I really do have to side with <a href="http://www.youtube.com/watch?v=5kj5ApnhPAE">Rob Pike in his famous <em>public static void</em> talk</a> on this one.</p><p>’Nuff said.</p><p>Anyway, it’s only a quick morning’s hackery, but if it helps others, you’re welcome to it — no strings attached. If you improve it, I’d love for you to mail me your enhancements, but you certainly don’t have to.</p></body></html>

===ID===
584cc0293e2ca508e5f072cf
===QUESTION===
What is the purpose of the expression “new String(…)” in Java?
While looking at online code samples, I have sometimes come across an assignment of a String constant to a String object via the use of the new operator. For example: This, of course, compared to I'm not familiar with this syntax and have no idea what the purpose or effect would be. 
Since String constants typically get stored in the constant pool and then in whatever representation the JVM has for dealing with String constants, would anything even be allocated on the heap? 
===LINK===
http://stackoverflow.com/questions/390703/what-is-the-purpose-of-the-expression-new-string-in-java
===KEYWORDS===
compared java heap assignment dealing 
===ANSWER===
61
<html><body><p>The one place where you may need <code>new String(String)</code> is to force a substring to copy to a new underlying character array, as in </p><pre><code>small=new String(huge.substring(10,20))
</code></pre><p>However, this behavior is unfortunately undocumented and implementation dependent.</p><p>I have been burned by this when reading large files (some up to 20 MiB) into a String and carving it into lines after the fact.  I ended up with all the strings for the lines referencing the char[] consisting of entire file.  Unfortunately, that unintentionally kept a reference to the entire array for the few lines I held on to for a longer time than processing the file - I was forced to use <code>new String()</code> to work around it.  </p><p>The only implementation agnostic way to do this is:</p><pre><code>small=new String(huge.substring(10,20).toCharArray());
</code></pre><p>This unfortunately must copy the array twice, once for <code>toCharArray()</code> and once in the String constructor.</p><p>There needs to be a documented way to get a new String by copying the chars of an existing one; or the documentation of <code>String(String)</code> needs to be improved to make it more explicit (there is an implication there, but it's rather vague and open to interpretation).</p><p>In response to the comments, which keep coming in, observe what the Apache Harmony implementation of <code>new String()</code> was:</p><pre><code>public String(String string) {
    value = string.value;
    offset = string.offset;
    count = string.count;
}
</code></pre><p>That's right, no copy of the underlying array there.  And yet, it still conforms to the (Java 7) String documentation, in that it:</p><p>Initializes a newly created String object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string. Unless an explicit copy of original is needed, use of this constructor is unnecessary since Strings are immutable.</p><p>The salient piece being "copy of the argument <strong><em>string</em></strong>"; it does not say "copy of the argument string and the underlying character array supporting the string".</p><p>Be careful that you program to the <em>documentation</em> and not <strong>one</strong> <em>implementation</em>.</p></body></html>

===ID===
584cc0293e2ca508e5f072d0
===QUESTION===
JTable design to synchronize with back-end data-structure
I have a JTable which is loaded from a data-structure using table model.The data-structure is of the format  NavigableMap<Float,NavigableMap<Float,Boolean>> .An example data is: The above data format is represented in the DS as I have managed to represent the above given data in Jtable using table-model.Once the data is loaded from the DS to the table I have to allow user edit.Now this is where I have problem.My doubt is whether is should keep the data structure synchronized with the changes in the table or should i recreate the DS from the table once the user finish editing and then replace it with the old one. More over I need to validate the data(for example from above - Suppose the user want's to edit the value 30.1.He should only be allowed to enter values between 12.1 and 45.6.Since data the tables are string's (once loaded) I'm planning to use regex and key-listener and consume all user key presses which doesn't  match the regex and values which doesn't come within the range.I'm not sure is this is a good idea or what are implications.I would like to get some suggestions on this. 
===LINK===
http://stackoverflow.com/questions/3590897/jtable-design-to-synchronize-with-back-end-data-structure
===KEYWORDS===
navigablemap<float represent managed consume recreate 
===ANSWER===
12
<html><body><p>I would recreate your DS once the user is finised editing the table.</p><p>You can always create a custom editor to display a popup dialog where you have two separate text fields for each value of the range. Then you can edit each field as a double value within your specified range and recreate the formatted string before saving it to the model. Here's an old example I have lying around to get you started:</p><pre><code>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;

/*
 * The editor button that brings up the dialog.
 */
//public class TablePopupEditor extends AbstractCellEditor
public class TablePopupEditor extends DefaultCellEditor
    implements TableCellEditor
{
    private PopupDialog popup;
    private String currentText = "";
    private JButton editorComponent;

    public TablePopupEditor()
    {
        super(new JTextField());

        setClickCountToStart(2);

        //  Use a JButton as the editor component

        editorComponent = new JButton();
        editorComponent.setBackground(Color.white);
        editorComponent.setBorderPainted(false);
        editorComponent.setContentAreaFilled( false );

        //  Set up the dialog where we do the actual editing

        popup = new PopupDialog();
    }

    public Object getCellEditorValue()
    {
        return currentText;
    }

    public Component getTableCellEditorComponent(
        JTable table, Object value, boolean isSelected, int row, int column)
    {

        SwingUtilities.invokeLater(new Runnable()
        {
            public void run()
            {
                System.out.println("run");
                popup.setText( currentText );
//              popup.setLocationRelativeTo( editorComponent );
                Point p = editorComponent.getLocationOnScreen();
                popup.setLocation(p.x, p.y + editorComponent.getSize().height);
                popup.show();
                fireEditingStopped();
            }
        });

        currentText = value.toString();
        editorComponent.setText( currentText );
        return editorComponent;
    }

    /*
    *   Simple dialog containing the actual editing component
    */
    class PopupDialog extends JDialog implements ActionListener
    {
        private JTextArea textArea;

        public PopupDialog()
        {
            super((Frame)null, "Change Description", true);

            textArea = new JTextArea(5, 20);
            textArea.setLineWrap( true );
            textArea.setWrapStyleWord( true );
            KeyStroke keyStroke = KeyStroke.getKeyStroke("ENTER");
            textArea.getInputMap().put(keyStroke, "none");
            JScrollPane scrollPane = new JScrollPane( textArea );
            getContentPane().add( scrollPane );

            JButton cancel = new JButton("Cancel");
            cancel.addActionListener( this );
            JButton ok = new JButton("Ok");
            ok.setPreferredSize( cancel.getPreferredSize() );
            ok.addActionListener( this );

            JPanel buttons = new JPanel();
            buttons.add( ok );
            buttons.add( cancel );
            getContentPane().add(buttons, BorderLayout.SOUTH);
            pack();

            getRootPane().setDefaultButton( ok );
        }

        public void setText(String text)
        {
            textArea.setText( text );
        }

        /*
        *   Save the changed text before hiding the popup
        */
        public void actionPerformed(ActionEvent e)
        {
            if ("Ok".equals( e.getActionCommand() ) )
            {
                currentText = textArea.getText();
            }

            textArea.requestFocusInWindow();
            setVisible( false );
        }
    }

    public static void main(String[] args)
    {
        String[] columnNames = {"Item", "Description"};
        Object[][] data =
        {
            {"Item 1", "Description of Item 1"},
            {"Item 2", "Description of Item 2"},
            {"Item 3", "Description of Item 3"}
        };

        JTable table = new JTable(data, columnNames);
        table.getColumnModel().getColumn(1).setPreferredWidth(300);
        table.setPreferredScrollableViewportSize(table.getPreferredSize());
        JScrollPane scrollPane = new JScrollPane(table);

        // Use the popup editor on the second column

        TablePopupEditor popupEditor = new TablePopupEditor();
        table.getColumnModel().getColumn(1).setCellEditor( popupEditor );

        JFrame frame = new JFrame("Popup Editor Test");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().add( scrollPane );
        frame.pack();
        frame.setLocationRelativeTo( null );
        frame.setVisible(true);
    }
}
</code></pre></body></html>

===ID===
584cc02a3e2ca508e5f072d1
===QUESTION===
How do I tell Maven to use the latest version of a dependency?
In Maven, dependencies are usually set up like this: Now, if you are working with libraries that have frequent releases, constantly updating the <version> tag can be somewhat annoying. Is there any way to tell Maven to always use the latest available version (from the repository)?  
===LINK===
http://stackoverflow.com/questions/30571/how-do-i-tell-maven-to-use-the-latest-version-of-a-dependency
===KEYWORDS===
libraries set version working maven 
===ANSWER===
508
<html><body><p><strong><em>NOTE:</em></strong> <em>This answer applies to Maven 2 only! The mentioned <code>LATEST</code> and <code>RELEASE</code> metaversions <a href="https://cwiki.apache.org/confluence/display/MAVEN/Maven+3.x+Compatibility+Notes#Maven3.xCompatibilityNotes-PluginMetaversionResolution" rel="nofollow noreferrer">have been dropped in Maven 3 "for the sake of reproducible builds"</a>, over 6 years ago.</em></p><p>If you  always want to use the newest version, Maven has two keywords you can use as an alternative to version ranges. You should use these options with care as you are no longer in control of the plugins/dependencies you are using.</p><p>When you depend on a plugin or a dependency, you can use the a version value of LATEST or RELEASE. LATEST refers to the latest released or snapshot version of a particular artifact, the most recently deployed artifact in a particular repository. RELEASE refers to the last non-snapshot release in the repository. In general, it is not a best practice to design software which depends on a non-specific version of an artifact. If you are developing software, you might want to use RELEASE or LATEST as a convenience so that you don't have to update version numbers when a new release of a third-party library is released. When you release software, you should always make sure that your project depends on specific versions to reduce the chances of your build or your project being affected by a software release not under your control. Use LATEST and RELEASE with caution, if at all.</p><p>See the <a href="http://www.sonatype.com/books/maven-book/reference/pom-relationships-sect-pom-syntax.html#pom-relationships-sect-latest-release" rel="nofollow noreferrer">POM Syntax section of the Maven book</a> for more details. Or see this doc on <a href="http://www.mojohaus.org/versions-maven-plugin/examples/resolve-ranges.html" rel="nofollow noreferrer">Dependency Version Ranges</a>, where: </p><p>Here's an example illustrating the various options. In the Maven repository, com.foo:my-foo has the following metadata:</p><pre class="lang-xml prettyprint-override"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;metadata&gt;
  &lt;groupId&gt;com.foo&lt;/groupId&gt;
  &lt;artifactId&gt;my-foo&lt;/artifactId&gt;
  &lt;version&gt;2.0.0&lt;/version&gt;
  &lt;versioning&gt;
    &lt;release&gt;1.1.1&lt;/release&gt;
    &lt;versions&gt;
      &lt;version&gt;1.0&lt;/version&gt;
      &lt;version&gt;1.0.1&lt;/version&gt;
      &lt;version&gt;1.1&lt;/version&gt;
      &lt;version&gt;1.1.1&lt;/version&gt;
      &lt;version&gt;2.0.0&lt;/version&gt;
    &lt;/versions&gt;
    &lt;lastUpdated&gt;20090722140000&lt;/lastUpdated&gt;
  &lt;/versioning&gt;
&lt;/metadata&gt;
</code></pre><p>If a dependency on that artifact is required, you have the following options (other <a href="http://docs.codehaus.org/display/MAVEN/Dependency+Mediation+and+Conflict+Resolution#DependencyMediationandConflictResolution-DependencyVersionRanges" rel="nofollow noreferrer">version ranges</a> can be specified of course, just showing the relevant ones here):</p><p>Declare an exact version (will always resolve to 1.0.1):</p><pre class="lang-xml prettyprint-override"><code>&lt;version&gt;[1.0.1]&lt;/version&gt;
</code></pre><p>Declare an explicit version (will always resolve to 1.0.1 unless a collision occurs, when Maven will select a matching version):</p><pre class="lang-xml prettyprint-override"><code>&lt;version&gt;1.0.1&lt;/version&gt;
</code></pre><p>Declare a version range for all 1.x (will currently resolve to 1.1.1):</p><pre class="lang-xml prettyprint-override"><code>&lt;version&gt;[1.0.0,2.0.0)&lt;/version&gt;
</code></pre><p>Declare an open-ended version range (will resolve to 2.0.0):</p><pre class="lang-xml prettyprint-override"><code>&lt;version&gt;[1.0.0,)&lt;/version&gt;
</code></pre><p>Declare the version as LATEST (will resolve to 2.0.0):</p><pre class="lang-xml prettyprint-override"><code>&lt;version&gt;LATEST&lt;/version&gt;
</code></pre><p>Declare the version as RELEASE (will resolve to 1.1.1):</p><pre class="lang-xml prettyprint-override"><code>&lt;version&gt;RELEASE&lt;/version&gt;
</code></pre><p>Note that by default your own deployments will update the "latest" entry in the Maven metadata, but to update the "release" entry, you need to activate the "release-profile" from the <a href="http://maven.apache.org/guides/introduction/introduction-to-the-pom.html" rel="nofollow noreferrer">Maven super POM</a>. You can do this with either "-Prelease-profile" or "-DperformRelease=true"</p><p>It's worth emphasising that any approach that allows Maven to pick the dependency versions (LATEST, RELEASE, and version ranges) can leave you open to build time issues, as later versions can have different behaviour (for example the dependency plugin has previously switched a default value from true to false, with confusing results).</p><p>It is therefore generally a good idea to define exact versions in releases. As <a href="http://stackoverflow.com/questions/30571/how-do-i-tell-maven-to-use-the-latest-version-of-a-dependency/1172805#1172805">Tim's answer</a> points out, the <a href="http://mojo.codehaus.org/versions-maven-plugin/" rel="nofollow noreferrer">maven-versions-plugin</a> is a handy tool for updating dependency versions, particularly the <a href="http://mojo.codehaus.org/versions-maven-plugin/use-latest-versions-mojo.html" rel="nofollow noreferrer">versions:use-latest-versions</a> and <a href="http://mojo.codehaus.org/versions-maven-plugin/use-latest-releases-mojo.html" rel="nofollow noreferrer">versions:use-latest-releases</a> goals.</p></body></html>

===ID===
584cc02a3e2ca508e5f072d2
===QUESTION===
Avoid synchronized(this) in Java?
Whenever a question pops up on SO about Java synchronization, some people are very eager to point out that  synchronized(this)  should be avoided. Instead, they claim, a lock on a private reference is to be preferred. Some of the given reasons are: Other people, including me, argue that  synchronized(this)  is an idiom that is used a lot (also in Java libraries), is safe and well understood. It should not be avoided because you have a bug and you don't have a clue of what is going on in your multithreaded program. In other words: if it is applicable, then use it. I am interested in seeing some real-world examples (no foobar stuff) where avoiding a lock on  this  is preferable when  synchronized(this)  would also do the job. Therefore:  should you always avoid  synchronized(this)  and replace it with a lock on a private reference?   Some further info (updated as answers are given): 
===LINK===
http://stackoverflow.com/questions/442564/avoid-synchronizedthis-in-java
===KEYWORDS===
claim synchronized point reasons lock 
===ANSWER===
82
<html><body><p>I'll cover each point separately.</p><p>Some evil code may steal your lock (very popular this one, also has an
  "accidentally" variant)</p><p>I'm more worried about <em>accidentally</em>.  What it amounts to is that this use of <code>this</code> is part of your class' exposed interface, and should be documented.  Sometimes the ability of other code to use your lock is desired.  This is true of things like <code>Collections.synchronizedMap</code> (see the javadoc).</p><p>All synchronized methods within the same class use the exact same
  lock, which reduces throughput</p><p>This is overly simplistic thinking; just getting rid of <code>synchronized(this)</code> won't solve the problem.  Proper synchronization for throughput will take more thought.</p><p>You are (unnecessarily) exposing too much information</p><p>This is a variant of #1.  Use of <code>synchronized(this)</code> is part of your interface.  If you don't want/need this exposed, don't do it.</p></body></html>

===ID===
584cc02b3e2ca508e5f072d3
===QUESTION===
What is object serialization?
What is meant by "object serialization"? Can you please explain it with some examples?  
===LINK===
http://stackoverflow.com/questions/447898/what-is-object-serialization
===KEYWORDS===
meant explain examples 
===ANSWER===
241
<html><body><p>Serialization is the conversion of an object to a series of bytes, so that the object can be easily saved to persistent storage or streamed across a communication link. The byte stream can then be deserialized - converted into a replica of the original object.</p></body></html>

===ID===
584cc02b3e2ca508e5f072d4
===QUESTION===
How does a Java HashMap handle different objects with the same hash code?
As per my understanding I think: Am I correct? Now if am correct, I have the following question:
The  HashMap  internally uses the hashcode of the object. So if two objects can have the same hashcode, then how can the  HashMap  track which key it uses? Can someone explain how the  HashMap  internally uses the hashcode of the object? 
===LINK===
http://stackoverflow.com/questions/6493605/how-does-a-java-hashmap-handle-different-objects-with-the-same-hash-code
===KEYWORDS===
explain object question hashcode objects 
===ANSWER===
233
<html><body><p>A hashmap works like this (this is a little bit simplified, but it illustrates the basic mechanism):</p><p>It has a number of "buckets" which it uses to store key-value pairs in. Each bucket has a unique number - that's what identifies the bucket. When you put a key-value pair into the map, the hashmap will look at the hash code of the key, and store the pair in the bucket of which the identifier is the hash code of the key. For example: The hash code of the key is 235 -&gt; the pair is stored in bucket number 235. (Note that one bucket can store more then one key-value pair).</p><p>When you lookup a value in the hashmap, by giving it a key, it will first look at the hash code of the key that you gave. The hashmap will then look into the corresponding bucket, and then it will compare the key that you gave with the keys of all pairs in the bucket, by comparing them with <code>equals()</code>.</p><p>Now you can see how this is very efficient for looking up key-value pairs in a map: by the hash code of the key the hashmap immediately knows in which bucket to look, so that it only has to test against what's in that bucket.</p><p>Looking at the above mechanism, you can also see what requirements are necessary on the <code>hashCode()</code> and <code>equals()</code> methods of keys:</p><p>If two keys are the same (<code>equals()</code> returns <code>true</code> when you compare them), their <code>hashCode()</code> method must return the same number. If keys violate this, then keys that are equal might be stored in different buckets, and the hashmap would not be able to find key-value pairs (because it's going to look in the same bucket).</p><p>If two keys are different, then it doesn't matter if their hash codes are the same or not. They will be stored in the same bucket if their hash codes are the same, and in this case, the hashmap will use <code>equals()</code> to tell them apart.</p></body></html>

===ID===
584cc02c3e2ca508e5f072d5
===QUESTION===
How do you make a deep copy of an object in Java?
In java it's a bit difficult to implement a deep object copy function. What steps you take to ensure the original object and the cloned one share no reference?  
===LINK===
http://stackoverflow.com/questions/64036/how-do-you-make-a-deep-copy-of-an-object-in-java
===KEYWORDS===
java reference make object share 
===ANSWER===
106
<html><body><p>A safe way is to serialize the object, then deserialize.  This ensures everything is a brand new reference.</p><p><a href="http://javatechniques.com/blog/faster-deep-copies-of-java-objects/" rel="nofollow noreferrer">Here's an article</a> about how to do this efficiently.</p><p>Caveats: It's possible for classes to override serialization such that new instances are <em>not</em> created, e.g. for singletons.  Also this of course doesn't work if your classes aren't Serializable.</p></body></html>

===ID===
584cc02c3e2ca508e5f072d6
===QUESTION===
How to capitalize the first character of each word in a string
Is there a function built into Java that capitalizes the first character of each word in a String, and does not affect the others? Examples: *( Old McDonald  would be find too, but I don't expect it to be THAT smart.) A quick look at the  Java String Documentation  reveals only  toUpperCase()  and  toLowerCase() , which of course do not provide the desired behavior. Naturally, Google results are dominated by those two functions. It seems like a wheel that must have been invented already, so it couldn't hurt to ask so I can use it in the future.  
===LINK===
http://stackoverflow.com/questions/1892765/how-to-capitalize-the-first-character-of-each-word-in-a-string
===KEYWORDS===
examples find functions java mcdonald 
===ANSWER===
509
<html><body><p><a href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/text/WordUtils.html" rel="nofollow noreferrer"><code>WordUtils.capitalize(str)</code></a> (from <a href="http://commons.apache.org/lang/" rel="nofollow noreferrer">apache commons-lang</a>)</p><p>(Note: if you need <code>"fOO BAr"</code> to become <code>"Foo Bar"</code>, then use <code>capitalizeFully(..)</code> instead)</p></body></html>

===ID===
584cc02d3e2ca508e5f072d7
===QUESTION===
How to properly compare two Integers in Java?
I know that if you compare a boxed primitive Integer with a constant such as: a  will automatically be unboxed and the comparison will work. However, what happens when you are comparing two boxed  Integers  and want to compare either equality or less than/greater than? Will above code result in checking to see if they are the same object, or will it auto-unbox in that case? What about: ? 
===LINK===
http://stackoverflow.com/questions/1514910/how-to-properly-compare-two-integers-in-java
===KEYWORDS===
unboxed comparison compare /greater constant 
===ANSWER===
179
<html><body><p>No, == between Integer, Long etc will check for <em>reference equality</em> - i.e.</p><pre><code>Integer x = ...;
Integer y = ...;

System.out.println(x == y);
</code></pre><p>this will check whether <code>x</code> and <code>y</code> refer to the <em>same object</em> rather than <em>equal</em> objects.</p><p>So</p><pre><code>Integer x = new Integer(10);
Integer y = new Integer(10);

System.out.println(x == y);
</code></pre><p>is guaranteed to print <code>false</code>. Interning of "small" autoboxed values can lead to tricky results:</p><pre><code>Integer x = 10;
Integer y = 10;

System.out.println(x == y);
</code></pre><p>This will print <code>true</code>, due to the rules of boxing (<a href="https://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.1.7" rel="nofollow noreferrer">JLS section 5.1.7</a>). It's still reference equality being used, but the references genuinely <em>are</em> equal.</p><p>Personally I'd use:</p><pre><code>if (x.intValue() == y.intValue())
</code></pre><p>or</p><pre><code>if (x.equals(y))
</code></pre><p>The latter is slightly less efficient - there isn't an overload for <code>Integer.equals(Integer)</code> so it will have to do execution time type checking, whereas the first uses the fact that we already know that both objects are <code>Integer</code>s.</p><p>Fortunately, <code>compareTo</code> knows about the types, so:</p><pre><code>if (x.compareTo(y) &lt; 0)
</code></pre><p>should still be efficient. Of course, this is micro-optimisation territory and you should use the code you find clearest - after making sure it's correct :)</p><p>As you say, for any comparison between a wrapper type (<code>Integer</code>, <code>Long</code> etc) and a numeric type (<code>int</code>, <code>long</code> etc) the wrapper type value is <em>unboxed</em> and the test is applied to the primitive values involved.</p><p>This occurs as part of binary numeric promotion (<a href="https://docs.oracle.com/javase/specs/jls/se8/html/jls-5.html#jls-5.6.2" rel="nofollow noreferrer">JLS section 5.6.2</a>). Look at each individual operator's documentation to see whether it's applied. For example, from the docs for == and != (<a href="https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.21.1" rel="nofollow noreferrer">JLS 15.21.1</a>):</p><p>If the operands of an equality
  operator are both of numeric type, or
  one is of numeric type and the other
  is convertible (§5.1.8) to numeric
  type, binary numeric promotion is
  performed on the operands (§5.6.2).</p><p>and for &lt;, &lt;=, &gt; and &gt;= (<a href="https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.20.1" rel="nofollow noreferrer">JLS 15.20.1</a>)</p><p>The type of each of the operands of a
  numerical comparison operator must be
  a type that is convertible (§5.1.8) to
  a primitive numeric type, or a
  compile-time error occurs. Binary
  numeric promotion is performed on the
  operands (§5.6.2). If the promoted
  type of the operands is int or long,
  then signed integer comparison is
  performed; if this promoted type is
  float or double, then floating-point
  comparison is performed.</p><p>Note how none of this is considered as part of the situation where <em>neither</em> type is a numeric type.</p></body></html>

===ID===
584cc02e3e2ca508e5f072d8
===QUESTION===
Error: Could not find or load main class [duplicate]
This question already has an answer here: I am having trouble compiling and running my Java code, intended to allow me to interface Java with a shared object for Vensim, a simulation modeling package. The following code compiles without error: However, when I try to run the following: I get the following error: "Error: Could not find or load main class SpatialModel
".  My SpatialModel.java code does contain a 'main' method (below), so I'm not sure what the problem is - can anyone please help me out?  Thanks. 
===LINK===
http://stackoverflow.com/questions/7485670/error-could-not-find-or-load-main-class
===KEYWORDS===
spatialmodel run intended vensim question 
===ANSWER===
196
<html><body><p>You must ensure that you add the location of your <code>.class</code> file to your classpath. So, if its in the current folder then add <code>.</code> to your classpath.
Note that the windows classpath separator is a semi-colon ie <code>;</code></p></body></html>

===ID===
584cc02e3e2ca508e5f072d9
===QUESTION===
java runtime.getruntime() getting output from executing a command line program
I am using the runtime to run command prompt commands from my java program.  However I am not aware of how I can get the output the command returns. Here is my code. I tried doing system.out.print(proc); but that did not return anything.  The execution of that command should return two numbers separated by a semicolon, how could I get this in a variable to print out? Thanks, Here is the code I am using now: But I am not getting anything as my output but when I run that command myself it works fine. 
===LINK===
http://stackoverflow.com/questions/5711084/java-runtime-getruntime-getting-output-from-executing-a-command-line-program
===KEYWORDS===
execution code return semicolon executing 
===ANSWER===
113
<html><body><p>Here is the way to go:</p><pre><code>Runtime rt = Runtime.getRuntime();
String[] commands = {"system.exe","-get t"};
Process proc = rt.exec(commands);

BufferedReader stdInput = new BufferedReader(new 
     InputStreamReader(proc.getInputStream()));

BufferedReader stdError = new BufferedReader(new 
     InputStreamReader(proc.getErrorStream()));

// read the output from the command
System.out.println("Here is the standard output of the command:\n");
String s = null;
while ((s = stdInput.readLine()) != null) {
    System.out.println(s);
}

// read any errors from the attempted command
System.out.println("Here is the standard error of the command (if any):\n");
while ((s = stdError.readLine()) != null) {
    System.out.println(s);
}
</code></pre><p>Better read the Javadoc for more details <a href="http://download.oracle.com/javase/1.5.0/docs/api/java/lang/ProcessBuilder.html">here</a>. <code>ProcessBuilder</code> would be good choice to use</p></body></html>

===ID===
584cc02e3e2ca508e5f072da
===QUESTION===
What does servletcontext.getRealPath(“/”) mean and when should I use it
In the following snippet: What does  /  in the method  getRealPath()  represent? When should I use it? 
===LINK===
http://stackoverflow.com/questions/12160639/what-does-servletcontext-getrealpath-mean-and-when-should-i-use-it
===KEYWORDS===
snippet represent getrealpath servletcontext 
===ANSWER===
55
<html><body><p>The <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html#getRealPath%28java.lang.String%29"><code>ServletContext#getRealPath()</code></a> is intented to convert a web content path (the path in the expanded WAR folder structure on the server's disk file system) to an absolute disk file system path.</p><p>The <code>"/"</code> represents the web content root. I.e. it represents the <code>web</code> folder as in the below project structure:</p><pre class="lang-none prettyprint-override"><code>YourWebProject
 |-- src
 |    :
 |
 |-- web
 |    |-- META-INF
 |    |    `-- MANIFEST.MF
 |    |-- WEB-INF
 |    |    `-- web.xml
 |    |-- index.jsp
 |    `-- login.jsp
 :    
</code></pre><p>So, passing the <code>"/"</code> to <code>getRealPath()</code> would return you the absolute disk file system path of the <code>/web</code> folder of the expanded WAR file of the project. Something like <code>/path/to/server/work/folder/some.war/</code> which you should be able to further use in <code>File</code> or <code>FileInputStream</code>.</p><p>Note that most starters don't seem to see/realize that you can actually pass the whole web content path to it and that they often use</p><pre><code>String absolutePathToIndexJSP = servletContext.getRealPath("/") + "index.jsp";
</code></pre><p>instead of</p><pre><code>String absolutePathToIndexJSP = servletContext.getRealPath("/index.jsp");
</code></pre><p>Also note that even though you can write new files into it using <code>FileOutputStream</code>, all changes (e.g. new files or edited files) will <strong>get lost</strong> whenever the WAR is redeployed; with the simple reason that all those changes are not contained in the original WAR file. So all starters who are attempting to save uploaded files in there are doing it wrong. </p><p>Moreover, <code>getRealPath()</code> will always return <code>null</code> or a completely unexpected path when the server isn't configured to expand the WAR file into the disk file system, but instead into e.g. memory as a virtual file system. </p><p>Use <code>getRealPath()</code> carefully. There are actually no sensible real world use cases for it. If all you actually need is to get an <code>InputStream</code> of the web resource, better use <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html#getResourceAsStream%28java.lang.String%29"><code>ServletContext#getResourceAsStream()</code></a> instead, this will work regardless of the way how the WAR is expanded. So, if you for example want an <code>InputStream</code> of <code>index.jsp</code>, then do <strong>not</strong> do:</p><pre><code>InputStream input = new FileInputStream(servletContext.getRealPath("/index.jsp")); // Wrong!
</code></pre><p>But instead do:</p><pre><code>InputStream input = servletContext.getResourceAsStream("/index.jsp"); // Right!
</code></pre><p>Or if you intend to obtain a list of all available web resource paths, use <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html#getResourcePaths(java.lang.String)"><code>ServletContext#getResourcePaths()</code></a> instead.</p><pre><code>Set&lt;String&gt; resourcePaths = servletContext.getResourcePaths("/");
</code></pre><p>You can obtain an individual resource as <code>URL</code> via <a href="http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html#getResource%28java.lang.String%29"><code>ServletContext#getResource()</code></a>. This will return <code>null</code> when the resource does not exist.</p><pre><code>URL resource = servletContext.getResource(path);
</code></pre><p>Or if you intend to save an uploaded file, or create a temporary file, then see the below "See also" links.</p></body></html>

===ID===
584cc02f3e2ca508e5f072db
===QUESTION===
What's the difference between next() and nextLine() methods from Scanner class?
What is the main difference between  next()  and  nextLine() ? 
My main goal is to read the all text using a  Scanner  which may be "connected"  to any source  (file for example). Which one should I choose and why? 
===LINK===
http://stackoverflow.com/questions/22458575/whats-the-difference-between-next-and-nextline-methods-from-scanner-class
===KEYWORDS===
nextline scanner read text source 
===ANSWER===
26
<html><body><p>I always prefer to read input using <code>nextLine()</code> and then parse the string.</p><p>Using <code>next()</code> will only return what comes before a space. <code>nextLine()</code> automatically moves the scanner down after returning the current line.</p><p>A useful tool for parsing data from <code>nextLine()</code> would be <code>str.split("\\s+")</code>.</p><pre><code>String data = scanner.nextLine();
String[] pieces = data.split("\\s+");
// Parse the pieces
</code></pre><p>For more information regarding the Scanner class or String class refer to the following links.</p><p>Scanner: <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html">http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html</a></p><p>String: <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/String.html">http://docs.oracle.com/javase/7/docs/api/java/lang/String.html</a></p></body></html>

===ID===
584cc0303e2ca508e5f072dc
===QUESTION===
Java logical operator short-circuiting
Which set is short-circuting, and what exactly does it mean that the complex conditional expression is short-circuting? 
===LINK===
http://stackoverflow.com/questions/8759868/java-logical-operator-short-circuiting
===KEYWORDS===
set circuiting circuting short 
===ANSWER===
126
<html><body><p>The <code>&amp;&amp;</code> and <code>||</code> operators "short-circuit", meaning they don't evaluate the right hand side if it isn't necessary.</p><p>The <code>&amp;</code> and <code>|</code> operators, when used as logical operators, always evaluate both sides.</p><p>There is only one case of short-circuiting for each operator, and they are:</p><p>Let's compare the behaviour in a simple example:</p><pre><code>public boolean longerThan(String input, int length) {
    return input != null &amp;&amp; input.length() &gt; length;
}

public boolean longerThan(String input, int length) {
    return input != null &amp; input.length() &gt; length;
}
</code></pre><p>The 2nd version uses the non-short-circuiting operator <code>&amp;</code> and will throw a <code>NullPointerException</code> if <code>input</code> is <code>null</code>, but the 1st version will return <code>false</code> without an exception;</p></body></html>

===ID===
584cc0303e2ca508e5f072dd
===QUESTION===
javafx 8 compatibility issues - FXML static fields
I have designed a javafx application which works fine in jdk 7. When I try to run it in java 8 I am getting the below exceptions: I found out the reason for this is in the initialize method of the controller class I am not able to use the inbuilt methods in any static component. (For example: staticMyTextField.setText() is causing the problem in java 8 but not in java 7). I am not able to find out anything documented regarding this in the javafx guides. Can someone please provide some ideas on why this is causing an issue in Java 8? And also share documents related to this if any. 
===LINK===
http://stackoverflow.com/questions/23105433/javafx-8-compatibility-issues-fxml-static-fields
===KEYWORDS===
documented run provide staticmytextfield ideas 
===ANSWER===
27
<html><body><p>It sounds like you are trying to inject a <code>TextField</code> into a static field. Something like</p><pre><code>@FXML
private static TextField myTextField ;
</code></pre><p>This apparently worked in JavaFX 2.2. It doesn't work in JavaFX 8. Since no official documentation ever supported this use, it's doesn't really violate backward compatibility, though in fairness the documentation on exactly what the <code>FXMLLoader</code> does is pretty woeful.</p><p>Why would you ever want to do this though? It's clearly a really terrible idea. Suppose you decided to reuse your FXML file twice in the same application: the second use would overwrite the value for the static field, and all sorts of chaos would ensue. Simply put, if you are trying to have static fields injected in your controller, you're doing things wrong anyway.</p><p><strong>Update</strong>: Response to question in comments</p><p>In particular, don't use static fields just to enable them to be accessible from outside the class. A static field has a single value belonging to the class, instead of a value for each instance of the class, and the decision to make fields static should only be made if that makes sense. To allow access to instance data, you just have to have a reference to the instance. The <code>FXMLLoader</code> has a <code>getController()</code> method that allows you to retrieve a reference to the controller. </p><p>A related point: it's also not a good idea to expose the UI controls from the controller. You should instead expose the data. For example, instead of defining a <code>getTextField()</code> method in the controller, instead define a <code>textProperty()</code> method that returns a <code>StringProperty</code> representing the contents of the <code>TextField</code>. The reason for this is that when your boss comes to the office and tells you he wants the <code>TextField</code> to be replaced by a <code>TextArea</code>, or a <code>ComboBox&lt;String&gt;</code>, or some other control, then it's going to be a lot harder if classes outside of the controller are using your <code>TextField</code>. The structure of the data represented by your controller is much less likely to change than the implementation of how that data is presented to the user.</p><p>For some examples </p></body></html>

===ID===
584cc0303e2ca508e5f072de
===QUESTION===
Placing component on Glass Pane
I have a subclass of JLabel that forms a component of my GUI.  I have implemented the ability to drag and drop the component from one container to another, but without any visual effects.  I want to have this JLabel follow the cursor during the drag of the item from one container to another.  I figured that I could just create a glass pane and draw it on there.  However, even after I add the component to the glass pane, set the component visible, and set the glass pane visible, and set the glass pane as opaque, I still so not see the component.  I know the component works because I can add it to the content pane and have it show up. How do I add a component to the glass pane? Finally figured how to get the simple example working.  Thanks, @akf.  I was able to adapt this solution to my original problem, allowing me to remove ~60 lines of Java2D code that manually rendered a representation of the JLabel. 
===LINK===
http://stackoverflow.com/questions/2561690/placing-component-on-glass-pane
===KEYWORDS===
set show simple implemented container 
===ANSWER===
3
<html><body><p>Besides the pointers to the LayerPane examples already provided, the issue with your original code centers around the setting of the preferred size of your label.  You set it before the JLabel has been sized, so your:</p><pre><code>l.setPreferredSize(l.getSize());
</code></pre><p>is ineffectual.  If, on the other hand, you make that call after you make your call to <code>setBounds</code>, you will see your desired results.  With that in mind, reorder this:</p><pre><code>l.setPreferredSize(l.getSize());
l.setBounds(10, 10, 50, 20);
</code></pre><p>to look like this:</p><pre><code>l.setBounds(10, 10, 50, 20);
l.setPreferredSize(l.getSize());
</code></pre></body></html>

===ID===
584cc0313e2ca508e5f072df
===QUESTION===
Why doesn't RecyclerView have onItemClickListener()? And how RecyclerView is different from Listview?
I don't know whether I am asking the right question. I was exploring  RecyclerView  and I was surprised to see that  RecyclerView  does not have  onItemClickListener() . Because  RecyclerView  extends      android.view.ViewGroup and  ListView  extends  android.widget.AbsListView .  However I solved my problem by writing  onClick  in my  RecyclerView.Adapter : But still I want to know why Google removed  onItemClickListener() ?  Is there a performance issue or something else? 
===LINK===
http://stackoverflow.com/questions/24885223/why-doesnt-recyclerview-have-onitemclicklistener-and-how-recyclerview-is-dif
===KEYWORDS===
viewgroup widget don abslistview adapter 
===ANSWER===
873
<html><body><p><strong>tl;dr 2016</strong> Use RxJava and a PublishSubject to expose an Observable for the clicks.</p><pre><code>public class ReactiveAdapter extends RecyclerView.Adapter&lt;MyAdapter.ViewHolder&gt; {
    String[] mDataset = { "Data", "In", "Adapter" };

    private final PublishSubject&lt;String&gt; onClickSubject = PublishSubject.create();

    @Override 
    public void onBindViewHolder(final ViewHolder holder, int position) {
        final String element = mDataset[position];

        holder.itemView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
               onClickSubject.onNext(element);
            }
        });
    }

    public Observable&lt;String&gt; getPositionClicks(){
        return onClickSubject.asObservable();
    }
}
</code></pre><p><strong>Original Post:</strong></p><p>Since the introduction of <code>ListView</code>, <code>onItemClickListener</code> has been problematic. The moment you have a click listener for any of the internal elements the callback would not be triggered but it wasn't notified or well documented (if at all) so there was a lot of confusion and SO questions about it.</p><p>Given that <code>RecyclerView</code> takes it a step further and doesn't have a concept of a row/column, but rather an arbitrarily laid out amount of children, they have delegated the onClick to each one of them, or to programmer implementation.</p><p>Think of <code>Recyclerview</code> not as a <code>ListView</code> 1:1 replacement but rather as a more flexible component for complex use cases. And as you say, your solution is what google expected of you. Now you have an adapter who can delegate onClick to an interface passed on the constructor, which is the correct pattern for both <code>ListView</code> and <code>Recyclerview</code>.</p><pre><code>public static class ViewHolder extends RecyclerView.ViewHolder implements OnClickListener {

    public TextView txtViewTitle;
    public ImageView imgViewIcon;
    public IMyViewHolderClicks mListener;

    public ViewHolder(View itemLayoutView, IMyViewHolderClicks listener) {
        super(itemLayoutView);
        mListener = listener;
        txtViewTitle = (TextView) itemLayoutView.findViewById(R.id.item_title);
        imgViewIcon = (ImageView) itemLayoutView.findViewById(R.id.item_icon);
        imgViewIcon.setOnClickListener(this);
        itemLayoutView.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        if (v instanceof ImageView){
           mListener.onTomato((ImageView)v);
        } else {
           mListener.onPotato(v);
        }
    }

    public static interface IMyViewHolderClicks {
        public void onPotato(View caller);
        public void onTomato(ImageView callerImage);
    }

}
</code></pre><p>and then on your adapter</p><pre><code>public class MyAdapter extends RecyclerView.Adapter&lt;MyAdapter.ViewHolder&gt; {

   String[] mDataset = { "Data" };

   @Override
   public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
       View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.my_layout, parent, false);

       MyAdapter.ViewHolder vh = new ViewHolder(v, new MyAdapter.ViewHolder.IMyViewHolderClicks() { 
           public void onPotato(View caller) { Log.d("VEGETABLES", "Poh-tah-tos"); };
           public void onTomato(ImageView callerImage) { Log.d("VEGETABLES", "To-m8-tohs"); }
        });
        return vh;
    }

    // Replace the contents of a view (invoked by the layout manager) 
    @Override 
    public void onBindViewHolder(ViewHolder holder, int position) {
        // Get element from your dataset at this position 
        // Replace the contents of the view with that element 
        // Clear the ones that won't be used
        holder.txtViewTitle.setText(mDataset[position]);
    } 

    // Return the size of your dataset (invoked by the layout manager) 
    @Override 
    public int getItemCount() { 
        return mDataset.length;
    } 
  ...
</code></pre><p>Now look into that last piece of code: <code>onCreateViewHolder(ViewGroup parent, int viewType)</code> the signature already suggest different view types. For each one of them you'll require a different viewholder too, and subsequently each one of them can have a different set of clicks. Or you can just create a generic viewholder that takes any view and one <code>onClickListener</code> and applies accordingly. Or delegate up one level to the orchestrator so several fragments/activities have the same list with different click behaviour. Again, all flexibility is on your side.</p><p>It is a really needed component and fairly close to what our internal implementations and improvements to <code>ListView</code> were until now. It's good that Google finally acknowledges it.</p></body></html>

===ID===
584cc0323e2ca508e5f072e0
===QUESTION===
How do you assert that a certain exception is thrown in JUnit 4 tests?
How can I use JUnit4 idiomatically to test that some code throws an exception? While I can certainly do something like this: I recall that there is an annotation or an Assert.xyz or  something  that is far less kludgy and far more in-the-spirit of JUnit for these sorts of situations. 
===LINK===
http://stackoverflow.com/questions/156503/how-do-you-assert-that-a-certain-exception-is-thrown-in-junit-4-tests
===KEYWORDS===
thrown exception recall xyz kludgy 
===ANSWER===
1282
<html><body><p>JUnit 4 has support for this:</p><pre><code>@Test(expected=IndexOutOfBoundsException.class)
public void testIndexOutOfBoundsException() {
    ArrayList emptyList = new ArrayList();
    Object o = emptyList.get(0);
}
</code></pre></body></html>

===ID===
584cc0323e2ca508e5f072e1
===QUESTION===
How to parse command line arguments in Java?
What is a good way of parsing command line arguments in Java? 
===LINK===
http://stackoverflow.com/questions/367706/how-to-parse-command-line-arguments-in-java
===KEYWORDS===
good java 
===ANSWER===
182
<html><body><p>Check these out:</p><p>Or roll your own:</p><p><strong>For instance,</strong> this is how you use <a href="https://mvnrepository.com/artifact/commons-cli/commons-cli/1.3.1" rel="nofollow noreferrer"><code>commons-cli</code></a> to parse 2 string arguments:</p><pre><code>import org.apache.commons.cli.*;

public class Main {


    public static void main(String[] args) throws Exception {

        Options options = new Options();

        Option input = new Option("i", "input", true, "input file path");
        input.setRequired(true);
        options.addOption(input);

        Option output = new Option("o", "output", true, "output file");
        output.setRequired(true);
        options.addOption(output);

        CommandLineParser parser = new DefaultParser();
        HelpFormatter formatter = new HelpFormatter();
        CommandLine cmd;

        try {
            cmd = parser.parse(options, args);
        } catch (ParseException e) {
            System.out.println(e.getMessage());
            formatter.printHelp("utility-name", options);

            System.exit(1);
            return;
        }

        String inputFilePath = cmd.getOptionValue("input");
        String outputFilePath = cmd.getOptionValue("output");

        System.out.println(inputFilePath);
        System.out.println(outputFilePath);

    }

}
</code></pre><p>usage from command line:</p><pre><code>$&gt; java -jar target/my-utility.jar -i asd                                                                                       
Missing required option: o

usage: utility-name
 -i,--input &lt;arg&gt;    input file path
 -o,--output &lt;arg&gt;   output file
</code></pre></body></html>

===ID===
584cc0333e2ca508e5f072e2
===QUESTION===
Calling remove in foreach loop in Java [duplicate]
This question already has an answer here: In Java, is it legal to call remove on a collection when iterating through the collection using a foreach loop?  For instance: As an addendum, is it legal to remove items that have not been iterated over yet? For instance,  
===LINK===
http://stackoverflow.com/questions/1196586/calling-remove-in-foreach-loop-in-java
===KEYWORDS===
java iterating question collection instance 
===ANSWER===
601
<html><body><p>To safely remove from a collection while iterating over it you should use an Iterator.</p><p>For example:</p><pre><code>List&lt;String&gt; names = ....
Iterator&lt;String&gt; i = names.iterator();
while (i.hasNext()) {
   String s = i.next(); // must be called before you can call i.remove()
   // Do something
   i.remove();
}
</code></pre><p>From the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html" rel="nofollow noreferrer">Java Documentation</a> :</p><p>The iterators returned by this class's iterator and listIterator
  methods are fail-fast: if the list is structurally modified at any
  time after the iterator is created, in any way except through the
  iterator's own remove or add methods, the iterator will throw a
  ConcurrentModificationException. Thus, in the face of concurrent
  modification, the iterator fails quickly and cleanly, rather than
  risking arbitrary, non-deterministic behavior at an undetermined time
  in the future.</p><p>Perhaps what is unclear to many novices is the fact that iterating over a list using the for/foreach constructs implicitly creates an iterator which is necessarily inaccessible. This info can be found <a href="http://docs.oracle.com/javase/1.5.0/docs/guide/language/foreach.html" rel="nofollow noreferrer">here</a></p></body></html>

===ID===
584cc0333e2ca508e5f072e3
===QUESTION===
Android Studio installation on Windows 7 fails, no JDK found
I downloaded Android Studio and attempted to launch the program. This is running on Windows 7 64-bit with Java 1.7. During the installation my Java 1.7 is detected, and the rest of the installation goes through just fine. However, when attempting to launch the application from the desktop icon, nothing happens. Looking at the task manager, a new process from the CMD is loaded. This is because it's attempting to run the batch file  studio.bat . When I execute via CMD, I get the following error: ERROR: cannot start Android Studio. No JDK found. Please validate
  either ANDROID_STUDIO_JDK, or JDK_HOME or JAVA_HOME points to valid
  JDK installation. ECHO is off. Press any key to continue . . . I've attempted to open the  idea  properties file to see if there was something I could configure for this  ANDROID_STUDIO_JDK  or something like that. However, I found nothing. I hope some of you can let me know if you were able to install this or if you are having problems as well. 
===LINK===
http://stackoverflow.com/questions/16574189/android-studio-installation-on-windows-7-fails-no-jdk-found
===KEYWORDS===
program process rest echo loaded 
===ANSWER===
438
<html><body><p>Adding a system variable <code>JDK_HOME</code> with value <code>c:\Program Files\Java\jdk1.7.0_21\</code> worked for me. The latest Java release can be downloaded <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">here</a>.</p><p>Additionally, make sure the variable <code>JAVA_HOME</code> is also set with the above location. <a href="http://hints.steptoinstall.com/how-to-set-java_home-environment-variable-in-windows-7-8-for-java.html">Steps are here</a>. <a href="https://www.youtube.com/watch?v=GR1mUi5HSBU">For Video</a></p></body></html>

===ID===
584cc0343e2ca508e5f072e4
===QUESTION===
custom listview adapter getView method being called multiple times, and in no coherent order
I have a custom list adapter: in the overridden 'getView' method I do a print to check what position is and whether it is a convertView or not: The output of this (when the list is first displayed, no user input as yet) AFAIK, though I couldn't find it stated explicitly, getView() is only called for visible rows. Since my app starts with four visible rows at least the position numbers cycling from 0-3 makes sense. But the rest is a mess: I did a bit of reseach, and without getting a good answer, I did notice that people were associating this issue with layout issues. So in case, here's the layout that contains the list: and the layout of each individual row: Thank you for your time 
===LINK===
http://stackoverflow.com/questions/2618272/custom-listview-adapter-getview-method-being-called-multiple-times-and-in-no-co
===KEYWORDS===
afaik displayed rest associating check 
===ANSWER===
231
<html><body><p>This is not an issue, there is absolutely no guarantee on the order in which <code>getView()</code> will be called nor how many times. In your particular case you are doing the worst thing possible with a <code>ListView</code> by giving it a <code>height=wrap_content</code>. This forces <code>ListView</code> to measure a few children out of the adapter at layout time, to know how big it should be. This is what provides <code>ListView</code> with the <code>convertViews</code> you see passed to <code>getView()</code> even before you scroll.</p></body></html>

===ID===
584cc0343e2ca508e5f072e5
===QUESTION===
How to convert number to words in java
We currently have a crude mechanism to convert numbers to words (e.g. using a few static arrays) and based on the size of the number translating that into an english text. But we are running into issues for numbers which are huge. Is there an easy to use function in any of the math libraries which I can use for this purpose? 
===LINK===
http://stackoverflow.com/questions/3911966/how-to-convert-number-to-words-in-java
===KEYWORDS===
function huge based easy purpose 
===ANSWER===
57
<html><body><p><a href="http://www.rgagnon.com/javadetails/java-0426.html">Here</a> is the code, I don't think there is any method in SE.</p><p>It basically converts number to string and parses String and associates it with the weight</p><p><strong>for example</strong></p><pre><code>1000
</code></pre><p><code>1</code> is treated as thousand position and <code>1</code> gets mapped to <code>"one"</code> and thousand because of position</p><p><br>
This is the code from the website:</br></p><p><strong>English</strong></p><pre><code>import java.text.DecimalFormat;

public class EnglishNumberToWords {

  private static final String[] tensNames = {
    "",
    " ten",
    " twenty",
    " thirty",
    " forty",
    " fifty",
    " sixty",
    " seventy",
    " eighty",
    " ninety"
  };

  private static final String[] numNames = {
    "",
    " one",
    " two",
    " three",
    " four",
    " five",
    " six",
    " seven",
    " eight",
    " nine",
    " ten",
    " eleven",
    " twelve",
    " thirteen",
    " fourteen",
    " fifteen",
    " sixteen",
    " seventeen",
    " eighteen",
    " nineteen"
  };

  private EnglishNumberToWords() {}

  private static String convertLessThanOneThousand(int number) {
    String soFar;

    if (number % 100 &lt; 20){
      soFar = numNames[number % 100];
      number /= 100;
    }
    else {
      soFar = numNames[number % 10];
      number /= 10;

      soFar = tensNames[number % 10] + soFar;
      number /= 10;
    }
    if (number == 0) return soFar;
    return numNames[number] + " hundred" + soFar;
  }


  public static String convert(long number) {
    // 0 to 999 999 999 999
    if (number == 0) { return "zero"; }

    String snumber = Long.toString(number);

    // pad with "0"
    String mask = "000000000000";
    DecimalFormat df = new DecimalFormat(mask);
    snumber = df.format(number);

    // XXXnnnnnnnnn
    int billions = Integer.parseInt(snumber.substring(0,3));
    // nnnXXXnnnnnn
    int millions  = Integer.parseInt(snumber.substring(3,6));
    // nnnnnnXXXnnn
    int hundredThousands = Integer.parseInt(snumber.substring(6,9));
    // nnnnnnnnnXXX
    int thousands = Integer.parseInt(snumber.substring(9,12));

    String tradBillions;
    switch (billions) {
    case 0:
      tradBillions = "";
      break;
    case 1 :
      tradBillions = convertLessThanOneThousand(billions)
      + " billion ";
      break;
    default :
      tradBillions = convertLessThanOneThousand(billions)
      + " billion ";
    }
    String result =  tradBillions;

    String tradMillions;
    switch (millions) {
    case 0:
      tradMillions = "";
      break;
    case 1 :
      tradMillions = convertLessThanOneThousand(millions)
         + " million ";
      break;
    default :
      tradMillions = convertLessThanOneThousand(millions)
         + " million ";
    }
    result =  result + tradMillions;

    String tradHundredThousands;
    switch (hundredThousands) {
    case 0:
      tradHundredThousands = "";
      break;
    case 1 :
      tradHundredThousands = "one thousand ";
      break;
    default :
      tradHundredThousands = convertLessThanOneThousand(hundredThousands)
         + " thousand ";
    }
    result =  result + tradHundredThousands;

    String tradThousand;
    tradThousand = convertLessThanOneThousand(thousands);
    result =  result + tradThousand;

    // remove extra spaces!
    return result.replaceAll("^\\s+", "").replaceAll("\\b\\s{2,}\\b", " ");
  }

  /**
   * testing
   * @param args
   */
  public static void main(String[] args) {
    System.out.println("*** " + EnglishNumberToWords.convert(0));
    System.out.println("*** " + EnglishNumberToWords.convert(1));
    System.out.println("*** " + EnglishNumberToWords.convert(16));
    System.out.println("*** " + EnglishNumberToWords.convert(100));
    System.out.println("*** " + EnglishNumberToWords.convert(118));
    System.out.println("*** " + EnglishNumberToWords.convert(200));
    System.out.println("*** " + EnglishNumberToWords.convert(219));
    System.out.println("*** " + EnglishNumberToWords.convert(800));
    System.out.println("*** " + EnglishNumberToWords.convert(801));
    System.out.println("*** " + EnglishNumberToWords.convert(1316));
    System.out.println("*** " + EnglishNumberToWords.convert(1000000));
    System.out.println("*** " + EnglishNumberToWords.convert(2000000));
    System.out.println("*** " + EnglishNumberToWords.convert(3000200));
    System.out.println("*** " + EnglishNumberToWords.convert(700000));
    System.out.println("*** " + EnglishNumberToWords.convert(9000000));
    System.out.println("*** " + EnglishNumberToWords.convert(9001000));
    System.out.println("*** " + EnglishNumberToWords.convert(123456789));
    System.out.println("*** " + EnglishNumberToWords.convert(2147483647));
    System.out.println("*** " + EnglishNumberToWords.convert(3000000010L));

    /*
     *** zero
     *** one
     *** sixteen
     *** one hundred
     *** one hundred eighteen
     *** two hundred
     *** two hundred nineteen
     *** eight hundred
     *** eight hundred one
     *** one thousand three hundred sixteen
     *** one million
     *** two millions
     *** three millions two hundred
     *** seven hundred thousand
     *** nine millions
     *** nine millions one thousand
     *** one hundred twenty three millions four hundred
     **      fifty six thousand seven hundred eighty nine
     *** two billion one hundred forty seven millions
     **      four hundred eighty three thousand six hundred forty seven
     *** three billion ten
     **/
  }
}
</code></pre><p><strong>Français</strong>
Quite different than the english version but french is a lot more difficult!</p><pre><code>package com.rgagnon.howto;

import java.text.*;

class FrenchNumberToWords {
  private static final String[] dizaineNames = {
    "",
    "",
    "vingt",
    "trente",
    "quarante",
    "cinquante",
    "soixante",
    "soixante",
    "quatre-vingt",
    "quatre-vingt"
  };

  private static final String[] uniteNames1 = {
    "",
    "un",
    "deux",
    "trois",
    "quatre",
    "cinq",
    "six",
    "sept",
    "huit",
    "neuf",
    "dix",
    "onze",
    "douze",
    "treize",
    "quatorze",
    "quinze",
    "seize",
    "dix-sept",
    "dix-huit",
    "dix-neuf"
  };

  private static final String[] uniteNames2 = {
    "",
    "",
    "deux",
    "trois",
    "quatre",
    "cinq",
    "six",
    "sept",
    "huit",
    "neuf",
    "dix"
  };

  private FrenchNumberToWords() {}

  private static String convertZeroToHundred(int number) {

    int laDizaine = number / 10;
    int lUnite = number % 10;
    String resultat = "";

    switch (laDizaine) {
    case 1 :
    case 7 :
    case 9 :
      lUnite = lUnite + 10;
      break;
    default:
    }

    // séparateur "-" "et"  ""
    String laLiaison = "";
    if (laDizaine &gt; 1) {
      laLiaison = "-";
    }
    // cas particuliers
    switch (lUnite) {
    case 0:
      laLiaison = "";
      break;
    case 1 :
      if (laDizaine == 8) {
        laLiaison = "-";
      }
      else {
        laLiaison = " et ";
      }
      break;
    case 11 :
      if (laDizaine==7) {
        laLiaison = " et ";
      }
      break;
    default:
    }

    // dizaines en lettres
    switch (laDizaine) {
    case 0:
      resultat = uniteNames1[lUnite];
      break;
    case 8 :
      if (lUnite == 0) {
        resultat = dizaineNames[laDizaine];
      }
      else {
        resultat = dizaineNames[laDizaine]
                                + laLiaison + uniteNames1[lUnite];
      }
      break;
    default :
      resultat = dizaineNames[laDizaine]
                              + laLiaison + uniteNames1[lUnite];
    }
    return resultat;
  }

  private static String convertLessThanOneThousand(int number) {

    int lesCentaines = number / 100;
    int leReste = number % 100;
    String sReste = convertZeroToHundred(leReste);

    String resultat;
    switch (lesCentaines) {
    case 0:
      resultat = sReste;
      break;
    case 1 :
      if (leReste &gt; 0) {
        resultat = "cent " + sReste;
      }
      else {
        resultat = "cent";
      }
      break;
    default :
      if (leReste &gt; 0) {
        resultat = uniteNames2[lesCentaines] + " cent " + sReste;
      }
      else {
        resultat = uniteNames2[lesCentaines] + " cents";
      }
    }
    return resultat;
  }

  public static String convert(long number) {
    // 0 à 999 999 999 999
    if (number == 0) { return "zéro"; }

    String snumber = Long.toString(number);

    // pad des "0"
    String mask = "000000000000";
    DecimalFormat df = new DecimalFormat(mask);
    snumber = df.format(number);

    // XXXnnnnnnnnn
    int lesMilliards = Integer.parseInt(snumber.substring(0,3));
    // nnnXXXnnnnnn
    int lesMillions  = Integer.parseInt(snumber.substring(3,6));
    // nnnnnnXXXnnn
    int lesCentMille = Integer.parseInt(snumber.substring(6,9));
    // nnnnnnnnnXXX
    int lesMille = Integer.parseInt(snumber.substring(9,12));

    String tradMilliards;
    switch (lesMilliards) {
    case 0:
      tradMilliards = "";
      break;
    case 1 :
      tradMilliards = convertLessThanOneThousand(lesMilliards)
         + " milliard ";
      break;
    default :
      tradMilliards = convertLessThanOneThousand(lesMilliards)
         + " milliards ";
    }
    String resultat =  tradMilliards;

    String tradMillions;
    switch (lesMillions) {
    case 0:
      tradMillions = "";
      break;
    case 1 :
      tradMillions = convertLessThanOneThousand(lesMillions)
         + " million ";
      break;
    default :
      tradMillions = convertLessThanOneThousand(lesMillions)
         + " millions ";
    }
    resultat =  resultat + tradMillions;

    String tradCentMille;
    switch (lesCentMille) {
    case 0:
      tradCentMille = "";
      break;
    case 1 :
      tradCentMille = "mille ";
      break;
    default :
      tradCentMille = convertLessThanOneThousand(lesCentMille)
         + " mille ";
    }
    resultat =  resultat + tradCentMille;

    String tradMille;
    tradMille = convertLessThanOneThousand(lesMille);
    resultat =  resultat + tradMille;

    return resultat;
  }

  public static void main(String[] args) {
    System.out.println("*** " + FrenchNumberToWords.convert(0));
    System.out.println("*** " + FrenchNumberToWords.convert(9));
    System.out.println("*** " + FrenchNumberToWords.convert(19));
    System.out.println("*** " + FrenchNumberToWords.convert(21));
    System.out.println("*** " + FrenchNumberToWords.convert(28));
    System.out.println("*** " + FrenchNumberToWords.convert(71));
    System.out.println("*** " + FrenchNumberToWords.convert(72));
    System.out.println("*** " + FrenchNumberToWords.convert(80));
    System.out.println("*** " + FrenchNumberToWords.convert(81));
    System.out.println("*** " + FrenchNumberToWords.convert(89));
    System.out.println("*** " + FrenchNumberToWords.convert(90));
    System.out.println("*** " + FrenchNumberToWords.convert(91));
    System.out.println("*** " + FrenchNumberToWords.convert(97));
    System.out.println("*** " + FrenchNumberToWords.convert(100));
    System.out.println("*** " + FrenchNumberToWords.convert(101));
    System.out.println("*** " + FrenchNumberToWords.convert(110));
    System.out.println("*** " + FrenchNumberToWords.convert(120));
    System.out.println("*** " + FrenchNumberToWords.convert(200));
    System.out.println("*** " + FrenchNumberToWords.convert(201));
    System.out.println("*** " + FrenchNumberToWords.convert(232));
    System.out.println("*** " + FrenchNumberToWords.convert(999));
    System.out.println("*** " + FrenchNumberToWords.convert(1000));
    System.out.println("*** " + FrenchNumberToWords.convert(1001));
    System.out.println("*** " + FrenchNumberToWords.convert(10000));
    System.out.println("*** " + FrenchNumberToWords.convert(10001));
    System.out.println("*** " + FrenchNumberToWords.convert(100000));
    System.out.println("*** " + FrenchNumberToWords.convert(2000000));
    System.out.println("*** " + FrenchNumberToWords.convert(3000000000L));
    System.out.println("*** " + FrenchNumberToWords.convert(2147483647));
    /*
     *** OUTPUT
     *** zéro
     *** neuf
     *** dix-neuf
     *** vingt et un
     *** vingt-huit
     *** soixante et onze
     *** soixante-douze
     *** quatre-vingt
     *** quatre-vingt-un
     *** quatre-vingt-neuf
     *** quatre-vingt-dix
     *** quatre-vingt-onze
     *** quatre-vingt-dix-sept
     *** cent
     *** cent un
     *** cent dix
     *** cent vingt
     *** deux cents
     *** deux cent un
     *** deux cent trente-deux
     *** neuf cent quatre-vingt-dix-neuf
     *** mille
     *** mille un
     *** dix mille
     *** dix mille un
     *** cent mille
     *** deux millions
     *** trois milliards
     *** deux milliards cent quarante-sept millions
     **          quatre cent quatre-vingt-trois mille six cent quarante-sept
     */
  }
}
</code></pre><p>You can handle "dollar and cent" conversion by calling the "convert" method two times.</p><pre><code>String phrase = "12345.67" ;
Float num = new Float( phrase ) ;
int dollars = (int)Math.floor( num ) ;
int cent = (int)Math.floor( ( num - dollars ) * 100.0f ) ;

String s = "$ " + EnglishNumberToWords.convert( dollars ) + " and "
           + EnglishNumberToWords.convert( cent ) + " cents" ;
</code></pre><p>Another way to use a built-in function of your DBMS (if available).
For <strong>Oracle</strong></p><pre><code>SQL&gt; select to_char(to_date(873,'J'), 'JSP') as converted_form from dual;

CONVERTED_FORM
---------------------------
EIGHT HUNDRED SEVENTY-THREE

SQL&gt;
'JSP' means :
J : the Julian format.
SP : spells the word for the number passed to to_date
</code></pre></body></html>

===ID===
584cc0353e2ca508e5f072e6
===QUESTION===
Downcasting in Java
Upcasting is allowed in Java, however downcasting gives a compile error.  The compile error can be removed by adding a cast but would anyway break at the runtime.  In this case why Java allows downcasting if it cannot be executed at the runtime? 
Is there any practical use for this concept?  
===LINK===
http://stackoverflow.com/questions/380813/downcasting-in-java
===KEYWORDS===
case adding runtime java upcasting 
===ANSWER===
199
<html><body><p>Downcasting is allowed when there is a possibility that it suceeds at run time:</p><pre><code>Object o = getSomeObject(),
String s = (String) o; // this is allowed because o could reference a String
</code></pre><p>In some cases this will not succeed:</p><pre><code>Object o = new Object();
String s = (String) o; // this will fail at runtime, because o doesn't reference a String
</code></pre><p>In others it will work:</p><pre><code>Object o = "a String";
String s = (String) o; // this will work, since o references a String
</code></pre><p>Note that some casts will be disallowed at compile time, because they will never succeed at all:</p><pre><code>Integer i = getSomeInteger();
String s = (String) i; // the compiler will not allow this, since i can never reference a String.
</code></pre></body></html>

===ID===
584cc0353e2ca508e5f072e7
===QUESTION===
How to get a list of current open windows/process with Java?
Does any one know how do I get the current open windows or process of a local machine using Java?   What I'm trying to do is: list the current open task, windows or process open, like in  Windows Taskmanager, but using a multi-platform approach - using only Java if it's possible. 
===LINK===
http://stackoverflow.com/questions/54686/how-to-get-a-list-of-current-open-windows-process-with-java
===KEYWORDS===
process list multi java windows 
===ANSWER===
71
<html><body><p>This is another approach to parse the the process list from the command "<strong>ps -e</strong>":</p><pre><code>try {
    String line;
    Process p = Runtime.getRuntime().exec("ps -e");
    BufferedReader input =
            new BufferedReader(new InputStreamReader(p.getInputStream()));
    while ((line = input.readLine()) != null) {
        System.out.println(line); //&lt;-- Parse data here.
    }
    input.close();
} catch (Exception err) {
    err.printStackTrace();
}
</code></pre><p>If you are using Windows, then you should change the line: "Process p = Runtime.getRun..." etc... (3rd line), for one that looks like this:</p><pre><code>Process p = Runtime.getRuntime().exec
    (System.getenv("windir") +"\\system32\\"+"tasklist.exe");
</code></pre><p>Hope the info helps!</p></body></html>

===ID===
584cc0363e2ca508e5f072e8
===QUESTION===
How to increase the Java stack size?
I asked this question to get to know how to increase the runtime call stack size in the JVM. I've got an answer to this, and I've also got many useful answers and comments relevant to how Java handles the situation where a large runtime stack is needed. I've extended my question with the summary of the responses. Originally I wanted to increase the JVM stack size so programs like runs without a  StackOverflowError . The corresponding configuration setting is the  java -Xss...  command-line flag with a large enough value. For the program  TT  above, it works like this with OpenJDK's JVM: One of the answers has also pointed out that the  -X...  flags are implementation dependent. I was using It is also possible to specify a large stack only for one thread (see in one of the answers how). This is recommended over  java -Xss...  to avoid wasting memory for threads that don't need it. I was curious how large a stack the program above exactly needs, so I've run it  n  increased: From the numbers above it seems that Java is using about 16 bytes per stack frame for the function above, which is reasonable. The enumeration above contains  can be enough  instead of  is enough , because the stack requirement is not deterministic: running it multiple times with the same source file and the same  -Xss...  sometimes succeeds and sometimes yields a  StackOverflowError . E.g. for 1 << 20,  -Xss18m  was enough in 7 runs out of 10, and  -Xss19m  wasn't always enough either, but  -Xss20m  was enough (in all 100 runs out of 100). Does garbage collection, the JIT kicking in, or something else cause this nondeterministic behavior? The stack trace printed at a  StackOverflowError  (and possibly at other exceptions as well) shows only the most recent 1024 elements of the runtime stack. An answer below demonstrates how to count the exact depth reached (which might be a lot larger than 1024). Many people who responded has pointed out that it is a good and safe coding practice to consider alternative, less stack-hungry implementations of the same algorithm. In general, it is possible to convert to a set of recursive functions to iterative functions (using a e.g.  Stack  object, which gets populated on the heap instead of on the runtime stack). For this particular  fact  function, it is quite easy to convert it. My iterative version would look like: FYI, as the iterative solution above shows it, the  fact  function cannot compute the exact factorial of numbers above 65 (actually, even above 20), because the Java built-in type  long  would overflow. Refactoring  fact  so it would return a  BigInteger  instead of  long  would yield exact results for large inputs as well. 
===LINK===
http://stackoverflow.com/questions/3700459/how-to-increase-the-java-stack-size
===KEYWORDS===
set succeeds pointed easy people 
===ANSWER===
46
<html><body><p>Hmm... it works for me and with far less than 999MB of stack:</p><pre><code>&gt; java -Xss4m Test
0
</code></pre><p>(Windows JDK 7, build 17.0-b05 client VM, and Linux JDK 6 - same version information as you posted)</p></body></html>

===ID===
584cc0363e2ca508e5f072e9
===QUESTION===
Java Bouncing Ball
I am trying to write a Java application which draws multiple balls on screen which bounce off of the edges of the frame. I can successfully draw one ball. However when I add the second ball it overwrites the initial ball that I have drawn. The code is: I wanted to create a List of balls and then cycle through drawing each of the balls but I'm still having trouble adding both balls to the Content Pane. Thanks for any help. 
===LINK===
http://stackoverflow.com/questions/13022754/java-bouncing-ball
===KEYWORDS===
code ball list screen balls 
===ANSWER===
22
<html><body><p>.</p><pre><code>public class AnimatedBalls {

    public static void main(String[] args) {
        new AnimatedBalls();
    }

    public AnimatedBalls() {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                } catch (InstantiationException ex) {
                } catch (IllegalAccessException ex) {
                } catch (UnsupportedLookAndFeelException ex) {
                }

                JFrame frame = new JFrame();
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setLayout(new BorderLayout());
                frame.add(new Balls());
                frame.setSize(400, 400);
                frame.setVisible(true);
            }
        });
    }

    public class Balls extends JPanel {

        public Balls() {
            setLayout(null);
            // Randomize the speed and direction...
            add(new Ball("red", 10 - (int) Math.round((Math.random() * 20)), 10 - (int) Math.round((Math.random() * 20))));
            add(new Ball("blue", 10 - (int) Math.round((Math.random() * 20)), 10 - (int) Math.round((Math.random() * 20))));
        }
    }

    public class Ball extends JPanel implements Runnable {

        Color color;
        int diameter;
        long delay;
        private int vx;
        private int vy;

        public Ball(String ballcolor, int xvelocity, int yvelocity) {
            if (ballcolor == "red") {
                color = Color.red;
            } else if (ballcolor == "blue") {
                color = Color.blue;
            } else if (ballcolor == "black") {
                color = Color.black;
            } else if (ballcolor == "cyan") {
                color = Color.cyan;
            } else if (ballcolor == "darkGray") {
                color = Color.darkGray;
            } else if (ballcolor == "gray") {
                color = Color.gray;
            } else if (ballcolor == "green") {
                color = Color.green;
            } else if (ballcolor == "yellow") {
                color = Color.yellow;
            } else if (ballcolor == "lightGray") {
                color = Color.lightGray;
            } else if (ballcolor == "magenta") {
                color = Color.magenta;
            } else if (ballcolor == "orange") {
                color = Color.orange;
            } else if (ballcolor == "pink") {
                color = Color.pink;
            } else if (ballcolor == "white") {
                color = Color.white;
            }
            diameter = 30;
            delay = 100;

            vx = xvelocity;
            vy = yvelocity;

            new Thread(this).start();

        }

        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2 = (Graphics2D) g;

            int x = getX();
            int y = getY();

            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g.setColor(color);
            g.fillOval(0, 0, 30, 30); //adds color to circle
            g.setColor(Color.black);
            g2.drawOval(0, 0, 30, 30); //draws circle
        }

        @Override
        public Dimension getPreferredSize() {
            return new Dimension(30, 30);
        }

        public void run() {

            try {
                // Randamize the location...
                SwingUtilities.invokeAndWait(new Runnable() {
                    @Override
                    public void run() {
                        int x = (int) (Math.round(Math.random() * getParent().getWidth()));
                        int y = (int) (Math.round(Math.random() * getParent().getHeight()));

                        setLocation(x, y);
                    }
                });
            } catch (InterruptedException exp) {
                exp.printStackTrace();
            } catch (InvocationTargetException exp) {
                exp.printStackTrace();
            }

            while (isVisible()) {
                try {
                    Thread.sleep(delay);
                } catch (InterruptedException e) {
                    System.out.println("interrupted");
                }

                try {
                    SwingUtilities.invokeAndWait(new Runnable() {
                        @Override
                        public void run() {
                            move();
                            repaint();
                        }
                    });
                } catch (InterruptedException exp) {
                    exp.printStackTrace();
                } catch (InvocationTargetException exp) {
                    exp.printStackTrace();
                }
            }
        }

        public void move() {

            int x = getX();
            int y = getY();

            if (x + vx &lt; 0 || x + diameter + vx &gt; getParent().getWidth()) {
                vx *= -1;
            }
            if (y + vy &lt; 0 || y + diameter + vy &gt; getParent().getHeight()) {
                vy *= -1;
            }
            x += vx;
            y += vy;

            // Update the size and location...
            setSize(getPreferredSize());
            setLocation(x, y);

        }
    }
}
</code></pre><p>The "major" problem with this approach, is each <code>Ball</code> has it's own <code>Thread</code>.  This is going to eat into your systems resources real quick as you scale the number of balls up...</p><p>As started by Hovercraft, you're better off creating a container for the balls to live in, where the balls are not components but are "virtual" concepts of a ball, containing enough information to make it possible to bounce them off the walls...</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/zkWum.png"/></p><pre><code>public class SimpleBalls {

    public static void main(String[] args) {
        new SimpleBalls();
    }

    public SimpleBalls() {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException ex) {
                } catch (InstantiationException ex) {
                } catch (IllegalAccessException ex) {
                } catch (UnsupportedLookAndFeelException ex) {
                }

                JFrame frame = new JFrame("Spot");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.setLayout(new BorderLayout());
                Balls balls = new Balls();
                frame.add(balls);
                frame.setSize(400, 400);
                frame.setVisible(true);

                new Thread(new BounceEngine(balls)).start();

            }
        });
    }

    public static int random(int maxRange) {
        return (int) Math.round((Math.random() * maxRange));
    }

    public class Balls extends JPanel {

        private List&lt;Ball&gt; ballsUp;

        public Balls() {
            ballsUp = new ArrayList&lt;Ball&gt;(25);

            for (int index = 0; index &lt; 10 + random(90); index++) {
                ballsUp.add(new Ball(new Color(random(255), random(255), random(255))));
            }
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g.create();
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            for (Ball ball : ballsUp) {
                ball.paint(g2d);
            }
            g2d.dispose();
        }

        public List&lt;Ball&gt; getBalls() {
            return ballsUp;
        }
    }

    public class BounceEngine implements Runnable {

        private Balls parent;

        public BounceEngine(Balls parent) {
            this.parent = parent;
        }

        @Override
        public void run() {

            int width = getParent().getWidth();
            int height = getParent().getHeight();

            // Randomize the starting position...
            for (Ball ball : getParent().getBalls()) {
                int x = random(width);
                int y = random(height);

                Dimension size = ball.getSize();

                if (x + size.width &gt; width) {
                    x = width - size.width;
                }
                if (y + size.height &gt; height) {
                    y = height - size.height;
                }

                ball.setLocation(new Point(x, y));

            }

            while (getParent().isVisible()) {

                // Repaint the balls pen...
                SwingUtilities.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        getParent().repaint();
                    }
                });

                // This is a little dangrous, as it's possible
                // for a repaint to occur while we're updating...
                for (Ball ball : getParent().getBalls()) {
                    move(ball);
                }

                // Some small delay...
                try {
                    Thread.sleep(100);
                } catch (InterruptedException ex) {
                }

            }

        }

        public Balls getParent() {
            return parent;
        }

        public void move(Ball ball) {

            Point p = ball.getLocation();
            Point speed = ball.getSpeed();
            Dimension size = ball.getSize();

            int vx = speed.x;
            int vy = speed.y;

            int x = p.x;
            int y = p.y;

            if (x + vx &lt; 0 || x + size.width + vx &gt; getParent().getWidth()) {
                vx *= -1;
            }
            if (y + vy &lt; 0 || y + size.height + vy &gt; getParent().getHeight()) {
                vy *= -1;
            }
            x += vx;
            y += vy;

            ball.setSpeed(new Point(vx, vy));
            ball.setLocation(new Point(x, y));

        }
    }

    public class Ball {

        private Color color;
        private Point location;
        private Dimension size;
        private Point speed;

        public Ball(Color color) {

            setColor(color);

            speed = new Point(10 - random(20), 10 - random(20));
            size = new Dimension(30, 30);

        }

        public Dimension getSize() {
            return size;
        }

        public void setColor(Color color) {
            this.color = color;
        }

        public void setLocation(Point location) {
            this.location = location;
        }

        public Color getColor() {
            return color;
        }

        public Point getLocation() {
            return location;
        }

        public Point getSpeed() {
            return speed;
        }

        public void setSpeed(Point speed) {
            this.speed = speed;
        }

        protected void paint(Graphics2D g2d) {

            Point p = getLocation();
            if (p != null) {
                g2d.setColor(getColor());
                Dimension size = getSize();
                g2d.fillOval(p.x, p.y, size.width, size.height);
            }

        }
    }
}
</code></pre><p>Because this is driven by a single thread, it is much more scalable.</p><p>You can also check out <a href="http://stackoverflow.com/questions/12642852/the-images-are-not-loading/12648265#12648265">the images are not loading</a> which is a similar question ;)</p></body></html>

===ID===
584cc0373e2ca508e5f072ea
===QUESTION===
Waiting for multiple SwingWorkers
Please consider the following code fragment: Here is add a label to the applet that displays some intermediate results of the Worker thread (using publish/process methods). At the end, the label is removed from the applet's pane. My question is, how could I create several labels, each with its own Worker thread, and remove them when they are all done? Thanks in advance. UPDATE: I hope this will clarify my question. I'd like the labels to be removed all at once, when all of the workers have finished their tasks, not immediately after each worker has finished. UPDATE 2: The following code seems to be doing what I need. Please comment whether I did it the right way. I have a feeling there is something wrong. One problem is that the labels to the right of the button remain visible although they are removed. setVisible(false) seems to solve this issue. Is that the way to do it? 
===LINK===
http://stackoverflow.com/questions/11366330/waiting-for-multiple-swingworkers
===KEYWORDS===
comment tasks false labels code 
===ANSWER===
14
<html><body><p>I intend to remove all of the labels together when all of the workers have completed their tasks.</p><p>As described <a href="http://stackoverflow.com/a/3588523/230513">here</a>, a <code>CountDownLatch</code> works well in this context. In the example below, each worker invokes <code>latch.countDown()</code> on completion, and a <code>Supervisor</code> worker blocks on <code>latch.await()</code> until all tasks complete. For demonstration purposes, the <code>Supervisor</code> updates the labels. Wholesale removal, shown in comments, is technically possible but generally unappealing. Instead, consider a <code>JList</code> or <code>JTable</code>.</p><p><img alt="Worker Latch Test" src="https://i.stack.imgur.com/xFPey.png"/></p><pre><code>import java.awt.Color;
import java.awt.EventQueue;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Random;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.*;

/**
* @see http://stackoverflow.com/a/11372932/230513
* @see http://stackoverflow.com/a/3588523/230513
*/
public class WorkerLatchTest extends JApplet {

    private static final int N = 8;
    private static final Random rand = new Random();
    private Queue&lt;JLabel&gt; labels = new LinkedList&lt;JLabel&gt;();
    private JPanel panel = new JPanel(new GridLayout(0, 1));
    private JButton startButton = new JButton(new StartAction("Do work"));

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                JFrame frame = new JFrame();
                frame.setTitle("Test");
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                frame.add(new WorkerLatchTest().createGUI());
                frame.pack();
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    @Override
    public void init() {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                add(new WorkerLatchTest().createGUI());
            }
        });
    }

    private JPanel createGUI() {
        for (int i = 0; i &lt; N; i++) {
            JLabel label = new JLabel("0", JLabel.CENTER);
            label.setOpaque(true);
            panel.add(label);
            labels.add(label);
        }
        panel.add(startButton);
        return panel;
    }

    private class StartAction extends AbstractAction {

        private StartAction(String name) {
            super(name);
        }

        @Override
        public void actionPerformed(ActionEvent e) {
                startButton.setEnabled(false);
                CountDownLatch latch = new CountDownLatch(N);
                ExecutorService executor = Executors.newFixedThreadPool(N);
                for (JLabel label : labels) {
                    label.setBackground(Color.white);
                    executor.execute(new Counter(label, latch));
                }
                new Supervisor(latch).execute();
        }
    }

    private class Supervisor extends SwingWorker&lt;Void, Void&gt; {

        CountDownLatch latch;

        public Supervisor(CountDownLatch latch) {
            this.latch = latch;
        }

        @Override
        protected Void doInBackground() throws Exception {
            latch.await();
            return null;
        }

        @Override
        protected void done() {
            for (JLabel label : labels) {
                label.setText("Fin!");
                label.setBackground(Color.lightGray);
            }
            startButton.setEnabled(true);
            //panel.removeAll(); panel.revalidate(); panel.repaint();
        }
    }

    private static class Counter extends SwingWorker&lt;Void, Integer&gt; {

        private JLabel label;
        CountDownLatch latch;

        public Counter(JLabel label, CountDownLatch latch) {
            this.label = label;
            this.latch = latch;
        }

        @Override
        protected Void doInBackground() throws Exception {
            int latency = rand.nextInt(42) + 10;
            for (int i = 1; i &lt;= 100; i++) {
                publish(i);
                Thread.sleep(latency);
            }
            return null;
        }

        @Override
        protected void process(List&lt;Integer&gt; values) {
            label.setText(values.get(values.size() - 1).toString());
        }

        @Override
        protected void done() {
            label.setBackground(Color.green);
            latch.countDown();
        }
    }
}
</code></pre></body></html>

===ID===
584cc0373e2ca508e5f072eb
===QUESTION===
Why can't I do assignment outside a method?
If I try to assign a value to a variable in a class, but outside a method I get an error. but, if I initialize it during the creation, it works. Inside a method, it works in both cases. 
===LINK===
http://stackoverflow.com/questions/12062481/why-cant-i-do-assignment-outside-a-method
===KEYWORDS===
assignment class creation inside assign 
===ANSWER===
15
<html><body><p>you need to do</p><pre><code>class one{
 Integer b;
 {
    b=Integer.valueOf(2);
 }
}
</code></pre><p>as statements have to appear in a block of code.</p><p>In this case, the block is an initailiser block which is added to every constructor (or the default constructor in this case) It is run after any call to <code>super()</code> and before the main block of code in any constructor.</p><p>BTW: You can have a static initialiser block with <code>static { }</code> which is called when the class is initialised.</p><p>e.g.</p><pre><code>class one{
 static final Integer b;

 static {
    b=Integer.valueOf(2);
 }
}
</code></pre></body></html>

===ID===
584cc0383e2ca508e5f072ec
===QUESTION===
Https Connection Android
I am doing a https post and I'm getting an exception of ssl exception Not trusted server certificate. If i do normal http it is working perfectly fine. Do I have to accept the server certificate somehow? 
===LINK===
http://stackoverflow.com/questions/995514/https-connection-android
===KEYWORDS===
exception accept 
===ANSWER===
45
<html><body><p>I'm making a guess, but if you want an actual handshake to occur, you have to let android know of your certificate.  If you want to just accept no matter what, then use this pseudo-code to get what you need with the Apache HTTP Client:</p><pre><code>SchemeRegistry schemeRegistry = new SchemeRegistry ();

schemeRegistry.register (new Scheme ("http",
    PlainSocketFactory.getSocketFactory (), 80));
schemeRegistry.register (new Scheme ("https",
    new CustomSSLSocketFactory (), 443));

ThreadSafeClientConnManager cm = new ThreadSafeClientConnManager (
    params, schemeRegistry);


return new DefaultHttpClient (cm, params);
</code></pre><p>CustomSSLSocketFactory:</p><pre><code>public class CustomSSLSocketFactory extends org.apache.http.conn.ssl.SSLSocketFactory
{
private SSLSocketFactory FACTORY = HttpsURLConnection.getDefaultSSLSocketFactory ();

public CustomSSLSocketFactory ()
    {
    super(null);
    try
        {
        SSLContext context = SSLContext.getInstance ("TLS");
        TrustManager[] tm = new TrustManager[] { new FullX509TrustManager () };
        context.init (null, tm, new SecureRandom ());

        FACTORY = context.getSocketFactory ();
        }
    catch (Exception e)
        {
        e.printStackTrace();
        }
    }

public Socket createSocket() throws IOException
{
    return FACTORY.createSocket();
}

 // TODO: add other methods like createSocket() and getDefaultCipherSuites().
 // Hint: they all just make a call to member FACTORY 
}
</code></pre><p>FullX509TrustManager is a class that implements javax.net.ssl.X509TrustManager, yet none of the methods actually perform any work, get a sample <a href="http://hc.apache.org/httpcomponents-client-ga/tutorial/html/connmgmt.html#d4e537" rel="nofollow noreferrer">here</a>.</p><p>Good Luck!</p></body></html>

===ID===
584cc0383e2ca508e5f072ed
===QUESTION===
Declaring variables inside or outside of a loop
Why does the following work fine? But this one is said to be dangerous/incorrect: Is it necessary to declare variables outside the loop? 
===LINK===
http://stackoverflow.com/questions/8803674/declaring-variables-inside-or-outside-of-a-loop
===KEYWORDS===
loop dangerous/incorrect 
===ANSWER===
203
<html><body><p>In your example I presume <code>str</code> is <em>not</em> used outside of the <code>while</code> loop, otherwise you would not be asking the question, because declaring it inside the <code>while</code> loop would not be an option, since it would not compile.</p><p>So, since <code>str</code> is <em>not</em> used outside the loop, the smallest possible scope for <code>str</code> is <em>within</em> the while loop.</p><p>So, the answer is <em>emphatically</em> that <code>str</code> absolutely ought to be declared within the while loop. No ifs, no ands, no buts.</p><p>The only case where this rule might be violated is if for some reason it is of vital importance that every clock cycle must be squeezed out of the code, in which case you might want to consider instantiating something in an outer scope and reusing it instead of re-instantiating it on every iteration of an inner scope. However, this does not apply to your example, due to the immutability of strings in java: a new instance of str will always be created in the beginning of your loop and it will have to be thrown away at the end of it, so there is no possibility to optimize there.</p><p><strong>EDIT:</strong> (this is something that I wrote in a comment below, but I think it is worth making part of the answer.)</p><p>In any case, the right way to do things is to write all your code properly, establish a performance requirement for your product, measure your final product against this requirement, and if it does not satisfy it, then go optimize things. And what usually ends up happening is that you find ways to provide some nice and formal algorithmic optimizations in just a couple of places which make our program meet its performance requirements instead of having to go all over your entire code base and tweak and hack things in order to squeeze clock cycles here and there.</p></body></html>

===ID===
584cc0393e2ca508e5f072ee
===QUESTION===
How can I play sound in Java?
I want to be able to play sound files in my program. Where should I look? 
===LINK===
http://stackoverflow.com/questions/26305/how-can-i-play-sound-in-java
===KEYWORDS===
program java 
===ANSWER===
98
<html><body><p>I wrote the following code that works fine. But I think it only works with <code>.wav</code> format.</p><pre><code>public static synchronized void playSound(final String url) {
  new Thread(new Runnable() {
  // The wrapper thread is unnecessary, unless it blocks on the
  // Clip finishing; see comments.
    public void run() {
      try {
        Clip clip = AudioSystem.getClip();
        AudioInputStream inputStream = AudioSystem.getAudioInputStream(
          Main.class.getResourceAsStream("/path/to/sounds/" + url));
        clip.open(inputStream);
        clip.start(); 
      } catch (Exception e) {
        System.err.println(e.getMessage());
      }
    }
  }).start();
}
</code></pre></body></html>

===ID===
584cc0393e2ca508e5f072ef
===QUESTION===
How do I programmatically compile and instantiate a Java class?
I have the class name stored in a property file. I know that the classes store will implement IDynamicLoad. How do I instantiate the class dynamically? Right now I have Does the newInstance only load compiled .class files? How do I load a Java Class that is not compiled? 
===LINK===
http://stackoverflow.com/questions/2946338/how-do-i-programmatically-compile-and-instantiate-a-java-class
===KEYWORDS===
load newinstance compiled instantiate stored 
===ANSWER===
101
<html><body><p><em>How do I load a Java Class that is not compiled?</em></p><p>You need to compile it first. This can be done programmatically with the <a href="http://docs.oracle.com/javase/8/docs/api/javax/tools/package-summary.html" rel="nofollow noreferrer"><code>javax.tools</code> API</a>. This only requires the <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" rel="nofollow noreferrer">JDK</a> being installed at the local machine on top of JRE. </p><p>Here's a basic kickoff example (leaving obvious exception handling aside):</p><pre><code>// Prepare source somehow.
String source = "package test; public class Test { static { System.out.println(\"hello\"); } public Test() { System.out.println(\"world\"); } }";

// Save source in .java file.
File root = new File("/java"); // On Windows running on C:\, this is C:\java.
File sourceFile = new File(root, "test/Test.java");
sourceFile.getParentFile().mkdirs();
Files.write(sourceFile.toPath(), source.getBytes(StandardCharsets.UTF_8));

// Compile source file.
JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
compiler.run(null, null, null, sourceFile.getPath());

// Load and instantiate compiled class.
URLClassLoader classLoader = URLClassLoader.newInstance(new URL[] { root.toURI().toURL() });
Class&lt;?&gt; cls = Class.forName("test.Test", true, classLoader); // Should print "hello".
Object instance = cls.newInstance(); // Should print "world".
System.out.println(instance); // Should print "test.Test@hashcode".
</code></pre><p>Which yields like</p><pre><code>hello
world
test.Test@ab853b
</code></pre><p>Further use would be more easy if those classes <code>implements</code> a certain interface which is already in the classpath. </p><pre><code>SomeInterface instance = (SomeInterface) cls.newInstance();
</code></pre><p>Otherwise you need to involve the <a href="http://docs.oracle.com/javase/tutorial/reflect/" rel="nofollow noreferrer">Reflection API</a> to access and invoke the (unknown) methods/fields.</p><p>That said and unrelated to the actual problem:</p><pre><code>properties.load(new FileInputStream(new File("ClassName.properties")));
</code></pre><p>Letting <code>java.io.File</code> rely on current working directory is recipe for portability trouble. Don't do that. Put that file in classpath and use <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/ClassLoader.html#getResourceAsStream-java.lang.String-" rel="nofollow noreferrer"><code>ClassLoader#getResourceAsStream()</code></a>  with a classpath-relative path. </p><pre><code>properties.load(Thread.currentThread().getContextClassLoader().getResourceAsStream("ClassName.properties"));
</code></pre></body></html>

===ID===
584cc03a3e2ca508e5f072f0
===QUESTION===
Why is January month 0 in Java Calendar?
In  java.util.Calendar , January is defined as month 0, not month 1. Is there any specific reason to that ? I have seen many people getting confused about that... 
===LINK===
http://stackoverflow.com/questions/344380/why-is-january-month-0-in-java-calendar
===KEYWORDS===
java people defined january confused 
===ANSWER===
245
<html><body><p>It's just part of the horrendous mess which is the Java date/time API. Listing what's wrong with it would take a very long time (and I'm sure I don't know half of the problems). Admittedly working with dates and times is tricky, but aaargh anyway.</p><p>Do yourself a favour and use <a href="http://joda-time.sourceforge.net/" rel="nofollow noreferrer">Joda Time</a> instead, or possibly <a href="http://sourceforge.net/apps/mediawiki/threeten/index.php?title=ThreeTen" rel="nofollow noreferrer">JSR-310</a>.</p><p>EDIT: As for the reasons why - as noted in other answers, it could well be due to old C APIs, or just a general feeling of starting everything from 0... except that days start with 1, of course. I doubt whether anyone outside the original implementation team could really state reasons - but again, I'd urge readers not to worry so much about <em>why</em> bad decisions were taken, as to look at the whole gamut of nastiness in <code>java.util.Calendar</code> and find something better.</p><p>One point which <em>is</em> in favour of using 0-based indexes is that it makes things like "arrays of names" easier:</p><pre><code>// I "know" there are 12 months
String[] monthNames = new String[12]; // and populate...
String name = monthNames[calendar.get(Calendar.MONTH)];
</code></pre><p>Of course, this fails as soon as you get a calendar with 13 months... but at least the size specified is the number of months you expect.</p><p>This isn't a <em>good</em> reason, but it's <em>a</em> reason...</p><p>EDIT: As a comment sort of requests some ideas about what I think is wrong with Date/Calendar:</p></body></html>

===ID===
584cc03a3e2ca508e5f072f1
===QUESTION===
How are SSL certificate server names resolved/Can I add alternative names using keytool?
These may be phrased as separate questions for clarity, but they are all related to the same issue. How are SSL certificate server names resolved? Why do browsers seem to use the CN field of the certificate, but Java's mechanism seem to only look at "subject alternative names" only? Is it possible to add alternative names to a SSL certificate using keytool?
If not, is using openSSL instead a good option?? Just a little background:  I need to get a main server to communicate with several servers using HTTPS. Obviously, we don't want to buy SSL certificates for every server (there could be many), so I want to use self-signed certificates (I have been using keytool to generate them). After I add the certificates as trusted in the OS, the browsers (IE and Chrome) happily accept the connection as trusted. However, even after adding the certificates to Java's cacerts, Java still won't accept the connection as trusted and throws the following Exception: Caused by: java.security.cert.CertificateException: No subject alternative names
   present
          at sun.security.util.HostnameChecker.matchIP(HostnameChecker.java:142)
          at sun.security.util.HostnameChecker.match(HostnameChecker.java:75)
          at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkIdentity(X509T
  rustManagerImpl.java:264)
          at com.sun.net.ssl.internal.ssl.X509TrustManagerImpl.checkServerTrusted(
  X509TrustManagerImpl.java:250)
          at com.sun.net.ssl.internal.ssl.ClientHandshaker.serverCertificate(Clien
  tHandshaker.java:1185)
          ... 14 more I found that I can make Java trust the certificate implementing my own HostNameVerifier, which I copied from here:  com.sun.jbi.internal.security.https.DefaultHostnameVerifier  just to test (by the way, the hostname passed as an argument to the HostnameVerifier is correct, so I think it should have been accepted). I have been using the certificate field CN as the hostname (usually the IP address). Can anybody please tell me if I am doing something wrong and point me in the right direction?  
===LINK===
http://stackoverflow.com/questions/8443081/how-are-ssl-certificate-server-names-resolved-can-i-add-alternative-names-using
===KEYWORDS===
checkservertrusted checkidentity point caused argument 
===ANSWER===
67
<html><body><p>How host name verification should be done is defined in <a href="http://tools.ietf.org/html/rfc6125">RFC 6125</a>, which is quite recent and generalises the practice to all protocols, and replaces <a href="http://tools.ietf.org/html/rfc2818">RFC 2818</a>, which was specific to HTTPS. (I'm not even sure Java 7 uses RFC 6125, which might be too recent for this.)</p><p>From <a href="http://tools.ietf.org/html/rfc2818#section-3.1">RFC 2818 (Section 3.1)</a>:</p><p>If a subjectAltName extension of type dNSName is present, that MUST
  be used as the identity. Otherwise, the (most specific) Common Name 
  field in the Subject field of the certificate MUST be used. Although 
  the use of the Common Name is existing practice, it is deprecated and
  Certification Authorities are encouraged to use the dNSName instead.</p><p>[...]</p><p>In some cases, the URI is specified as an IP address rather than a
  hostname. In this case, the iPAddress subjectAltName must be present 
  in the certificate and must exactly match the IP in the URI.</p><p>Essentially, the specific problem you have comes from the fact that you're using IP addresses in your CN and not a host name. Some browsers might work because not all tools follow this specification strictly, in particular because "most specific" in RFC 2818 isn't clearly defined (see discussions in RFC 6215).</p><p>If you're using <code>keytool</code>, <a href="http://docs.oracle.com/javase/7/docs/technotes/tools/solaris/keytool.html">as of Java 7, <code>keytool</code></a> has an option to include a Subject Alternative Name (see the table in the documentation for <code>-ext</code>): you could use <code>-ext san=dns:www.example.com</code> or <code>-ext san=ip:10.0.0.1</code>.</p><p><strong>EDIT:</strong></p><p>You can request a SAN in OpenSSL by changing <code>openssl.cnf</code> (it will pick the copy in the current directory if you don't want to edit the global configuration, as far as I remember, or you can choose an explicit location using the <code>OPENSSL_CONF</code> environment variable).</p><p>Set the following options (find the appropriate sections within brackets first):</p><pre><code>[req]
req_extensions = v3_req

[ v3_req ]
subjectAltName=IP:10.0.0.1
# or subjectAltName=DNS:www.example.com
</code></pre><p>There's also a nice trick to use an environment variable for this (rather in than fixing it in a configuration file) here: <a href="http://www.crsr.net/Notes/SSL.html">http://www.crsr.net/Notes/SSL.html</a></p></body></html>

===ID===
584cc03b3e2ca508e5f072f2
===QUESTION===
Java Reflection: How to get the name of a variable?
Using Java Reflection, is it possible to get the name of a local variable?  For example, if I have this: is it possible to implement a method that can find the names of those variables, like so: EDIT: This question is different from  Is there a way in Java to find the name of the variable that was passed to a function?  in that it more purely asks the question about whether one can use reflection to determine the name of a local variable, whereas the other question (including the accepted answer) is more focused on testing values of variables. 
===LINK===
http://stackoverflow.com/questions/744226/java-reflection-how-to-get-the-name-of-a-variable
===KEYWORDS===
function java reflection edit variables 
===ANSWER===
50
<html><body><p>As of Java 8, some local variable name information is available through reflection. See the <em>"Update"</em> section below.</p><p>Complete information is often stored in class files. One compile-time optimization is to remove it, saving space (and providing some obsfuscation). However, when it is is present, each method has a local variable table attribute that lists the type and name of local variables, and the range of instructions where they are in scope.</p><p>Perhaps a byte-code engineering library like <a href="http://asm.ow2.org/" rel="nofollow noreferrer">ASM</a> would allow you to inspect this information at runtime. The only reasonable place I can think of for needing this information is in a development tool, and so byte-code engineering is likely to be useful for other purposes too.</p><p><em>Update:</em> Limited support for this was <a href="http://openjdk.java.net/jeps/118" rel="nofollow noreferrer">added to Java 8.</a> Parameter (a special class of local variable) names are now available via reflection. Among other purposes, this can help to replace <code>@ParameterName</code> annotations used by dependency injection containers.</p></body></html>

===ID===
584cc03b3e2ca508e5f072f3
===QUESTION===
How do I fix a NoSuchMethodError?
I'm getting a  NoSuchMethodError  error when running my Java program.  What's wrong and how do I fix it? 
===LINK===
http://stackoverflow.com/questions/35186/how-do-i-fix-a-nosuchmethoderror
===KEYWORDS===
running fix wrong nosuchmethoderror 
===ANSWER===
109
<html><body><p>Without any more information it is difficult to pinpoint the problem, but the root cause is that you most likely have compiled a class against a different version of the class that is missing a method, than the one you are using when running it.</p><p>Look at the stack trace ... If the exception appears when calling a method on an object in a library, you are most likely using separate versions of the library when compiling and running. Make sure you have the right version both places.</p><p>If the exception appears when calling a method on objects instantiated by classes <em>you</em> made, then your build process seems to be faulty. Make sure the class files that you are actually running are updated when you compile.</p></body></html>

===ID===
584cc03c3e2ca508e5f072f4
===QUESTION===
After Google Play Service update to version 13 I got an error
How can I resolve this error? Caused by: java.lang.illegalargumentexception
  11-01 11:08:12.845: E/AndroidRuntime(28885): Caused by: java.lang.IllegalStateException: The meta-data tag in your app's AndroidManifest.xml does not have the right value.  Expected 4030500 but found 0.  You must have the following declaration within the  element:      
 google-play-services_lib Manifest: 
 Full error log: 
===LINK===
http://stackoverflow.com/questions/19723811/after-google-play-service-update-to-version-13-i-got-an-error
===KEYWORDS===
lang xml play resolve java 
===ANSWER===
154
<html><body><p>You need to add the following in your manifest:</p><pre><code>&lt;application&gt;
    &lt;meta-data 
       android:name="com.google.android.gms.version" 
       android:value="@integer/google_play_services_version" /&gt;
    ...
&lt;/application&gt;
</code></pre><p>EDIT:</p><p>This information can be found in the logcat error msg as well as on <a href="http://developer.android.com/google/play-services/setup.html#Setup">Setting Up Google Play Services</a> <em>(Thanks Brais Gabin)</em></p></body></html>

===ID===
584cc03c3e2ca508e5f072f5
===QUESTION===
Why is the result of 1/3 == 0?
I was writing this code: The result is 0.  Why is this, and how do I solve this problem? 
===LINK===
http://stackoverflow.com/questions/4685450/why-is-the-result-of-1-3-0
===KEYWORDS===
problem code solve result writing 
===ANSWER===
44
<html><body><p>The two operands (1 and 3) are integers, therefore integer arithmetic (division here) is used. Declaring the result variable as double just causes an implicit conversion to occur <em>after division</em>.</p><p>Integer division of course returns the true result of division rounded <em>down</em> to the nearest integer. The result of <code>0.333...</code> is thus rounded down to 0 here. (Note that the processor doesn't actually do any rounding, but you can think of it that way still.)</p><p>Also, note that if <em>both</em> operands (numbers) are given as floats; 3.0 and 1.0, or even just the <em>first</em>, then floating-point arithmetic is used, giving you <code>0.333...</code>.</p></body></html>

===ID===
584cc03c3e2ca508e5f072f6
===QUESTION===
Swing animation running extremely slow
I have a problem with my current animation that I'm running using Java Swing. It is a discrete event simulation and the text based simulation is working fine, I'm just having problems connecting the simulating to GUI output. For this example I will have 10 cars to be simulated. The cars are represented by  JPanels  which I will elaborate on in a few moments. So consider, the event process_car_arrival. Every time this event is scheduled for execution, I'm adding a  Car  object to an  ArrayList  called  cars  in my  Model  class. The  Car  class has the following relevant attributes: In addition it has the following method  move()  : This is all well. so in theory the car traverses along a straight road from east to west as I just invoke the  move()  method for each car I want to move. Returning to the process_car_arrival event. After adding a Car object it invokes a method  addCarToEast()  in the  View  class. This adds a JPanel at the start of the road going from east to west. Going to the  View  class now I have a ** separate** thread which does the following ( the run() method) : The above does move the car from east to west smoothly at first. But after there is 3-4 cars moving it just ends up being EXTREMELY slow and when I have 10 cars moving it just ends up moving very little. Just to clear up, at the moment in the  Model  class there's an  ArrayList  of  Car  objects, and in the  View  class there is also an  ArrayList  of  JPanel  objects representing the cars. I'm trying to match the  Car  objects to the  JPanels , but I'm obviously doing a cra**y job.  I suspect that I'm doing something insanely inefficient but I don't know what. I thought initially maybe it's accessing the  ArrayList  so much which I guess would make it really slow. Any pointers to what I can change to make it run smoothly? 
===LINK===
http://stackoverflow.com/questions/14886232/swing-animation-running-extremely-slow
===KEYWORDS===
moments move arraylist event adding 
===ANSWER===
11
<html><body><p>Based on this previous <a href="http://stackoverflow.com/a/5617957/230513">answer</a>, the example below simulates a fleet of three cabs moving randomly on a rectangular grid. A <code>javax.swing.Timer</code> drives the animation at 5 Hz. The model and view are tightly coupled in <code>CabPanel</code>, but the animation may provide some useful insights. In particular, you might increase the number of cabs or lower the timer delay.</p><p><img alt="image" src="https://i.stack.imgur.com/OuBzD.png"/></p><pre><code>import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Point;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 * @see http://stackoverflow.com/a/14887457/230513
 * @see http://stackoverflow.com/questions/5617027
 */

public class FleetPanel extends JPanel {

    private static final Random random = new Random();
    private final MapPanel map = new MapPanel();
    private final JPanel control = new JPanel();
    private final List&lt;CabPanel&gt; fleet = new ArrayList&lt;CabPanel&gt;();
    private final Timer timer = new Timer(200, null);

    public FleetPanel() {
        super(new BorderLayout());
        fleet.add(new CabPanel("Cab #1", Hue.Cyan));
        fleet.add(new CabPanel("Cab #2", Hue.Magenta));
        fleet.add(new CabPanel("Cab #3", Hue.Yellow));
        control.setLayout(new GridLayout(0, 1));
        for (CabPanel cp : fleet) {
            control.add(cp);
            timer.addActionListener(cp.listener);
        }
        this.add(map, BorderLayout.CENTER);
        this.add(control, BorderLayout.SOUTH);
    }

    public void start() {
        timer.start();
    }

    private class CabPanel extends JPanel {

        private static final String format = "000000";
        private final DecimalFormat df = new DecimalFormat(format);
        private JLabel name = new JLabel("", JLabel.CENTER);
        private Point point = new Point();
        private JLabel position = new JLabel(toString(point), JLabel.CENTER);
        private int blocks;
        private JLabel odometer = new JLabel(df.format(0), JLabel.CENTER);
        private final JComboBox colorBox = new JComboBox();
        private final JButton reset = new JButton("Reset");
        private final ActionListener listener = new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                int ds = random.nextInt(3) - 1;
                if (random.nextBoolean()) {
                    point.x += ds;
                } else {
                    point.y += ds;
                }
                blocks += Math.abs(ds);
                update();
            }
        };

        public CabPanel(String s, Hue hue) {
            super(new GridLayout(1, 0));
            name.setText(s);
            this.setBackground(hue.getColor());
            this.add(map, BorderLayout.CENTER);
            for (Hue h : Hue.values()) {
                colorBox.addItem(h);
            }
            colorBox.setSelectedIndex(hue.ordinal());
            colorBox.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    Hue h = (Hue) colorBox.getSelectedItem();
                    CabPanel.this.setBackground(h.getColor());
                    update();
                }
            });
            reset.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    point.setLocation(0, 0);
                    blocks = 0;
                    update();
                }
            });
            this.add(name);
            this.add(odometer);
            this.add(position);
            this.add(colorBox);
            this.add(reset);
        }

        private void update() {
            position.setText(CabPanel.this.toString(point));
            odometer.setText(df.format(blocks));
            map.repaint();
        }

        private String toString(Point p) {
            StringBuilder sb = new StringBuilder();
            sb.append(Math.abs(p.x));
            sb.append(p.x &lt; 0 ? " W" : " E");
            sb.append(", ");
            sb.append(Math.abs(p.y));
            sb.append(p.y &lt; 0 ? " N" : " S");
            return sb.toString();
        }
    }

    private class MapPanel extends JPanel {

        private static final int SIZE = 16;

        public MapPanel() {
            this.setPreferredSize(new Dimension(32 * SIZE, 32 * SIZE));
            this.setBackground(Color.lightGray);
        }

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(
                RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
            int w = this.getWidth();
            int h = this.getHeight();
            g2d.setColor(Color.gray);
            for (int col = SIZE; col &lt;= w; col += SIZE) {
                g2d.drawLine(col, 0, col, h);
            }
            for (int row = SIZE; row &lt;= h; row += SIZE) {
                g2d.drawLine(0, row, w, row);
            }

            for (CabPanel cp : fleet) {
                Point p = cp.point;
                int x = SIZE * (p.x + w / 2 / SIZE) - SIZE / 2;
                int y = SIZE * (p.y + h / 2 / SIZE) - SIZE / 2;
                g2d.setColor(cp.getBackground());
                g2d.fillOval(x, y, SIZE, SIZE);
            }
        }
    }

    public enum Hue {

        Cyan(Color.cyan), Magenta(Color.magenta), Yellow(Color.yellow),
        Red(Color.red), Green(Color.green), Blue(Color.blue),
        Orange(Color.orange), Pink(Color.pink);
        private final Color color;

        private Hue(Color color) {
            this.color = color;
        }

        public Color getColor() {
            return color;
        }
    }

    private static void display() {
        JFrame f = new JFrame("Dispatch");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        FleetPanel fp = new FleetPanel();
        f.add(fp);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
        fp.start();
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc03d3e2ca508e5f072f7
===QUESTION===
Integer with leading zeroes
When I write  System.out.println(0123);  I get  83  however  System.out.println((int)0123F);  prints  123 . Why does it work that way? 
===LINK===
http://stackoverflow.com/questions/565634/integer-with-leading-zeroes
===KEYWORDS===
println int work system integer 
===ANSWER===
48
<html><body><p>0123 means octal 123, that is 1*8*8 + 2*8 + 3, which equals 83.
For some reason, octal floats are not available.</p><p>Creating 0123 means the integer 83.
Creating 0123F means the floating 123. When converted back to integer, it remains 123.</p><p>Just don't use the leading 0 if you don't mean octal. After all, they are not exactly useful(and programmers who do know about octal numbers will get confused when they see 09F).</p></body></html>

===ID===
584cc03d3e2ca508e5f072f8
===QUESTION===
How do I convert from int to String?
I'm working on a project where all conversions from  int  to  String  are done like this: I'm not familiar with Java. Is this usual practice or is something wrong, as I suppose? 
===LINK===
http://stackoverflow.com/questions/4105331/how-do-i-convert-from-int-to-string
===KEYWORDS===
conversions convert java string working 
===ANSWER===
728
<html><body><p>Normal ways would be <code>Integer.toString(i)</code> or <code>String.valueOf(i)</code>.</p><p>The concatenation will work, but it is unconventional and could be a bad smell as it suggests the author doesn't know about the two methods above (what else might they not know?).</p><p>Java has special support for the + operator when used with strings (see <a href="http://download.oracle.com/javase/6/docs/api/java/lang/String.html">the documentation</a>) which translates the code you posted into:</p><pre><code>StringBuilder sb = new StringBuilder();
sb.append("");
sb.append(i);
String strI = sb.toString();
</code></pre><p>at compile-time. It's slightly less efficient (<code>sb.append()</code> ends up calling <code>Integer.getChars()</code>, which is what <code>Integer.toString()</code> would've done anyway), but it works.</p><p>To answer Grodriguez's comment: ** No, the compiler <em>doesn't</em> optimise out the empty string in this case - look:</p><pre><code>simon@lucifer:~$ cat TestClass.java
public class TestClass {
  public static void main(String[] args) {
    int i = 5;
    String strI = "" + i;
  }
}
simon@lucifer:~$ javac TestClass.java &amp;&amp; javap -c TestClass
Compiled from "TestClass.java"
public class TestClass extends java.lang.Object{
public TestClass();
  Code:
   0:    aload_0
   1:    invokespecial    #1; //Method java/lang/Object."&lt;init&gt;":()V
   4:    return

public static void main(java.lang.String[]);
  Code:
   0:    iconst_5
   1:    istore_1
</code></pre><p>Initialise the StringBuilder:</p><pre><code>   2:    new    #2; //class java/lang/StringBuilder
   5:    dup
   6:    invokespecial    #3; //Method java/lang/StringBuilder."&lt;init&gt;":()V
</code></pre><p>Append the empty string:</p><pre><code>   9:    ldc    #4; //String
   11:    invokevirtual    #5; //Method java/lang/StringBuilder.append:
(Ljava/lang/String;)Ljava/lang/StringBuilder;
</code></pre><p>Append the integer:</p><pre><code>   14:    iload_1
   15:    invokevirtual    #6; //Method java/lang/StringBuilder.append:
(I)Ljava/lang/StringBuilder;
</code></pre><p>Extract the final string:</p><pre><code>   18:    invokevirtual    #7; //Method java/lang/StringBuilder.toString:
()Ljava/lang/String;
   21:    astore_2
   22:    return
}
</code></pre><p>There's <a href="https://bugs.openjdk.java.net/browse/JDK-8085796">a proposal</a> and ongoing work to change this behaviour, targetted for JDK 9.</p></body></html>

===ID===
584cc03e3e2ca508e5f072f9
===QUESTION===
Print query string in Hibernate with parameter values
Is it possible in Hibernate to print generated SQL queries with real values instead of question marks? How would you suggest to print queries with real values if it is not possible with Hibernate API? 
===LINK===
http://stackoverflow.com/questions/1710476/print-query-string-in-hibernate-with-parameter-values
===KEYWORDS===
suggest hibernate 
===ANSWER===
262
<html><body><p>You need to enable <a href="http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session-configuration.html#configuration-logging" rel="nofollow noreferrer">logging</a> for the the following categories at <code>debug</code> and <code>trace</code> levels respectively:</p><p>So a log4j configuration could look like:</p><pre><code># logs the SQL statements
log4j.logger.org.hibernate.SQL=debug 

# Logs the JDBC parameters passed to a query
log4j.logger.org.hibernate.type=trace 
</code></pre><p>The first is equivalent to <code>hibernate.show_sql=true</code> legacy <a href="http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session-configuration.html#configuration-optional" rel="nofollow noreferrer">property</a>, the second <strong>prints the bound parameters among other things.</strong></p><p>Another solution (non hibernate based) would be to use a JDBC proxy driver like <a href="https://github.com/p6spy/p6spy" rel="nofollow noreferrer">P6Spy</a>.</p></body></html>

===ID===
584cc03f3e2ca508e5f072fa
===QUESTION===
Java Hashmap: How to get key from value?
If I have the value  "foo" , and a  HashMap<String> ftw  for which  ftw.containsValue("foo")  returns  true , how can I get the corresponding key? Do I have to loop through the hashmap? What is the best way to do that? 
===LINK===
http://stackoverflow.com/questions/1383797/java-hashmap-how-to-get-key-from-value
===KEYWORDS===
hashmap ftw key foo loop 
===ANSWER===
152
<html><body><p>If you choose to use the <a href="http://commons.apache.org/collections/" rel="nofollow noreferrer">Commons Collections library</a> instead of the standard Java Collections API, you can achieve this with ease.</p><p>The <a href="http://commons.apache.org/proper/commons-collections/apidocs/org/apache/commons/collections4/BidiMap.html" rel="nofollow noreferrer">BidiMap</a> interface in the Collections library is a bi-directional map, allowing you to map a key to a value (like normal maps), and also to map a value to a key, thus allowing you to perform lookups in both directions. Obtaining a key for a value is supported by the <a href="http://commons.apache.org/proper/commons-collections/apidocs/org/apache/commons/collections4/BidiMap.html#getKey%28java.lang.Object%29" rel="nofollow noreferrer">getKey() method</a>.</p><p>There is a caveat though, bidi maps cannot have multiple values mapped to keys, and hence unless your data set has 1:1 mappings between keys and values, you cannot use bidimaps.</p><p><strong>Update</strong></p><p>If you want to rely on the Java Collections API, you will have to ensure the 1:1 relationship between keys and values at the time of inserting the value into the map. This is easier said than done.</p><p>Once you can ensure that, use the <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Map.html#entrySet()" rel="nofollow noreferrer">entrySet() method</a> to obtain the set of entries (mappings) in the Map. Once you have obtained the set whose type is <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Map.Entry.html" rel="nofollow noreferrer">Map.Entry</a>, iterate through the entries, comparing the <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Map.Entry.html#getValue()" rel="nofollow noreferrer">stored value</a> against the expected, and obtain the <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Map.Entry.html#getKey()" rel="nofollow noreferrer">corresponding key</a>.</p><p><strong>Update #2</strong></p><p>Support for bidi maps with generics can be found in <a href="https://github.com/google/guava" rel="nofollow noreferrer">Google Guava</a> and the refactored <a href="http://sourceforge.net/projects/collections/" rel="nofollow noreferrer">Commons-Collections</a> libraries (the latter is not an Apache project). Thanks to Esko for pointing out the missing generic support in Apache Commons Collections. Using collections with generics makes more maintainable code.</p></body></html>

===ID===
584cc03f3e2ca508e5f072fb
===QUESTION===
Why does this() and super() have to be the first statement in a constructor?
Java requires that if you call this() or super() in a constructor, it must be the first statement. Why? For example: The Sun compiler says "call to super must be first statement in constructor". The Eclipse compiler says "Constructor call must be the first statement in a constructor". However, you can get around this by re-arranging the code a little bit: Here is another example: So, it is  not stopping you from executing logic  before the call to super. It is just stopping you from executing logic that you can't fit into a single expression. There are similar rules for calling  this() . The compiler says "call to this must be first statement in constructor". Why does the compiler have these restrictions? Can you give a code example where, if the compiler did not have this restriction, something bad would happen? 
===LINK===
http://stackoverflow.com/questions/1168345/why-does-this-and-super-have-to-be-the-first-statement-in-a-constructor
===KEYWORDS===
restrictions code restriction fit give 
===ANSWER===
129
<html><body><p>The parent class' <code>constructor</code> needs to be called before the subclass' <code>constructor</code>. This will ensure that if you call any methods on the parent class in your constructor, the parent class has already been set up correctly.</p><p>What you are trying to do, pass args to the super constructor is perfectly legal, you just need to construct those args inline as you are doing, or pass them in to your constructor and then pass them to <code>super</code>:</p><pre><code>public MySubClassB extends MyClass {
        public MySubClassB(Object[] myArray) {
                super(myArray);
        }
}
</code></pre><p>If the compiler did not enforce this you could do this:</p><pre><code>public MySubClassB extends MyClass {
        public MySubClassB(Object[] myArray) {
                someMethodOnSuper(); //ERROR super not yet constructed
                super(myArray);
        }
}
</code></pre><p>In cases where a <code>parent</code> class has a default constructor the call to super is inserted for you automatically by the <code>compiler</code>. Since every class in Java inherits from <code>Object</code>, objects constructor must be called somehow and it must be executed first. The automatic insertion of super() by the compiler allows this. Enforcing super to appear first, enforces that constructor bodies are executed in the correct order which would be: Object -&gt; Parent -&gt; Child -&gt; ChildOfChild -&gt; SoOnSoForth</p></body></html>

===ID===
584cc0403e2ca508e5f072fc
===QUESTION===
How to internationalize a Java web application?
I learnt from Google that Internationalization is the process by which I can make my 
web application to use all languages. I want to understand Unicode for the process of internationalization, so I learnt about Unicode from  here  and  there . I am able to understand about Unicode that how a charset set in encoded to bytes and again bytes decoded to charset. But I don't know how to move forward further. I want to learn how to compare strings and I need to know how to implement internationalization in my web application. Any Suggestions Please? Please guide me.  My Objective: My main objective is to develop a Web Application for Translation (English to Arabic & vice versa). I want to follow Internationalization. I wish to run my web Application for translation in all the three browsers namely FF, Chrome, IE. How do I achieve this? 
===LINK===
http://stackoverflow.com/questions/4276061/how-to-internationalize-a-java-web-application
===KEYWORDS===
google process suggestions browsers unicode 
===ANSWER===
176
<html><body><p>In case of a basic JSP/Servlet webapplication, the basic approach would be using <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/">JSTL</a> <a href="http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/fmt/tld-summary.html"><code>fmt</code> taglib</a> in combination with <a href="http://docs.oracle.com/javase/tutorial/i18n/resbundle/index.html">resource bundles</a>. Resource bundles contain key-value pairs where the key is a constant which is the same for all languages and the value differs per language. Resource bundles are usually <a href="http://docs.oracle.com/javase/tutorial/essential/environment/properties.html">properties files</a> which are loaded by <a href="http://docs.oracle.com/javase/6/docs/api/java/util/ResourceBundle.html"><code>ResourceBundle</code></a> API. This can however be customized so that you can load the key-value pairs from for example a database.</p><p>Here's an example how to internationalize the login form of your webapplication with properties file based resource bundles.</p><p>Create the following files and put them in some package, e.g. <code>com.example.i18n</code> (in case of Maven, put them in the package structure inside <code>src/main/resources</code>).</p><p><code>text.properties</code> (contains key-value pairs in the default language, usually English)</p><pre>
login.label.username = Username
login.label.password = Password
login.button.submit = Sign in
</pre><p><code>text_nl.properties</code> (contains Dutch (<code>nl</code>) key-value pairs)</p><pre>
login.label.username = Gebruikersnaam
login.label.password = Wachtwoord
login.button.submit = Inloggen
</pre><p><code>text_es.properties</code> (contains Spanish (<code>es</code>) key-value pairs)</p><pre>
login.label.username = Nombre de usuario
login.label.password = Contraseña
login.button.submit = Acceder
</pre><p>The resource bundle filename should adhere the following pattern <code>name_ll_CC.properties</code>. The <code>_ll</code> part should be the lowercase <a href="http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO 693-1</a> language code. It is optional and only required whenever the <code>_CC</code> part is present. The <code>_CC</code> part should be the uppercase <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 Alpha-2</a> country code. It is optional and often only used to distinguish between country-specific language dialects, like <a href="http://en.wikipedia.org/wiki/American_English">American English</a> (<code>_en_US</code>) and <a href="http://en.wikipedia.org/wiki/British_English">British English</a> (<code>_en_GB</code>).</p><p>If not done yet, install JSTL. If you're running on a Servlet 2.5 container or newer (Tomcat 6.0 and so on) and your <code>web.xml</code> is declared conform the Servlet 2.5 specification, then just put <a href="http://download.java.net/maven/1/jstl/jars/jstl-1.2.jar">jstl-1.2.jar</a> in webapp's <code>/WEB-INF/lib</code> folder.</p><p>Create the following example JSP file and put it in web content folder.</p><p><code>login.jsp</code></p><pre class="lang-xml prettyprint-override"><code>&lt;%@ page pageEncoding="UTF-8" %&gt;
&lt;%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %&gt;
&lt;%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %&gt;
&lt;c:set var="language" value="${not empty param.language ? param.language : not empty language ? language : pageContext.request.locale}" scope="session" /&gt;
&lt;fmt:setLocale value="${language}" /&gt;
&lt;fmt:setBundle basename="com.example.i18n.text" /&gt;
&lt;!DOCTYPE html&gt;
&lt;html lang="${language}"&gt;
    &lt;head&gt;
        &lt;title&gt;JSP/JSTL i18n demo&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;form&gt;
            &lt;select id="language" name="language" onchange="submit()"&gt;
                &lt;option value="en" ${language == 'en' ? 'selected' : ''}&gt;English&lt;/option&gt;
                &lt;option value="nl" ${language == 'nl' ? 'selected' : ''}&gt;Nederlands&lt;/option&gt;
                &lt;option value="es" ${language == 'es' ? 'selected' : ''}&gt;Español&lt;/option&gt;
            &lt;/select&gt;
        &lt;/form&gt;
        &lt;form method="post"&gt;
            &lt;label for="username"&gt;&lt;fmt:message key="login.label.username" /&gt;:&lt;/label&gt;
            &lt;input type="text" id="username" name="username"&gt;
            &lt;br&gt;
            &lt;label for="password"&gt;&lt;fmt:message key="login.label.password" /&gt;:&lt;/label&gt;
            &lt;input type="password" id="password" name="password"&gt;
            &lt;br&gt;
            &lt;fmt:message key="login.button.submit" var="buttonValue" /&gt;
            &lt;input type="submit" name="submit" value="${buttonValue}"&gt;
        &lt;/form&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>The <code>&lt;c:set var="language"&gt;</code> manages the current language. If the language was supplied as request parameter (by language dropdown), then it will be set. Else if the language was already previously set in the session, then stick to it instead. Else use the user supplied locale in the request header.</p><p>The <code>&lt;fmt:setLocale&gt;</code> sets the locale for resource bundle. It's important that this line is <em>before</em> the <code>&lt;fmt:setBundle&gt;</code>.</p><p>The <code>&lt;fmt:setBundle&gt;</code> initializes the resource bundle by its base name (that is, the full qualified package name until with the sole name without the <code>_ll_CC</code> specifier).</p><p>The <code>&lt;fmt:message&gt;</code> retrieves the message value by the specified bundle key.</p><p>The <code>&lt;html lang="${language}"&gt;</code> informs the searchbots what language the page is in so that it won't be marked as duplicate content (thus, good for SEO).</p><p>The language dropdown will immediately submit by JavaScript when another language is chosen and the page will be refreshed with the newly chosen language.</p><p>You however need to keep in mind that properties files are by default read using ISO-8859-1 character encoding. You would need to escape them by unicode escapes. This can be done using the JDK-supplied <code>native2ascii.exe</code> tool. See also <a href="http://balusc.blogspot.com/2009/05/unicode-how-to-get-characters-right.html#JavaPropertiesFiles">this article section</a> for more detail. </p><p>A theoretical alternative would be to supply a bundle with a custom <a href="http://docs.oracle.com/javase/6/docs/api/java/util/ResourceBundle.Control.html"><code>Control</code></a> to load those files as UTF-8, but that's unfortunately not supported by the basic JSTL <code>fmt</code> taglib. You would need to manage it all yourself with help of a <code>Filter</code>. There are (MVC) frameworks which can handle this in a more transparent manner, like JSF, see also <a href="http://jdevelopment.nl/java/internationalization-jsf-utf8-encoded-properties-files/">this article</a>.</p></body></html>

===ID===
584cc0403e2ca508e5f072fd
===QUESTION===
What's the reason I can't create generic array types in Java?
What's the reason Java doesn't allow us to do I could understand .NET didn't allow us to do that, as in .NET you have value types that at run-time can have different sizes, but in Java all kinds of T will be object references, thus having the same size (correct me if I'm wrong). What is the reason? 
===LINK===
http://stackoverflow.com/questions/2927391/whats-the-reason-i-cant-create-generic-array-types-in-java
===KEYWORDS===
run sizes reason wrong understand 
===ANSWER===
126
<html><body><p>It's because Java's arrays (unlike generics) contain, at runtime, information about its component type. So you must know the component type when you create the array. Since you don't know what <code>T</code> is at runtime, you can't create the array.</p></body></html>

===ID===
584cc0413e2ca508e5f072fe
===QUESTION===
How to use wait and notify in Java?
I have 2 matrices and I need to multiply them and then print the results of each cell. As soon as one cell is ready I need to print it, but for example I need to print the [0][0] cell before cell [2][0] even if the result of [2][0] is ready first. So I need to print it by order.
So my idea is to make the printer thread wait until the  multiplyThread  notifies it that the correct cell is ready to be printed and then the  printerThread  will print the cell and go back to waiting and so on.. So I have this thread that does the multiplication: Thread that prints the result of each cell: Now it throws me these exceptions: line 49 in  multiplyThread  is the "notify()"..I think I need to use the synchronized differently but I am not sure how. If anyone can help this code to work I will really appreciate it. 
===LINK===
http://stackoverflow.com/questions/886722/how-to-use-wait-and-notify-in-java
===KEYWORDS===
printerthread prints code back multiply 
===ANSWER===
190
<html><body><p>To be able to call <a href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Object.html#notify()" rel="nofollow noreferrer">notify()</a> you need to synchronize on the same object.</p><pre><code>synchronized (someObject) {
    someObject.wait();
}

/* different thread / object */
synchronized (someObject) {
    someObject.notify();
}
</code></pre></body></html>

===ID===
584cc0413e2ca508e5f072ff
===QUESTION===
TreeMap sort by value
I want to write an comparator that will let me sort TreeMap by value instead of the default natural sorting. i tried something like this, but can't find out what went wrong: I guess what am i asking is what controls what gets passed to comparator function, can i get an Map.Entry passed to comparator? 
===LINK===
http://stackoverflow.com/questions/2864840/treemap-sort-by-value
===KEYWORDS===
map guess comparator controls write 
===ANSWER===
129
<html><body><p>You can't have the <code>TreeMap</code> itself sort on the values, since that defies the <a href="http://java.sun.com/javase/6/docs/api/java/util/SortedMap.html" rel="nofollow noreferrer"><code>SortedMap</code></a> specification:</p><p>A <code>Map</code> that further provides a <em>total ordering</em> on its <strong>keys</strong>. </p><p>However, using an external collection, you can always sort <a href="http://java.sun.com/javase/6/docs/api/java/util/Map.html#entrySet%28%29" rel="nofollow noreferrer"><code>Map.entrySet()</code></a> however you wish, either by keys, values, or even a combination(!!) of the two.</p><p>Here's a generic method that returns a <code>SortedSet</code> of <code>Map.Entry</code>, given a <code>Map</code> whose values are <code>Comparable</code>:</p><pre><code>static &lt;K,V extends Comparable&lt;? super V&gt;&gt;
SortedSet&lt;Map.Entry&lt;K,V&gt;&gt; entriesSortedByValues(Map&lt;K,V&gt; map) {
    SortedSet&lt;Map.Entry&lt;K,V&gt;&gt; sortedEntries = new TreeSet&lt;Map.Entry&lt;K,V&gt;&gt;(
        new Comparator&lt;Map.Entry&lt;K,V&gt;&gt;() {
            @Override public int compare(Map.Entry&lt;K,V&gt; e1, Map.Entry&lt;K,V&gt; e2) {
                int res = e1.getValue().compareTo(e2.getValue());
                return res != 0 ? res : 1;
            }
        }
    );
    sortedEntries.addAll(map.entrySet());
    return sortedEntries;
}
</code></pre><p>Now you can do the following:</p><pre><code>    Map&lt;String,Integer&gt; map = new TreeMap&lt;String,Integer&gt;();
    map.put("A", 3);
    map.put("B", 2);
    map.put("C", 1);   

    System.out.println(map);
    // prints "{A=3, B=2, C=1}"
    System.out.println(entriesSortedByValues(map));
    // prints "[C=1, B=2, A=3]"
</code></pre><p>Note that funky stuff will happen if you try to modify either the <code>SortedSet</code> itself, or the <code>Map.Entry</code> within, because this is no longer a "view" of the original map like <code>entrySet()</code> is.</p><p>Generally speaking, the need to sort a map's entries by its values is atypical.</p><p>Your original comparator compares <code>Integer</code> using <code>==</code>. This is almost always wrong, since <code>==</code> with <code>Integer</code> operands is a reference equality, not value equality.</p><pre><code>    System.out.println(new Integer(0) == new Integer(0)); // prints "false"!!!
</code></pre></body></html>

===ID===
584cc0423e2ca508e5f07300
===QUESTION===
How to return multiple objects from a Java method?
I want to return two objects from a Java method and was wondering what could be a good way of doing so? The possible ways I can think of are: return a  HashMap  (since the two Objects are related) or return an  ArrayList  of  Object  objects. To be more precise, the two objects I want to return are (a)  List  of objects and (b) comma separated names of the same. I want to return these two Objects from one method because I dont want to iterate through the list of objects to get the comma separated names (which I can do in the same loop in this method). Somehow, returning a  HashMap  does not look a very elegant way of doing so. 
===LINK===
http://stackoverflow.com/questions/457629/how-to-return-multiple-objects-from-a-java-method
===KEYWORDS===
precise good return hashmap returning 
===ANSWER===
84
<html><body><p>If you want to return two objects you usually want to return a single object that encapsulates the two objects instead.</p><p>You could return a List of <code>NamedObject</code> objects like this:</p><pre><code>public class NamedObject&lt;T&gt; {
  public final String name;
  public final T object;

  public NamedObject(String name, T object) {
    this.name = name;
    this.object = object;
  }
}
</code></pre><p>Then you can easily return a <code>List&lt;NamedObject&lt;WhateverTypeYouWant&gt;&gt;</code>.</p><p>Also: Why would you want to return a comma-separated list of names instead of a <code>List&lt;String&gt;</code>? Or better yet, return a <code>Map&lt;String,TheObjectType&gt;</code> with the keys being the names and the values the objects (unless your objects have specified order, in which case a <code>NavigableMap</code> might be what you want.</p></body></html>

===ID===
584cc0423e2ca508e5f07301
===QUESTION===
How to make an executable jar file?
I have two simple java swing files, one file will take name and phone number as user input and will write in the database. Another will fetch this two value from the database and will show it on the page. I'm using MS Access 2003 database. Now my question is how to make an executable jar file for this program? 
===LINK===
http://stackoverflow.com/questions/5258159/how-to-make-an-executable-jar-file
===KEYWORDS===
show make database question fetch 
===ANSWER===
37
<html><body><p>A jar file is simply a file containing a collection of java files. To make a jar file executable, you need to specify where the "main" Class is in the jar file. Example code would be as follows.</p><pre><code>public class JarExample {

    public static void main(String[] args) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                // your logic here
            }
        });
    }
}
</code></pre><p>Compile your classes. To make a jar, you also need to create a Manifest File (<code>MANIFEST.MF</code>). For example,</p><pre><code>Manifest-Version: 1.0
Main-Class: JarExample
</code></pre><p>Place the compiled output class files (JarExample.class,JarExample$1.class) and the manifest file in the same folder. In the command prompt, go to the folder where your files placed, and create the jar using jar command. For example (if you name your manifest file as jexample.mf)</p><pre><code>jar cfm jarexample.jar jexample.mf *.class
</code></pre><p>It will create executable jarexample.jar.</p></body></html>

===ID===
584cc0433e2ca508e5f07302
===QUESTION===
Splitting a Java String by the pipe symbol using split(“|”)
The Java official documentation states: The string  "boo:and:foo" , for example, yields the following results with these expressions 
Regex   Result
:    And that's the way I need it to work. However, if I run this: it prints: Which is far from what I would expect: Why is this happening? Thanks in advance 
===LINK===
http://stackoverflow.com/questions/10796160/splitting-a-java-string-by-the-pipe-symbol-using-split
===KEYWORDS===
prints run string split work 
===ANSWER===
235
<html><body><p>You need </p><pre><code>test.split("\\|");
</code></pre><p><code>split</code> uses regular expression and in <em>regex</em> <code>|</code> is a metacharacter representing the <code>OR</code> operator. You need to escape that character using <code>\</code> (written in String as <code>"\\"</code> since <code>\</code> is also a metacharacter in String literals and require another <code>\</code> to escape it).</p><p>You can also use </p><pre><code>test.split(Pattern.quote("|"));
</code></pre><p>and let <code>Pattern.quote</code> create the escaped version of the regex representing <code>|</code>.</p></body></html>

===ID===
584cc0433e2ca508e5f07303
===QUESTION===
Loading and displaying large text files
In a Swing application, I sometimes need to support read-only access to large, line-oriented text files that are slow to load: logs, dumps, traces, etc. For small amounts of data, a  suitable   Document  and  JTextComponent  are fine, as shown  here . I understand the human limitations of browsing large amounts of data, but the problematic stuff seems like it's always in the biggest file. Is there any practical alternative for larger amounts of text in the 10-100 megabyte, million-line range? 
===LINK===
http://stackoverflow.com/questions/25526833/loading-and-displaying-large-text-files
===KEYWORDS===
load large shown slow logs 
===ANSWER===
6
<html><body><p>I would separate the problem.</p><p>The first one is model - Document building speed</p><p>The second is the Document rendering - building tree of views to represent the Document.</p><p>A question is whether you need font effects like keywords colorizing?</p><p>I would start from Document building part. IMHO reading the file via EditorKit.read() should be fast even for big files. I would use the PainDocument for the purpose and check whether the pure model is built fast enough for your application. If yes it's fine just use the Document as model. If not implement your own Document interface because AbstractDocument has plenty of methods for update processing (e.g. writeLock).</p><p>When we have the Document loading fast enough we have to solve the Document rendering. BY default the views used in javax.swing.text are really flexible. They are designed as base classes to be extended - thus has a lot of code we don't need. E.g. measuring. </p><p>For the feature I would use Monospaced font, we don't need wrap so measurements of the view widht is fast = longest row char count * char widht.</p><p>The height is also char height * amount of lines.</p><p>So our PLainTextViewReplacement is really fast. Also we don't have to render the whole view but just a fragment visible in our scroll pane. Thus rendering could be mmuch much faster.</p><p>Of course there should be a lot of work to provide correct caret navigation, selection etc.</p></body></html>

===ID===
584cc0443e2ca508e5f07304
===QUESTION===
How to handle events from keyboard and mouse in full screen exclusive mode in java?
In passive rendering mode one can use  KeyListener  and  ActionListener  interfaces to handle events from user.  What is the correct way of event handling in full screen mode? Please extend this skeleton providing implementation for mouse click and key press events, please don't bloat your example (the example starts full screen exclusive mode, using a  Timer  to update graphics in window): 
===LINK===
http://stackoverflow.com/questions/7456227/how-to-handle-events-from-keyboard-and-mouse-in-full-screen-exclusive-mode-in-ja
===KEYWORDS===
don extend bloat timer window 
===ANSWER===
20
<html><body><p>It looks like the usual approaches shown in <a href="http://download.oracle.com/javase/tutorial/uiswing/misc/keybinding.html"><em>How to Use Key Bindings</em></a> and <a href="http://download.oracle.com/javase/tutorial/uiswing/events/mouselistener.html"><em>How to Write a Mouse Listener</em></a> work correctly in <a href="http://download.oracle.com/javase/tutorial/extra/fullscreen/exclusivemode.html"><em>Full-Screen Exclusive Mode</em></a>.</p><pre><code>import java.awt.Color;
import java.awt.EventQueue;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.KeyStroke;

/** @see http://stackoverflow.com/questions/7456227 */
public class FullScreenTest extends JPanel {

    private static final String EXIT = "Exit";
    private JFrame f = new JFrame("FullScreenTest");
    private Action exit = new AbstractAction(EXIT) {

            @Override
            public void actionPerformed(ActionEvent e) {
                f.dispatchEvent(new WindowEvent(
                    f, WindowEvent.WINDOW_CLOSING));
            }
        };
    private JButton b = new JButton(exit);

    public FullScreenTest() {
        this.add(b);
        f.getRootPane().setDefaultButton(b);
        this.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_Q, 0), EXIT);
        this.getActionMap().put(EXIT, exit);
        this.addMouseMotionListener(new MouseAdapter() {

            @Override
            public void mouseMoved(MouseEvent e) {
                FullScreenTest.this.setToolTipText(
                    "("+ e.getX() + "," + e.getY() + ")");
            }
        });
    }

    private void display() {
        GraphicsEnvironment env =
            GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice dev = env.getDefaultScreenDevice();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setBackground(Color.darkGray);
        f.setResizable(false);
        f.setUndecorated(true);
        f.add(this);
        f.pack();
        dev.setFullScreenWindow(f);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new FullScreenTest().display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc0443e2ca508e5f07305
===QUESTION===
What is a JavaBean exactly?
I understood, I think, that a "Bean" is a Java class with properties and getters/setters. As much as I understand, it is the equivalent of a C struct. Is that true? Also, is there a real  syntactic  difference between a bean and a regular class? Is there any special definition or an interface? Basically, why is there a term for this? Edit : If you can be so kind and add information regarding the  Serializable  interface, and what it means, to your answer, I'd be very grateful. 
===LINK===
http://stackoverflow.com/questions/3295496/what-is-a-javabean-exactly
===KEYWORDS===
term answer struct means edit 
===ANSWER===
997
<html><body><p>A JavaBean is just a <a href="http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html" rel="nofollow noreferrer">standard</a></p><p>That's it. It's just a convention.  Lots of libraries depend on it though....</p><p>With respect to <code>Serializable</code>, from the <a href="http://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html" rel="nofollow noreferrer">API documentation</a>:</p><p>Serializability of a class is enabled by the class implementing the
  java.io.Serializable interface. Classes that do not implement this
  interface will not have any of their state serialized or deserialized.
  All subtypes of a serializable class are themselves serializable. The
  serialization interface has no methods or fields and serves only to
  identify the semantics of being serializable.</p><p>In other words, serializable objects can be written to streams, and hence files, object databases, anything really.  </p><p>Also, there is no syntactic difference between a JavaBean and another class -- a class defines a JavaBean if it follows the standards.</p><p>There is a term for it because the standard allows libraries to programmatically do things with class instances you define in a predefined way. For example, if a library wants to stream any object you pass into it, it knows it can because your object is serializable (assuming the lib requires your objects be proper JavaBeans). </p></body></html>

===ID===
584cc0443e2ca508e5f07306
===QUESTION===
How to get a class instance of generics type T
I have a generics class,  Foo<T> . In a method of  Foo , I want to get the class instance of type T, but I just can't call  T.class . What is the preferred way to get around it using  T.class ? 
===LINK===
http://stackoverflow.com/questions/3437897/how-to-get-a-class-instance-of-generics-type-t
===KEYWORDS===
preferred class foo< call foo 
===ANSWER===
288
<html><body><p>The short answer is, that there is no way to find out the runtime type of generic type parameters in Java. I suggest reading the chapter about type erasure in the <a href="http://download.oracle.com/javase/tutorial/java/generics/erasure.html" rel="nofollow noreferrer">Java Tutorial</a> for more details.</p><p>A popular solution to this is to pass the <code>Class</code> of the type parameter into the constructor of the generic type, e.g.</p><pre><code>class Foo&lt;T&gt; {
    final Class&lt;T&gt; typeParameterClass;

    public Foo(Class&lt;T&gt; typeParameterClass) {
        this.typeParameterClass = typeParameterClass;
    }

    public void bar() {
        // you can access the typeParameterClass here and do whatever you like
    }
}
</code></pre></body></html>

===ID===
584cc0453e2ca508e5f07307
===QUESTION===
Are getters and setters poor design? Contradictory advice seen [duplicate]
This question already has an answer here: I'm currently working on a simple game in Java with several different modes. I've extended a main Game class to put the main logic within the other classes. Despite this, the main game class is still pretty hefty. After taking a quick look at my code the majority of it was Getters and Setters (60%) compared to the rest that is truly needed for the logic of the game. A couple of Google searches have claimed that Getters and Setters are evil, whilst others have claimed that they are necessary for good OO practice and great programs. So what should I do? Which should it be? Should I be changing my Getters and Setters for my private variables, or should I stick with them? 
===LINK===
http://stackoverflow.com/questions/565095/are-getters-and-setters-poor-design-contradictory-advice-seen
===KEYWORDS===
code rest whilst claimed compared 
===ANSWER===
316
<html><body><p>There is also the point of view that most of the time, using setters still breaks encapsulation by allowing you to set values that are meaningless. As a very obvious example, if you have a score counter on the game that only ever goes up, instead of</p><pre><code>// Game
private int score;
public void setScore(int score) { this.score = score; }
public int getScore() { return score; }
// Usage
game.setScore(game.getScore() + ENEMY_DESTROYED_SCORE);
</code></pre><p>it should be</p><pre><code>// Game
private int score;
public int getScore() { return score; }
public void addScore(int delta) { score += delta; }
// Usage
game.addScore(ENEMY_DESTROYED_SCORE);
</code></pre><p>This is perhaps a bit of a facile example. What I'm trying to say is that discussing getter/setters vs public fields often obscures bigger problems with objects manipulating each others' internal state in an intimate manner and hence being too closely coupled.</p><p>The idea is to make methods that directly do things you want to do. An example would be how to set enemies' "alive" status. You might be tempted to have a setAlive(boolean alive) method. Instead you should have:</p><pre><code>private boolean alive = true;
public boolean isAlive() { return alive; }
public void kill() { alive = false; }
</code></pre><p>The reason for this is that if you change the implementation that things no longer have an "alive" boolean but rather a "hit points" value, you can change that around without breaking the contract of the two methods you wrote earlier:</p><pre><code>private int hp; // Set in constructor.
public boolean isAlive() { return hp &gt; 0; } // Same method signature.
public void kill() { hp = 0; } // Same method signature.
public void damage(int damage) { hp -= damage; }
</code></pre></body></html>

===ID===
584cc0463e2ca508e5f07308
===QUESTION===
Difference between Statement and PreparedStatement
The Prepared Statement is a slightly more powerful version of a Statement, and should always be at least as quick and easy to handle as a Statement. 
The Prepared Statement may be parametrized  Most relational databases handles a JDBC / SQL query in four steps:   A Statement will always proceed through the four steps above for each SQL query sent to the database. A Prepared Statement pre-executes steps (1) - (3) in the execution process above. Thus, when creating a Prepared Statement some pre-optimization is performed immediately. The effect is to lessen the load on the database engine at execution time.   Now my question is that - "Is any other advantage of using Prepared Statement?" 
===LINK===
http://stackoverflow.com/questions/3271249/difference-between-statement-and-preparedstatement
===KEYWORDS===
pre load creating preparedstatement handle 
===ANSWER===
128
<html><body><p>Advantages of a <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html" rel="nofollow noreferrer"><code>PreparedStatement</code></a>:</p><p>Precompilation and DB-side caching of the SQL statement leads to overall faster execution and the ability to reuse the same SQL statement in <a href="http://stackoverflow.com/questions/2467125/reusing-a-preparedstatement-multiple-times">batches</a>.</p><p>Automatic prevention of <a href="http://en.wikipedia.org/wiki/SQL_injection" rel="nofollow noreferrer">SQL injection</a> <a href="http://unixwiz.net/techtips/sql-injection.html" rel="nofollow noreferrer">attacks</a> by builtin escaping of quotes and other special characters. Note that this requires that you use any of the <code>PreparedStatement</code> <code>setXxx()</code> methods to set the values </p><pre><code>preparedStatement = connection.prepareStatement("INSERT INTO Person (name, email, birthdate, photo) VALUES (?, ?, ?, ?)");
preparedStatement.setString(1, person.getName());
preparedStatement.setString(2, person.getEmail());
preparedStatement.setTimestamp(3, new Timestamp(person.getBirthdate().getTime()));
preparedStatement.setBinaryStream(4, person.getPhoto());
preparedStatement.executeUpdate();
</code></pre><p>and thus <strong>don't</strong> inline the values in the SQL string by string-concatenating.</p><pre><code>preparedStatement = connection.prepareStatement("INSERT INTO Person (name, email) VALUES ('" + person.getName() + "', '" + person.getEmail() + "'");
preparedStatement.executeUpdate();
</code></pre><p>Eases setting of non-standard Java objects in a SQL string, e.g. <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setDate%28int,%20java.sql.Date%29" rel="nofollow noreferrer"><code>Date</code></a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setTime%28int,%20java.sql.Time%29" rel="nofollow noreferrer"><code>Time</code></a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setTimestamp%28int,%20java.sql.Timestamp%29" rel="nofollow noreferrer"><code>Timestamp</code></a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setBigDecimal%28int,%20java.math.BigDecimal%29" rel="nofollow noreferrer"><code>BigDecimal</code></a>, <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setBinaryStream%28int,%20java.io.InputStream%29" rel="nofollow noreferrer"><code>InputStream</code></a> (<a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setBlob%28int,%20java.sql.Blob%29" rel="nofollow noreferrer"><code>Blob</code></a>) and <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setCharacterStream%28int,%20java.io.Reader%29" rel="nofollow noreferrer"><code>Reader</code></a> (<a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setClob%28int,%20java.sql.Clob%29" rel="nofollow noreferrer"><code>Clob</code></a>). On most of those types you can't "just" do a <code>toString()</code> as you would do in a simple <code>Statement</code>. You could even refactor it all to using <a href="http://docs.oracle.com/javase/6/docs/api/java/sql/PreparedStatement.html#setObject%28int,%20java.lang.Object%29" rel="nofollow noreferrer"><code>PreparedStatement#setObject()</code></a> inside a loop as demonstrated in the utility method below:</p><pre><code>public static void setValues(PreparedStatement preparedStatement, Object... values) throws SQLException {
    for (int i = 0; i &lt; values.length; i++) {
        preparedStatement.setObject(i + 1, values[i]);
    }
}
</code></pre><p>Which can be used as below:</p><pre><code>preparedStatement = connection.prepareStatement("INSERT INTO Person (name, email, birthdate, photo) VALUES (?, ?, ?, ?)");
setValues(preparedStatement, person.getName(), person.getEmail(), new Timestamp(person.getBirthdate().getTime()), person.getPhoto());
preparedStatement.executeUpdate();
</code></pre></body></html>

===ID===
584cc0463e2ca508e5f07309
===QUESTION===
How to timeout a thread
I want to run a thread for some fixed amount of time. If it is not completed within that time, I want to either kill it, throw some exception, or handle it in some way. How can it be done? One way of doing it as I figured out from  this thread 
is to use a TimerTask inside the run() method of the Thread. Are there any better solutions for this?   
EDIT: Adding a bounty as I needed a clearer answer. The ExecutorService code given below does not address my problem. Why should I sleep() after executing (some code - I have no handle over this piece of code)? If the code is completed and the sleep() is interrupted, how can that be a timeOut? The task that needs to be executed is not in my control. It can be any piece of code. The problem is this piece of code might run into an infinite loop. I don't want that to happen. So, I just want to run that task in a separate thread. The parent thread has to wait till that thread finishes and needs to know the status of the task (i.e whether it timed out or some exception occured or if its a success). If the task goes into an infinite loop, my parent thread keeps on waiting indefinitely, which is not an ideal situation. 
===LINK===
http://stackoverflow.com/questions/2275443/how-to-timeout-a-thread
===KEYWORDS===
control code executing executed sleep 
===ANSWER===
269
<html><body><p>Indeed rather use <a href="http://java.sun.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html" rel="nofollow noreferrer"><code>ExecutorService</code></a> instead of <code>Timer</code>, here's an <a href="http://sscce.org" rel="nofollow noreferrer">SSCCE</a>:</p><pre><code>package com.stackoverflow.q2275443;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

public class Test {
    public static void main(String[] args) throws Exception {
        ExecutorService executor = Executors.newSingleThreadExecutor();
        Future&lt;String&gt; future = executor.submit(new Task());

        try {
            System.out.println("Started..");
            System.out.println(future.get(3, TimeUnit.SECONDS));
            System.out.println("Finished!");
        } catch (TimeoutException e) {
            future.cancel(true);
            System.out.println("Terminated!");
        }

        executor.shutdownNow();
    }
}

class Task implements Callable&lt;String&gt; {
    @Override
    public String call() throws Exception {
        Thread.sleep(4000); // Just to demo a long running task of 4 seconds.
        return "Ready!";
    }
}
</code></pre><p>Play a bit with the <code>timeout</code> argument in <a href="http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/Future.html#get%28long,%20java.util.concurrent.TimeUnit%29" rel="nofollow noreferrer"><code>Future#get()</code></a> method, e.g. increase it to 5 and you'll see that the thread finishes. You can intercept the timeout in the <code>catch (TimeoutException e)</code> block.</p><p><strong>Update:</strong> to clarify a conceptual misunderstanding, the <code>sleep()</code> is <strong>not</strong> required. It is just used for SSCCE/demonstration purposes. Just do <strong>your</strong> long running task right there in place of <code>sleep()</code>. Inside your long running task, you should be checking if the thread is not <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html#interrupted()" rel="nofollow noreferrer">interrupted</a> as follows:</p><pre><code>while (!Thread.interrupted()) {
    // Do your long running task here.
}
</code></pre></body></html>

===ID===
584cc0473e2ca508e5f0730a
===QUESTION===
Scanning Java annotations at runtime
What is the best way of searching the whole classpath for an annotated class? I'm doing a library and I want to allow the users to annotate their classes, so when the Web application starts I need to scan the whole classpath for certain annotation. Do you know a library or a Java facility to do this? Edit: I'm thinking about something like the new functionality for Java EE 5 Web Services or EJB's. You annotate your class with  @WebService  or  @EJB  and the system finds these classes while loading so they are accessible remotely. 
===LINK===
http://stackoverflow.com/questions/259140/scanning-java-annotations-at-runtime
===KEYWORDS===
loading @webservice users scan edit 
===ANSWER===
139
<html><body><p>Use <a href="http://static.springsource.org/spring/docs/2.5.x/api/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.html" rel="nofollow noreferrer">org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider</a> </p><p>API</p><p>A component provider that scans the classpath from a base package. It then applies exclude and include filters to the resulting classes to find candidates. </p><pre><code>ClassPathScanningCandidateComponentProvider scanner =
new ClassPathScanningCandidateComponentProvider(&lt;DO_YOU_WANT_TO_USE_DEFALT_FILTER&gt;);

scanner.addIncludeFilter(new AnnotationTypeFilter(&lt;TYPE_YOUR_ANNOTATION_HERE&gt;.class));

for (BeanDefinition bd : scanner.findCandidateComponents(&lt;TYPE_YOUR_BASE_PACKAGE_HERE&gt;))
    System.out.println(bd.getBeanClassName());
</code></pre></body></html>

===ID===
584cc0473e2ca508e5f0730b
===QUESTION===
SSH library for Java [closed]
Does anyone know of a good library for SSH login from Java. 
===LINK===
http://stackoverflow.com/questions/995944/ssh-library-for-java
===KEYWORDS===
java closed 
===ANSWER===
94
<html><body><p>The <a href="http://www.jcraft.com/jsch/" rel="nofollow noreferrer">Java Secure Channel (JSCH)</a> is a very popular library, used by maven, ant and eclipse. It is open source with a BSD style license.</p></body></html>

===ID===
584cc0483e2ca508e5f0730c
===QUESTION===
Unicode equivalents for \w and \b in Java regular expressions?
Many modern regex implementations interpret the  \w  character class shorthand as "any letter, digit, or connecting punctuation" (usually: underscore). That way, a regex like  \w+  matches words like  hello ,  élève ,  GOÄ_432  or  gefräßig . Unfortunately, Java doesn't. In Java,  \w  is limited to  [A-Za-z0-9_] . This makes matching words like those mentioned above difficult, among other problems. It also appears that the  \b  word separator matches in places where it shouldn't.  What would be the correct equivalent of a .NET-like, Unicode-aware  \w  or  \b  in Java? Which other shortcuts need "rewriting" to make them Unicode-aware? 
===LINK===
http://stackoverflow.com/questions/4304928/unicode-equivalents-for-w-and-b-in-java-regular-expressions
===KEYWORDS===
gefräßig regex limited digit java 
===ANSWER===
197
<html><body><p>The source code for the rewriting functions I discuss below <strong><a href="http://training.perl.com/scripts/tchrist-unicode-charclasses__alpha.java">is available here</a>.</strong></p><p>Sun’s updated <code>Pattern</code> class for JDK7 has a marvelous new flag, <code>UNICODE_CHARACTER_CLASS</code>, which makes everything work right again. It’s available as an embeddable <code>(?U)</code> for inside the pattern, so you can use it with the <code>String</code> class’s wrappers, too.  It also sports corrected definitions for various other properties, too.  It now tracks The Unicode Standard, in both <a href="http://unicode.org/reports/tr18/#Categories">RL1.2</a> and <a href="http://unicode.org/reports/tr18/#Compatibility_Properties">RL1.2a</a> from <em>UTS#18: Unicode Regular Expressions</em>. This is an exciting and dramatic improvement, and the development team is to be commended for this important effort.</p><p>The problem with Java regexes is that the Perl 1.0 charclass escapes — meaning <code>\w</code>, <code>\b</code>, <code>\s</code>, <code>\d</code> and their complements — are not in Java extended to work with Unicode.  Alone amongst these, <code>\b</code> enjoys certain extended semantics, but these map neither to <a href="http://unicode.org/reports/tr18/#word"><code>\w</code></a>, nor to <a href="http://www.unicode.org/reports/tr31/">Unicode identifiers</a>, nor to <a href="http://www.unicode.org/reports/tr29/WordBreakTest.html">Unicode line-break properties</a>.</p><p>Additionally, the POSIX properties in Java are accessed this way:</p><pre><code>POSIX syntax    Java syntax

[[:Lower:]]     \p{Lower}
[[:Upper:]]     \p{Upper}
[[:ASCII:]]     \p{ASCII}
[[:Alpha:]]     \p{Alpha}
[[:Digit:]]     \p{Digit}
[[:Alnum:]]     \p{Alnum}
[[:Punct:]]     \p{Punct}
[[:Graph:]]     \p{Graph}
[[:Print:]]     \p{Print}
[[:Blank:]]     \p{Blank}
[[:Cntrl:]]     \p{Cntrl}
[[:XDigit:]]    \p{XDigit}
[[:Space:]]     \p{Space}
</code></pre><p>This is a real mess, because it means that things like <code>Alpha</code>, <code>Lower</code>, and <code>Space</code> do <strong>not</strong> in Java map to the Unicode <code>Alphabetic</code>, <code>Lowercase</code>, or <code>Whitespace</code> properties. This is exceeedingly annoying. Java’s Unicode property support is <strong>strictly antemillennial</strong>, by which I mean it supports no Unicode property that has come out in the last decade.  </p><p>Not being able to talk about whitespace properly is super-annoying.  Consider the following table. For each of those code points, there is both a J-results column
for Java and a P-results column for Perl or any other PCRE-based regex engine:</p><pre><code>             Regex    001A    0085    00A0    2029
                      J  P    J  P    J  P    J  P
                \s    1  1    0  1    0  1    0  1
               \pZ    0  0    0  0    1  1    1  1
            \p{Zs}    0  0    0  0    1  1    0  0
         \p{Space}    1  1    0  1    0  1    0  1
         \p{Blank}    0  0    0  0    0  1    0  0
    \p{Whitespace}    -  1    -  1    -  1    -  1
\p{javaWhitespace}    1  -    0  -    0  -    1  -
 \p{javaSpaceChar}    0  -    0  -    1  -    1  -
</code></pre><p>See that?</p><p>Virtually every one of those Java white space results is   ̲w̲r̲o̲n̲g̲  according to Unicode.  It’s a <strong>really big problem.</strong>  Java is just messed up, giving answers that are “wrong” according to existing practice and also according to Unicode.  Plus Java doesn’t even give you access to the real Unicode properties! In fact, Java does not support <em>any</em> property that corresponds to Unicode whitespace. </p><p>To deal with this and many other related problems, yesterday I wrote a Java function to rewrite a pattern string that rewrites these 14 charclass escapes:</p><pre><code>\w \W \s \S \v \V \h \H \d \D \b \B \X \R
</code></pre><p>by replacing them with things that actually work to match Unicode in a predictable and consistent fashion. It’s only an alpha prototype from a single hack session, but it is completely functional. </p><p>The short story is that my code rewrites those 14 as follows:</p><pre><code>\s =&gt; [\u0009-\u000D\u0020\u0085\u00A0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]
\S =&gt; [^\u0009-\u000D\u0020\u0085\u00A0\u1680\u180E\u2000-\u200A\u2028\u2029\u202F\u205F\u3000]

\v =&gt; [\u000A-\u000D\u0085\u2028\u2029]
\V =&gt; [^\u000A-\u000D\u0085\u2028\u2029]

\h =&gt; [\u0009\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205F\u3000]
\H =&gt; [^\u0009\u0020\u00A0\u1680\u180E\u2000\u2001-\u200A\u202F\u205F\u3000]

\w =&gt; [\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]]
\W =&gt; [^\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]]

\b =&gt; (?:(?&lt;=[\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]])(?![\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]])|(?&lt;![\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]])(?=[\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]]))
\B =&gt; (?:(?&lt;=[\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]])(?=[\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]])|(?&lt;![\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]])(?![\pL\pM\p{Nd}\p{Nl}\p{Pc}[\p{InEnclosedAlphanumerics}&amp;&amp;\p{So}]]))

\d =&gt; \p{Nd}
\D =&gt; \P{Nd}

\R =&gt; (?:(?&gt;\u000D\u000A)|[\u000A\u000B\u000C\u000D\u0085\u2028\u2029])

\X =&gt; (?&gt;\PM\pM*)
</code></pre><p>Some things to consider...</p><p>That uses for its <code>\X</code> definition what <a href="http://www.unicode.org/reports/tr29">Unicode now refers to</a> as a <em>legacy grapheme cluster</em>, not an <em>extended grapheme cluster</em>, as the latter is rather more complicated. Perl itself now uses the fancier version, but the old version is still perfectly workable for the most common situations. <strong>EDIT:</strong> See addendum at bottom.</p><p>What to do about <code>\d</code> depends on your intent, but the default is the Uniode definition. I can see people not always wanting <code>\p{Nd}</code>, but sometimes either <code>[0-9]</code> or <code>\pN</code>.</p><p>The two boundary definitions, <code>\b</code> and <code>\B</code>, are specifically written to use the <code>\w</code> definition.</p><p>That <code>\w</code> definition is overly broad, because it grabs the parenned letters not just the circled ones. The Unicode <code>Other_Alphabetic</code> property isn’t available until JDK7, so that’s the best you can do.</p><p>Boundaries have been a problem ever since Larry Wall first coined the <code>\b</code> and <code>\B</code> syntax for talking about them for Perl 1.0 back in 1987. The key to understanding how <code>\b</code> and <code>\B</code> both work is to dispel two pervasive myths about them:</p><p>A <code>\b</code> boundary means:</p><pre><code>    IF does follow word
        THEN doesn't precede word
    ELSIF doesn't follow word
        THEN does precede word
</code></pre><p>And those are all  defined perfectly straightforwardly as:</p><p>Therefore, since <code>IF-THEN</code> is encoded as an <code>and</code> ed-together <code>AB</code> in regexes,  an <code>or</code> is <code>X|Y</code>, and because the <code>and</code> is  higher in precedence than <code>or</code>, that is simply <code>AB|CD</code>.  So every <code>\b</code> that means a boundary can be safely replaced with:</p><pre><code>    (?:(?&lt;=\w)(?!\w)|(?&lt;!\w)(?=\w))
</code></pre><p>with the <code>\w</code> defined in the appropriate way. </p><p>(You might think it strange that the <code>A</code> and <code>C</code> components are opposites. In a perfect world, you should be able to write that <code>AB|D</code>, but for a while I was chasing down mutual exclusion contradictions in Unicode properties — which I <em>think</em> I’ve taken care of, but I left the double condition in the boundary just in case. Plus this makes it more extensible if you get extra ideas later.)</p><p>For the <code>\B</code> non-boundaries, the logic is:</p><pre><code>    IF does follow word
        THEN does precede word
    ELSIF doesn't follow word
        THEN doesn't precede word
</code></pre><p>Allowing all instances of <code>\B</code> to be replaced with:</p><pre><code>    (?:(?&lt;=\w)(?=\w)|(?&lt;!\w)(?!\w))
</code></pre><p>This really is how <code>\b</code> and <code>\B</code> behave.  Equivalent patterns for them are</p><p>But the versions with just <code>AB|CD</code> are fine, especially if you lack conditional patterns in your regex language — like Java.  ☹</p><p>I’ve already verified the behaviour of the boundaries using all three equivalent definitions with a test suite that checks 110,385,408  matches per run, and which I've run on a dozen different data configurations according to:</p><pre><code>     0 ..     7F    the ASCII range
    80 ..     FF    the non-ASCII Latin1 range
   100 ..   FFFF    the non-Latin1 BMP (Basic Multilingual Plane) range
 10000 .. 10FFFF    the non-BMP portion of Unicode (the "astral" planes)
</code></pre><p>However, people often want a different sort of boundary. They want something that is whitespace and edge-of-string aware:</p><p>The code I posted in <a href="http://stackoverflow.com/questions/3537706/howto-unescape-a-java-string-literal-in-java/4298836#4298836">my other answer</a> provides this and quite a few other conveniences. This includes definitions for natural-language words, dashes, hyphens, and apostrophes, plus a bit more.</p><p>It also allows you to specify Unicode characters in logical code points, not in idiotic UTF-16 surrogates. <strong>It’s hard to overstress how important that is!</strong> And that’s just for the string expansion.  </p><p>For regex charclass substitution that makes the charclass in your Java regexes <em>finally</em> work on Unicode, <em>and work correctly,</em>  grab <strong><a href="http://training.perl.com/scripts/tchrist-unicode-charclasses__alpha.java">the full source from here</a>.</strong>  You may do with it as you please, of course. If you make fixes to it, I’d love to hear of it, but you don’t have to. It’s pretty short. The guts of the main regex rewriting function is simple:</p><pre><code>switch (code_point) {

    case 'b':  newstr.append(boundary);
               break; /* switch */
    case 'B':  newstr.append(not_boundary);
               break; /* switch */

    case 'd':  newstr.append(digits_charclass);
               break; /* switch */
    case 'D':  newstr.append(not_digits_charclass);
               break; /* switch */

    case 'h':  newstr.append(horizontal_whitespace_charclass);
               break; /* switch */
    case 'H':  newstr.append(not_horizontal_whitespace_charclass);
               break; /* switch */

    case 'v':  newstr.append(vertical_whitespace_charclass);
               break; /* switch */
    case 'V':  newstr.append(not_vertical_whitespace_charclass);
               break; /* switch */

    case 'R':  newstr.append(linebreak);
               break; /* switch */

    case 's':  newstr.append(whitespace_charclass);
               break; /* switch */
    case 'S':  newstr.append(not_whitespace_charclass);
               break; /* switch */

    case 'w':  newstr.append(identifier_charclass);
               break; /* switch */
    case 'W':  newstr.append(not_identifier_charclass);
               break; /* switch */

    case 'X':  newstr.append(legacy_grapheme_cluster);
               break; /* switch */

    default:   newstr.append('\\');
               newstr.append(Character.toChars(code_point));
               break; /* switch */

}
saw_backslash = false;
</code></pre><p>Anyway, that code is just an alpha release, stuff I hacked up over the weekend. It won’t stay that way.</p><p>For the beta I intend to:</p><p>fold together the code duplication</p><p>provide a clearer interface regarding unescaping string escapes versus augmenting regex escapes</p><p>provide some flexibility in the <code>\d</code> expansion, and maybe the <code>\b</code></p><p>provide convenience methods that handle turning around and calling Pattern.compile or String.matches or whatnot for you</p><p>For production release, it should have javadoc and a JUnit test suite. I may include my gigatester, but it’s not written as JUnit tests.</p><p>I have good news and bad news.  </p><p>The good news is that I’ve now got a <strong>very</strong> close approximation to an <em>extended grapheme cluster</em> to use for an improved <code>\X</code>. </p><p>The bad news ☺ is that that pattern is: </p><pre><code>(?:(?:\u000D\u000A)|(?:[\u0E40\u0E41\u0E42\u0E43\u0E44\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\uAAB5\uAAB6\uAAB9\uAABB\uAABC]*(?:[\u1100-\u115F\uA960-\uA97C]+|([\u1100-\u115F\uA960-\uA97C]*((?:[[\u1160-\u11A2\uD7B0-\uD7C6][\uAC00\uAC1C\uAC38]][\u1160-\u11A2\uD7B0-\uD7C6]*|[\uAC01\uAC02\uAC03\uAC04])[\u11A8-\u11F9\uD7CB-\uD7FB]*))|[\u11A8-\u11F9\uD7CB-\uD7FB]+|[^[\p{Zl}\p{Zp}\p{Cc}\p{Cf}&amp;&amp;[^\u000D\u000A\u200C\u200D]]\u000D\u000A])[[\p{Mn}\p{Me}\u200C\u200D\u0488\u0489\u20DD\u20DE\u20DF\u20E0\u20E2\u20E3\u20E4\uA670\uA671\uA672\uFF9E\uFF9F][\p{Mc}\u0E30\u0E32\u0E33\u0E45\u0EB0\u0EB2\u0EB3]]*)|(?s:.))
</code></pre><p>which in Java you’d write as:</p><pre><code>String extended_grapheme_cluster = "(?:(?:\\u000D\\u000A)|(?:[\\u0E40\\u0E41\\u0E42\\u0E43\\u0E44\\u0EC0\\u0EC1\\u0EC2\\u0EC3\\u0EC4\\uAAB5\\uAAB6\\uAAB9\\uAABB\\uAABC]*(?:[\\u1100-\\u115F\\uA960-\\uA97C]+|([\\u1100-\\u115F\\uA960-\\uA97C]*((?:[[\\u1160-\\u11A2\\uD7B0-\\uD7C6][\\uAC00\\uAC1C\\uAC38]][\\u1160-\\u11A2\\uD7B0-\\uD7C6]*|[\\uAC01\\uAC02\\uAC03\\uAC04])[\\u11A8-\\u11F9\\uD7CB-\\uD7FB]*))|[\\u11A8-\\u11F9\\uD7CB-\\uD7FB]+|[^[\\p{Zl}\\p{Zp}\\p{Cc}\\p{Cf}&amp;&amp;[^\\u000D\\u000A\\u200C\\u200D]]\\u000D\\u000A])[[\\p{Mn}\\p{Me}\\u200C\\u200D\\u0488\\u0489\\u20DD\\u20DE\\u20DF\\u20E0\\u20E2\\u20E3\\u20E4\\uA670\\uA671\\uA672\\uFF9E\\uFF9F][\\p{Mc}\\u0E30\\u0E32\\u0E33\\u0E45\\u0EB0\\u0EB2\\u0EB3]]*)|(?s:.))";
</code></pre><p><em>¡Tschüß!</em></p></body></html>

===ID===
584cc0483e2ca508e5f0730d
===QUESTION===
What's wrong with using == to compare floats in Java?
According to  this java.sun page  == is the equality comparison operator for floating point numbers in Java. However, when I type this code: into my editor and run static analysis, I get: "JAVA0078 Floating point values compared with ==" What is wrong with using == to compare floating point values?  What is the correct way to do it? 
===LINK===
http://stackoverflow.com/questions/1088216/whats-wrong-with-using-to-compare-floats-in-java
===KEYWORDS===
code java wrong editor type 
===ANSWER===
164
<html><body><p>the correct way to test floats for 'equality' is:</p><pre><code>if(Math.abs(sectionID - currentSectionID) &lt; epsilon)
</code></pre><p>where epsilon is a very small number like 0.00000001, depending on the desired precision.</p></body></html>

===ID===
584cc0493e2ca508e5f0730e
===QUESTION===
Is it possible to read from a InputStream with a timeout?
Specifically, the problem is to write a method like this: where the return value is the same as in.read() if data is available within 'timeout' milliseconds, and -2 otherwise.  Before the method returns, any spawned threads must exit. To avoid arguments, the subject here java.io.InputStream, as documented by Sun (any Java version).  Please note this is not as simple as it looks.  Below are some facts which are supported directly by Sun's documentation. The in.read() method may be non-interruptible. Wrapping the InputStream in a Reader or InterruptibleChannel doesn't help, because all those classes can do is call methods of the InputStream.  If it were possible to use those classes, it would be possible to write a solution that just executes the same logic directly on the InputStream. It is always acceptable for in.available() to return 0. The in.close() method may block or do nothing. There is no general way to kill another thread. 
===LINK===
http://stackoverflow.com/questions/804951/is-it-possible-to-read-from-a-inputstream-with-a-timeout
===KEYWORDS===
simple general interruptible executes facts 
===ANSWER===
55
<html><body><p>Assuming your stream is not backed by a socket (so you can't use <code>Socket.setSoTimeout()</code>), I think the standard way of solving this type of problem is to use a Future.</p><p>Suppose I have the following executor and streams:</p><pre><code>    ExecutorService executor = Executors.newFixedThreadPool(2);
    final PipedOutputStream outputStream = new PipedOutputStream();
    final PipedInputStream inputStream = new PipedInputStream(outputStream);
</code></pre><p>I have writer that writes some data then waits for 5 seconds before writing the last piece of data and closing the stream:</p><pre><code>    Runnable writeTask = new Runnable() {
        @Override
        public void run() {
            try {
                outputStream.write(1);
                outputStream.write(2);
                Thread.sleep(5000);
                outputStream.write(3);
                outputStream.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    };
    executor.submit(writeTask);
</code></pre><p>The normal way of reading this is as follows. The read will block indefinitely for data and so this completes in 5s:</p><pre><code>    long start = currentTimeMillis();
    int readByte = 1;
    // Read data without timeout
    while (readByte &gt;= 0) {
        readByte = inputStream.read();
        if (readByte &gt;= 0)
            System.out.println("Read: " + readByte);
    }
    System.out.println("Complete in " + (currentTimeMillis() - start) + "ms");
</code></pre><p>which outputs:</p><pre><code>Read: 1
Read: 2
Read: 3
Complete in 5001ms
</code></pre><p>If there was a more fundamental problem, like the writer not responding, the reader would block for ever. 
If I wrap the read in a future, I can then control the timeout as follows:</p><pre><code>    int readByte = 1;
    // Read data with timeout
    Callable&lt;Integer&gt; readTask = new Callable&lt;Integer&gt;() {
        @Override
        public Integer call() throws Exception {
            return inputStream.read();
        }
    };
    while (readByte &gt;= 0) {
        Future&lt;Integer&gt; future = executor.submit(readTask);
        readByte = future.get(1000, TimeUnit.MILLISECONDS);
        if (readByte &gt;= 0)
            System.out.println("Read: " + readByte);
    }
</code></pre><p>which outputs:</p><pre><code>Read: 1
Read: 2
Exception in thread "main" java.util.concurrent.TimeoutException
    at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:228)
    at java.util.concurrent.FutureTask.get(FutureTask.java:91)
    at test.InputStreamWithTimeoutTest.main(InputStreamWithTimeoutTest.java:74)
</code></pre><p>I can catch the TimeoutException and do whatever cleanup I want.</p></body></html>

===ID===
584cc0493e2ca508e5f0730f
===QUESTION===
Why in Java 8 split sometimes removes empty strings at start of result array?
Before Java 8  when we split on empty string like  split mechanism would split in places marked with  | because empty space  ""  exists before and after each character. So as result it would generate at first this array and later will  remove trailing empty strings  (because we didn't explicitly provide negative value to  limit  argument) so it will finally return  In Java 8  split mechanism seems to have changed. Now when we use  we will get  ["a", "b", "c"]  array instead of  ["", "a", "b", "c"]  so it looks like empty strings at start are also removed. But this theory fails because for instance is returning array with empty string at start  ["", "bc"] .  Can someone explain what is going on here and how rules of split for this cases have changed in Java 8? 
===LINK===
http://stackoverflow.com/questions/22718744/why-in-java-8-split-sometimes-removes-empty-strings-at-start-of-result-array
===KEYWORDS===
changed exists instance rules explain 
===ANSWER===
54
<html><body><p>The behavior of <code>String.split</code> (which calls <code>Pattern.split</code>) changes between Java 7 and Java 8.</p><p>Comparing between the documentation of <code>Pattern.split</code> in <a href="https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html#split%28java.lang.CharSequence,%20int%29">Java 7</a> and <a href="http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#split-java.lang.CharSequence-int-">Java 8</a>, we observe the following clause being added:</p><p>When there is a positive-width match at the beginning of the input sequence then an empty leading substring is included at the beginning of the resulting array. A zero-width match at the beginning however never produces such empty leading substring.</p><p>The same clause is also added to <code>String.split</code> in <a href="http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#split-java.lang.String-int-">Java 8</a>, compared to <a href="https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html#split%28java.lang.CharSequence,%20int%29">Java 7</a>.</p><p>Let us compare the code of <code>Pattern.split</code> of the reference implemetation in Java 7 and Java 8. The code is retrieved from grepcode, for version 7u40-b43 and 8-b132.</p><pre><code>public String[] split(CharSequence input, int limit) {
    int index = 0;
    boolean matchLimited = limit &gt; 0;
    ArrayList&lt;String&gt; matchList = new ArrayList&lt;&gt;();
    Matcher m = matcher(input);

    // Add segments before each match found
    while(m.find()) {
        if (!matchLimited || matchList.size() &lt; limit - 1) {
            String match = input.subSequence(index, m.start()).toString();
            matchList.add(match);
            index = m.end();
        } else if (matchList.size() == limit - 1) { // last one
            String match = input.subSequence(index,
                                             input.length()).toString();
            matchList.add(match);
            index = m.end();
        }
    }

    // If no match was found, return this
    if (index == 0)
        return new String[] {input.toString()};

    // Add remaining segment
    if (!matchLimited || matchList.size() &lt; limit)
        matchList.add(input.subSequence(index, input.length()).toString());

    // Construct result
    int resultSize = matchList.size();
    if (limit == 0)
        while (resultSize &gt; 0 &amp;&amp; matchList.get(resultSize-1).equals(""))
            resultSize--;
    String[] result = new String[resultSize];
    return matchList.subList(0, resultSize).toArray(result);
}
</code></pre><pre><code>public String[] split(CharSequence input, int limit) {
    int index = 0;
    boolean matchLimited = limit &gt; 0;
    ArrayList&lt;String&gt; matchList = new ArrayList&lt;&gt;();
    Matcher m = matcher(input);

    // Add segments before each match found
    while(m.find()) {
        if (!matchLimited || matchList.size() &lt; limit - 1) {
            if (index == 0 &amp;&amp; index == m.start() &amp;&amp; m.start() == m.end()) {
                // no empty leading substring included for zero-width match
                // at the beginning of the input char sequence.
                continue;
            }
            String match = input.subSequence(index, m.start()).toString();
            matchList.add(match);
            index = m.end();
        } else if (matchList.size() == limit - 1) { // last one
            String match = input.subSequence(index,
                                             input.length()).toString();
            matchList.add(match);
            index = m.end();
        }
    }

    // If no match was found, return this
    if (index == 0)
        return new String[] {input.toString()};

    // Add remaining segment
    if (!matchLimited || matchList.size() &lt; limit)
        matchList.add(input.subSequence(index, input.length()).toString());

    // Construct result
    int resultSize = matchList.size();
    if (limit == 0)
        while (resultSize &gt; 0 &amp;&amp; matchList.get(resultSize-1).equals(""))
            resultSize--;
    String[] result = new String[resultSize];
    return matchList.subList(0, resultSize).toArray(result);
}
</code></pre><p>The addition of the following code in Java 8 excludes the zero-length match at the beginning of the input string, which explains the behavior above.</p><pre><code>            if (index == 0 &amp;&amp; index == m.start() &amp;&amp; m.start() == m.end()) {
                // no empty leading substring included for zero-width match
                // at the beginning of the input char sequence.
                continue;
            }
</code></pre><p>To make <code>split</code> behaves consistently across versions and compatible with the behavior in Java 8:</p><p><code>(?!\A)</code> checks that the string does not end at the beginning of the string, which implies that the match is an empty match at the beginning of the string.</p><p>There is no general solution to make <code>split</code> backward-compatible with Java 7 and prior, short of replacing all instance of <code>split</code> to point to your own custom implementation.</p></body></html>

===ID===
584cc0493e2ca508e5f07310
===QUESTION===
Is it safe to use a static java.sql.Connection instance in a multithreaded system?
I'm running a web application on Tomcat. I have a class that handles all DB queries.
This class contains the  Connection  object and methods that returns query results. This is the connection object: It has only one instance (singleton). In addition, I have methods that execute queries, such as search for a user in the db: This method uses the static  Connection  object. My question is, is my use in static  Connection  object thread safe? Or can it cause problems when a lot of users will call the  searchUser  method? 
===LINK===
http://stackoverflow.com/questions/9428573/is-it-safe-to-use-a-static-java-sql-connection-instance-in-a-multithreaded-syste
===KEYWORDS===
singleton methods tomcat addition search 
===ANSWER===
39
<html><body><p><em>is my use in static Connection object thread safe?</em></p><p>This way the connection going to be shared among all requests sent by all users and thus all queries will interfere with each other. But threadsafety is not your only problem, resource leaking is also your other problem. You're keeping a single connection open during the entire application's lifetime. The average database will reclaim the connection whenever it's been open for too long which is usually between 30 minutes and 8 hours, depending on DB's configuration. So if your web application runs longer than that, the connection is lost and you won't be able to execute queries anymore.</p><p>This problem also applies when those resources are held as a non-<code>static</code> instance variable of a class instance which is reused multiple times.</p><p>You should <em>always</em> acquire and close the connection, statement and resultset in the <strong>shortest possible scope</strong>, preferably inside the very same <a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html"><code>try-with-resources</code> block</a> as where you're executing the query according the following JDBC idiom:</p><pre class="lang-java prettyprint-override"><code>public User find(String username, String password) throws SQLException {
    User user = null;

    try (
        Connection connection = dataSource.getConnection();
        PreparedStatement statement = connection.prepareStatement("SELECT id, username, email FROM user WHERE username=? AND password=md5(?)");
    ) {
        statement.setString(1, username);
        statement.setString(2, password);

        try (ResultSet resultSet = statement.executeQuery()) {
            if (resultSet.next()) {
                user = new User();
                user.setId(resultSet.getLong("id"));
                user.setUsername(resultSet.getString("username"));
                user.setEmail(resultSet.getString("email"));
            }
        }
    }       

    return user;
}
</code></pre><p>Note that you should <strong>not</strong> return a <code>ResultSet</code> here. If you're not on Java 7 yet, then use a <code>try-finally</code> block wherein you manually close the closeable resources in the reverse order as you've acquired them.</p><p>If you worry about connecting performance, then you should be using connection pooling instead. This is built-in into many Java EE application servers and even barebones servletcontainers like Tomcat supports it. Just create a JNDI datasource in the server itself and let your webapp grab it as <code>DataSource</code>. It's transparently already a connection pool.</p></body></html>

===ID===
584cc04a3e2ca508e5f07311
===QUESTION===
JSON order mixed up
I've a problem trying to making my page printing out the  JSONObject  in the order i want. In my code, I entered this: However, when I see the display on my page, it gives: JSON formatted string:  [{"success":"NO","userid":"User 1","bid":24.23} I need it in the order of userid, amount, then success. Already tried re-ordering in the code, but to no avail. I've also tried  .append ....need some help here thanks!! 
===LINK===
http://stackoverflow.com/questions/3948206/json-order-mixed-up
===KEYWORDS===
code success ordering jsonobject bid 
===ANSWER===
59
<html><body><p>You cannot and should not rely on the ordering of elements within a JSON object.</p><p>From the JSON specification at <a href="http://www.json.org/">http://www.json.org/</a></p><p>An object is an unordered set of
  name/value pairs</p><p>As a consequence,
JSON libraries are free to rearrange the order of the elements as they see fit.
This is not a bug.</p></body></html>

===ID===
584cc04a3e2ca508e5f07312
===QUESTION===
Random errors when changing series using JFreeChart
I'm making a GUI that display result of background calculations. But before that, I wanted to test changing the dataset. Here is my code: As you can see, I want to change points on the graph (every time it finishes 'some complicated computations') - this change is in the thread invoked by me in another class. My problem is that this whole concept is not working. It throws 'Series index out of bounds'-IllegalArgumentException, 'index out of bounds' - of some library inner arraylist etc.. I'm not using DynamicTimeSeriesCollection because I need the X axis to be the number of my inner iterations not the time period, and also update when 'some computations' are finished not every some time period. Can you tell me what I'm doing wrong? Or is there a better way to update/refresh the graph? 
===LINK===
http://stackoverflow.com/questions/13205251/random-errors-when-changing-series-using-jfreechart
===KEYWORDS===
dynamictimeseriescollection code number library dataset 
===ANSWER===
6
<html><body><p>Your snippet is incorrectly synchronized; you should update your <code>dataset</code> from the <code>process()</code> method of a <code>SwingWorker</code>, as shown <a href="http://stackoverflow.com/a/4637725/230513">here</a>. Instead of a <code>DateAxis</code>, use a <code>NumberAxis</code>, as shown in <a href="http://www.jfree.org/jfreechart/api/javadoc/src-html/org/jfree/chart/ChartFactory.html#line.1723" rel="nofollow noreferrer"><code>ChartFactory.createXYLineChart()</code></a>.</p><p>Addendum: This variation on the example cited plots the worker's progress on a line chart. Note that <code>createXYLineChart()</code> uses <code>NumberAxis</code> for both domain and range.</p><p><img alt="enter image description here" src="https://i.stack.imgur.com/mUP4r.png"/></p><pre><code>private XYSeriesCollection collection = new XYSeriesCollection();
private XYSeries series = new XYSeries("Result");
...
collection.addSeries(series);
JFreeChart chart = ChartFactory.createXYLineChart(
    "Newton's Method", "X", "Y", collection,
    PlotOrientation.VERTICAL, false, true, false);
XYPlot plot = (XYPlot) chart.getPlot();
plot.getRangeAxis().setRange(1.4, 1.51);
plot.getDomainAxis().setStandardTickUnits(
    NumberAxis.createIntegerTickUnits());
XYLineAndShapeRenderer renderer =
    (XYLineAndShapeRenderer) plot.getRenderer();
renderer.setSeriesShapesVisible(0, true);
this.add(new ChartPanel(chart), BorderLayout.CENTER);
...
private int n;
@Override
protected void process(List&lt;Double&gt; chunks) {
    for (double d : chunks) {
        label.setText(df.format(d));
        series.add(++n, d);
    }
}
</code></pre></body></html>

===ID===
584cc04b3e2ca508e5f07313
===QUESTION===
Difference between HashMap, LinkedHashMap and TreeMap
What is the difference between  HashMap ,  LinkedHashMap  and  TreeMap  in Java? 
I don't see any difference in the output as all the three has  keySet  and  values . What are  Hashtable s? 
===LINK===
http://stackoverflow.com/questions/2889777/difference-between-hashmap-linkedhashmap-and-treemap
===KEYWORDS===
don hashmap treemap keyset values 
===ANSWER===
730
<html><body><p>All three classes implement the <code>Map</code> interface and offer mostly the same functionality. The most important difference is the order in which iteration through the entries will happen:</p><p><a href="http://en.wikipedia.org/wiki/Hashtable" rel="nofollow noreferrer">"Hashtable"</a> is the generic name for hash-based maps. In the context of the Java API,
<code>Hashtable</code> is an obsolete class from the days of Java 1.1 before the collections framework existed. It should not be used anymore, because its API is cluttered with obsolete methods that duplicate functionality, and its methods are synchronized (which can decrease performance and is generally useless). Use <a href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html" rel="nofollow noreferrer">ConcurrrentHashMap</a> instead of Hashtable. </p></body></html>

===ID===
584cc04b3e2ca508e5f07314
===QUESTION===
Real differences between “java -server” and “java -client”?
Is there any real practical difference between "java -server" and "java -client"?  All I can find on Sun's site is a vague "-server starts slower but should run faster".  What are the real differences?  (Using JDK 1.6.0_07 currently.) 
===LINK===
http://stackoverflow.com/questions/198577/real-differences-between-java-server-and-java-client
===KEYWORDS===
server” java client” sun site 
===ANSWER===
285
<html><body><p>This is really linked to <em>HotSpot</em> and the default <em>option values</em> (<a href="http://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html" rel="nofollow noreferrer">Java HotSpot VM Options</a>) which differ between client and server configuration.</p><p>From <a href="http://www.oracle.com/technetwork/java/whitepaper-135217.html#2" rel="nofollow noreferrer">Chapter 2</a> of the whitepaper (<a href="http://www.oracle.com/technetwork/java/whitepaper-135217.html" rel="nofollow noreferrer">The Java HotSpot Performance Engine Architecture</a>):</p><p>The JDK includes two flavors of the VM -- a client-side offering, and a VM tuned for server applications. These two solutions share the Java HotSpot runtime environment code base, but use different compilers that are suited to the distinctly unique performance characteristics of clients and servers. These differences include the compilation inlining policy and heap defaults. </p><p>Although the Server and the Client VMs are similar, the Server VM has been specially tuned to maximize peak operating speed. It is intended for executing long-running server applications, which need the fastest possible operating speed more than a fast start-up time or smaller runtime memory footprint.</p><p>The Client VM compiler serves as an upgrade for both the Classic VM and the just-in-time (JIT) compilers used by previous versions of the JDK. The Client VM offers improved run time performance for applications and applets. The Java HotSpot Client VM has been specially tuned to reduce application start-up time and memory footprint, making it particularly well suited for client environments. In general, the client system is better for GUIs. </p><p>So the real difference is also on the compiler level:</p><p>The Client VM compiler does not try to execute many of the more complex optimizations performed by the compiler in the Server VM, but in exchange, it requires less time to analyze and compile a piece of code. This means the Client VM can start up faster and requires a smaller memory footprint.</p><p>The Server VM contains an advanced adaptive compiler that supports many of the same types of optimizations performed by optimizing C++ compilers, as well as some optimizations that cannot be done by traditional compilers, such as aggressive inlining across virtual method invocations. This is a competitive and performance advantage over static compilers. Adaptive optimization technology is very flexible in its approach, and typically outperforms even advanced static analysis and compilation techniques. </p><p>Note: The release of <em>jdk6 update 10</em> (see <a href="http://www.oracle.com/technetwork/java/javase/6u10-142936.html" rel="nofollow noreferrer">Update Release Notes:Changes in 1.6.0_10</a>) tried to improve startup time, but for a different reason than the hotspot options, being packaged differently with a much smaller kernel.</p><p><a href="http://stackoverflow.com/users/1037316/g-demecki">G. Demecki</a> points out <a href="http://stackoverflow.com/questions/198577/real-differences-between-java-server-and-java-client/198651?noredirect=1#comment59707599_198651">in the comments</a> that in 64-bit versions of JDK, the <code>-client</code> option is ignored for many years.<br>
See <a href="https://docs.oracle.com/javase/7/docs/technotes/tools/windows/java.html" rel="nofollow noreferrer">Windows <code>java</code> command</a>:</br></p><pre><code>-client
</code></pre><p>Selects the Java HotSpot Client VM.<br>
<strong>A 64-bit capable JDK currently ignores this option and instead uses the Java Hotspot Server VM</strong>.</br></p></body></html>

===ID===
584cc04c3e2ca508e5f07315
===QUESTION===
Why does Java's hashCode() in String use 31 as a multiplier?
In Java, the  hash code  for a  String  object is computed as s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1] using  int  arithmetic, where  s[i]  is the  i th  character of the string,  n  is the length of the string, and  ^  indicates exponentiation. Why is 31 used as a multiplier? I understand that the multiplier should be a relatively large prime number. So why not 29, or 37, or even 97? 
===LINK===
http://stackoverflow.com/questions/299304/why-does-javas-hashcode-in-string-use-31-as-a-multiplier
===KEYWORDS===
java computed exponentiation character hashcode 
===ANSWER===
248
<html><body><p>According to Joshua Bloch's <a href="http://rads.stackoverflow.com/amzn/click/0321356683" rel="nofollow noreferrer">Effective Java</a> (a book that can't be recommended enough, and which I bought thanks to continual mentions on stackoverflow):</p><p>The value 31 was chosen because it is an odd prime. If it were even and the multiplication overflowed, information would be lost, as multiplication by 2 is equivalent to shifting. The advantage of using a prime is less clear, but it is traditional. A nice property of 31 is that the multiplication can be replaced by a shift and a subtraction for better performance: <code>31 * i == (i &lt;&lt; 5) - i</code>. Modern VMs do this sort of optimization automatically.</p><p><em>(from Chapter 3, Item 9: Always override hashcode when you override equals, page 48)</em></p></body></html>

===ID===
584cc04c3e2ca508e5f07316
===QUESTION===
Array or List in Java. Which is faster?
I have to keep thousands of strings in memory to be accessed serially in Java. Should I store them in an array or should I use some kind of List ? Since arrays keep all the data in a contiguous chunk of memory (unlike Lists), would the use of an array to store thousands of strings cause problems ? Answer:  The common consensus is that the performance difference is minor. List interface provides more flexibility.  
===LINK===
http://stackoverflow.com/questions/716597/array-or-list-in-java-which-is-faster
===KEYWORDS===
kind java problems arrays data 
===ANSWER===
278
<html><body><p>I suggest that you use a profiler to test which is faster.</p><p>My personal opinion is that you should use Lists.</p><p>I work on a large codebase and a previous group of developers used arrays <strong>everywhere</strong>. It made the code very inflexible. After changing large chunks of it to Lists we noticed no difference in speed.</p></body></html>

===ID===
584cc04d3e2ca508e5f07317
===QUESTION===
How do I check if a file exists in Java?
How can I check whether a file exists, before opening it for reading in Java? (equivalent of Perl's  -e $filename ).   The only  similar question on SO  deals with writing the file and was thus answered using FileWriter which is obviously not applicable here. If possible I'd prefer a real API call returning true/false as opposed to some "Call API to open a file and catch when it throws an exception which you check for 'no file' in text", but I can live with the latter. 
===LINK===
http://stackoverflow.com/questions/1816673/how-do-i-check-if-a-file-exists-in-java
===KEYWORDS===
$filename throws java opening text 
===ANSWER===
867
<html><body><p>Using <code>java.io.File</code>:</p><pre><code>File f = new File(filePathString);
if(f.exists() &amp;&amp; !f.isDirectory()) { 
    // do something
}
</code></pre></body></html>

===ID===
584cc04d3e2ca508e5f07318
===QUESTION===
Getting the name of the current executing method
Is there a way to get the name of the currently executing method in Java? 
===LINK===
http://stackoverflow.com/questions/442747/getting-the-name-of-the-current-executing-method
===KEYWORDS===
java 
===ANSWER===
110
<html><body><p><a href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Thread.html" rel="nofollow noreferrer"><code>Thread</code></a>.<a href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Thread.html#currentThread()" rel="nofollow noreferrer"><code>currentThread()</code></a>.<a href="http://java.sun.com/j2se/1.5.0/docs/api/java/lang/Thread.html#getStackTrace()" rel="nofollow noreferrer"><code>getStackTrace()</code></a> will usually contain the method you’re calling it from but there are pitfalls (see <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html#getStackTrace%28%29" rel="nofollow noreferrer">Javadoc</a>):</p><p>Some virtual machines may, under some circumstances, omit one or more stack frames from the stack trace. In the extreme case, a virtual machine that has no stack trace information concerning this thread is permitted to return a zero-length array from this method. </p></body></html>

===ID===
584cc04e3e2ca508e5f07319
===QUESTION===
Get generic type of java.util.List
I have; Is there a (easy) way to retrieve the generic type of the list? 
===LINK===
http://stackoverflow.com/questions/1942644/get-generic-type-of-java-util-list
===KEYWORDS===
util list retrieve easy java 
===ANSWER===
256
<html><body><p>If those are actually fields of a certian class, then you can get them with a little help of reflection:</p><pre><code>package test;

import java.lang.reflect.Field;
import java.lang.reflect.ParameterizedType;
import java.util.ArrayList;
import java.util.List;

public class Test {

    List&lt;String&gt; stringList = new ArrayList&lt;String&gt;();
    List&lt;Integer&gt; integerList = new ArrayList&lt;Integer&gt;();

    public static void main(String... args) throws Exception {
        Field stringListField = Test.class.getDeclaredField("stringList");
        ParameterizedType stringListType = (ParameterizedType) stringListField.getGenericType();
        Class&lt;?&gt; stringListClass = (Class&lt;?&gt;) stringListType.getActualTypeArguments()[0];
        System.out.println(stringListClass); // class java.lang.String.

        Field integerListField = Test.class.getDeclaredField("integerList");
        ParameterizedType integerListType = (ParameterizedType) integerListField.getGenericType();
        Class&lt;?&gt; integerListClass = (Class&lt;?&gt;) integerListType.getActualTypeArguments()[0];
        System.out.println(integerListClass); // class java.lang.Integer.
    }
}
</code></pre><p>You can also do that for parameter types and return type of methods.</p><p>But if they're inside the same scope of the class/method where you need to know about them, then there's no point of knowing them, because you already have declared them yourself.</p></body></html>

===ID===
584cc04e3e2ca508e5f0731a
===QUESTION===
What is “String args[]”? parameter in main method Java
I'm just beginning to write programs in Java. What does the following Java code mean? What is  String[] args ?  When would you use these  args ? Source code and/or examples are preferred over abstract explanations 
===LINK===
http://stackoverflow.com/questions/890966/what-is-string-args-parameter-in-main-method-java
===KEYWORDS===
java string parameter args preferred 
===ANSWER===
177
<html><body><p>In Java <code>args</code> contains the supplied <a href="http://docs.oracle.com/javase/tutorial/essential/environment/cmdLineArgs.html" rel="nofollow noreferrer">command-line arguments</a> as an array of <code>String</code> objects.</p><p>In other words, if you run your program as <code>java MyProgram one two</code> then <code>args</code> will contain <code>["one", "two"]</code>.</p><p>If you wanted to output the contents of <code>args</code>, you can just loop through them like this...</p><pre><code>public class ArgumentExample {
    public static void main(String[] args) {
        for(int i = 0; i &lt; args.length; i++) {
            System.out.println(args[i]);
        }
    }
}
</code></pre></body></html>

===ID===
584cc04f3e2ca508e5f0731b
===QUESTION===
Why is spawning threads in Java EE container discouraged?
One of the first things I've learned about Java EE development is that I shouldn't spawn my own threads inside a Java EE container. But when I come to think about it, I don't know the reason. Can you clearly explain why it is discouraged?  I am sure most enterprise applications need some kind of asynchronous jobs like mail daemons, idle sessions, cleanup jobs etc. So, if indeed one shouldn't spawn threads, what is the correct way to do it when needed? 
===LINK===
http://stackoverflow.com/questions/533783/why-is-spawning-threads-in-java-ee-container-discouraged
===KEYWORDS===
spawn kind don things explain 
===ANSWER===
73
<html><body><p>It is discouraged because all resources within the environment are meant to be managed, and potentially monitored, by the server.  Also, much of the context in which a thread is being used is typically attached to the thread of execution itself.  If you simply start your own thread (which I believe some servers will not even allow), it cannot access other resources.  What this means, is that you cannot get an InitialContext and do JNDI lookups to access other system resources such as JMS Connection Factories and Datasources.</p><p>There are ways to do this "correctly", but it is dependent on the platform being used.  </p><p><a href="http://web.archive.org/web/20120510185357/http://www.ibm.com/developerworks/library/specification/j-commonj-sdowmt/index.html" rel="nofollow noreferrer">The commonj WorkManager is common for WebSphere and WebLogic as well as others</a></p><p><a href="http://www.theserverside.com/discussions/thread.tss?thread_id=44353" rel="nofollow noreferrer">More info here</a></p><p><a href="http://docs.oracle.com/middleware/1212/wls/WLPRG/topics.htm#sthref219" rel="nofollow noreferrer">And here</a></p><p>Also somewhat duplicates <a href="http://stackoverflow.com/questions/532360/thread-in-app-server/532440#532440">this one </a> from this morning</p><p>UPDATE: Please note that this question and answer relate to the state of Java EE in 2009, things have improved since then!</p></body></html>

===ID===
584cc0503e2ca508e5f0731c
===QUESTION===
How to force garbage collection in Java?
Is it possible to force garbage collection in Java, even it is tricky to do? I know about  System.gc();  and  Runtime.gc();  but they only suggest to do GC. How can I force GC? 
===LINK===
http://stackoverflow.com/questions/1481178/how-to-force-garbage-collection-in-java
===KEYWORDS===
tricky suggest runtime java system 
===ANSWER===
105
<html><body><p>Your best option is to call <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/System.html#gc()" rel="nofollow noreferrer"><code>System.gc()</code></a> which simply is a hint to the garbage collector that you want it to do a collection.  There is no way to <em>force</em> and immediate collection though as the garbage collector is non-deterministic.</p></body></html>

===ID===
584cc0503e2ca508e5f0731d
===QUESTION===
Using scanner.nextLine() [duplicate]
This question already has an answer here: I have been having trouble while attempting to use the nextLine() method from java.util.Scanner.  Here is what I tried: Example #1:  This example works as intended. The line  String sentence = scanner.nextLine();  waits for input to be entered before continuing on to  System.out.print("Enter an index:\t"); . This produces the output: Example #2:  This example does not work as intended. This example uses a while loop and and if - else structure to allow the user to choose what to do. Once the program gets to  String sentence = scanner.nextLine(); , it does not wait for input but instead executes the line  System.out.print("Enter an index:\t"); . This produces the output: Which makes it impossible to enter a sentence. Why does example #2 not work as intended? The only difference between Ex. 1 and 2 is that Ex. 2 has a while loop and an if-else structure. I don't understand why this affects the behavior of scanner.nextInt().  
===LINK===
http://stackoverflow.com/questions/5032356/using-scanner-nextline
===KEYWORDS===
scanner produces executes impossible index 
===ANSWER===
93
<html><body><p>I think your problem is that</p><pre><code>int selection = scanner.nextInt();
</code></pre><p>reads just the number, not the end of line or anything after the number.  When you</p><pre><code>String sentence = scanner.nextLine();
</code></pre><p>This read the remainder of the line with the number on it (with nothing after the number I suspect) </p><p>Try placing a scanner.nextLine(); after each nextInt() if you intend to ignore the rest of the line.</p></body></html>

===ID===
584cc0503e2ca508e5f0731e
===QUESTION===
How do I return a boolean from AsyncTask?
I have some EditTexts that a user enters an ftp address, username, password, port anda testConnection button. If a connection is successfully estabished it returns a boolean value of true.  I'm reworking my code to use AsyncTasks to perform the various ftp operations, but how can I pass back a boolean value if a connection is successfully made? And my AsyncTask 
===LINK===
http://stackoverflow.com/questions/16752073/how-do-i-return-a-boolean-from-asynctask
===KEYWORDS===
username code return reworking asynctasks 
===ANSWER===
21
<html><body><pre><code>public interface MyInterface {
    public void myMethod(boolean result);
}

public class AsyncConnectTask extends AsyncTask&lt;Void, Void, Boolean&gt; {

    private MyInterface mListener;


    public AsyncConnectTask(Context context, String address, String user,
        String pass, int port, MyInterface mListener) {
        mContext = context;
        _address = address;
        _user = user;
        _pass = pass;
        _port = port;
        this.mListener  = mListener;
    }

    @Override
    protected Boolean doInBackground(Void... params) {
        ....
        return result;
   }


    @Override
    protected void onPostExecute(Boolean result) {
        if (mListener != null) 
            mListener.myMethod(result);
    }
}

AsyncConnectTask task = new AsyncConnectTask(SiteManager.this,
                        _address, _username, _password, _port,  new MyInterface() {
    @Override
    public void myMethod(boolean result) {
        if (result == true) {
            Toast.makeText(SiteManager.this, "Connection Succesful",
            Toast.LENGTH_LONG).show();
        } else {
            Toast.makeText(SiteManager.this, "Connection Failed:" + status, Toast.LENGTH_LONG).show();
        } 
    }
});

task.execute();
</code></pre><p>If you call <code>myMethod</code> from <code>onPostExecute</code> the code inside it will run on the UI Thread. Otherwise you need to post a Runnable through a <code>Handler</code></p></body></html>

===ID===
584cc0513e2ca508e5f0731f
===QUESTION===
Dynamic JComboBoxes
I have following data (String): I'd like to create two  JComboBox  (JComboBox1, JComboBox2) so that JComboBox1 contains Course1,Course2,Course3, etc. If I select, say, Course2 from JComboBox1 then corresponding B1,B2,B3,B4 should be populated in JComboBox2. How to implement this? Many Thanks. 
===LINK===
http://stackoverflow.com/questions/3191837/dynamic-jcomboboxes
===KEYWORDS===
string populated jcombobox2 create course2 
===ANSWER===
19
<html><body><p>Yes, simply create a <a href="http://java.sun.com/javase/6/docs/api/javax/swing/DefaultComboBoxModel.html" rel="nofollow noreferrer"><code>DefaultComboBoxModel</code></a> for each set, and do <code>setModel()</code> on <code>JComboBox2</code> when <code>JComboBox1</code> changes.</p><p>Addendum: For example,</p><pre><code>import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;

public class ComboTest extends JPanel implements ActionListener, Runnable {

    private final JComboBox combo1 = new JComboBox(
        new String[]{"Course 1", "Course 2", "Course 3"});
    private final JComboBox combo2 = new JComboBox();
    private ComboBoxModel[] models = new ComboBoxModel[3];

    public ComboTest() {
        models[0] = new DefaultComboBoxModel(
            new String[]{"A1", "A2"});
        models[1] = new DefaultComboBoxModel(
            new String[]{"B1", "B2", "B3", "B4"});
        models[2] = new DefaultComboBoxModel(
            new String[]{"C1", "C2"});

        combo2.setModel(models[0]);
        this.add(combo1);
        this.add(combo2);
        combo1.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        int i = combo1.getSelectedIndex();
        combo2.setModel(models[i]);
    }

    @Override
    public void run() {
        JFrame f = new JFrame("ComboTest");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(this);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new ComboTest());
    }
}
</code></pre></body></html>

===ID===
584cc0513e2ca508e5f07320
===QUESTION===
Is there an advantage to use a Synchronized Method instead of a Synchronized Block?
Can any one tell me the advantage of synchronized method over synchronized block with an example? 
===LINK===
http://stackoverflow.com/questions/574240/is-there-an-advantage-to-use-a-synchronized-method-instead-of-a-synchronized-blo
===KEYWORDS===
advantage 
===ANSWER===
332
<html><body><p><em>Can any one tell me the advantage of synchronized method over synchronized block with an example?Thanks.</em></p><p>There is not a clear advantage of using synchronized method over block. </p><p>Perhaps the only one ( but I wouldn't call it advantage ) is you don't need to include the object reference <code>this</code>.</p><p>Method:</p><pre><code>public synchronized void method() { // blocks "this" from here.... 
    ...
    ...
    ...
} // to here
</code></pre><p>Block:</p><pre><code>public void method() { 
    synchronized( this ) { // blocks "this" from here .... 
        ....
        ....
        ....
    }  // to here...
}
</code></pre><p>See? No advantage at all. </p><p>Blocks <strong>do</strong> have advantages over methods, most of all in flexibility because you can use other object as lock whereas syncing the method would lock the complete class.</p><p>Compare: </p><pre><code>// locks the whole object
... 
private synchronized void someInputRelatedWork() {
    ... 
}
private synchronized void someOutputRelatedWork() {
    ... 
}
</code></pre><p>Vs. </p><pre><code>// Using specific locks
Object inputLock = new Object();
Object outputLock = new Object();

private void someInputRelatedWork() {
    synchronize(inputLock) { 
        ... 
    } 
}
private void someOutputRelatedWork() {
    synchronize(outputLock) { 
        ... 
    }
}
</code></pre><p>Also if the method grows you can still keep the synchronized section separated:</p><pre><code> private void method() {
     ... code here
     ... code here
     ... code here
    synchronized( lock ) { 
        ... very few lines of code here
    }
     ... code here
     ... code here
     ... code here
     ... code here
}
</code></pre></body></html>

===ID===
584cc0523e2ca508e5f07321
===QUESTION===
Static Block in Java [duplicate]
This question already has an answer here: I was looking over some code the other day and I came across: Coming from C++, I had no idea why that was there. Its not an error because the code compiled fine. What is this "static" block of code? 
===LINK===
http://stackoverflow.com/questions/2943556/static-block-in-java
===KEYWORDS===
code java error question idea 
===ANSWER===
246
<html><body><p>It's a <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.7" rel="nofollow noreferrer">static initializer</a>. It's executed when the class is loaded (or initialized, to be precise, but you usually don't notice the difference).</p><p>It can be thought of as a "class constructor".</p><p>Note that there are also <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.6" rel="nofollow noreferrer">instance initializers</a>, which look the same, except that they don't have the <code>static</code> keyword. Those are run <em>in addition to</em> the code in the constructor when a new instance of the object is created.</p></body></html>

===ID===
584cc0523e2ca508e5f07322
===QUESTION===
Broadcast receiver for checking internet connection in android app
I am developing an android broadcast receiver for checking internet connection. The problem is that my broadcast receiver is being called two times. I want it to get called only when the network is available. If it is unavailable, I don't want notified. This is the broadcast receiver This is the manifest.xml 
===LINK===
http://stackoverflow.com/questions/15698790/broadcast-receiver-for-checking-internet-connection-in-android-app
===KEYWORDS===
don network developing notified times 
===ANSWER===
143
<html><body><p><strong>Answer to your first question</strong>: Your broadcast receiver is being called two times because </p><p>You have added two <code>&lt;intent-filter&gt;</code> </p><p>Change in network connection :<br>
<code>&lt;action android:name="android.net.conn.CONNECTIVITY_CHANGE" /&gt;</code></br></p><p>Change in WiFi state:<br>
<code>&lt;action android:name="android.net.wifi.WIFI_STATE_CHANGED" /&gt;</code></br></p><p>Just use one:<br>
<code>&lt;action android:name="android.net.conn.CONNECTIVITY_CHANGE" /&gt;</code>.</br></p><p>It will respond to only one action instead of two. See <a href="http://stackoverflow.com/a/15546897/1168654">here</a> for more information.</p><p><strong>Answer to your second question</strong> (you want receiver to call only one time if internet connection available):</p><p>Your code is perfect; you notify only when internet is available.</p><p><strong>UPDATE</strong></p><p>You can use this method to check your connectivity if you want just to check whether mobile is connected with the internet or not.</p><pre><code>public boolean isOnline(Context context) {

    ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
    NetworkInfo netInfo = cm.getActiveNetworkInfo();
    //should check null because in airplane mode it will be null
    return (netInfo != null &amp;&amp; netInfo.isConnected());
}
</code></pre></body></html>

===ID===
584cc0533e2ca508e5f07323
===QUESTION===
When does static class initialization happen?
When are static fields initialized? If I never instantiate a class, but I access a static field, are ALL the static blocks and private static methods used to instantiate private static fields called (in order) at that instant? What if I call a static method? Does it also run all the static blocks? Before the method? 
===LINK===
http://stackoverflow.com/questions/3499214/when-does-static-class-initialization-happen
===KEYWORDS===
instant instantiate order access method 
===ANSWER===
119
<html><body><p>A classes static initialization normally happens immediately before the first time one of the following events occurs:</p><p>See <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-12.html#jls-12.4.1" rel="nofollow noreferrer">JLS 12.4.1</a>.</p><p>It is also possible to force a class to initialize (if it hasn't already initialized) by using <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Class.html#forName(java.lang.String,%20boolean,%20java.lang.ClassLoader)" rel="nofollow noreferrer"><code>Class.forName(fqn, true, classLoader)</code></a> or the short form <a href="http://download.oracle.com/javase/6/docs/api/java/lang/Class.html#forName(java.lang.String)" rel="nofollow noreferrer"><code>Class.forName(fqn)</code></a></p></body></html>

===ID===
584cc0533e2ca508e5f07324
===QUESTION===
Why aren't Java Collections remove methods generic?
Why isn't  Collection.remove(Object o)  generic?   Seems like  Collection<E>  could have  boolean remove(E o);   Then, when you accidentally try to remove (for example)  Set<String>  instead of each individual String from a  Collection<String> , it would be a compile time error instead of a debugging problem later. 
===LINK===
http://stackoverflow.com/questions/104799/why-arent-java-collections-remove-methods-generic
===KEYWORDS===
set<string> collection<string> collection collection< generic 
===ANSWER===
59
<html><body><p>Josh Bloch and Bill Pugh refer to this issue in <a href="https://www.youtube.com/watch?v=wDN_EYUvUq0" rel="nofollow noreferrer"><em>Java Puzzlers IV: The 
Phantom Reference Menace, Attack of the Clone, and Revenge of The 
Shift</em></a>.</p><p>Josh Bloch says (6:41) that they attempted to generify the get method 
of Map, remove method and some other, but "it simply didn't work".</p><p>There are too many reasonable programs that could not be generified if 
you only allow the generic type of the collection as parameter type. 
The example given by him is an intersection of a <code>List</code> of <code>Number</code>s and a 
<code>List</code> of <code>Long</code>s.</p></body></html>

===ID===
584cc0543e2ca508e5f07325
===QUESTION===
Java default constructor
What exactly is a default constructor — can you tell me which one of the following is a default constructor and what differentiates it from any other constructor? 
===LINK===
http://stackoverflow.com/questions/4488716/java-default-constructor
===KEYWORDS===
differentiates constructor 
===ANSWER===
146
<html><body><p>Neither of them. If you define it, it's not the default.</p><p>The default constructor is the no-argument constructor automatically generated unless you define another constructor. It initialises any uninitialised fields to their default values. For your example, it would look like this assuming that the types are <code>String</code>, <code>int</code> and <code>int</code>:</p><pre><code>public Module()
{
  super();
  this.name = null;
  this.credits = 0;
  this.hours = 0;
}
</code></pre><p>This is exactly the same as</p><pre><code>public Module()
{}
</code></pre><p>And exactly the same as having no constructors at all. However, if you define at least one constructor, the default constructor is not generated.</p><p>Reference: <a href="http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.8.9" rel="nofollow">Java Language Specification</a></p><p>Technically it is not the constructor (default or otherwise) that default-initialises the fields. However, I am leaving this in the answer as </p></body></html>

===ID===
584cc0543e2ca508e5f07326
===QUESTION===
What's Java Hybrid - Applet + Application?
And how can I write one?  From comments to my  reply , this followed: "What we had in the old days - An Applet and Application - is not available anymore." And a rebuttal:  Rubbish. It [An Applet and Application] is called an hybrid, and is alive and well. Ask on a separate question if you would like clarification. I would like to ask  what this Java Hybrid is? I have searched but for some reason can't find any useful information for something that is "alive and well". The keywords I used maybe slightly off so that could be a reason. 
===LINK===
http://stackoverflow.com/questions/12449889/whats-java-hybrid-applet-application
===KEYWORDS===
information clarification anymore keywords hybrid 
===ANSWER===
16
<html><body><p>A <em>hybrid</em> applet/application simply abstracts the initialization of <a href="http://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html" rel="nofollow noreferrer">two top-level containers</a>, <code>JFrame</code> and <code>JApplet</code>. Examples are seen <a href="http://stackoverflow.com/a/11372932/230513">here</a>, <a href="https://sites.google.com/site/drjohnbmatthews/subway" rel="nofollow noreferrer">here</a> and <a href="http://mindprod.com/jgloss/applet.html" rel="nofollow noreferrer">here</a>. </p><p>Addendum: <em>How does that work?</em></p></body></html>

===ID===
584cc0553e2ca508e5f07327
===QUESTION===
Java arrays printing out weird numbers, and text [duplicate]
This question already has an answer here: I'm new to programming. I'm sure the answer for this question is out there, but I have no idea what to search for.  so um. ok, i'll go right to it. Here's my code:  Compiles & works fine. It's just the output from CMD that i'm dizzy about.  This is the output:  [I@3e25a5 I want them to represent the exact same numbers from the list (arr) instead. How do I make that happen? 
===LINK===
http://stackoverflow.com/questions/4479683/java-arrays-printing-out-weird-numbers-and-text
===KEYWORDS===
represent search code arr question 
===ANSWER===
18
<html><body><p>Every object has a toString() method, and the default method is to display the object's class name representation, then "@" followed by its hashcode.  So what you're seeing is the default toString() representation of an int array.  To print the data in the array, you can use </p><pre><code>System.out.println(java.util.Arrays.toString(arr));
</code></pre><p>Or you can loop through the array with a for loop as others have posted in this thread.</p></body></html>

===ID===
584cc0553e2ca508e5f07328
===QUESTION===
Difference between <context:annotation-config> vs <context:component-scan>
I'm learning Spring 3 and I don't seem to grasp the functionality behind  <context:annotation-config>  and  <context:component-scan> . From what I've read they seem to handle different annotations (@Required, @Autowired etc vs @Component, @Repository, @Service etc) but also from what I've read they register the same bean post processor classes. To confuse me even more, there is an  annotation-config  attribute on  <context:component-scan> . Can someone shed some light on these tags? What's similar, what's different, is one superseded by the other, they complete each other, do I need one of them, both? 
===LINK===
http://stackoverflow.com/questions/7414794/difference-between-contextannotation-config-vs-contextcomponent-scan
===KEYWORDS===
shed @repository confuse @component config> 
===ANSWER===
1046
<html><body><p><code>&lt;context:annotation-config&gt;</code> is used to activate annotations in beans already registered in the application context (no matter if they were defined with XML or by package scanning).</p><p><code>&lt;context:component-scan&gt;</code> can also do what <code>&lt;context:annotation-config&gt;</code> does but <code>&lt;context:component-scan&gt;</code> also scans packages to find and register beans within the application context.</p><p>I'll use some examples to show the differences/similarities. </p><p>Lets start with a basic setup of three beans of type <code>A</code>, <code>B</code> and <code>C</code>, with <code>B</code> and <code>C</code> being injected into <code>A</code>.</p><pre><code>package com.xxx;
public class B {
  public B() {
    System.out.println("creating bean B: " + this);
  }
}

package com.xxx;
public class C {
  public C() {
    System.out.println("creating bean C: " + this);
  }
}

package com.yyy;
import com.xxx.B;
import com.xxx.C;
public class A { 
  private B bbb;
  private C ccc;
  public A() {
    System.out.println("creating bean A: " + this);
  }
  public void setBbb(B bbb) {
    System.out.println("setting A.bbb with " + bbb);
    this.bbb = bbb;
  }
  public void setCcc(C ccc) {
    System.out.println("setting A.ccc with " + ccc);
    this.ccc = ccc; 
  }
}
</code></pre><p>With the following XML configuration :</p><pre><code>&lt;bean id="bBean" class="com.xxx.B" /&gt;
&lt;bean id="cBean" class="com.xxx.C" /&gt;
&lt;bean id="aBean" class="com.yyy.A"&gt;
  &lt;property name="bbb" ref="bBean" /&gt;
  &lt;property name="ccc" ref="cBean" /&gt;
&lt;/bean&gt;
</code></pre><p>Loading the context produces the following output:</p><pre><code>creating bean B: com.xxx.B@c2ff5
creating bean C: com.xxx.C@1e8a1f6
creating bean A: com.yyy.A@1e152c5
setting A.bbb with com.xxx.B@c2ff5
setting A.ccc with com.xxx.C@1e8a1f6
</code></pre><p>OK, this is the expected output. But this is "old style" Spring. Now we have annotations so lets use those to simplify the XML.</p><p>First, lets autowire the <code>bbb</code> and <code>ccc</code> properties on bean <code>A</code> like so:</p><pre><code>package com.yyy;
import org.springframework.beans.factory.annotation.Autowired;
import com.xxx.B;
import com.xxx.C;
public class A { 
  private B bbb;
  private C ccc;
  public A() {
    System.out.println("creating bean A: " + this);
  }
  @Autowired
  public void setBbb(B bbb) {
    System.out.println("setting A.bbb with " + bbb);
    this.bbb = bbb;
  }
  @Autowired
  public void setCcc(C ccc) {
    System.out.println("setting A.ccc with " + ccc);
    this.ccc = ccc;
  }
}
</code></pre><p>This allows me to remove the following rows from the XML:</p><pre><code>&lt;property name="bbb" ref="bBean" /&gt;
&lt;property name="ccc" ref="cBean" /&gt;
</code></pre><p>My XML is now simplified to this:</p><pre><code>&lt;bean id="bBean" class="com.xxx.B" /&gt;
&lt;bean id="cBean" class="com.xxx.C" /&gt;
&lt;bean id="aBean" class="com.yyy.A" /&gt;
</code></pre><p>When I load the context I get the following output:</p><pre><code>creating bean B: com.xxx.B@5e5a50
creating bean C: com.xxx.C@54a328
creating bean A: com.yyy.A@a3d4cf
</code></pre><p>OK, this is wrong! What happened? Why aren't my properties autowired?</p><p>Well, annotations are a nice feature but by themselves they do nothing whatsoever. They just annotate stuff. You need a processing tool to find the annotations and do something with them. </p><p><code>&lt;context:annotation-config&gt;</code> to the rescue. This activates the actions for the annotations that it finds on the beans defined in the same application context where itself is defined.</p><p>If I change my XML to this:</p><pre><code>&lt;context:annotation-config /&gt;
&lt;bean id="bBean" class="com.xxx.B" /&gt;
&lt;bean id="cBean" class="com.xxx.C" /&gt;
&lt;bean id="aBean" class="com.yyy.A" /&gt;
</code></pre><p>when I load the application context I get the proper result:</p><pre><code>creating bean B: com.xxx.B@15663a2
creating bean C: com.xxx.C@cd5f8b
creating bean A: com.yyy.A@157aa53
setting A.bbb with com.xxx.B@15663a2
setting A.ccc with com.xxx.C@cd5f8b
</code></pre><p>OK, this is nice, but I've removed two rows from the XML and added one. That's not a very big difference. The idea with annotations is that it's supposed to remove the XML.</p><p>So let's remove the XML definitions and replace them all with annotations:</p><pre><code>package com.xxx;
import org.springframework.stereotype.Component;
@Component
public class B {
  public B() {
    System.out.println("creating bean B: " + this);
  }
}

package com.xxx;
import org.springframework.stereotype.Component;
@Component
public class C {
  public C() {
    System.out.println("creating bean C: " + this);
  }
}

package com.yyy;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import com.xxx.B;
import com.xxx.C;
@Component
public class A { 
  private B bbb;
  private C ccc;
  public A() {
    System.out.println("creating bean A: " + this);
  }
  @Autowired
  public void setBbb(B bbb) {
    System.out.println("setting A.bbb with " + bbb);
    this.bbb = bbb;
  }
  @Autowired
  public void setCcc(C ccc) {
    System.out.println("setting A.ccc with " + ccc);
    this.ccc = ccc;
  }
}
</code></pre><p>While in the XML we only keep this:</p><pre><code>&lt;context:annotation-config /&gt;
</code></pre><p>We load the context and the result is... Nothing. No beans are created, no beans are autowired. Nothing!</p><p>That's because, as I said in the first paragraph, the <code>&lt;context:annotation-config /&gt;</code> only works on beans registered within the application context. Because I removed the XML configuration for the three beans there is no bean created and <code>&lt;context:annotation-config /&gt;</code> has no "targets" to work on.</p><p>But that won't be a problem for <code>&lt;context:component-scan&gt;</code> which can scan a package for "targets" to work on. Let's change the content of the XML config into the following entry:</p><pre><code>&lt;context:component-scan base-package="com.xxx" /&gt;
</code></pre><p>When I load the context I get the following output:</p><pre><code>creating bean B: com.xxx.B@1be0f0a
creating bean C: com.xxx.C@80d1ff
</code></pre><p>Hmmmm... something is missing. Why? </p><p>If you look closelly at the classes, class <code>A</code> has package <code>com.yyy</code> but I've specified in the <code>&lt;context:component-scan&gt;</code> to use package <code>com.xxx</code> so this completely missed my <code>A</code> class and only picked up <code>B</code> and <code>C</code> which are on the <code>com.xxx</code> package.</p><p>To fix this, I add this other package also:</p><pre><code>&lt;context:component-scan base-package="com.xxx,com.yyy" /&gt;
</code></pre><p>and now we get the expected result:</p><pre><code>creating bean B: com.xxx.B@cd5f8b
creating bean C: com.xxx.C@15ac3c9
creating bean A: com.yyy.A@ec4a87
setting A.bbb with com.xxx.B@cd5f8b
setting A.ccc with com.xxx.C@15ac3c9
</code></pre><p>And that's it! Now you don't have XML definitions anymore, you have annotations.</p><p>As a final example, keeping the annotated classes <code>A</code>, <code>B</code> and <code>C</code> and adding the following to the XML, what will we get after loading the context?</p><pre><code>&lt;context:component-scan base-package="com.xxx" /&gt;
&lt;bean id="aBean" class="com.yyy.A" /&gt;
</code></pre><p>We still get the correct result:</p><pre><code>creating bean B: com.xxx.B@157aa53
creating bean C: com.xxx.C@ec4a87
creating bean A: com.yyy.A@1d64c37
setting A.bbb with com.xxx.B@157aa53
setting A.ccc with com.xxx.C@ec4a87
</code></pre><p>Even if the bean for class <code>A</code> isn't obtained by scanning, the processing tools are still applied by <code>&lt;context:component-scan&gt;</code> on all beans registered
in the application context, even for <code>A</code> which was manually registered in the XML.</p><p>But what if we have the following XML, will we get duplicated beans because we've specified both <code>&lt;context:annotation-config /&gt;</code> and <code>&lt;context:component-scan&gt;</code>?</p><pre><code>&lt;context:annotation-config /&gt;
&lt;context:component-scan base-package="com.xxx" /&gt;
&lt;bean id="aBean" class="com.yyy.A" /&gt;
</code></pre><p>No, no duplications, We again get the expected result:</p><pre><code>creating bean B: com.xxx.B@157aa53
creating bean C: com.xxx.C@ec4a87
creating bean A: com.yyy.A@1d64c37
setting A.bbb with com.xxx.B@157aa53
setting A.ccc with com.xxx.C@ec4a87
</code></pre><p>That's because both tags register the same processing tools (<code>&lt;context:annotation-config /&gt;</code> can be omitted if <code>&lt;context:component-scan&gt;</code> is specified) but Spring takes care of running them only once.</p><p>Even if you register the processing tools yourself multiple times, Spring will still make sure they do their magic only once; this XML:</p><pre><code>&lt;context:annotation-config /&gt;
&lt;context:component-scan base-package="com.xxx" /&gt;
&lt;bean id="aBean" class="com.yyy.A" /&gt;
&lt;bean id="bla" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" /&gt;
&lt;bean id="bla1" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" /&gt;
&lt;bean id="bla2" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" /&gt;
&lt;bean id="bla3" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" /&gt;
</code></pre><p>will still generate the following result:</p><pre><code>creating bean B: com.xxx.B@157aa53
creating bean C: com.xxx.C@ec4a87
creating bean A: com.yyy.A@25d2b2
setting A.bbb with com.xxx.B@157aa53
setting A.ccc with com.xxx.C@ec4a87
</code></pre><p>OK, that about raps it up. </p><p>I hope this information along with the responses from @Tomasz Nurkiewicz and @Sean Patrick Floyd are all you need to understand how 
<code>&lt;context:annotation-config&gt;</code> and <code>&lt;context:component-scan&gt;</code> work.</p></body></html>

===ID===
584cc0563e2ca508e5f07329
===QUESTION===
Connection pooling options with JDBC: DBCP vs C3P0
What is the best connection pooling library available for Java/JDBC? I'm considering the 2 main candidates (free / open-source):  I've read a lot about them in blogs and other forums but could not reach a decision. Are there any relevant alternatives to these two? 
===LINK===
http://stackoverflow.com/questions/520585/connection-pooling-options-with-jdbc-dbcp-vs-c3p0
===KEYWORDS===
jdbc blogs reach c3p0 dbcp 
===ANSWER===
155
<html><body><p>DBCP is out of date and not production grade. Some time back we conducted an in-house analysis of the two, creating a test fixture which generated load and concurrency against the two to assess their suitability under real life conditions. </p><p>DBCP consistently generated exceptions into our test application and struggled to reach levels of performance which C3P0 was more than capable of handling without any exceptions. </p><p>C3P0 also robustly handled DB disconnects and transparent reconnects on resume whereas DBCP never recovered connections if the link was taken out from beneath it. Worse still DBCP was returning Connection objects to the application for which the underlying transport had broken. </p><p>Since then we have used C3P0 in 4 major heavy-load consumer web apps and have never looked back.</p><p><strong>UPDATE:</strong> It turns out that after many years of sitting on a shelf, the Apache Commons folk have taken <a href="http://commons.apache.org/dbcp/" rel="nofollow noreferrer">DBCP out of dormancy</a> and it is now, once again, an actively developed project. Thus my original post may be out of date. </p><p>That being said, I haven't yet experienced this new upgraded library's performance, nor heard of it being de-facto in any recent app framework, yet.</p></body></html>

===ID===
584cc0563e2ca508e5f0732a
===QUESTION===
How to avoid Dependency Injection constructor madness?
I find that my constructors are starting to look like this: with ever increasing parameter list. Since "Container" is my dependency injection container, why can't I just do this: for every class? What are the downsides? If I do this, it feels like I'm using a glorified static. Please share your thoughts on IoC and Dependency Injection madness. 
===LINK===
http://stackoverflow.com/questions/2420193/how-to-avoid-dependency-injection-constructor-madness
===KEYWORDS===
container ioc constructors share downsides 
===ANSWER===
269
<html><body><p>You are right that if you use the container as a Service Locator, it's more or less a glorified static factory. For lots of reasons <a href="http://blog.ploeh.dk/2010/02/03/ServiceLocatorIsAnAntiPattern.aspx" rel="nofollow noreferrer">I consider this an anti-pattern</a>.</p><p>One of the wonderful benefits of Constructor Injection is that it makes violations of the <a href="http://en.wikipedia.org/wiki/Single_responsibility_principle" rel="nofollow noreferrer">Single Responsibility Principle</a> glaringly obvious.</p><p>When that happens, it's time to <a href="http://blog.ploeh.dk/2010/02/02/RefactoringToAggregateServices.aspx" rel="nofollow noreferrer">refactor to Facade Services</a>. In short, create a new, more <strong>coarse-grained</strong> interface that hides the interaction between some or all of the fine-grained dependencies you currently require.</p></body></html>

===ID===
584cc0573e2ca508e5f0732b
===QUESTION===
How to create a windows service from java app
I've just inherited a java application that needs to be installed as a service on XP and vista. It's been about 8 years since I've used windows in any form and I've never had to create a service, let alone from something like a java app (I've got a jar for the app and a single dependency jar - log4j).  What is the magic necessary to make this run as a service?  I've got the source, so code modifications, though preferably avoided, are possible. 
===LINK===
http://stackoverflow.com/questions/68113/how-to-create-a-windows-service-from-java-app
===KEYWORDS===
vista magic service form windows 
===ANSWER===
54
<html><body><p>I've had some luck with <a href="http://wrapper.tanukisoftware.org/doc/english/introduction.html" rel="nofollow noreferrer">the Java Service Wrapper</a></p></body></html>

===ID===
584cc0573e2ca508e5f0732c
===QUESTION===
How to set the java.library.path from Eclipse
How can I set the java.library.path for a whole Eclipse Project? I'm using a Java library that relies on OS specific files and need to find a .dll/.so/.jnilib. But the Application always exits with an error message that those files are not found on the library path.  I would like to configure this whole project to use the library path. I tried to add the path as a VM argument to some run configurations in eclipse but that didn't work. 
===LINK===
http://stackoverflow.com/questions/957700/how-to-set-the-java-library-path-from-eclipse
===KEYWORDS===
relies files set java configure 
===ANSWER===
263
<html><body><p>Don't mess with the library path!  Eclipse builds it itself!</p><p>Instead, go into the library settings for your projects and, for each jar/etc that requires a native library, expand it in the <em>Libraries</em> tab.  In the tree view there, each library has items for source/javadoc and native library locations.</p><p>Specifically: select <code>Project</code>, right click -&gt; <em>Properties</em> / <em>Java Build Path</em> / <em>Libraries</em> tab, select a .jar, expand it, select <em>Native library location</em>, click <em>Edit</em>, folder chooser dialog will appear)</p><p>Messing with the library path on the command line should be your last ditch effort, because you might break something that is already properly set by eclipse.</p><p><img alt="Native library location" src="https://i.stack.imgur.com/zeFNt.png"/></p></body></html>

===ID===
584cc0583e2ca508e5f0732d
===QUESTION===
How to use UTF-8 in resource properties with ResourceBundle
I need to use UTF-8 in my resource properties using Java's  ResourceBundle . When I enter the text directly into the properties file, it displays as mojibake. My app runs on Google App Engine. Can anyone give me an example? I can't get this work. 
===LINK===
http://stackoverflow.com/questions/4659929/how-to-use-utf-8-in-resource-properties-with-resourcebundle
===KEYWORDS===
java give work mojibake resourcebundle 
===ANSWER===
244
<html><body><p>The <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.html" rel="nofollow noreferrer"><code>ResourceBundle#getBundle()</code></a> uses under the covers <a href="http://docs.oracle.com/javase/7/docs/api/java/util/PropertyResourceBundle.html" rel="nofollow noreferrer"><code>PropertyResourceBundle</code></a> when a <code>.properties</code> file is specified. This in turn uses by default <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load(java.io.InputStream)" rel="nofollow noreferrer"><code>Properties#load(InputStream)</code></a> to load those properties files. As per <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Properties.html#load(java.io.InputStream)" rel="nofollow noreferrer">the javadoc</a>, they are by default read as ISO-8859-1. </p><p><code>public void load(InputStream inStream) throws IOException</code></p><p>Reads a property list (key and element pairs) from the input byte stream. The input stream is in a simple line-oriented format as specified in load(Reader) <strong>and is assumed to use the ISO 8859-1 character encoding</strong>; that is each byte is one Latin1 character. Characters not in Latin1, and certain special characters, are represented in keys and elements using Unicode escapes as defined in section 3.3 of The Java™ Language Specification.</p><p>So, you'd need to save them as ISO-8859-1. If you have any characters beyond ISO-8859-1 range and you can't use <code>\uXXXX</code> off top of head and you're thus forced to save the file as UTF-8, then you'd need to use the <a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/native2ascii.html" rel="nofollow noreferrer"><em>native2ascii</em></a> tool to convert an UTF-8 saved properties file to an ISO-8859-1 saved properties file wherein all uncovered characters are converted into <code>\uXXXX</code> format. The below example converts a UTF-8 encoded properties file <code>text_utf8.properties</code> to a valid ISO-8859-1 encoded properties file <code>text.properties</code>.</p><pre>native2ascii -encoding UTF-8 text_utf8.properties text.properties</pre><p>When using a sane IDE such as Eclipse, this is already automatically done when you create a <code>.properties</code> file in a Java based project and use Eclipse's own editor. Eclipse will transparently convert the characters beyond ISO-8859-1 range to <code>\uXXXX</code> format. See also below screenshots (note the "Properties" and "Source" tabs on bottom, click for large):</p><p><a href="https://i.stack.imgur.com/iQWWG.png" rel="nofollow noreferrer"><img alt='"Properties" tab' src="https://i.stack.imgur.com/iQWWGm.png"/></a> <a href="https://i.stack.imgur.com/kjOCb.png" rel="nofollow noreferrer"><img alt='"Source" tab' src="https://i.stack.imgur.com/kjOCbm.png"/></a></p><p>Alternatively, you could also create a custom <a href="http://docs.oracle.com/javase/7/docs/api/java/util/ResourceBundle.Control.html" rel="nofollow noreferrer"><code>ResourceBundle.Control</code></a> implementation wherein you explicitly read the properties files as UTF-8 using <a href="http://docs.oracle.com/javase/7/docs/api/java/io/InputStreamReader.html#InputStreamReader(java.io.InputStream,%20java.lang.String)" rel="nofollow noreferrer"><code>InputStreamReader</code></a>, so that you can just save them as UTF-8 without the need to hassle with <code>native2ascii</code>. Here's a kickoff example:</p><pre><code>public class UTF8Control extends Control {
    public ResourceBundle newBundle
        (String baseName, Locale locale, String format, ClassLoader loader, boolean reload)
            throws IllegalAccessException, InstantiationException, IOException
    {
        // The below is a copy of the default implementation.
        String bundleName = toBundleName(baseName, locale);
        String resourceName = toResourceName(bundleName, "properties");
        ResourceBundle bundle = null;
        InputStream stream = null;
        if (reload) {
            URL url = loader.getResource(resourceName);
            if (url != null) {
                URLConnection connection = url.openConnection();
                if (connection != null) {
                    connection.setUseCaches(false);
                    stream = connection.getInputStream();
                }
            }
        } else {
            stream = loader.getResourceAsStream(resourceName);
        }
        if (stream != null) {
            try {
                // Only this line is changed to make it to read properties files as UTF-8.
                bundle = new PropertyResourceBundle(new InputStreamReader(stream, "UTF-8"));
            } finally {
                stream.close();
            }
        }
        return bundle;
    }
}
</code></pre><p>This can be used as follows:</p><pre><code>ResourceBundle bundle = ResourceBundle.getBundle("com.example.i18n.text", new UTF8Control());
</code></pre></body></html>

===ID===
584cc0583e2ca508e5f0732e
===QUESTION===
Get a List of all Threads currently running in Java
Is there any way I can get a list of all the running Threads in the current JVM (including the Threads NOT started by my class)?  Is it also possible to get the Thread and Class objects of all Thread in the list? I want to be able to do this through code. 
===LINK===
http://stackoverflow.com/questions/1323408/get-a-list-of-all-threads-currently-running-in-java
===KEYWORDS===
code java thread started list 
===ANSWER===
216
<html><body><p>To get an iterable set:</p><pre><code>Set&lt;Thread&gt; threadSet = Thread.getAllStackTraces().keySet();
</code></pre><p>To convert it to an array:</p><pre><code>Thread[] threadArray = threadSet.toArray(new Thread[threadSet.size()]);
</code></pre></body></html>

===ID===
584cc0593e2ca508e5f0732f
===QUESTION===
Java - escape string to prevent SQL injection
I'm trying to put some anti sql injection in place in java and am finding it very difficult to work with the the "replaceAll" string function. Ultimately I need a function that will convert any existing  \  to  \\ , any  "  to  \" , any  '  to  \' , and any  \n  to  \\n  so that when the string is evaluated by MySQL SQL injections will be blocked.  I've jacked up some code I was working with and all the  \\\\\\\\\\\  in the function are making my eyes go nuts. If anyone happens to have an example of this I would greatly appreciate it. 
===LINK===
http://stackoverflow.com/questions/1812891/java-escape-string-to-prevent-sql-injection
===KEYWORDS===
function ultimately code java string 
===ANSWER===
188
<html><body><p>PreparedStatements are the way to go, because they make SQL injection impossible.  Here's a simple example taking the user's input as the parameters:</p><pre><code>public insertUser(String name, String email) {
   Connection conn = null;
   PreparedStatement stmt = null;
   try {
      conn = setupTheDatabaseConnectionSomehow();
      stmt = conn.prepareStatement("INSERT INTO person (name, email) values (?, ?)");
      stmt.setString(1, name);
      stmt.setString(2, email);
      stmt.executeUpdate();
   }
   finally {
      try {
         if (stmt != null) { stmt.close(); }
      }
      catch (Exception e) {
         // log this error
      }
      try {
         if (conn != null) { conn.close(); }
      }
      catch (Exception e) {
         // log this error
      }
   }
}
</code></pre><p>No matter what characters are in name and email, those characters will be placed directly in the database.  They won't affect the INSERT statement in any way.</p><p>There are different set methods for different data types -- which one you use depends on what your database fields are.  For example, if you have an INTEGER column in the database, you should use a <code>setInt</code> method.  <a href="http://java.sun.com/javase/6/docs/api/java/sql/PreparedStatement.html" rel="nofollow noreferrer">The PreparedStatement documentation</a> lists all the different methods available for setting and getting data.</p></body></html>

===ID===
584cc0593e2ca508e5f07330
===QUESTION===
Regexp Java for password validation
I'm creating a regexp for password validation to be used in a Java application as a configuration parameter. The regexp is: The password policy is: At least 8 chars Contains at least one digit Contains at least one lower alpha char and one upper alpha char Contains at least one char within a set of special chars ( @#%$^  etc.) Does not contain space, tab, etc. I’m missing just point 5. I'm not able to have the regexp check for space, tab, carriage return, etc. Could anyone help me? 
===LINK===
http://stackoverflow.com/questions/3802192/regexp-java-for-password-validation
===KEYWORDS===
digit set creating space missing 
===ANSWER===
140
<html><body><p>Try this:</p><pre><code>^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&amp;+=])(?=\S+$).{8,}$
</code></pre><p>Explanation:</p><pre><code>^                 # start-of-string
(?=.*[0-9])       # a digit must occur at least once
(?=.*[a-z])       # a lower case letter must occur at least once
(?=.*[A-Z])       # an upper case letter must occur at least once
(?=.*[@#$%^&amp;+=])  # a special character must occur at least once
(?=\S+$)          # no whitespace allowed in the entire string
.{8,}             # anything, at least eight places though
$                 # end-of-string
</code></pre><p>It's easy to add, modify or remove individual rules, since every rule is an independent "module".</p><p>The <code>(?=.*[xyz])</code> construct eats the entire string (<code>.*</code>) and backtracks to the first occurrence where <code>[xyz]</code> can match. It succeeds if <code>[xyz]</code> is found, it fails otherwise. </p><p>The alternative would be using a reluctant qualifier: <code>(?=.*?[xyz])</code>. For a password check, this will hardly make any difference, for much longer strings it could be the more efficient variant.</p><p>The most efficient variant (but hardest to read and maintain, therefore the most error-prone) would be <code>(?=[^xyz]*[xyz])</code>, of course. For a regex of this length and for this purpose, I would dis-recommend doing it that way, as it has no real benefits.</p></body></html>

===ID===
584cc05a3e2ca508e5f07331
===QUESTION===
javac is not recognized as an internal or external command, operable program or batch file [closed]
I am new to the Java application and having trouble compiling a simple Helloworld program. JDK 1.7.0 is installed in my Windows 7 and was able to set the path variable but didn't work, so I tried something but still keeps on giving me the same error.  In my cmd it says  this: 
===LINK===
http://stackoverflow.com/questions/7709041/javac-is-not-recognized-as-an-internal-or-external-command-operable-program-or
===KEYWORDS===
didn javac giving work recognized 
===ANSWER===
235
<html><body><p>Check your <code>javac</code> path on Windows using <strong>Windows Explorer</strong> <code>C:\Program Files\Java\jdk1.7.0_02\bin</code> and copy the address.</p><p>Go to Control Panel. <code>Environment Variables</code> and <code>Insert</code> the address at the beginning of var. <code>Path</code> followed by semicolon. i.e <code>C:\Program Files\Java\jdk1.7.0_02\bin;</code> . <strong>Do not delete the path existent,</strong> just click in and go to the left end and paste the line above. Do not try anything else, because you just need to link your code to "javac.exe" and you just need to locate it.</p><p>Close your command prompt and reopen it,and write the code for compile and execution.</p></body></html>

===ID===
584cc05a3e2ca508e5f07332
===QUESTION===
How to set a timer in java
How to set a Timer say for 2 minutes to try to connect to a database  and then exception out if there is any issue in connecting 
===LINK===
http://stackoverflow.com/questions/4044726/how-to-set-a-timer-in-java
===KEYWORDS===
exception set java database timer 
===ANSWER===
184
<html><body><p>So the first part of the answer is how to do what the subject asks as this was how I initially interpreted it and a few people seemed to find helpful.  The question was since clarified and I've extended the answer to address that.</p><p><strong>Setting a timer</strong></p><p>First you need to create a Timer (I'm using the <code>java.util</code> version here):</p><pre><code>import java.util.Timer;
</code></pre><p>..</p><pre><code>Timer timer = new Timer();
</code></pre><p>To run the task once you would do:</p><pre><code>timer.schedule(new TimerTask() {
  @Override
  public void run() {
    // Your database code here
  }
}, 2*60*1000);
</code></pre><p>To have the task repeat after the duration you would do:</p><pre><code>timer.scheduleAtFixedRate(new TimerTask() {
  @Override
  public void run() {
    // Your database code here
  }
}, 2*60*1000, 2*60*1000);
</code></pre><p><strong>Making a task timeout</strong></p><p>To specifically do what the clarified question asks, that is attempting to perform a task for a given period of time, you could do the following:</p><pre><code>ExecutorService service = Executors.newSingleThreadExecutor();

try {
    Runnable r = new Runnable() {
        @Override
        public void run() {
            // Database task
        }
    };

    Future&lt;?&gt; f = service.submit(r);

    f.get(2, TimeUnit.MINUTES);     // attempt the task for two minutes
}
catch (final InterruptedException e) {
    // The thread was interrupted during sleep, wait or join
}
catch (final TimeoutException e) {
    // Took too long!
}
catch (final ExecutionException e) {
    // An exception from within the Runnable task
}
finally {
    service.shutdown();
}
</code></pre><p>This will execute normally with exceptions if the task completes within 2 minutes.  If it runs longer than that, the TimeoutException will be throw.</p><p>One issue is that although you'll get a TimeoutException after the two minutes, <em>the task will actually continue to run</em>, although presumably a database or network connection will eventually time out and throw an exception in the thread.  But be aware it could consume resources until that happens.</p></body></html>

===ID===
584cc05b3e2ca508e5f07333
===QUESTION===
Overloaded method selection based on the parameter's real type
I'm experimenting with this code: This prints  foo(Object o)  three times. I expect the method selection to take in consideration the real (not the declared) parameter type. Am I missing something? Is there a way to modify this code so that it'll print  foo(12) ,  foo("foobar")  and  foo(Object o) ? 
===LINK===
http://stackoverflow.com/questions/1572322/overloaded-method-selection-based-on-the-parameters-real-type
===KEYWORDS===
real declared code missing foobar 
===ANSWER===
57
<html><body><p>I expect the method selection to take
  in consideration the real (not the
  declared) parameter type. Am I missing
  something?</p><p>Yes. Your expectation is wrong. In Java, dynamic method dispatch happens only for the object the method is called on, not for the parameter types of overloaded methods.</p><p>Citing the <a href="http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.4.9" rel="nofollow noreferrer">Java Language Specification</a>:</p><p>When a method is invoked (§15.12), the
  number of actual arguments (and any
  explicit type arguments) and <strong>the
  compile-time types of the arguments</strong>
  are used, at compile time, to
  determine the signature of the method
  that will be invoked (§15.12.2). If
  the method that is to be invoked is an
  instance method, the actual method to
  be invoked will be determined at run
  time, using dynamic method lookup
  (§15.12.4).</p></body></html>

===ID===
584cc05b3e2ca508e5f07334
===QUESTION===
Is there a goto statement in Java?
I'm confused about this. Most of us have been told that there isn't any goto statement in Java. But I found that it is one of the keywords in Java. Where can it be used? If it can not be used, then why was it included in Java as a keyword? 
===LINK===
http://stackoverflow.com/questions/2545103/is-there-a-goto-statement-in-java
===KEYWORDS===
java keyword confused included isn 
===ANSWER===
133
<html><body><p>The <a href="http://java.sun.com/docs/books/tutorial/java/nutsandbolts/_keywords.html" rel="nofollow noreferrer">Java keyword list</a> specifies the <code>goto</code> keyword, but it is marked as "not used".</p><p>This was probably done in case it were to be added to a later version of Java.</p><p>If <code>goto</code> was not on the list, and it gets added to the language later on, existing code that used the word <code>goto</code> as an identifier (variable name, method name, etc...) would break. But because <code>goto</code> is a keyword, such code will not even compile in the present, and it remains possible to make it actually do something later on, without breaking existing code.</p></body></html>

===ID===
584cc05c3e2ca508e5f07335
===QUESTION===
Java: Clear the console
Can any body please tell me what code is used for clear screen in Java? For example in C++  What code is used in Java for clear screen? Thanks! 
===LINK===
http://stackoverflow.com/questions/2979383/java-clear-the-console
===KEYWORDS===
body console clear code java 
===ANSWER===
60
<html><body><p>Since there are several answers here showing non-working code for Windows, here is a clarification:</p><pre><code>Runtime.getRuntime().exec("cls");
</code></pre><p>This command does <em>not</em> work, for two reasons:</p><p>There is no executable named <code>cls.exe</code> or <code>cls.com</code> in a standard Windows installation that could be invoked via <code>Runtime.exec</code>, as the well-known command <code>cls</code> is builtin to Windows’ command line interpreter.</p><p>When launching a new process via <code>Runtime.exec</code>, the standard output gets redirected to a pipe which the initiating Java process can read. But when the output of the <code>cls</code> command gets redirected, it doesn’t clear the console.</p><p>To solve this problem, we have to invoke the command line interpreter (<code>cmd</code>) and tell it to execute a command (<code>/c cls</code>) which allows invoking builtin commands. Further we have to directly connect its output channel to the Java process’ output channel, which works starting with Java 7, using <code>inheritIO()</code>:</p><pre><code>import java.io.IOException;

public class CLS {
    public static void main(String... arg) throws IOException, InterruptedException {
        new ProcessBuilder("cmd", "/c", "cls").inheritIO().start().waitFor();
    }
}
</code></pre><p>Now when the Java process is connected to a console, i.e. has been started from a command line without output redirection, it will clear the console.</p></body></html>

===ID===
584cc05c3e2ca508e5f07336
===QUESTION===
equals vs Arrays.equals in Java
When comparing arrays in Java, are there any differences between the following 2 statements? And if so what are they? 
===LINK===
http://stackoverflow.com/questions/8777257/equals-vs-arrays-equals-in-java
===KEYWORDS===
arrays differences java equals 
===ANSWER===
197
<html><body><p><code>array1.equals(array2)</code> is the same as <code>array1 == array2</code>, i.e. is it the same array. As @alf points out it's not what most people expect.</p><p><code>Arrays.equals(array1, array2)</code> compares the contents of the arrays.</p><p>Similarly <code>array.toString()</code> may not be very useful and you need to use <code>Arrays.toString(array)</code>.</p></body></html>

===ID===
584cc05d3e2ca508e5f07337
===QUESTION===
How do I remove objects from an array in Java?
Given an array of  n  Objects, let's say it is an  array of strings , and it has the following values: What do I have to do to delete/remove all the strings/objects equal to  "a"  in the array? 
===LINK===
http://stackoverflow.com/questions/112503/how-do-i-remove-objects-from-an-array-in-java
===KEYWORDS===
java delete/remove objects values array 
===ANSWER===
87
<html><body><p>[If you want some ready-to-use code, please scroll to my "Edit3" (after the cut). The rest is here for posterity.]</p><p>To flesh out <a href="http://stackoverflow.com/a/112507/13">Dustman's idea</a>:</p><pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;(Arrays.asList(array));
list.removeAll(Arrays.asList("a"));
array = list.toArray(array);
</code></pre><p>Edit: I'm now using <code>Arrays.asList</code> instead of <code>Collections.singleton</code>: singleton is limited to one entry, whereas the <code>asList</code> approach allows you to add other strings to filter out later: <code>Arrays.asList("a", "b", "c")</code>.</p><p>Edit2: The above approach retains the same array (so the array is still the same length); the element after the last is set to null. If you want a <em>new</em> array sized exactly as required, use this instead:</p><pre><code>array = list.toArray(new String[0]);
</code></pre><p>Edit3: If you use this code on a frequent basis in the same class, you may wish to consider adding this to your class:</p><pre><code>private static final String[] EMPTY_STRING_ARRAY = new String[0];
</code></pre><p>Then the function becomes:</p><pre><code>List&lt;String&gt; list = new ArrayList&lt;&gt;();
Collections.addAll(list, array);
list.removeAll(Arrays.asList("a"));
array = list.toArray(EMPTY_STRING_ARRAY);
</code></pre><p>This will then stop littering your heap with useless empty string arrays that would otherwise be <code>new</code>ed each time your function is called.</p><p>cynicalman's suggestion (see comments) will also help with the heap littering, and for fairness I should mention it:</p><pre><code>array = list.toArray(new String[list.size()]);
</code></pre><p>I prefer my approach, because it may be easier to get the explicit size wrong (e.g., calling <code>size()</code> on the wrong list).</p></body></html>

===ID===
584cc05d3e2ca508e5f07338
===QUESTION===
Operator overloading in Java
Please can you tell me if it is possible to overload operators in Java? If it is used anywhere in Java could you please tell me about it. 
===LINK===
http://stackoverflow.com/questions/1686699/operator-overloading-in-java
===KEYWORDS===
java 
===ANSWER===
131
<html><body><p>No, Java doesn't support user-defined operator overloading. The only aspect of Java which comes close to "custom" operator overloading is the handling of + for strings, which either results in compile-time concatenation of constants or execution-time concatenation using StringBuilder/StringBuffer. You can't define your own operators which act in the same way though.</p><p>For a Java-like (and JVM-based) language which <em>does</em> support operator overloading, you could look at <a href="http://groovy.codehaus.org" rel="nofollow noreferrer">Groovy</a>. Alternatively, you might find luck with a <a href="https://github.com/amelentev/java-oo" rel="nofollow noreferrer">Java compiler plugin solution</a>.</p></body></html>

===ID===
584cc05e3e2ca508e5f07339
===QUESTION===
Causes of 'java.lang.NoSuchMethodError: main Exception in thread “main”'
New Java programmers often encounter this message when they attempt to run a Java program: What does this mean, what can cause it, and what should one do to fix it? 
===LINK===
http://stackoverflow.com/questions/5407250/causes-of-java-lang-nosuchmethoderror-main-exception-in-thread-main
===KEYWORDS===
lang run java fix nosuchmethoderror 
===ANSWER===
31
<html><body><p>When you use the <code>java</code> command to run a Java application from the command line, e.g.,</p><pre><code>    java some.AppName arg1 arg2 ...
</code></pre><p>the command loads the class that you nominated, and then looks for the entry point method called <code>main</code>.  More specifically, it is looking for a method that is declared as follows:</p><pre><code>package some;
public class AppName {
    ...
    public static void main(String[] args) {
        // body of main method follows
        ...
    }
}
</code></pre><p>The specific requirements for the entry point method are:</p><p>The argument <em>may</em> be declared using varargs syntax; e.g. <code>String... args</code>.  See <a href="http://stackoverflow.com/a/36803396/139985">http://stackoverflow.com/a/36803396/139985</a>.  The <code>String[]</code> argument is used to pass the arguments from the command line, and is required even if your application takes no command line arguments.</p><p>If any one of the above requirements is not satisfied, the <code>java</code> command will fail with the message:</p><pre><code>java.lang.NoSuchMethodError: main Exception in thread “main”
</code></pre><p>If you encounter this error, check that you have a <code>main</code> method and that it satisfies all 6 of the requirements listed above.</p><p><sup>1 - One really obscure variation of this is when one or more of the characters in "main" is NOT a LATIN-1 character ... but a Unicode character that <em>looks like</em> the corresponding LATIN-1 character when displayed.</sup></p><p><sup>2 - See <a href="http://stackoverflow.com/q/146576/781723">Why is the Java main method static?</a> for explanation of why the method is required to be static.</sup></p><p><sup>3 - <code>String</code> must correspond to <code>java.lang.String</code> and not a custom class named <code>String</code> hiding it.</sup></p></body></html>

===ID===
584cc05e3e2ca508e5f0733a
===QUESTION===
org.apache.http.entity.FileEntity is deprecated in Android 6 (Marshmallow)
I'm upgrading an app to API 23 where  org.apache.http  is deprecated. My current (deprecated) code looks like this: I've found some suggestions to how this should be done using  HttpURLConnection , but they are all much more complex then the current solution (which cannot be used anymore). I'm talking about many lines of code for executing the same functionality as the above. Examples are:  this page  and  this page Does anyone have a good solid shorter solution for that? 
===LINK===
http://stackoverflow.com/questions/32949626/org-apache-http-entity-fileentity-is-deprecated-in-android-6-marshmallow
===KEYWORDS===
code http marshmallow anymore executing 
===ANSWER===
8
<html><body><p>If you change your <code>compileSdkVersion</code> to 21, your app will compile cleanly. That being said, there are reasons why Google is backing away from the built-in HttpClient implementation, so you probably should pursue some other library. That 
"some other library" could be:</p><p>In particular, OkHttp seems to have a pretty good API for <a href="https://github.com/square/okhttp/wiki/Recipes#posting-a-file">posting a file</a> and <a href="https://github.com/square/okhttp/wiki/Recipes#posting-a-multipart-request">posting a multipart form</a>, which should be similar to what your HttpClient code is doing.</p></body></html>

===ID===
584cc05e3e2ca508e5f0733b
===QUESTION===
Why does Gson fromJson throw a JsonSyntaxException: Expected some type but was some other type?
(This post is meant to be a  canonical question  with a sample answer provided below.) I'm trying to deserialize some JSON content into a custom POJO type with  Gson#fromJson(String, Class) . This piece of code throws the follow exception Why can't Gson properly convert my JSON text to my POJO type? 
===LINK===
http://stackoverflow.com/questions/33621808/why-does-gson-fromjson-throw-a-jsonsyntaxexception-expected-some-type-but-was-s
===KEYWORDS===
gson#fromjson meant string deserialize expected 
===ANSWER===
9
<html><body><p>As the exception message states</p><pre><code>Caused by: java.lang.IllegalStateException: Expected BEGIN_OBJECT but was BEGIN_ARRAY at line 1 column 16 path $.nestedPojo
</code></pre><p>while deserializing, Gson was expecting a JSON object, but found a JSON array. Since it couldn't convert from one to the other, it threw this exception.</p><p>The JSON format is described <a href="http://json.org/">here</a>. In short, it defines the following types: objects, arrays, strings, numbers, <code>null</code>, and the boolean values <code>true</code> and <code>false</code>.</p><p>In Gson (and most JSON parsers), the following mappings exist: a JSON string maps to a Java <code>String</code>; a JSON number maps to a Java <code>Number</code> type; a JSON array maps to a <code>Collection</code> type or an array type; a JSON object maps to a Java <code>Map</code> type or, typically, a custom <a href="https://en.wikipedia.org/wiki/Plain_Old_Java_Object">POJO</a> type (not mentioned previously); <code>null</code> maps to Java's <code>null</code>, and the boolean values map to Java's <code>true</code> and <code>false</code>.</p><p>Gson iterates through the JSON content that you provide and tries to deserialize it to the corresponding type you've requested. If the content doesn't match or can't be converted to the expected type, it'll throw a corresponding exception.</p><p>In your case, you provided the following JSON</p><pre><code>{
    "nestedPojo": [
        {
            "name": null,
            "value": 42
        }
    ]
}
</code></pre><p>At the root, this is a JSON object which contains a member named <code>nestedPojo</code> which is a JSON array. That JSON array contains a single element, another JSON object with two members. Considering the mappings defined earlier, you'd expect this JSON to map to a Java object which has a field named <code>nestedPojo</code> of some <code>Collection</code> or array type, where that types defines two fields named <code>name</code> and <code>value</code>, respectively.</p><p>However, you've defined your <code>Pojo</code> type as having a field</p><pre><code>NestedPojo nestedPojo;
</code></pre><p>that is neither an array type, nor a <code>Collection</code> type. Gson can't deserialize the corresponding JSON for this field.</p><p>Instead, you have 3 options:</p><p>Change your JSON to match the expected type</p><pre><code>{
    "nestedPojo": {
        "name": null,
        "value": 42
    }
}
</code></pre><p>Change your <code>Pojo</code> type to expect a <code>Collection</code> or array type</p><pre><code>List&lt;NestedPojo&gt; nestedPojo; // consider changing the name and using @SerializedName
NestedPojo[] nestedPojo;
</code></pre><p>Write and register a custom deserializer for <code>NestedPojo</code> with your own parsing rules. For example</p><pre><code>class Custom implements JsonDeserializer&lt;NestedPojo&gt; {
    @Override
    public NestedPojo deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        NestedPojo nestedPojo = new NestedPojo();
        JsonArray jsonArray = json.getAsJsonArray();
        if (jsonArray.size() != 1) {
            throw new IllegalStateException("unexpected json");
        }
        JsonObject jsonObject = jsonArray.get(0).getAsJsonObject(); // get only element
        JsonElement jsonElement = jsonObject.get("name");
        if (!jsonElement.isJsonNull()) {
            nestedPojo.name = jsonElement.getAsString();
        }
        nestedPojo.value = jsonObject.get("value").getAsInt();
        return nestedPojo;
    }
}

Gson gson = new GsonBuilder().registerTypeAdapter(NestedPojo.class, new Custom()).create();
</code></pre></body></html>

===ID===
584cc05f3e2ca508e5f0733c
===QUESTION===
non resizable window border and positioning
If i create non-resizable JFrames, and windows Aero is enabled  setLocation  does not seem to take account of the window border correctly. In the following code I would expect the second frame to be positioned to the right of the first frame, instead the borders are overlapping. If Aero is disabled or if I remove the calls to  setResizable  this is done as expected. Am I doing something wrong or is this a bug? 
How can I display 2 unresizable dialogs side by side without having overlapping borders? Edit: added screenshots (also changed frame2 to a JDialog instead of a JFrame) Aero On:
 Aero Off:
 Aero On but resizable:
 
===LINK===
http://stackoverflow.com/questions/12529200/non-resizable-window-border-and-positioning
===KEYWORDS===
code frame positioned disabled expect 
===ANSWER===
6
<html><body><p>What are the problems with settings bounds on non-resizable containers?</p><p>Suppose you adjust the bounds to look good on your platform. Suppose the user's platform has a font with different, say larger, <code>FontMetrics</code>. This example is somewhat contrived, but you get the idea. If you change the bounds of a non-resizable container, be sure any text is visible regardless of the host platform's default font.</p><p><img alt="image" src="https://i.stack.imgur.com/fGcUG.png"/></p><pre><code>import java.awt.BorderLayout;
import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 * @see http://stackoverflow.com/a/12532237/230513
 */
public class Evil extends JPanel {

    private static final String s =
        "Tomorrow's winning lottery numbers: 42, ";
    private JLabel label = new JLabel(s + "3, 1, 4, 1, 5, 9", JLabel.LEFT);

    public Evil() {
        this.add(label);
    }

    private void display() {
        JFrame f = new JFrame("Evil");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(this, BorderLayout.WEST);
        f.pack();
        int w = SwingUtilities.computeStringWidth(
            label.getFontMetrics(label.getFont()), s);
        int h = f.getHeight();
        f.setSize(w, h);
        f.setResizable(false);
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Evil().display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc05f3e2ca508e5f0733d
===QUESTION===
Multiple row selection in JTable

I have a JTable, that has one column that is text which is not editable and the second column is a check box that displays boolean values.... Now what i want is, when the user selects multiple rows and unchecks any one of the selected check boxes, then all the check boxes under selection should get unchecked and vice versa.......... How do i do this.....?? 
Please Help.... 
===LINK===
http://stackoverflow.com/questions/4526779/multiple-row-selection-in-jtable
===KEYWORDS===
selection column text editable unchecks 
===ANSWER===
12
<html><body><p>Using @Hovercraft's example and @camickr's advice, the example below shows a suitable user interface. Although it uses buttons, the <code>SelectionAction</code> would also be suitable for a menu or popup.</p><p><img alt="Check A Bunch" src="https://i.stack.imgur.com/TWYHC.png"/></p><pre><code>import java.awt.*;
import java.awt.event.ActionEvent;
import javax.swing.*;
import javax.swing.DefaultListSelectionModel;
import javax.swing.table.DefaultTableModel;

/** @see http://stackoverflow.com/questions/4526779 */
public class CheckABunch extends JPanel {

    private static final int CHECK_COL = 1;
    private static final Object[][] DATA = {
        {"One", Boolean.TRUE}, {"Two", Boolean.FALSE},
        {"Three", Boolean.TRUE}, {"Four", Boolean.FALSE},
        {"Five", Boolean.TRUE}, {"Six", Boolean.FALSE},
        {"Seven", Boolean.TRUE}, {"Eight", Boolean.FALSE},
        {"Nine", Boolean.TRUE}, {"Ten", Boolean.FALSE}};
    private static final String[] COLUMNS = {"Number", "CheckBox"};
    private DataModel dataModel = new DataModel(DATA, COLUMNS);
    private JTable table = new JTable(dataModel);
    private DefaultListSelectionModel selectionModel;

    public CheckABunch() {
        super(new BorderLayout());
        this.add(new JScrollPane(table));
        this.add(new ControlPanel(), BorderLayout.SOUTH);
        table.setPreferredScrollableViewportSize(new Dimension(250, 175));
        selectionModel = (DefaultListSelectionModel) table.getSelectionModel();
    }

    private class DataModel extends DefaultTableModel {

        public DataModel(Object[][] data, Object[] columnNames) {
            super(data, columnNames);
        }

        @Override
        public Class&lt;?&gt; getColumnClass(int columnIndex) {
            if (columnIndex == CHECK_COL) {
                return getValueAt(0, CHECK_COL).getClass();
            }
            return super.getColumnClass(columnIndex);
        }

        @Override
        public boolean isCellEditable(int row, int column) {
            return column == CHECK_COL;
        }
    }

    private class ControlPanel extends JPanel {

        public ControlPanel() {
            this.add(new JLabel("Selection:"));
            this.add(new JButton(new SelectionAction("Clear", false)));
            this.add(new JButton(new SelectionAction("Check", true)));
        }
    }

    private class SelectionAction extends AbstractAction {

        boolean value;

        public SelectionAction(String name, boolean value) {
            super(name);
            this.value = value;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            for (int i = 0; i &lt; dataModel.getRowCount(); i++) {
                if (selectionModel.isSelectedIndex(i)) {
                    dataModel.setValueAt(value, i, CHECK_COL);
                }
            }
        }
    }

    private static void createAndShowUI() {
        JFrame frame = new JFrame("CheckABunch");
        frame.add(new CheckABunch());
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                createAndShowUI();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc0603e2ca508e5f0733e
===QUESTION===
How do I call one constructor from another in Java?
Is it possible to call a constructor from another (within the same class, not from a subclass)? If yes how? And what could be the best way to call another constructor (if there are several ways to do it)? 
===LINK===
http://stackoverflow.com/questions/285177/how-do-i-call-one-constructor-from-another-in-java
===KEYWORDS===
java ways subclass call constructor 
===ANSWER===
1746
<html><body><p>Yes, it is possible:</p><pre><code>public class Foo {
    private int x;

    public Foo() {
        this(1);
    }

    public Foo(int x) {
        this.x = x;
    }
}
</code></pre><p>To chain to a particular superclass constructor instead of one in the same class, use <code>super</code> instead of <code>this</code>. Note that <strong>you can only chain to one constructor</strong>, and <strong>it has to be the first statement in your constructor body</strong>.</p><p>See also <a href="http://stackoverflow.com/questions/284896">this related question</a>, which is about C# but where the same principles apply.</p></body></html>

===ID===
584cc0613e2ca508e5f0733f
===QUESTION===
Failed to load the JNI shared Library (JDK)
When I try opening  Eclipse , a pop-up dialog states: Failed to load the JNI shared library "C:/JDK/bin/client/jvm.dll"`. Following this, Eclipse force closes. Here's a few points I'd like to make:   Downloading the 32-bit versions is something I only want to do as a very last resort. 
What would be suggested to solve this issue? 
===LINK===
http://stackoverflow.com/questions/7352493/failed-to-load-the-jni-shared-library-jdk
===KEYWORDS===
load suggested downloading jdk resort 
===ANSWER===
732
<html><body><p>You need a 64-bit trio: </p></body></html>

===ID===
584cc0613e2ca508e5f07340
===QUESTION===
What is the most appropriate way to store user settings in Android application
I am creating an application which connects to the server using username/password and I would like to enable the option "Save password" so the user wouldn't have to type the password each time the application starts. I was trying to do it with Shared Preferences but am not sure if this is the best solution. I would appreciate any suggestion on how to store user values/settings in Android application. 
===LINK===
http://stackoverflow.com/questions/785973/what-is-the-most-appropriate-way-to-store-user-settings-in-android-application
===KEYWORDS===
enable creating username/password solution connects 
===ANSWER===
205
<html><body><p>In general SharedPreferences are your best bet for storing preferences, so in general I'd recommend that approach for saving application and user settings.</p><p>The only area of concern here is what you're saving. Passwords are always a tricky thing to store, and I'd be particularly wary of storing them as clear text. The Android architecture is such that your application's SharedPreferences are sandboxed to prevent other applications from being able to access the values so there's some security there, but physical access to a phone could potentially allow access to the values.</p><p>If possible I'd consider modifying the server to use a negotiated token for providing access, something like <a href="http://code.google.com/p/oauth/" rel="nofollow noreferrer">OAuth</a>. Alternatively you may need to construct some sort of cryptographic store, though that's non-trivial. At the very least, make sure you're encrypting the password before writing it to disk.</p></body></html>

===ID===
584cc0623e2ca508e5f07341
===QUESTION===
Launching Google Maps Directions via an intent on Android
My app needs to show Google Maps directions from A to B, but I don't want to put the Google Maps into my application - instead, I want to launch it using an Intent. Is this possible? If yes, how? 
===LINK===
http://stackoverflow.com/questions/2662531/launching-google-maps-directions-via-an-intent-on-android
===KEYWORDS===
don launch app application intent 
===ANSWER===
403
<html><body><p>You could use something like this:</p><pre><code>Intent intent = new Intent(android.content.Intent.ACTION_VIEW, 
    Uri.parse("http://maps.google.com/maps?saddr=20.344,34.34&amp;daddr=20.5666,45.345"));
startActivity(intent);
</code></pre><p>To start the navigation from the current location, remove the <code>saddr</code> parameter and value.</p><p>You can use an actual street address instead of latitude and longitude. However this will give the user a dialog to choose between opening it via browser or Google Maps.</p><p>If you are in the US, you could use an unofficial way (Since it isn't official, I don't recommend using it). This will fire up Google Maps in navigation mode. Haven't played with it since where I live it isn't available.</p><pre><code>Intent intent = new Intent(android.content.Intent.ACTION_VIEW,
    Uri.parse("google.navigation:q=an+address+city"));
</code></pre></body></html>

===ID===
584cc0623e2ca508e5f07342
===QUESTION===
To prevent a memory leak, the JDBC Driver has been forcibly unregistered
I am getting this message when I run my web application. It runs fine but I get this message during shutdown. SEVERE: A web application registered the JBDC driver [oracle.jdbc.driver.OracleDriver] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered. Any help appreciated. 
===LINK===
http://stackoverflow.com/questions/3320400/to-prevent-a-memory-leak-the-jdbc-driver-has-been-forcibly-unregistered
===KEYWORDS===
oracledriver prevent jdbc run unregister 
===ANSWER===
231
<html><body><p>Since version 6.0.24, Tomcat ships with a <a href="http://wiki.apache.org/tomcat/MemoryLeakProtection" rel="nofollow noreferrer">memory leak detection</a> feature, which in turn can lead to this kind of warning messages when there's a JDBC 4.0 compatible driver in the webapp's <code>/WEB-INF/lib</code> which auto-<a href="http://docs.oracle.com/javase/6/docs/api/java/sql/DriverManager.html#registerDriver%28java.sql.Driver%29" rel="nofollow noreferrer">registers</a> itself during webapp's startup using the <a href="http://docs.oracle.com/javase/6/docs/api/java/util/ServiceLoader.html" rel="nofollow noreferrer"><code>ServiceLoader</code> API</a>, but which did not auto-<a href="http://docs.oracle.com/javase/6/docs/api/java/sql/DriverManager.html#deregisterDriver%28java.sql.Driver%29" rel="nofollow noreferrer">deregister</a> itself during webapp's shutdown. This message is purely informal, Tomcat has already taken the memory leak prevention action accordingly.</p><p>What can you do?</p><p>Ignore those warnings. Tomcat is doing its job right. The actual bug is in someone else's code (the JDBC driver in question), not in yours. Be happy that Tomcat did its job properly and wait until the JDBC driver vendor get it fixed so that you can upgrade the driver. On the other hand, you aren't supposed to drop a JDBC driver in webapp's <code>/WEB-INF/lib</code>, but only in server's <code>/lib</code>. If you still keep it in webapp's <code>/WEB-INF/lib</code>, then you should manually register and deregister it using a <code>ServletContextListener</code>.</p><p>Downgrade to Tomcat 6.0.23 or older so that you will not be bothered with those warnings. But it will silently keep leaking memory. Not sure if that's good to know after all. Those kind of memory leaks are one of the major causes behind <a href="http://wiki.apache.org/tomcat/OutOfMemory" rel="nofollow noreferrer"><code>OutOfMemoryError</code> issues</a> during Tomcat hotdeployments.</p><p>Move the JDBC driver to Tomcat's <code>/lib</code> folder and have a connection pooled datasource to manage the driver. Note that Tomcat's builtin DBCP does not deregister drivers properly on close. See also bug <a href="https://issues.apache.org/jira/browse/DBCP-332" rel="nofollow noreferrer">DBCP-322</a> which is closed as WONTFIX. You would rather like to replace DBCP by another connection pool which is doing its job better then DBCP. For example <a href="http://brettwooldridge.github.io/HikariCP/" rel="nofollow noreferrer">HikariCP</a>, <a href="http://jolbox.com/" rel="nofollow noreferrer">BoneCP</a>, or perhaps <a href="http://people.apache.org/~fhanik/jdbc-pool/jdbc-pool.html" rel="nofollow noreferrer">Tomcat JDBC Pool</a>. </p></body></html>

===ID===
584cc0633e2ca508e5f07343
===QUESTION===
Scanner vs. BufferedReader
As far I know, the two most common methods of reading character-based data from a file in Java is using  Scanner  or  BufferedReader . I also know that the  BufferedReader  read files efficiently  by using a buffer to avoid physical disk operations. My questions are: 
===LINK===
http://stackoverflow.com/questions/2231369/scanner-vs-bufferedreader
===KEYWORDS===
file java scanner buffer bufferedreader 
===ANSWER===
134
<html><body><p><code>Scanner</code> is used for parsing tokens from the contents of the stream while <code>BufferedReader</code> just reads the stream and does not do any special parsing.</p><p>In fact you can pass a <code>BufferedReader</code> to a <code>scanner</code> as the source of characters to parse.</p></body></html>

===ID===
584cc0633e2ca508e5f07344
===QUESTION===
Best implementation for hashCode method
How do we decide on the best implementation of  hashCode()  method for a collection (assuming that equals method has been overridden correctly) ? 
===LINK===
http://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method
===KEYWORDS===
implementation collection hashcode decide assuming 
===ANSWER===
271
<html><body><p>The best implementation? That is a hard question because it depends on the usage pattern.</p><p>A for nearly all cases reasonable good implementation was proposed in <em>Josh Bloch</em>'s  <strong><em>Effective Java</em></strong> in item 8. The best thing is to look it up there because the author explains there why the approach is good.</p><p>Create a <code>int result</code> and assign a <strong>non-zero</strong> value.</p><p>For <em>every field</em> <code>f</code> tested in the <code>equals()</code> method, calculate a hash code <code>c</code> by:</p><p>Combine the hash value <code>c</code> with <code>result</code>:</p><pre><code>result = 37 * result + c
</code></pre><p>Return <code>result</code></p><p>This should result in a proper distribution of hash values for most use situations.</p></body></html>

===ID===
584cc0643e2ca508e5f07345
===QUESTION===
String is immutable. What exactly is the meaning? [duplicate]
This question already has an answer here: I wrote the following code on immutable Strings. Output: Here the value of variable  a  has been changed (while many say that contents of the immutable objects cannot be changed). But what exactly does one mean by saying  String  is immutable ? Could you please clarify this topic for me? source :  https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html 
===LINK===
http://stackoverflow.com/questions/8798403/string-is-immutable-what-exactly-is-the-meaning
===KEYWORDS===
code string clarify changed question 
===ANSWER===
130
<html><body><p>String is immutable means that you cannot change the object itself, but you can change the reference to the object. When you called <code>a = "ty"</code>, you are actually changing the reference of <code>a</code> to a new object created by the String literal <code>"ty"</code>. Changing an object means to use its methods to change one of its fields (or the fields are public and not final, so that they can be updated from outside without accessing them via methods), for example:</p><pre><code>Foo x = new Foo("the field");
x.setField("a new field");
System.out.println(x.getField()); // prints "a new field"
</code></pre><p>While in an immutable class (declared as final, to prevent modification via inheritance)(its methods cannot modify its fields, and also the fields are always private and recommended to be final), for example String, you cannot change the current String but you can return a new String, i.e:</p><pre><code>String s = "some text";
s.substring(0,4);
System.out.println(s); // still printing "some text"
String a = s.substring(0,4);
System.out.println(a); // prints "some"
</code></pre></body></html>

===ID===
584cc0653e2ca508e5f07346
===QUESTION===
How can I add to List<? extends Number> data structures?
I have a List which is declared like this : I tried to add 3 to foo3. However I get an  error message like this: 
===LINK===
http://stackoverflow.com/questions/2776975/how-can-i-add-to-list-extends-number-data-structures
===KEYWORDS===
list< declared list add foo3 
===ANSWER===
172
<html><body><p><em>Sorry, but you can't.</em></p><p>The wildcard declaration of <code>List&lt;? extends Number&gt; foo3</code> means that the variable <code>foo3</code> can hold any value from a family of types (rather than any value of a specific type). It means that any of these are legal assignments:</p><pre><code>List&lt;? extends Number&gt; foo3 = new ArrayList&lt;Number&gt;;  // Number "extends" Number
List&lt;? extends Number&gt; foo3 = new ArrayList&lt;Integer&gt;; // Integer extends Number
List&lt;? extends Number&gt; foo3 = new ArrayList&lt;Double&gt;;  // Double extends Number
</code></pre><p>So, given this, what type of object could you add to <code>List foo3</code> that would be legal after any of the above possible <code>ArrayList</code> assignments:</p><p><strong>You can't add any object to <code>List&lt;? extends T&gt;</code> because you can't guarantee what kind of <code>List</code> it is really pointing to, so you can't guarantee that the object is allowed in that <code>List</code>.  The only "guarantee" is that you can only read from it and you'll get a <code>T</code> or subclass of  <code>T</code>.</strong></p><p>The reverse logic applies to <code>super</code>, e.g. <code>List&lt;? super T&gt;</code>. These are legal:</p><pre><code>List&lt;? super Number&gt; foo3 = new ArrayList&lt;Number&gt;; // Number is a "super" of Number
List&lt;? super Number&gt; foo3 = new ArrayList&lt;Object&gt;; // Object is a "super" of Number
</code></pre><p><strong>You can't read the specific type T (e.g. <code>Number</code>) from <code>List&lt;? super T&gt;</code> because you can't guarantee what kind of <code>List</code> it is really pointing to.  The only "guarantee" you have is you are able to add a value of type <code>T</code> (or subclass of  <code>T</code>) without violating the integrity of the list being pointed to.</strong></p><p>The perfect example of this is the signature for <code>Collections.copy()</code>:</p><pre><code>public static &lt;T&gt; void copy(List&lt;? super T&gt; dest,List&lt;? extends T&gt; src)
</code></pre><p>Notice how the <code>src</code> list declaration uses <code>extends</code> to allow me to pass any List from a family of related List types and still guarantee it will produce values of type T or subclasses of T. But you cannot add to the <code>src</code> list.</p><p>The <code>dest</code> list declaration uses <code>super</code> to allow me to pass any List from a family of related List types and still guarantee I can write a value of a specific type T to that list. But I be cannot guaranteed of getting values of type T if I read from the list.</p><p>So now, thanks to generics wildcards, I can do any of these calls with that single method:</p><pre><code>// copy(dest, src)
Collections.copy(new ArrayList&lt;Number&gt;(), new ArrayList&lt;Number());
Collections.copy(new ArrayList&lt;Number&gt;(), new ArrayList&lt;Integer());
Collections.copy(new ArrayList&lt;Object&gt;(), new ArrayList&lt;Number&gt;());
Collections.copy(new ArrayList&lt;Object&gt;(), new ArrayList&lt;Double());
</code></pre><p>Consider this confusing and very wide code to exercise your brain.  The commented out lines are illegal and the reason why is stated to the extreme right of the line (need to scroll to see some of them):</p><pre><code>  List&lt;Number&gt; listNumber_ListNumber  = new ArrayList&lt;Number&gt;();
//List&lt;Number&gt; listNumber_ListInteger = new ArrayList&lt;Integer&gt;();                    // error - can assign only exactly &lt;Number&gt;
//List&lt;Number&gt; listNumber_ListDouble  = new ArrayList&lt;Double&gt;();                     // error - can assign only exactly &lt;Number&gt;

  List&lt;? extends Number&gt; listExtendsNumber_ListNumber  = new ArrayList&lt;Number&gt;();
  List&lt;? extends Number&gt; listExtendsNumber_ListInteger = new ArrayList&lt;Integer&gt;();
  List&lt;? extends Number&gt; listExtendsNumber_ListDouble  = new ArrayList&lt;Double&gt;();

  List&lt;? super Number&gt; listSuperNumber_ListNumber  = new ArrayList&lt;Number&gt;();
//List&lt;? super Number&gt; listSuperNumber_ListInteger = new ArrayList&lt;Integer&gt;();      // error - Integer is not superclass of Number
//List&lt;? super Number&gt; listSuperNumber_ListDouble  = new ArrayList&lt;Double&gt;();       // error - Double is not superclass of Number


//List&lt;Integer&gt; listInteger_ListNumber  = new ArrayList&lt;Number&gt;();                  // error - can assign only exactly &lt;Integer&gt;
  List&lt;Integer&gt; listInteger_ListInteger = new ArrayList&lt;Integer&gt;();
//List&lt;Integer&gt; listInteger_ListDouble  = new ArrayList&lt;Double&gt;();                  // error - can assign only exactly &lt;Integer&gt;

//List&lt;? extends Integer&gt; listExtendsInteger_ListNumber  = new ArrayList&lt;Number&gt;(); // error - Number is not a subclass of Integer
  List&lt;? extends Integer&gt; listExtendsInteger_ListInteger = new ArrayList&lt;Integer&gt;();
//List&lt;? extends Integer&gt; listExtendsInteger_ListDouble  = new ArrayList&lt;Double&gt;(); // error - Double is not a subclass of Integer

  List&lt;? super Integer&gt; listSuperInteger_ListNumber  = new ArrayList&lt;Number&gt;();
  List&lt;? super Integer&gt; listSuperInteger_ListInteger = new ArrayList&lt;Integer&gt;();
//List&lt;? super Integer&gt; listSuperInteger_ListDouble  = new ArrayList&lt;Double&gt;();     // error - Double is not a superclass of Integer


  listNumber_ListNumber.add(3);             // ok - allowed to add Integer to exactly List&lt;Number&gt;

  // These next 3 are compile errors for the same reason:
  // You don't know what kind of List&lt;T&gt; is really
  // being referenced - it may not be able to hold an Integer.
  // You can't add anything (not Object, Number, Integer,
  // nor Double) to List&lt;? extends Number&gt;      
//listExtendsNumber_ListNumber.add(3);     // error - can't add Integer to *possible* List&lt;Double&gt;, even though it is really List&lt;Number&gt;
//listExtendsNumber_ListInteger.add(3);    // error - can't add Integer to *possible* List&lt;Double&gt;, even though it is really List&lt;Integer&gt;
//listExtendsNumber_ListDouble.add(3);     // error - can't add Integer to *possible* List&lt;Double&gt;, especially since it is really List&lt;Double&gt;

  listSuperNumber_ListNumber.add(3);       // ok - allowed to add Integer to List&lt;Number&gt; or List&lt;Object&gt;

  listInteger_ListInteger.add(3);          // ok - allowed to add Integer to exactly List&lt;Integer&gt; (duh)

  // This fails for same reason above - you can't
  // guarantee what kind of List the var is really
  // pointing to
//listExtendsInteger_ListInteger.add(3);   // error - can't add Integer to *possible* List&lt;X&gt; that is only allowed to hold X's

  listSuperInteger_ListNumber.add(3);      // ok - allowed to add Integer to List&lt;Integer&gt;, List&lt;Number&gt;, or List&lt;Object&gt;
  listSuperInteger_ListInteger.add(3);     // ok - allowed to add Integer to List&lt;Integer&gt;, List&lt;Number&gt;, or List&lt;Object&gt;
</code></pre></body></html>

===ID===
584cc0653e2ca508e5f07347
===QUESTION===
How to access static resources when mapping a global front controller servlet on /*
I've mapped the Spring MVC dispatcher as a global front controller servlet on  /* . However, this mapping stops the access to static files like CSS, JS, images etc which are all in the  /res/  folder. How can I access them anyway? 
===LINK===
http://stackoverflow.com/questions/870150/how-to-access-static-resources-when-mapping-a-global-front-controller-servlet-on
===KEYWORDS===
access images mapping css 
===ANSWER===
13
<html><body><p>I've run into this also and never found a great solution.  I ended up mapping my servlet one level higher in the URL hierarchy:</p><pre class="lang-xml prettyprint-override"><code>&lt;servlet-mapping&gt;       
  &lt;servlet-name&gt;home&lt;/servlet-name&gt;             
  &lt;url-pattern&gt;/app/*&lt;/url-pattern&gt;     
&lt;/servlet-mapping&gt;
</code></pre><p>And now everything at the base context (and in your /res directory) can be served up by your container.</p></body></html>

===ID===
584cc0663e2ca508e5f07348
===QUESTION===
How do you find all subclasses of a given class in Java?
How does one go about and try to find all subclasses of a given class (or all implementors of a given interface) in Java?
As of now, I have a method to do this, but I find it quite inefficient (to say the least).
The method is:  In Eclipse, there is a nice feature called the Type Hierarchy that manages to show this quite efficiently.
How does one go about and do it programmatically? 
===LINK===
http://stackoverflow.com/questions/492184/how-do-you-find-all-subclasses-of-a-given-class-in-java
===KEYWORDS===
java inefficient show programmatically class 
===ANSWER===
55
<html><body><p>There is no other way to do it other than what you described. Think about it - how can anyone know what classes extend ClassX without scanning each class on the classpath?</p><p>Eclipse can only tell you about the super and subclasses in what seems to be an "efficient" amount of time because it already has all of the type data loaded at the point where you press the "Display in Type Hierarchy" button (since it is constantly compiling your classes, knows about everything on the classpath, etc).</p></body></html>

===ID===
584cc0663e2ca508e5f07349
===QUESTION===
How to rotate an image gradually in Swing?
I have an image I am rotating when the user clicks on a button. But it is not working. I would like to see the image rotating gradually to 90 degrees till it stops but it doesn't. The image must rotate 90 degrees gradually when the button is clicked. I have created an SSCCE to demonstrate the problem. Please replace the image in the  CrossingPanelSSCE  class with any image of your choice. Just put the image in your  images  folder and name it  images/railCrossing.JPG . RotateButtonSSCE CrossingPanelSSCE VisualizationPanelSSCE TestGUISSCE  it contains the main method. 
===LINK===
http://stackoverflow.com/questions/3405799/how-to-rotate-an-image-gradually-in-swing
===KEYWORDS===
images/railcrossing clicked working created image 
===ANSWER===
23
<html><body><p>In addition to @tulskiy's helpful observations, I would add two points:</p><p>Always construct your GUI on the <a href="http://download-llnw.oracle.com/javase/tutorial/uiswing/concurrency/initial.html" rel="nofollow noreferrer">event dispatch thread</a>, as shown below.</p><p>An <a href="http://sscce.org/" rel="nofollow noreferrer">sscce</a> should be a <em>Short, Self Contained, Correct (Compilable), Example</em>. As a convenience, don't require others to recreate multiple public classes; use top-level (package-private) or nested classes. As this is a graphics problem, use a public or synthetic image that reflects your problem.</p><p>In the example below, <code>paintComponent()</code> alters the graphics context's transform to effect the rotation. Note that the operations are performed in the (apparent) reverse of the declaration order: First, the image's center is translated to the origin; second, the image is rotated; third, the image's center is translated to the center of the panel. You can see the effect by resizing the panel.</p><p>Addendum: See also this alternative <a href="http://stackoverflow.com/questions/5722219">approach</a> using <code>AffineTransform</code>.</p><p><img alt="image" src="https://i.stack.imgur.com/T2gKx.png"/></p><pre><code>package overflow;

import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.util.Random;
import javax.swing.*;

/**
 * @see http://stackoverflow.com/questions/3371227
 * @see http://stackoverflow.com/questions/3405799
 */
public class RotateApp {

    private static final int N = 3;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                JFrame frame = new JFrame();
                frame.setLayout(new GridLayout(N, N, N, N));
                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                for (int i = 0; i &lt; N * N; i++) {
                    frame.add(new RotatePanel());
                }
                frame.pack();
                frame.setVisible(true);
            }
        });
    }
}


class RotatePanel extends JPanel implements ActionListener {

    private static final int SIZE = 256;
    private static double DELTA_THETA = Math.PI / 90;
    private final Timer timer = new Timer(25, this);
    private Image image = RotatableImage.getImage(SIZE);
    private double dt = DELTA_THETA;
    private double theta;

    public RotatePanel() {
        this.setBackground(Color.lightGray);
        this.setPreferredSize(new Dimension(
            image.getWidth(null), image.getHeight(null)));
        this.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                image = RotatableImage.getImage(SIZE);
                dt = -dt;
            }
        });
        timer.start();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.translate(this.getWidth() / 2, this.getHeight() / 2);
        g2d.rotate(theta);
        g2d.translate(-image.getWidth(this) / 2, -image.getHeight(this) / 2);
        g2d.drawImage(image, 0, 0, null);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        theta += dt;
        repaint();
    }

    @Override
    public Dimension getPreferredSize() {
        return new Dimension(SIZE, SIZE);
    }

}

class RotatableImage {

    private static final Random r = new Random();

    static public Image getImage(int size) {
        BufferedImage bi = new BufferedImage(
            size, size, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g2d = bi.createGraphics();
        g2d.setRenderingHint(
            RenderingHints.KEY_ANTIALIASING,
            RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setPaint(Color.getHSBColor(r.nextFloat(), 1, 1));
        g2d.setStroke(new BasicStroke(size / 8));
        g2d.drawLine(0, size / 2, size, size / 2);
        g2d.drawLine(size / 2, 0, size / 2, size);
        g2d.dispose();
        return bi;
    }
}
</code></pre></body></html>

===ID===
584cc0663e2ca508e5f0734a
===QUESTION===
How to generate exceptions from RepaintManager
In connection with my  question  ( may be ), I found another exception type that I not able to catch and print-out from  SwingWorker  thread. How can I to generate  RepaintManager  exceptions? I read this  CheckThreadViolationRepaintManager  and  this approach  by  Alexander Potochkin , but nothing seems to solve my issues. 
===LINK===
http://stackoverflow.com/questions/7787998/how-to-generate-exceptions-from-repaintmanager
===KEYWORDS===
checkthreadviolationrepaintmanager read repaintmanager question print 
===ANSWER===
8
<html><body><p>If it helps, the example below <strike>throws</strike> prints multiple variations of the following <code>Exception</code>, mostly for each phase of the frame's UI delegate initialization. I used <a href="https://java.net/projects/swinghelper/sources/svn/content/trunk/src/java/org/jdesktop/swinghelper/debug/CheckThreadViolationRepaintManager.java?rev=295" rel="nofollow"><code>CheckThreadViolationRepaintManager</code></a>, but the <a href="http://eclipse.org/aspectj/" rel="nofollow"><code>AspectJ</code></a> <a href="http://stackoverflow.com/q/7586311/230513">variation</a> looks interesting, too.</p><pre>
java.lang.Exception
    at EDTViolation$CheckThreadViolationRepaintManager.checkThreadViolations(EDTViolation.java:43)
    at EDTViolation$CheckThreadViolationRepaintManager.addDirtyRegion(EDTViolation.java:37)
    at javax.swing.JComponent.repaint(JComponent.java:4734)
    at java.awt.Component.repaint(Component.java:3168)
    at javax.swing.JComponent.setFont(JComponent.java:2727)
    at javax.swing.LookAndFeel.installColorsAndFont(LookAndFeel.java:191)
    at javax.swing.plaf.basic.BasicPanelUI.installDefaults(BasicPanelUI.java:49)
    at javax.swing.plaf.basic.BasicPanelUI.installUI(BasicPanelUI.java:39)
    at javax.swing.JComponent.setUI(JComponent.java:662)
    at javax.swing.JPanel.setUI(JPanel.java:136)
    at javax.swing.JPanel.updateUI(JPanel.java:109)
    at javax.swing.JPanel.(JPanel.java:69)
    at javax.swing.JPanel.(JPanel.java:92)
    at javax.swing.JPanel.(JPanel.java:100)
    at javax.swing.JRootPane.createGlassPane(JRootPane.java:528)
    at javax.swing.JRootPane.(JRootPane.java:348)
    at javax.swing.JFrame.createRootPane(JFrame.java:255)
    at javax.swing.JFrame.frameInit(JFrame.java:236)
    at javax.swing.JFrame.(JFrame.java:159)
    at EDTViolation.main(EDTViolation.java:12)
...
</pre><pre><code>import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.RepaintManager;
import javax.swing.SwingUtilities;

/** @see http://stackoverflow.com/questions/7787998 */
public class EDTViolation {

    public static void main(String args[]) {
        RepaintManager.setCurrentManager(new CheckThreadViolationRepaintManager());
        JFrame f = new JFrame();
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.pack();
        f.setVisible(true);
    }

    private static class CheckThreadViolationRepaintManager extends RepaintManager {
        //http://weblogs.java.net/blog/alexfromsun/archive/2006/02/debugging_swing.html
    }
}
</code></pre></body></html>

===ID===
584cc0673e2ca508e5f0734b
===QUESTION===
Program not accessing method paintComponent() of extended JPanel class
This is the  JFrame And this is the extended JPanel class- I have tried debugging the code, even though  imagePanel.repaint()  is being executed many times, the program never reaches the  paintComponent()  method of  DrawPanelRemoteControl  class. Can anybody give me any idea why this might be happening? Has it got anything to do with the  imageDimension  object? Additional Information :  In  main()  method, a  DrawFrameRemoteControl  object is created and it's  drawNewImageGrayscale(byte[] arr)  method is being updated from  main()  every second. 
===LINK===
http://stackoverflow.com/questions/12226198/program-not-accessing-method-paintcomponent-of-extended-jpanel-class
===KEYWORDS===
debugging repaint code updated imagepanel 
===ANSWER===
6
<html><body><p>It's not clear why you're passing around <code>byte[]</code>, but it looks like you want to update a component's <code>Icon</code> with a gray thumbnail. The example below creates grayscale icons from existing sample icons and uses <code>setIcon()</code> to do the update. A similar approach works with any <code>Image</code>. See also this <a href="http://stackoverflow.com/a/3106550/230513">example</a> that suggests <code>ColorConvertOp</code>, and this <a href="http://stackoverflow.com/a/7935040/230513">example</a> that updates whole components rather than icons.</p><p><img alt="Gray Icons Aqua" src="https://i.stack.imgur.com/H3LYo.png"/></p><p><img alt="Gray Icons Nimbus" src="https://i.stack.imgur.com/3mhgf.png"/></p><pre><code>import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.image.ColorConvertOp;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JToggleButton;
import javax.swing.Timer;
import javax.swing.UIManager;

/**
 * @see http://stackoverflow.com/a/12228640/230513
 * @see http://stackoverflow.com/a/7935040/230513
 */
public class GrayIcons extends JPanel {

    private List&lt;Icon&gt; list = new ArrayList&lt;Icon&gt;();
    private List&lt;JToggleButton&gt; buttons = new ArrayList&lt;JToggleButton&gt;();
    private Timer timer = new Timer(1000, new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            update();
        }
    });

    public GrayIcons() {
        this.setLayout(new GridLayout(1, 0));
        list.add(getGray(UIManager.getIcon("OptionPane.errorIcon")));
        list.add(getGray(UIManager.getIcon("OptionPane.informationIcon")));
        list.add(getGray(UIManager.getIcon("OptionPane.warningIcon")));
        list.add(getGray(UIManager.getIcon("OptionPane.questionIcon")));
        for (Icon icon : list) {
            JToggleButton jtb = new JToggleButton(icon);
            buttons.add(jtb);
            this.add(jtb);
        }
        timer.start();
    }

    private void update() {
        Collections.shuffle(list);
        int index = 0;
        for (JToggleButton b : buttons) {
            b.setIcon(list.get(index++));
        }
    }

    /**
     * @see http://stackoverflow.com/q/5830533/230513
     * @see http://stackoverflow.com/a/3106550/230513
     */
    private Icon getGray(Icon icon) {
        final int w = icon.getIconWidth();
        final int h = icon.getIconHeight();
        GraphicsEnvironment ge =
            GraphicsEnvironment.getLocalGraphicsEnvironment();
        GraphicsDevice gd = ge.getDefaultScreenDevice();
        GraphicsConfiguration gc = gd.getDefaultConfiguration();
        BufferedImage image = gc.createCompatibleImage(w, h);
        Graphics2D g2d = image.createGraphics();
        g2d.setPaint(new Color(0x00f0f0f0));
        g2d.fillRect(0, 0, w, h);
        icon.paintIcon(null, g2d, 0, 0);
        BufferedImage gray = new BufferedImage(w, h, BufferedImage.TYPE_BYTE_GRAY);
        ColorConvertOp op = new ColorConvertOp(
            image.getColorModel().getColorSpace(),
            gray.getColorModel().getColorSpace(), null);
        op.filter(image, gray);
        return new ImageIcon(gray);
    }

    private void display() {
        JFrame f = new JFrame("GrayIcons");
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.add(this);
        f.pack();
        f.setLocationRelativeTo(null);
        f.setVisible(true);
    }

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new GrayIcons().display();
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc0683e2ca508e5f0734c
===QUESTION===
Initialization of an ArrayList in one line
I want to create a list of options for testing purposes. At first, I did this: Then I refactored the code as follows: Is there a better way to do this? 
===LINK===
http://stackoverflow.com/questions/1005073/initialization-of-an-arraylist-in-one-line
===KEYWORDS===
initialization code create refactored list 
===ANSWER===
1125
<html><body><p>Actually, probably the "best" way to initialize the <code>ArrayList</code> is the method you wrote, as it does not need to create a new <code>List</code> in any way:</p><pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();
list.add("A");
list.add("B");
list.add("C");
</code></pre><p>The catch is that there is quite a bit of typing required to refer to that <code>list</code> instance.</p><p>There are alternatives, such as making an anonymous inner class with an instance initializer (also known as an "double brace initialization"):</p><pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;() {{
    add("A");
    add("B");
    add("C");
}};
</code></pre><p>However, I'm not too fond of that method because what you end up with is a subclass of <code>ArrayList</code> which has an instance initializer, and that class is created just to create one object -- that just seems like a little bit overkill to me.</p><p>What would have been nice was if the <a href="http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html" rel="nofollow noreferrer">Collection Literals proposal</a> for <a href="http://openjdk.java.net/projects/coin" rel="nofollow noreferrer">Project Coin</a> was accepted (it was slated to be introduced in Java 7, but it's not likely to be part of Java 8 either.):</p><pre><code>List&lt;String&gt; list = ["A", "B", "C"];
</code></pre><p>Unfortunately it won't help you here, as it will initialize an immutable <code>List</code> rather than an <code>ArrayList</code>, and furthermore, it's not available yet, if it ever will be.</p></body></html>

===ID===
584cc0683e2ca508e5f0734d
===QUESTION===
Polymorphism vs Overriding vs Overloading
In terms of Java, when someone asks:  what is polymorphism? Would  overloading  or  overriding  be an acceptable answer? I think there is a bit more to it than that.  IF you had a abstract base class that defined a method with no implementation, and you defined that method in the sub class, is that still overridding? I think  overloading  is not the right answer for sure. 
===LINK===
http://stackoverflow.com/questions/154577/polymorphism-vs-overriding-vs-overloading
===KEYWORDS===
polymorphism overriding java asks defined 
===ANSWER===
726
<html><body><p>The clearest way to express polymorphism is via an abstract base class (or interface)</p><pre><code>public abstract class Human{
   ...
   public abstract void goPee();
}
</code></pre><p>This class is abstract because the <code>goPee()</code> method is not definable for Humans.  It is only definable for the subclasses Male and Female.  Also, Human is an abstract concept — You cannot create a human that is neither Male nor Female.  It’s got to be one or the other.</p><p>So we defer the implementation by using the abstract class.</p><pre><code>public class Male extends Human{
...
    @Override
    public void goPee(){
        System.out.println("Stand Up");
    }
}
</code></pre><p>and</p><pre><code>public class Female extends Human{
...
    @Override
    public void goPee(){
        System.out.println("Sit Down");
    }
}
</code></pre><p>Now we can tell an entire room full of Humans to go pee.</p><pre><code>public static void main(String[] args){
    ArrayList&lt;Human&gt; group = new ArrayList&lt;Human&gt;();
    group.add(new Male());
    group.add(new Female());
    // ... add more...

    // tell the class to take a pee break
    for (Human person : group) person.goPee();
}
</code></pre><p>Running this would yield:</p><pre><code>Stand Up
Sit Down
...
</code></pre></body></html>

===ID===
584cc0693e2ca508e5f0734e
===QUESTION===
How to set HttpResponse timeout for Android in Java
I have created the following function for checking the connection status: When I shut down the server for testing the execution waits a long time at line Does anyone know how to set the timeout in order to avoid waiting too long? Thanks! 
===LINK===
http://stackoverflow.com/questions/693997/how-to-set-httpresponse-timeout-for-android-in-java
===KEYWORDS===
function shut set java created 
===ANSWER===
597
<html><body><p>In my example two timeouts are set. The connection timeout throws "java.net.SocketTimeoutException: Socket is not connected" and the socket timeout "java.net.SocketTimeoutException: The operation timed out".</p><pre><code>HttpGet httpGet = new HttpGet(url);
HttpParams httpParameters = new BasicHttpParams();
// Set the timeout in milliseconds until a connection is established.
// The default value is zero, that means the timeout is not used. 
int timeoutConnection = 3000;
HttpConnectionParams.setConnectionTimeout(httpParameters, timeoutConnection);
// Set the default socket timeout (SO_TIMEOUT) 
// in milliseconds which is the timeout for waiting for data.
int timeoutSocket = 5000;
HttpConnectionParams.setSoTimeout(httpParameters, timeoutSocket);

DefaultHttpClient httpClient = new DefaultHttpClient(httpParameters);
HttpResponse response = httpClient.execute(httpGet);
</code></pre><p>If you want to set the Parameters of any existing HTTPClient (e.g. DefaultHttpClient or AndroidHttpClient) you can use the function <strong>setParams()</strong>.</p><pre><code>httpClient.setParams(httpParameters);
</code></pre></body></html>

===ID===
584cc0693e2ca508e5f0734f
===QUESTION===
Removing whitespace from strings in Java
I have a string like this:  I want to remove the whitespaces in the string. I tried  trim()  but this removes only whitespaces before and after the whole string. I also tried  replaceAll("\\W", "")  but then the  =  also gets removed. How can I achieve a string with: 
===LINK===
http://stackoverflow.com/questions/5455794/removing-whitespace-from-strings-in-java
===KEYWORDS===
trim java string removes remove 
===ANSWER===
860
<html><body><p><code>st.replaceAll("\\s+","")</code> removes all whitespaces and non-visible characters (e.g., tab, <code>\n</code>).</p><p><code>st.replaceAll("\\s+","")</code> and <code>st.replaceAll("\\s","")</code> produce the same result.</p><p>The second regex is 20% faster than the first one, but as the number consecutive spaces increases, the first one performs better than the second one.</p><p>Assign the value to a variable, if not used directly:</p><pre><code>st = st.replaceAll("\\s+","")
</code></pre></body></html>

===ID===
584cc06a3e2ca508e5f07350
===QUESTION===
telling java to accept self-signed ssl certificate
It looks like a standard question, but I couldn't find clear directions anywhere. I have java code trying to connect to a server with probably self-signed (or expired) certificate. The code reports the following error : As I understand it, I have to use  keytool  and tell java that it's OK to allow this connection.  All instructions to fix this problem assume I'm fully proficient with keytool, such as  generate private key for server and import it into keystore Is there anybody who could post detailed instructions?   I'm running unix, so bash script would be best. Not sure if it's important, but code executed in jboss. 
===LINK===
http://stackoverflow.com/questions/2893819/telling-java-to-accept-self-signed-ssl-certificate
===KEYWORDS===
keystore keytool couldn certificate import 
===ANSWER===
179
<html><body><p>You have basically two options here: add the self-signed certificate to your JVM truststore or configure your client to </p><p>Export the certificate from your browser and import it in your JVM truststore (to establish a chain of trust):</p><pre><code>&lt;JAVA_HOME&gt;\bin\keytool -import -v -trustcacerts
-alias server-alias -file server.cer
-keystore cacerts.jks -keypass changeit
-storepass changeit 
</code></pre><p>Disable Certificate Validation (code from <a href="http://www.exampledepot.com/egs/javax.net.ssl/trustall.html" rel="nofollow noreferrer">Example Depot</a>):</p><pre><code>// Create a trust manager that does not validate certificate chains
TrustManager[] trustAllCerts = new TrustManager[] { 
    new X509TrustManager() {     
        public java.security.cert.X509Certificate[] getAcceptedIssuers() { 
            return new X509Certificate[0];
        } 
        public void checkClientTrusted( 
            java.security.cert.X509Certificate[] certs, String authType) {
            } 
        public void checkServerTrusted( 
            java.security.cert.X509Certificate[] certs, String authType) {
        }
    } 
}; 

// Install the all-trusting trust manager
try {
    SSLContext sc = SSLContext.getInstance("SSL"); 
    sc.init(null, trustAllCerts, new java.security.SecureRandom()); 
    HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
} catch (GeneralSecurityException e) {
} 
// Now you can access an https URL without having the certificate in the truststore
try { 
    URL url = new URL("https://hostname/index.html"); 
} catch (MalformedURLException e) {
} 
</code></pre><p>Note that <strong>I do not recommend the Option #2 at all</strong>. Disabling the trust manager defeats some parts of SSL and makes you vulnerable to man in the middle attacks. Prefer Option #1 or, even better, have the server use a "real" certificate signed by a well known CA. </p></body></html>

===ID===
584cc06a3e2ca508e5f07351
===QUESTION===
How can a Java program get its own process ID?
How do I get the id of my Java process? I know there are several platform-dependent hacks, but I'd prefer a more generic solution. 
===LINK===
http://stackoverflow.com/questions/35842/how-can-a-java-program-get-its-own-process-id
===KEYWORDS===
platform prefer 
===ANSWER===
209
<html><body><p>There exists no platform-independent way that can be guaranteed to work in all jvm implementations.
<code>ManagementFactory.getRuntimeMXBean().getName()</code> looks like the best (closest) solution. It's short, and <em>probably</em> works in every implementation in wide use.</p><p>On linux+windows it returns a value like <code>12345@hostname</code> (<code>12345</code> being the process id). Beware though that <a href="http://docs.oracle.com/javase/6/docs/api/java/lang/management/RuntimeMXBean.html#getName%28%29" rel="nofollow noreferrer">according to the docs</a>, there are no guarantees about this value:</p><p>Returns the name representing the running Java virtual machine. The
  returned name string can be any arbitrary string and a Java virtual
  machine implementation can choose to embed platform-specific useful
  information in the returned name string. Each running virtual machine
  could have a different name.</p></body></html>

===ID===
584cc06b3e2ca508e5f07352
===QUESTION===
Getting the IP address of the current machine using Java
I am trying to develop a system where there are different nodes that are run on different system or on different ports on the same system. Now all the nodes create a Socket with a target IP as the IP of a special node known as a bootstrapping node. The nodes then create their own  ServerSocket  and start listening for connections. The bootstrapping node maintains a list of Nodes and returns them on being quired. Now what I need is the node must register its IP to the bootstrapping node. I tried using  cli.getInetAddress()  once the client connects to the  ServerSocket  of bootstrapping node but that didn't work. Please help me with this. EDIT using the code: or My PPP Connection IP address is: 117.204.44.192 but the above returns me 192.168.1.2 EDIT2 I am using the following code: I am able to get all the IP addresses associated all  NetworkInterface s, but how do I distinguish them??
This is the output I am getting: 
===LINK===
http://stackoverflow.com/questions/9481865/getting-the-ip-address-of-the-current-machine-using-java
===KEYWORDS===
getinetaddress register quired networkinterface connections 
===ANSWER===
176
<html><body><p>This could be a bit tricky in the most general case.  </p><p>On the face of it, <code>InetAddress.getLocalHost()</code> should give you the IP address of this host.  The problem is that a host could have lots of network interfaces, and an interface could be bound to more than one IP address.  And to top that, not all IP addresses will be reachable outside of your machine or your LAN.  For example, they could be IP addresses for virtual network devices, private network IP addresses, and so on.</p><p>What this means is that the IP address returned by <code>InetAddress.getLocalHost()</code> might not be the right one to use.</p><p>How can you deal with this?</p><p>In summary, <code>InetAddress.getLocalHost()</code> will typically work, but you may need to provide an alternative method for the cases where your code is run in an environment with "complicated" networking.</p><p>I am able to get all the IP addresses associated all Network Interfaces, but how do i distinguish them?</p><p>In fact, the InetAddress API provides methods for testing for loopback, link local, site local, multicast and broadcast addresses.  You can use these to sort out which of the IP addresses you get back is most appropriate.</p></body></html>

===ID===
584cc06b3e2ca508e5f07353
===QUESTION===
Android: How to use AlarmManager
I need to trigger a block of code after 20 minutes from the  AlarmManager  being set. Can someone show me sample code on how to use an  AlarmManager  in ِAndroid? I have been playing around with some code for a few days and it just won't work. 
===LINK===
http://stackoverflow.com/questions/1082437/android-how-to-use-alarmmanager
===KEYWORDS===
code set ِandroid show work 
===ANSWER===
98
<html><body><p>"Some sample code" is not that easy when it comes to <code>AlarmManager</code>.</p><p>Here is a snippet showing the setup of <code>AlarmManager</code>:</p><pre><code>AlarmManager mgr=(AlarmManager)context.getSystemService(Context.ALARM_SERVICE);
Intent i=new Intent(context, OnAlarmReceiver.class);
PendingIntent pi=PendingIntent.getBroadcast(context, 0, i, 0);

mgr.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP, SystemClock.elapsedRealtime(), PERIOD, pi);
</code></pre><p>In this example, I am using <code>setRepeating()</code>. If you want a one-shot alarm, you would just use <code>set()</code>. Be sure to give the time for the alarm to start in the same time base as you use in the initial parameter to <code>set()</code>. In my example above, I am using <code>AlarmManager.ELAPSED_REALTIME_WAKEUP</code>, so my time base is <code>SystemClock.elapsedRealtime()</code>.</p><p><a href="https://github.com/commonsguy/cw-omnibus/tree/master/AlarmManager/Scheduled" rel="nofollow noreferrer">Here is a larger sample project</a> showing this technique.</p></body></html>

===ID===
584cc06c3e2ca508e5f07354
===QUESTION===
Java - get pixel array from image
I'm looking for the fastest way to get pixel data (int the form  int[][] ) from a  BufferedImage . My goal is to be able to address pixel  (x, y)  from the image using  int[x][y] . All the methods I have found do not do this (most of them return  int[] s). 
===LINK===
http://stackoverflow.com/questions/6524196/java-get-pixel-array-from-image
===KEYWORDS===
java goal int image bufferedimage 
===ANSWER===
118
<html><body><p>I was just playing around with this same subject, which is the fastest way to access the pixels. I currently know of two ways for doing this:</p><p>By accessing the pixels array directly using:</p><pre><code>byte[] pixels = ((DataBufferByte) bufferedImage.getRaster().getDataBuffer()).getData();
</code></pre><p>If you are working with large images and performance is an issue, the first method is absolutely not the way to go. The <code>getRGB()</code> method combines the alpha, red, green and blue values into one int and then returns the result, which in most cases you'll do the reverse to get these values back.</p><p>The second method will return the red, green and blue values directly for each pixel, and if there is an alpha channel it will add the alpha value. Using this method is harder in terms of calculating indices, but is much faster than the first approach.</p><p>In my application I was able to reduce the time of processing the pixels by more than 90% by just switching from the first approach to the second!</p><p>Here is a comparison I've setup to compare the two approaches:</p><pre><code>import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.io.IOException;
import javax.imageio.ImageIO;

public class PerformanceTest {

   public static void main(String[] args) throws IOException {

      BufferedImage hugeImage = ImageIO.read(PerformanceTest.class.getResource("12000X12000.jpg"));

      System.out.println("Testing convertTo2DUsingGetRGB:");
      for (int i = 0; i &lt; 10; i++) {
         long startTime = System.nanoTime();
         int[][] result = convertTo2DUsingGetRGB(hugeImage);
         long endTime = System.nanoTime();
         System.out.println(String.format("%-2d: %s", (i + 1), toString(endTime - startTime)));
      }

      System.out.println("");

      System.out.println("Testing convertTo2DWithoutUsingGetRGB:");
      for (int i = 0; i &lt; 10; i++) {
         long startTime = System.nanoTime();
         int[][] result = convertTo2DWithoutUsingGetRGB(hugeImage);
         long endTime = System.nanoTime();
         System.out.println(String.format("%-2d: %s", (i + 1), toString(endTime - startTime)));
      }
   }

   private static int[][] convertTo2DUsingGetRGB(BufferedImage image) {
      int width = image.getWidth();
      int height = image.getHeight();
      int[][] result = new int[height][width];

      for (int row = 0; row &lt; height; row++) {
         for (int col = 0; col &lt; width; col++) {
            result[row][col] = image.getRGB(col, row);
         }
      }

      return result;
   }

   private static int[][] convertTo2DWithoutUsingGetRGB(BufferedImage image) {

      final byte[] pixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
      final int width = image.getWidth();
      final int height = image.getHeight();
      final boolean hasAlphaChannel = image.getAlphaRaster() != null;

      int[][] result = new int[height][width];
      if (hasAlphaChannel) {
         final int pixelLength = 4;
         for (int pixel = 0, row = 0, col = 0; pixel &lt; pixels.length; pixel += pixelLength) {
            int argb = 0;
            argb += (((int) pixels[pixel] &amp; 0xff) &lt;&lt; 24); // alpha
            argb += ((int) pixels[pixel + 1] &amp; 0xff); // blue
            argb += (((int) pixels[pixel + 2] &amp; 0xff) &lt;&lt; 8); // green
            argb += (((int) pixels[pixel + 3] &amp; 0xff) &lt;&lt; 16); // red
            result[row][col] = argb;
            col++;
            if (col == width) {
               col = 0;
               row++;
            }
         }
      } else {
         final int pixelLength = 3;
         for (int pixel = 0, row = 0, col = 0; pixel &lt; pixels.length; pixel += pixelLength) {
            int argb = 0;
            argb += -16777216; // 255 alpha
            argb += ((int) pixels[pixel] &amp; 0xff); // blue
            argb += (((int) pixels[pixel + 1] &amp; 0xff) &lt;&lt; 8); // green
            argb += (((int) pixels[pixel + 2] &amp; 0xff) &lt;&lt; 16); // red
            result[row][col] = argb;
            col++;
            if (col == width) {
               col = 0;
               row++;
            }
         }
      }

      return result;
   }

   private static String toString(long nanoSecs) {
      int minutes    = (int) (nanoSecs / 60000000000.0);
      int seconds    = (int) (nanoSecs / 1000000000.0)  - (minutes * 60);
      int millisecs  = (int) ( ((nanoSecs / 1000000000.0) - (seconds + minutes * 60)) * 1000);


      if (minutes == 0 &amp;&amp; seconds == 0)
         return millisecs + "ms";
      else if (minutes == 0 &amp;&amp; millisecs == 0)
         return seconds + "s";
      else if (seconds == 0 &amp;&amp; millisecs == 0)
         return minutes + "min";
      else if (minutes == 0)
         return seconds + "s " + millisecs + "ms";
      else if (seconds == 0)
         return minutes + "min " + millisecs + "ms";
      else if (millisecs == 0)
         return minutes + "min " + seconds + "s";

      return minutes + "min " + seconds + "s " + millisecs + "ms";
   }
}
</code></pre><p>Can you guess the output? ;)</p><pre><code>Testing convertTo2DUsingGetRGB:
1 : 16s 911ms
2 : 16s 730ms
3 : 16s 512ms
4 : 16s 476ms
5 : 16s 503ms
6 : 16s 683ms
7 : 16s 477ms
8 : 16s 373ms
9 : 16s 367ms
10: 16s 446ms

Testing convertTo2DWithoutUsingGetRGB:
1 : 1s 487ms
2 : 1s 940ms
3 : 1s 785ms
4 : 1s 848ms
5 : 1s 624ms
6 : 2s 13ms
7 : 1s 968ms
8 : 1s 864ms
9 : 1s 673ms
10: 2s 86ms

BUILD SUCCESSFUL (total time: 3 minutes 10 seconds)
</code></pre></body></html>

===ID===
584cc06c3e2ca508e5f07355
===QUESTION===
Instantiating a generic class in Java
I know Java's generics are somewhat inferior to .Net's. I have a generic class  Foo<T> , and I really need to instantiate a  T  in  Foo  using a parameter-less constructor. How can one work around Java's limitation? 
===LINK===
http://stackoverflow.com/questions/1090458/instantiating-a-generic-class-in-java
===KEYWORDS===
limitation work java instantiate instantiating 
===ANSWER===
132
<html><body><p>One option is to pass in <code>Bar.class</code> (or whatever type you're interested in - any way of specifying the appropriate <code>Class&lt;T&gt;</code> reference) and keep that value as a field:</p><pre><code>public class Test
{   
    public static void main(String [] args)
        throws Exception // Just for simplicity!
    {
        Generic&lt;Bar&gt; x = new Generic&lt;Bar&gt;(Bar.class);
        Bar y = x.buildOne();
    }
}

public class Generic&lt;T&gt;
{
    private Class&lt;T&gt; clazz;

    public Generic(Class&lt;T&gt; clazz)
    {
        this.clazz = clazz;
    }

    public T buildOne() throws InstantiationException,
        IllegalAccessException
    {
        return clazz.newInstance();
    }
}

public class Bar
{
    public Bar()
    {
        System.out.println("Constructing");
    }
}
</code></pre><p>Another option is to have a "factory" interface, and you pass a factory to the constructor of the generic class. That's more flexible, and you don't need to worry about the reflection exceptions.</p></body></html>

===ID===
584cc06d3e2ca508e5f07356
===QUESTION===
How to render PDF in Android
In my application I will receive a byte stream and convert it to a pdf file in the phone memory. How do I render that to a pdf? And show it on an activity? 
===LINK===
http://stackoverflow.com/questions/2883355/how-to-render-pdf-in-android
===KEYWORDS===
convert render show receive application 
===ANSWER===
113
<html><body><p>Some phones (like the Nexus One) come with a version of <a href="http://www.quickoffice.com/quickoffice_android/" rel="nofollow noreferrer">Quickoffice</a> pre-installed so it may be as easy as sending the appropriate Intent once you've saved the file to the SD card.</p><pre><code>public class OpenPdf extends Activity {
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        Button button = (Button) findViewById(R.id.OpenPdfButton);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                File file = new File("/sdcard/example.pdf");

                if (file.exists()) {
                    Uri path = Uri.fromFile(file);
                    Intent intent = new Intent(Intent.ACTION_VIEW);
                    intent.setDataAndType(path, "application/pdf");
                    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);

                    try {
                        startActivity(intent);
                    } 
                    catch (ActivityNotFoundException e) {
                        Toast.makeText(OpenPdf.this, 
                            "No Application Available to View PDF", 
                            Toast.LENGTH_SHORT).show();
                    }
                }
            }
        });
    }
}
</code></pre></body></html>

===ID===
584cc06d3e2ca508e5f07357
===QUESTION===
What are the rules for evaluation order in Java?
I am reading some Java text and got the following code: In the text, the author did not give a clear explanation and the effect of the last line is:  a[1] = 0; I am not so sure that I understand: how did the evaluation happen? 
===LINK===
http://stackoverflow.com/questions/6800590/what-are-the-rules-for-evaluation-order-in-java
===KEYWORDS===
code java give rules text 
===ANSWER===
142
<html><body><p>Let me say this very clearly, because people misunderstand this all the time:</p><p><strong>Order of evaluation of subexpressions is <em>independent</em> of both associativity and precedence</strong>. Associativity and precedence determine in what order the <em>operators</em> are executed but <strong>do not</strong> determine in what order the <em>subexpressions</em> are evaluated. Your question is about the order in which <em>subexpressions</em> are evaluated. </p><p>Consider <code>A() + B() + C() * D()</code>. Multiplication is higher precedence than addition, and addition is left-associative, so this is equivalent to <code>(A() + B()) + (C() * D())</code>  But knowing that only tells you that the first addition will happen before the second addition, and that the multiplication will happen before the second addition. <strong>It does not tell you in what order A(), B(), C() and D() will be called!</strong> (It also does not tell you whether the multiplication happens before or after the first addition.) It would be perfectly possible to obey the rules of <em>precedence and associativity</em> by compiling this as:</p><pre><code>d = D()          // these four computations can happen in any order
b = B()
c = C()
a = A()
sum = a + b      // these two computations can happen in any order
product = c * d
result = sum + product // this has to happen last
</code></pre><p>All the rules of precedence and associativity are followed there -- the first addition happens before the second addition, and the multiplication happens before the second addition. Clearly we can do the calls to A(), B(), C() and D() in <em>any</em> order and still obey the rules of precedence and associativity!</p><p>We need a rule <em>unrelated</em> to the rules of precedence and associativity to explain the order in which the subexpressions are evaluated. <strong>The relevant rule in Java (and C#) is "subexpressions are evaluated left to right".</strong> Since A() appears to the left of C(), A() is evaluated first, <em>regardless of the fact that C() is involved in a multiplication and A() is involved only in an addition.</em></p><p>So now you have enough information to answer your question.  In <code>a[b] = b = 0</code> the rules of associativity say that this is <code>a[b] = (b = 0);</code> but that does not mean that the <code>b=0</code> runs first! The rules of precedence say that indexing is higher precedence than assignment, but <strong>that does not mean that the indexer runs before the rightmost assignment</strong>.</p><p>The rules of precedence and associativity impose the restrictions that:</p><p>Precedence and associativity only tell us that <em>the assignment of zero</em> to <code>b</code> must happen <em>before</em> the assignment to <code>a[b]</code>. Precedence and associativity says nothing about whether the <code>a[b]</code> is evaluated <em>before</em> or <em>after</em> the <code>b=0</code>. </p><p>Again, this is just the same as: <code>A()[B()] = C()</code> -- All we know is that the indexing has to happen before the assignment. We don't know whether A(), B(), or C() runs first <em>based on precedence and associativity</em>. We need another rule to tell us that.</p><p>The rule is, again, "when you have a choice about what to do first, always go left to right": the <code>a[b]</code> is to the left of the <code>b=0</code>, so the <code>a[b]</code> runs <em>first</em>, resulting in <code>a[1]</code>. Then the <code>b=0</code> happens, and then the assignment of the value to <code>a[1]</code> happens last. </p><p>Things to the left happen before things to the right. That's the rule you're looking for. Talk of precedence and associativity is both confusing and irrelevant.</p><p>People get this stuff wrong <em>all the time</em>, even people who should know better. I have edited <em>far too many</em> programming books that stated the rules incorrectly, so it is no surprise that lots of people have completely incorrect beliefs about the relationship between precedence/associativity, and evaluation order -- namely, that in reality there is no such relationship; they are independent.</p><p>If this topic interests you, see my articles on the subject for further reading:</p><p><a href="http://blogs.msdn.com/b/ericlippert/archive/tags/precedence/">http://blogs.msdn.com/b/ericlippert/archive/tags/precedence/</a></p><p>They are about C#, but most of this stuff applies equally well to Java.</p></body></html>

===ID===
584cc06e3e2ca508e5f07358
===QUESTION===
How to print double value without scientific notation using Java?
I want to print a double value in Java without exponential form. It shows this E notation:  1.2345678E7 . I want it to print it like this:  12345678 What is the best way to prevent this? 
===LINK===
http://stackoverflow.com/questions/16098046/how-to-print-double-value-without-scientific-notation-using-java
===KEYWORDS===
prevent java notation double print 
===ANSWER===
57
<html><body><p>You could use <code>printf()</code> with <code>%f</code>:</p><pre><code>double dexp = 12345678;
System.out.printf("dexp: %f\n", dexp);
</code></pre><p>This will print <code>dexp: 12345678.000000</code>. If you don't want the fractional part, use</p><pre><code>System.out.printf("dexp: %.0f\n", dexp);
</code></pre><p>This uses the format specifier language explained in the <a href="http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#syntax">documentation</a>.</p><p>The default <code>toString()</code> format used in your original code is spelled out <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Double.html#toString%28double%29">here</a>.</p></body></html>

